<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.OnlineMarketing</name>
    </assembly>
    <members>
        <member name="T:CMS.OnlineMarketing.ABCachedObjects">
            <summary>
            Class providing access to cached AB tests and variants.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABCachedObjects.CACHE_MINUTES">
            <summary>
            Caching is set to 24 hours.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABCachedObjects.GetTests">
            <summary>
            Returns all AB tests using the cached section.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABCachedObjects.GetVariants(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns AB variants for the given test using the cached section.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABDocumentMarker">
            <summary>
            Class used to mark documents on <see cref="F:CMS.DocumentEngine.DocumentEvents.GetDocumentMark"/> event. Generates HTML of images that are to be added to
            <see cref="P:CMS.DocumentEngine.DocumentMarkEventArgs.MarkContent"/> event arguments property.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABDocumentMarker.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="path">Path (<see cref="P:CMS.DocumentEngine.TreeNode.NodeAliasPath"/>) of a document</param>
            <param name="siteName">Name of the site that the document is on</param>
            <param name="culture">Culture of the document</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABDocumentMarker.GetIcons">
            <summary>
            Returns HTML code of all A/B icons to mark the document specified in constructor.
            </summary>
            <returns>HTML of all icons marking the specified document</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABDocumentMarker.AppendRunningTestIcon(System.Text.StringBuilder)">
            <summary>
            Appends icon representing running AB test if the document belongs to a variant that's in unfinished A/B test. 
            Unfinished AB test means that <see cref="P:CMS.OnlineMarketing.ABTestInfo.ABTestOpenTo"/> is empty or greater than <see cref="P:System.DateTime.Now"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABDocumentMarker.GetAliasPathsForUnfinishedTests(System.String,System.String)">
            <summary>
            Returns alias paths of documents included in unfinished tests.
            </summary>
            <param name="siteName">Site name</param>
            <param name="culture">Culture</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestContext">
            <summary>
            Context for AB tests.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestContext.CurrentABTest">
            <summary>
            Current AB test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestContext.CurrentABTestVariant">
            <summary>
            Current AB test variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestContext.IsFirstABRequest">
            <summary>
            Indicates whether this request is the first AB request for the page.
            </summary>
            <remarks>If false, either no AB test is running on the page or the user has already visited it and has valid AB variant saved in the cookie.</remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.ABRequestManager">
            <summary>
            Class managing requests on AB test pages.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABRequestManager.GetABTestPage(CMS.DocumentEngine.PageInfo)">
            <summary>
            Returns the given page or variant page based on whether it has an AB test running.
            </summary>
            <param name="originalPage">Original page</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABRequestManager.GetABTestVariant(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Gets AB variant from the user's cookie or randomly selects one and assigns it to the user. Also checks whether the user should be excluded or not
            (see <see cref="P:CMS.OnlineMarketing.ABTestInfo.ABTestIncludedTraffic"/> or <see cref="P:CMS.OnlineMarketing.ABTestInfo.ABTestVisitorTargeting"/>).
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABRequestManager.ExcludeVisitorsBasedOnSegmentationConditions(CMS.OnlineMarketing.ABTestInfo,CMS.OnlineMarketing.ABUserStateManager)">
            <summary>
            Uses <see cref="T:CMS.OnlineMarketing.ABSegmentationEvaluator"/> to check segmentation conditions.
            Excludes visitor from AB test if did not pass.
            Excludes also editors from test.
            </summary>
            <param name="abTest">AB test</param>
            <param name="manager">AB user state manager</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> or <paramref name="manager"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABRequestManager.SelectRandomTestVariant(System.Collections.Generic.IList{CMS.OnlineMarketing.ABVariantInfo})">
            <summary>
            Returns random variant.
            </summary>
            <param name="variants">List of AB variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABRequestManager.ExcludeAndSetOriginalPage(CMS.OnlineMarketing.ABUserStateManager)">
            <summary>
            Excludes visitor from ab test and sets him original page.
            </summary>
            <param name="manager">AB user state manager</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityInfoConverter">
            <summary>
            Contains methods for converting to activity info.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoConverter.FromActivityData(System.Collections.Generic.IEnumerable{CMS.WebAnalytics.ActivityData})">
            <summary>
            Converts given Activity data collection to Activity info collection.
            </summary>
            <param name="activitiesData">Activities data to be converted</param>
            <returns>Converted activity info collection</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoConverter.FromActivityData(CMS.WebAnalytics.ActivityData)">
            <summary>
            Converts given Activity data to Activity Info.
            </summary>
            <param name="activityData">Activity data to be converted</param>
            <returns>Converted activity info</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactImporter">
            <summary>
            Imports contacts into database.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactImporter.ImportContacts(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Collections.Generic.List{System.String}},CMS.SiteProvider.SiteInfo)">
            <summary>
            Imports contacts into database. Large number of contacts can be imported, because bulk insert is used. Finds existing contacts by ContactEmail and updates them.
            This method does not check permissions. Contact groups and scoring are recalculated only for updated contacts.
            Contacts cannot be imported as global.
            </summary>
            <example>
            Input:
            1@email.cz
            2@email.cz
            2@email.cz
            2@email.cz
            3@email.cz
            
            Already in DB:
            3@email.cz
            
            That's the result, when everything succeeds:
            2 imported (1@email.cz and 2@email.cz)
            3 duplicities (twice 2@email.cz and 3@email.cz) 
            </example>
            <param name="fieldsOrder">Names of the contact fields which shall be imported. This list specifies meaning of fields values in <paramref name="fieldValues"/> parameter</param>
            <param name="fieldValues">Values of contact fields. One item in list represents one contact and its fields as specified by <paramref name="fieldsOrder"/> parameter</param>
            <param name="site">Site where contacts will be imported</param>
            <returns>Results of the import</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactImporter.UpdateExistingContacts(System.Collections.Generic.IEnumerable{CMS.OnlineMarketing.ContactInfo},CMS.OnlineMarketing.ContactImporter.ContactImportData,CMS.OnlineMarketing.ContactImportResults)">
            <summary>
            Updates <paramref name="contactsToUpdate"/> with values specified in <paramref name="contactImportData"/>.
            </summary>
            <param name="contactsToUpdate">Those contacts will be updated</param>
            <param name="contactImportData">New field values</param>
            <param name="result">Results of this operation will be stored in this instance</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactImporter.SetContactInfoFields(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactImporter.ContactImportData)">
            <summary>
            Sets <paramref name="contact"/> fields to values specified in <paramref name="contactImportData"/>. 
            </summary>
            <param name="contact">Contact whose fields will be updated</param>
            <param name="contactImportData">New values of the fields</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactImporter.AddDataRow(System.Data.DataTable,CMS.OnlineMarketing.ContactImporter.ContactImportData,System.Guid,CMS.SiteProvider.SiteInfo)">
            <summary>
            Adds <paramref name="contactImportData"/> as row to <paramref name="contactDataTable"/>. 
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactImporter.ContactImportData">
            <summary>
            Represents contact data in raw form as List of strings (<see cref="P:CMS.OnlineMarketing.ContactImporter.ContactImportData.FieldsValues"/>) together with metadata mapping those values to contact fields (<see cref="P:CMS.OnlineMarketing.ContactImporter.ContactImportData.FieldsOrder"/>).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactImporter.ContactImportData.IsValid">
            <summary>
            Checks if this contact values are valid and can be inserted.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactImportException.Clone">
            <summary>
            Returns clone of the exception
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactImportResults">
            <summary>
            Data class carrying results of the import operation. 
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactImportResults.Duplicities">
            <summary>
            Number of contacts from input batch which already existed in DB and were updated or were in the input batch more than once.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactImportResults.Failures">
            <summary>
            Number of contacts from input batch which were not inserted or were not updated if they already existed in DB.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactImportResults.Imported">
            <summary>
            Number of contacts which were created.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactImportResults.CreatedContactGuids">
            <summary>
            Guids of created contacts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactImportResults.UpdatedContacts">
            <summary>
            Contacts which were successfully updated. Happens when imported contact already exists in DB.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactImportResults.Exceptions">
            <summary>
            All exceptions which happened during import.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactImportController">
            <summary>
            Handles posting of contacts to the server.
            </summary>
            <exclude />
        </member>
        <member name="M:CMS.OnlineMarketing.ContactImportController.Post(CMS.OnlineMarketing.RequestModel,System.Guid,System.Nullable{System.Guid})">
            <summary>
            Imports contacts to site specified by <paramref name="siteGuid"/>. 
            Contacts are assigned to contact group when <paramref name="contactGroupGuid"/> is specified. 
            </summary>
            <param name="request">Fields must contain "ContactEmail".</param>
            <param name="siteGuid">Site guid where contact will be imported.</param>
            <param name="contactGroupGuid">Optional contact group where contacts will be assigned</param>
            <returns></returns>
        </member>
        <member name="T:CMS.OnlineMarketing.AffectedContactGroupsFilter">
            <summary>
            Filter used for removing contact groups which should not be recalculated after queuing period.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AffectedContactGroupsFilter.FilterContactGroups(System.Collections.Generic.IList{CMS.OnlineMarketing.ContactGroupInfo},System.Collections.Generic.ISet{System.String},System.Collections.Generic.ISet{System.String})">
            <summary>
            Filter contact groups to match only the ones that are affected either by activity or attribute change.
            </summary>
            <param name="contactGroups">Contact groups to be filtered</param>
            <param name="activityTypes">Collection of logged activity types</param>
            <param name="changedColumns">Collection of logged contact column changes</param>
            <returns>Filtered collection of contact groups with removed duplicities</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactsAffectingContactGroupFilter">
            <summary>
            Filter used for removing contacts for which should contact group not be recalculated after queuing period.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactsAffectingContactGroupFilter.FilterContacts(CMS.OnlineMarketing.ContactGroupInfo,System.Collections.Generic.IList{CMS.WebAnalytics.ActivityData},System.Collections.Generic.IList{CMS.OnlineMarketing.ContactChangeData})">
            <summary>
            Gets set of contacts affecting the given contact group.
            </summary>
            <param name="contactGroup">Contact group to be checked against</param>
            <param name="activities">List of logged activities</param>
            <param name="contactChanges">List of logged contact changes</param>
            <returns>Set of filtered contact IDs</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactsAffectingRulesFilter">
            <summary>
            Filter used for removing contacts for which should the rule not be recalculated after queuing period.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactsAffectingRulesFilter.FilterContacts(CMS.OnlineMarketing.RuleInfo,System.Collections.Generic.IList{CMS.OnlineMarketing.ActivityInfo},System.Collections.Generic.IList{CMS.OnlineMarketing.ContactChangeData})">
            <summary>
            Gets set of contacts affecting the given rule.
            </summary>
            <param name="rule">Rule to be checked against</param>
            <param name="activities">List of logged activities</param>
            <param name="contactChanges">List of logged contact changes</param>
            <returns>Set of filtered contact IDs</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactManagementLiveTileModelProvider">
            <summary>
            Provides live model for the Contact management dashboard tile.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementLiveTileModelProvider.GetModel(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Loads model for the dashboard live tile.
            </summary>
            <param name="liveTileContext">Context of the live tile. Contains information about the user and the site the model is requested for</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="liveTileContext"/> is null</exception>
            <returns>Live tile model</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementLiveTileModelProvider.GetNewContactsCount(CMS.SiteProvider.SiteInfo)">
            <summary>
            Gets total number of new contacts from the last week.
            </summary>
            <param name="site">Contacts' site</param>
            <returns>Number of new contacts</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityLogProcessor">
            <summary>
            Activity log processor class.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityLogProcessor.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the logprocessor action.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityLogProcessor.ProcessFinishedLogs">
            <summary>
            Gets the log files that are finished (are no longer valid).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityLogProcessor.ProcessLog(System.String)">
            <summary>
            Processes the whole log file in memory and writes the results to the database.
            </summary>
            <param name="fileName">Log file name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityLogProcessor.GetCreationTimeFromFileName(System.String)">
            <summary>
             Returns creation time from file name.
            </summary>
            <param name="fileName">Processed file name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityLogProcessor.RemoveMachineName(System.String)">
            <summary>
            Removes machine name from file name.
            </summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityLogProcessor.TimeRegex">
            <summary>
            Regular expression for time format HHmm.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactActionsLogWorker">
            <summary>
            Contact actions log worker. Takes information from Contact management queues (activities and contact changes) and processes them. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactActionsLogWorker.Finish">
            <summary>
            Finishes the worker process. Implement this method to specify what the worker must do in order to not lose its internal data when being finished. Leave empty if no extra action is required.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactActionsLogWorker.Process">
            <summary>
            Method that is being run every <see cref="P:CMS.OnlineMarketing.ContactActionsLogWorker.DefaultInterval"/> millisecond.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactActionsLogWorker.ProcessActions">
            <summary>
            Processes items from <see cref="T:CMS.OnlineMarketing.ActivityQueue"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactActionsLogWorker.CheckElapsedTime(System.Action)">
            <summary>
            Logs an event into event log when given actions take too long to complete.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactActionsLogWorker.LogIntervalTooLowWarning(System.Double)">
            <summary>
            Logs information about long activity processing into event log.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactActionsLogWorker.ElapsedTimeExceedsLimit(System.Double)">
            <summary>
            Checks whether given time exceeds task interval hardcoded limit.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactActionsLogWorker.DefaultInterval">
            <summary>
            Gets the interval in milliseconds for the worker.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityQueue">
            <summary>
            Queue for storing performed activities.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityQueue.TryDequeueActivity(CMS.WebAnalytics.ActivityData@)">
            <summary>
            Tries to remove and return <see cref="T:CMS.WebAnalytics.ActivityData"/> at the beginning of the concurrent queue.
            </summary>
            <param name="activityData">
            When this method returns, if the operation was successful, <paramref name="activityData"/> contains the object removed. If no object was available to be removed, the <paramref name="activityData"/> is unspecified.
            </param>
            <returns>
            True if <see cref="T:CMS.WebAnalytics.ActivityData"/> was removed and returned from the beginning of the <see cref="T:CMS.OnlineMarketing.ActivityQueue"/> successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityQueue.EnqueueActivity(CMS.WebAnalytics.ActivityData)">
            <summary>
            Adds <see cref="T:CMS.WebAnalytics.ActivityData"/> to the end of the <see cref="T:CMS.OnlineMarketing.ActivityQueue"/>.
            </summary>
            <param name="activityData">The <see cref="T:CMS.WebAnalytics.ActivityData"/> to add to the end of the <see cref="T:CMS.OnlineMarketing.ActivityQueue"/>.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityQueue.GetQueuedActivities">
            <summary>
            Enumerates all items in the queue of activities
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityQueue.Clear">
            <summary>
            Clears the queue. This operation is not thread safe.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactActionsQueueProcessor.InsertActivitiesFromQueueToDB">
            <summary>
            Performs bulk insert of items from <see cref="T:CMS.OnlineMarketing.ActivityQueue"/>.
            </summary>
            <remarks>
            Method only performs bulk insert without firing any event.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactActionsQueueProcessor.ProcessAllContactActions">
            <summary>
            Processes items from <see cref="T:CMS.OnlineMarketing.ActivityQueue"/>.
            </summary>
            <remarks>
            Method performs bulk insert of activities and fires event for further processing.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactActionsQueueProcessor.PerformBulkInsert(System.Collections.Generic.IEnumerable{CMS.WebAnalytics.ActivityData},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Performs bulk insert of activities loaded in <paramref name="activityBatch"/>.
            </summary>
            <param name="activityBatch">Collection of activities to be inserted</param>
            <param name="contactIDs">Collection of affected contact IDs used for clearing the cache</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactActionsQueueProcessor.FilterInvalidActivities(System.Collections.Generic.IList{CMS.WebAnalytics.ActivityData},System.Collections.Generic.ISet{System.Int32}@)">
            <summary>
            Filters the given list of activities to only valid ones by validating their contact IDs and site IDs
            </summary>
            <param name="activities">List of activities</param>
            <param name="contactIDs">Returns the set of contact IDs from activities</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactChangeData">
            <summary>
            Container for the contact change data.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactChangeData.ToString">
            <summary>
            Returns the string representation of the object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactChangeData.Equals(System.Object)">
            <summary>
            Returns true if the object equals to another.
            </summary>
            <param name="obj">Object to compare to</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactChangeData.CompareColumns(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Compares the two lists of columns
            </summary>
            <param name="list1">First list</param>
            <param name="list2">Second list</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactChangeData.GetHashCode">
            <summary>
            Gets the object hash code
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactChangeData.ContactID">
            <summary>
            Contact ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactChangeData.ContactSiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactChangeData.ChangedColumns">
            <summary>
            List of columns which have changed. Is null when <see cref="P:CMS.OnlineMarketing.ContactChangeData.ContactIsNew"/> or <see cref="P:CMS.OnlineMarketing.ContactChangeData.ContactWasMergedOrSplit"/> is true.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactChangeData.ContactIsNew">
            <summary>
            If true the change represents a new contact creation. <see cref="P:CMS.OnlineMarketing.ContactChangeData.ChangedColumns"/> are not included if contact is new.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactChangeData.ContactWasMergedOrSplit">
            <summary>
            Gets or sets the value indicating if the contact was merged to or split from another site or global contact. 
            In another words if contact's ContactMergedWithContactID or ContactGlobalContactID property change, this property will be true. In
            addition contact whose ID was previously set in another contact's ContactMergedWithContactID or ContactGlobalContactID will also 
            have an instance of <see cref="T:CMS.OnlineMarketing.ContactChangeData"/> present in queue with this property set to true. 
            <see cref="P:CMS.OnlineMarketing.ContactChangeData.ChangedColumns"/> are not included if contact is merged or split.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactChangeQueue">
            <summary>
            Queue for storing contact changes
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactChangeQueue.TryDequeueChange(CMS.OnlineMarketing.ContactChangeData@)">
            <summary>
            Tries to remove and return <see cref="T:CMS.OnlineMarketing.ContactChangeData"/> at the beginning of the concurrent queue.
            </summary>
            <param name="changeData">
            When this method returns, if the operation was successful, <paramref name="changeData"/> contains the object removed. If no object was available to be removed, the <paramref name="changeData"/> is unspecified.
            </param>
            <returns>
            True if <see cref="T:CMS.OnlineMarketing.ContactChangeData"/> was removed and returned from the beginning of the <see cref="T:CMS.OnlineMarketing.ContactChangeQueue"/> successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactChangeQueue.EnqueueChange(CMS.OnlineMarketing.ContactChangeData)">
            <summary>
            Adds <see cref="T:CMS.OnlineMarketing.ContactChangeData"/> to the end of the <see cref="T:CMS.OnlineMarketing.ContactChangeQueue"/>.
            </summary>
            <param name="changeData">The <see cref="T:CMS.OnlineMarketing.ContactChangeData"/> to add to the end of the <see cref="T:CMS.OnlineMarketing.ContactChangeQueue"/>.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactChangeQueue.GetQueuedChanges">
            <summary>
            Enumerates all items in the queue of contact changes
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactChangeQueue.Clear">
            <summary>
            Clears the queue. This operation is not thread safe.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupRebuildTaskManager">
            <summary>
            Manages scheduled tasks responsible for rebuilding contact groups.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupRebuildTaskManager.EnableScheduledTask(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Enables scheduled task connected to the given contact group.
            If such task does not exits, creates a new one.
            </summary>
            <param name="contactGroup">Contact group containing the scheduled task</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactGroup"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupRebuildTaskManager.DisableScheduledTask(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Disables scheduled task connected to the given contact group.
            Does nothing when scheduled task does not exist.
            </summary>
            <param name="contactGroup">Contact group containing the scheduled task</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactGroup"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupRebuildTaskManager.GetScheduledTask(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Gets the scheduled task responsible for rebuilding the given contact group.
            </summary>
            <param name="contactGroup">Contact group</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactGroup"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupRebuildTaskManager.CreateScheduledTask(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Creates new scheduled task with basic properties set.
            </summary>
            <remarks>
            When creating new scheduled task, execution time is set to off peak time.
            </remarks>
            <param name="contactGroup">Contact group info</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupRebuildTaskManager.GetRandomOffPeakDateTime">
            <summary>
            Gets randomly chosen date time from the interval 2 AM – 6 AM. The date part will be set to 01/01/0001.
            </summary>
            <remarks>
            The difference between random times is always 5 minutes k-fold.
            </remarks>
            <returns>Random DateTime from the off peak interval</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupRebuildTaskManager.GenerateDefaultTaskInterval">
            <summary>
            Creates default task interval used when creating new task info. 
            </summary>
            <remarks>
            Time will be randomly chosen from interval 2 AM – 6 AM in order to fit execution to off peak time.
            Uses interval of one day, every day in week.
            </remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupMemoryRebuilder">
            <summary>
            Rebuilds the whole contact group by fetching all contacts into the memory and evaluating macro condition on them one by one.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupMemoryRebuilder.PAGE_SIZE">
            <summary>
            Size of page used when recalculating contacts.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupMemoryRebuilder.mCachedResolver">
            <summary>
            Cached MacroResolver.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemoryRebuilder.RebuildGroup(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Rebuilds a contact group.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemoryRebuilder.RebuildPartOfContactGroup(CMS.OnlineMarketing.ContactGroupInfo,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Rebuilds only contacts with specified contact IDs.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemoryRebuilder.RebuildGroupsForContact(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.List{CMS.OnlineMarketing.ContactGroupInfo})">
            <summary>
            Rebuilds membership in all contact groups for given contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemoryRebuilder.EvaluateDynamicMembership(CMS.OnlineMarketing.ContactGroupInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Evaluates dynamic membership of a contact in given contact group.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupRebuilder">
            <summary>
            Class for contact group rebuilding.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupRebuilder.RebuildGroup(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Rebuilds the whole contact group using the fastest possible rebuilder. This method works synchronously.
            </summary>
            <param name="contactGroup">Contact group to be rebuilt</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupRebuilder.RebuildPartOfContactGroup(CMS.OnlineMarketing.ContactGroupInfo,System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Adds or removes specific contactIDs into the contact group.
            </summary>
            <param name="contactGroup">Contact group to be rebuilded</param>
            <param name="contactIDs">Contacts whose membership in the group will be reevaluated</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupRebuilder.RebuildGroupsForContact(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.List{CMS.OnlineMarketing.ContactGroupInfo})">
            <summary>
            Rebuilds contact group memberships of given contact.
            </summary>
            <param name="contact">Contact to rebuild contact groups for</param>
            <param name="contactGroups">Contact groups in which to reevaluate membership of the contact. Leave null to reevaluate memberships of all contact groups</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupSqlRebuilder">
            <summary>
            Rebuilds the whole contact group. Rebuild is done by converting dynamic macro condition to SQL query and thus leaving most of 
            the work on the SQL Server.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupSqlRebuilder.#ctor(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupSqlRebuilder.CanBeRebuilt">
            <summary>
            Checks whether the contact group has been set and can be recalculated.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupSqlRebuilder.RebuildGroup">
            <summary>
            Recalculates the contact group.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupSqlRebuilder.RebuildPartOfContactGroup(System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Reevaluates membership of the given contacts in the contact group.
            </summary>
            <param name="contactIDs">Contacts whose membership in the group will be reevaluated</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupHandlers">
            <summary>
            Event handlers of the ContactGroups module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupHandlers.Init">
            <summary>
            Subscribes to events.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupHandlers.EvaluateContactGroupsForContactActionsBatch(System.Object,CMS.OnlineMarketing.ProcessContactActionsBatchEventArgs)">
            <summary>
            Evaluates all dynamic contact groups after batch of contact actions is logged.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupHandlers.RebuildContactGroups(System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{CMS.WebAnalytics.ActivityData},System.Collections.Generic.IList{CMS.OnlineMarketing.ContactChangeData})">
            <summary>
            Rebuilds dynamic contact groups on given sites for given contacts.
            </summary>
            <param name="siteIDs">List of site ids</param>
            <param name="loggedActivities">List of performed activities</param>
            <param name="loggedContactChanges">List of contact's changes</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupHandlers.GetDynamicContactGroupsForSitesIncludingGlobal(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Returns dynamic groups for given sites including global groups.
            </summary>
            <param name="siteIDs">List of site ids</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupInfoExtensions">
            <summary>
            Extensions of <see cref="T:CMS.OnlineMarketing.ContactGroupInfo"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoExtensions.IsAffectedByActivityType(CMS.OnlineMarketing.ContactGroupInfo,System.String)">
            <summary>
            Checks whether given contact group is affected by given activity type, that means if it needs to be recalculated when it performs.
            </summary>
            <param name="cg">Contact group to check the activity type for</param>
            <param name="activityType">Activity to check affection for. You can use predefined types from <see cref="T:CMS.WebAnalytics.PredefinedActivityType"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="activityType"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoExtensions.IsAffectedByAttributeChange(CMS.OnlineMarketing.ContactGroupInfo,System.String)">
            <summary>
            Checks whether given contact group is affected by contact attribute change, that means if it needs to be recalculated when attribute has changed.
            </summary>
            <param name="cg">Contact group to check the attribute affection</param>
            <param name="attribute">Name of the changed attribute column</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="attribute"/> is null</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.MethodInvocationRestriction">
            <summary>
            Restricts calls of an action to once in given <see cref="T:System.TimeSpan"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MethodInvocationRestriction.#ctor(System.Action,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="restrictedMethod">Action to invoke just once in given <see cref="T:System.TimeSpan"/></param>
            <param name="restrictedMethodName">Name of an action to invoke just once in given <see cref="T:System.TimeSpan"/></param>
        </member>
        <member name="M:CMS.OnlineMarketing.MethodInvocationRestriction.InvokeOnceIn(System.TimeSpan)">
            <summary>
            Invokes a method given in constructor only once in given <see cref="T:System.TimeSpan"/>.
            </summary>
            <remarks>
            This is by no means reliable restriction.
            </remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.IRuleWithContactActionsMatchersFactory">
            <summary>
            Provides implementations of <see cref="T:CMS.OnlineMarketing.IContactsAffectedByRuleMatcher"/> for each type of scoring rule. Created implementations
            will have a filled state (performed activities or contact changes) and produced contact IDs will be taken from this state.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IRuleWithContactActionsMatchersFactory.CreateRulesMatchers(System.Collections.Generic.IList{CMS.OnlineMarketing.ActivityInfo},System.Collections.Generic.IList{CMS.OnlineMarketing.ContactChangeData})">
            <summary>
            Creates rules matchers that selects contacts which can be affected by the scoring rule. Contacts are selected from the list of contact actions represented
            by performed activities (<paramref name="activities"/>) and changes made to contact properties (<paramref name="contactChanges"/>).
            </summary>
            <param name="activities">Activities performed by contacts</param>
            <param name="contactChanges">Changes made to contact properties</param>
            <returns>Matchers index by rule type that are able to match scoring rules against contact actions</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.IRuleRecalculator">
            <summary>
            Recalculates score points for one or more contacts for one scoring rule. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IRuleRecalculator.RecalculateRuleForAllContacts(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Recalculates score points for all contacts and one specified rule.
            </summary>
            <param name="rule">Score points for this rule will be recalculated</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="rule"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IRuleRecalculator.RecalculateRuleForContacts(CMS.OnlineMarketing.RuleInfo,System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Recalculates score points for a set of contacts and one specified rule.
            </summary>
            <param name="rule">Score points for this rule will be recalculated</param>
            <param name="contactIDs">ContactIDs whose points will be recalculated</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="rule"/> is null</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactIDs"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IRuleRecalculator.RecalculateRuleForContact(CMS.OnlineMarketing.RuleInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Recalculates score points for one specified rule and one contact.
            </summary>
            <param name="rule">Score points for this rule will be recalculated</param>
            <param name="contact">Score points for this rule will be recalculated</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="rule"/> or <paramref name="contact"/> is null</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.IScoreRecalculator">
            <summary>
            This class performs tasks which are required to be done when recalculating score points for whole ScoreInfos. This includes marking
            score as being recalculated, deleting old points, sending notification emails, etc. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IScoreRecalculator.RecalculateScoreRulesForAllContacts(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Recalculates score points for all rules in one score for all contact.
            </summary>
            <param name="score">Points for this score will be recalculated</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="score"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.IScoreRecalculator.RecalculateScoreRulesAfterContactActionsBatch(System.Collections.Generic.IList{CMS.OnlineMarketing.ActivityInfo},System.Collections.Generic.IList{CMS.OnlineMarketing.ContactChangeData})">
            <summary>
            Recalculates scoring rules for contacts who performed some action. Recalculates only scoring rules which could have been affected by performed activities.
            Recalculation is made in batches, so only one operation is made for one scoring rule.
            </summary>
            <param name="processedActivities">Activities performed by contacts</param>
            <param name="contactChanges">Changes of contacts properties</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IRuleTypeCalculatorFactory.GetRuleCalculator(CMS.OnlineMarketing.RuleTypeEnum)">
            <summary>
            Creates rule calculator which is able to recalculate rules of the given type.
            </summary>
            <param name="ruleType">Created calculator will be able to recalculate points of rules of this types</param>
            <returns>Created rule calculator</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactsAffectedByActivityRulesMatcher">
            <summary>
            Checks which contacts were affected by activity rule. In other words, provides information which contacts should be recalculated for a certain rule.
            </summary>
            <remarks>
            Contact is affected by activity rule if one of this conditions is met:
            - contact was merged to, split from, another contact was split into this one, etc. (see <see cref="P:CMS.OnlineMarketing.ContactChangeData.ContactWasMergedOrSplit"/> is true)
            - contact performed activity which matches rule in its type and other properties (NodeID, ItemID, Value, etc.)
            </remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.IContactsAffectedByRuleMatcher">
            <summary>
            Computes contacts which could be affected by a rule. In other words, provides information which contacts should be recalculated for a certain rule.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IContactsAffectedByRuleMatcher.GetAffectedContacts(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Checks which contacts were affected by a rule.
            </summary>
            <param name="rule">Rule which is matched with contact actions</param>
            <returns>IDs of contacts whose points for <paramref name="rule"/> should be recalculated</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactsAffectedByActivityRulesMatcher.GetAffectedContacts(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Checks which contacts were affected by activity rule. Matching algorithm is described in class's comments.
            </summary>
            <param name="rule">Rule which is matched with contact actions</param>
            <returns>IDs of contacts whose points for <paramref name="rule"/> should be recalculated</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactsAffectedByAttributeRulesMatcher">
            <summary>
            Checks which contacts were affected by attribute rule. In other words, provides information which contacts should be recalculated for a certain rule.
            </summary>
            <remarks>
            Contact is affected by attribute rule if one of this conditions is met:
            - contact was just created (see <see cref="P:CMS.OnlineMarketing.ContactChangeData.ContactIsNew"/> is true)
            - contact was merged to, split from, another contact was split into this one, etc. (see <see cref="P:CMS.OnlineMarketing.ContactChangeData.ContactWasMergedOrSplit"/> is true)
            - rule is based on contact's property which was changed (<see cref="P:CMS.OnlineMarketing.RuleInfo.RuleParameter"/> is present in <see cref="P:CMS.OnlineMarketing.ContactChangeData.ChangedColumns"/>)
            
            Performing activities don't affect attribute rules.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactsAffectedByAttributeRulesMatcher.GetAffectedContacts(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Checks which contacts were affected by attribute rule. Matching algorithm is described in class's comments.
            </summary>
            <param name="rule">Rule which is matched with contact actions</param>
            <returns>IDs of contacts whose points for <paramref name="rule"/> should be recalculated</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactsAffectedByMacroRulesMatcher">
            <summary>
            Checks which contacts were affected by macro rule. In other words, provides information which contacts should be recalculated for a certain rule.
            </summary>
            <remarks>
            Contact is affected by macro rule if one of this conditions is met:
            - contact's property has changed (contact is present in the list of contact changes represented by <see cref="T:CMS.OnlineMarketing.ContactChangeData"/>).
            - contact has performed activity which is affected by the rule's macro. Activities affected by various macro rules are defined in <see cref="T:CMS.OnlineMarketing.MacroRuleMetadataContainer"/>.
            </remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleWithContactActionsMatchersFactory">
            <summary>
            Provides implementations of <see cref="T:CMS.OnlineMarketing.IContactsAffectedByRuleMatcher"/> for each type of scoring rule. Created implementations
            will have a filled state (performed activities or contact changes) and produced contact IDs will be taken from this state.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleWithContactActionsMatchersFactory.CreateRulesMatchers(System.Collections.Generic.IList{CMS.OnlineMarketing.ActivityInfo},System.Collections.Generic.IList{CMS.OnlineMarketing.ContactChangeData})">
            <summary>
            Creates rules matchers that selects contacts which can be affected by the scoring rule. Contacts are selected from the list of contact actions represented
            by performed activities (<paramref name="activities"/>) and changes made to contact properties (<paramref name="contactChanges"/>).
            </summary>
            <param name="activities">Activities performed by contacts</param>
            <param name="contactChanges">Changes made to contact properties</param>
            <returns>Matchers index by rule type that are able to match scoring rules against contact actions</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.RecalculateAfterContactActionsBatchEventArgs">
            <summary>
            Arguments for event fired when score is recalculated for contacts batch after their actions (activity, property change, merge or split).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RecalculateAfterContactActionsBatchEventArgs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RecalculateAfterContactActionsBatchEventArgs.ContactIDs">
            <summary>
            Gets or sets contacts whose score is being recalculated.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RecalculateAfterContactActionsBatchEventArgs.CustomArguments">
            <summary>
            Container for custom arguments which can be used by event subscribers.
            </summary>
            <remarks>Is never null</remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.RecalculateAfterContactActionsBatchHandler">
            <summary>
            Handler for event fired when score is recalculated for contacts batch after their actions (activity, property change, merge or split).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RecalculateAfterContactActionsBatchHandler.StartEvent(System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Initiates event handling.
            </summary>
            <param name="contactIDs">Contacts whose score is being recalculated</param>
            <returns>Handler</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleInfoExtensions">
            <summary>
            Extensions of <see cref="T:CMS.OnlineMarketing.RuleInfo"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoExtensions.IsAffectedByActivity(CMS.OnlineMarketing.RuleInfo,CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Indicates whether given activity or macro rule should be recalculated for given performed activity.
            </summary>
            <returns>True when the rule should be recalculated, false otherwise</returns>
            <param name="rule">Rule to check the activity type for</param>
            <param name="activity">Activity to check affection for</param>
            <exception cref="T:System.ArgumentException"><paramref name="rule"/> type has to be macro rule</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoExtensions.IsAffectedByAttributeChange(CMS.OnlineMarketing.RuleInfo,System.String)">
            <summary>
            Checks whether given contact rule is affected by contact attribute change, that means if it needs to be recalculated when attribute has changed.
            </summary>
            <remarks>
            If given rule is not macro type, it cannot be determined whether the rule is affected or not. Therefore true is returned in this case.
            </remarks>
            <param name="rule">Rule to check the attribute affection</param>
            <param name="columnChanged">Name of the changed column</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="columnChanged"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoExtensions.IsMacroRuleAffectedByAttributeChange(CMS.OnlineMarketing.RuleInfo,System.String)">
            <summary>
            Checks whether given contact rule is affected by contact attribute change, that means if it needs to be recalculated when attribute has changed.
            </summary>
            <param name="rule">Rule to check the attribute affection</param>
            <param name="columnChanged">Name of the changed column</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoExtensions.IsMacroRuleAffectedByActivity(CMS.OnlineMarketing.RuleInfo,CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Checks whether given rule is affected by given activity, that means if it needs to be recalculated when it performs.
            </summary>
            <param name="rule">Rule to check the activity type for</param>
            <param name="activity">Activity to check affection for</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoExtensions.GetActivityFieldType(System.String)">
            <summary>
            Gets data type of activity fields.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.BatchContactScoreNotificationsChecker">
            <summary>
            Watches for score points changes after score is recalculated and sends notification email if score points for the contact exceeds limit specified in <see cref="P:CMS.OnlineMarketing.ScoreInfo.ScoreEmailAtScore"/>.
            </summary>
            <remarks>
            In order to work correctly, method <see cref="M:CMS.OnlineMarketing.BatchContactScoreNotificationsChecker.SaveScoresSnapshot"/> has to be called before recalculation and method <see cref="M:CMS.OnlineMarketing.BatchContactScoreNotificationsChecker.SendNotifications"/> has to be called after recalculation.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.BatchContactScoreNotificationsChecker.#ctor(System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Constructor.
            </summary>
            <param name="contactIds">Collection of Contact IDs to be checked</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactIds"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.BatchContactScoreNotificationsChecker.SaveScoresSnapshot">
            <summary>
            This method has to be called before recalculation. 
            It saves current score points so notification emails will be send only for contact and scores which will exceed limit after recalculation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.BatchContactScoreNotificationsChecker.SendNotifications">
            <summary>
            Compares current score points with score points saved before recalculation (by method <see cref="M:CMS.OnlineMarketing.BatchContactScoreNotificationsChecker.SaveScoresSnapshot"/>) and sends notification emails for those scores whose
            points now exceeds limit, but didn't before recalculation.
            </summary>
            <exception cref="T:System.InvalidOperationException">Method <see cref="M:CMS.OnlineMarketing.BatchContactScoreNotificationsChecker.SaveScoresSnapshot"/> wasn't called before recalculation</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ICachedRulesManager">
            <summary>
            Loads rules that are eligible for recalculation from cache. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ICachedRulesManager.GetAttributeRulesCached(System.String,System.Int32)">
            <summary>
            Returns cached attribute RuleInfo objects based on attribute name.
            </summary>
            <param name="attributeName">Name of the attribute which rules correspond to</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ICachedRulesManager.GetActivityRulesCached(System.String,System.Int32)">
            <summary>
            Returns cached activity RuleInfo objects based on activity type name.
            </summary>
            <param name="activityTypeName">Name of the activity type name which rules correspond to</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ICachedRulesManager.GetMacroRulesCached(System.Int32)">
            <summary>
            Returns cached macro RuleInfo objects.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ICachedRulesManager.GetEnabledRules">
            <summary>
            Returns cached RuleInfos types belonging to enabled Scores on all sites.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.BatchScoreTriggersRunner.#ctor(System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Constructor.
            </summary>
            <param name="contactIds">Collection of Contact IDs to be processed</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactIds"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.BatchScoreTriggersRunner.SaveScoresSnapshot">
            <summary>
            This method has to be called before recalculation. 
            It saves current score points so triggers will fire only when they exceed limit after recalculation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.BatchScoreTriggersRunner.ProcessTriggers">
            <summary>
            Compares current score points with score points saved before recalculation (by method <see cref="M:CMS.OnlineMarketing.BatchScoreTriggersRunner.SaveScoresSnapshot"/>) 
            and prepares worker queue for triggers that could be affected by points change.
            </summary>
            <exception cref="T:System.InvalidOperationException">Method <see cref="M:CMS.OnlineMarketing.BatchScoreTriggersRunner.SaveScoresSnapshot"/> wasn't called before recalculation</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.BatchScoreTriggersRunner.GetContactScoreValues">
            <summary>
            Gets contact with all his score values
            </summary>
            <returns>Contact and score values of all scores contact got points in</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.BatchScoreTriggersRunner.CreateTriggerWorker(System.Int32,CMS.OnlineMarketing.ScoreInfo,System.Int32,CMS.OnlineMarketing.ContactWithScoreValue)">
            <summary>
            Prepares trigger worker and adds it to the worker queue that is processed at the end of the request.
            </summary>
            <param name="contactId">Id of the contact</param>
            <param name="score">Score in which contact gained points</param>
            <param name="newScoreValue">New value of the score</param>
            <param name="oldContactWithScoreValue">Old value of the score (if existed before the recalculation, could be null otherwise)</param>
        </member>
        <member name="T:CMS.OnlineMarketing.RequestModel">
            <summary>
            Data class carrying request parameters of the import operation. 
            </summary>
            <exclude />
        </member>
        <member name="M:CMS.OnlineMarketing.RequestModel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RequestModel.FieldsOrder">
            <summary>
            Names of the contact fields which shall be imported. This list specifies meaning of fields values in <see cref="P:CMS.OnlineMarketing.RequestModel.FieldValues"/> property. 
            </summary>
            <example>
            If FieldsOrder[0] is "ContactEmail", than first item in each row in <see cref="P:CMS.OnlineMarketing.RequestModel.FieldValues"/> property represents contact email.
            </example>
        </member>
        <member name="P:CMS.OnlineMarketing.RequestModel.FieldValues">
            <summary>
            Values of contact fields in order specified by <see cref="P:CMS.OnlineMarketing.RequestModel.FieldsOrder"/> property.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ResultModel">
            <summary>
            See <see cref="T:CMS.OnlineMarketing.ContactImportResults"/> for detailed description.
            </summary>
            <exclude/>
        </member>
        <member name="M:CMS.OnlineMarketing.ResultModel.Equals(System.Object)">
            <summary>
            Indicates whether the ResultModel equals to some other ResultModel
            </summary>
            <param name="obj">The ResultModel that will be used in the comparison</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ResultModel.GetHashCode">
            <summary>
            Empty implementation override of the default hash function.
            It is here to avoid compile time warning. Equals() is used in tests only.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ResultModel.Duplicities">
            <summary>
            Number of contacts from input batch which already existed in DB and were updated or were in the input batch more than once.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ResultModel.Failures">
            <summary>
            Number of contacts from input batch which were not inserted or were not updated if they already existed in DB.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ResultModel.Imported">
            <summary>
            Number of contacts which were created.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.DocumentationLinks">
            <summary>
            Documentation links for online marketing topics.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.DocumentationLinks.ContactGroups">
            <summary>
            Documentation links for contact groups.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.DocumentationLinks.ContactGroups.CUSTOM_MACRO_RECALCULATION_SPEED">
            <summary>
            Improving macro recalculation speed.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.DocumentationLinks.Scoring">
            <summary>
            Documentation links for scoring.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.DocumentationLinks.Scoring.CUSTOM_MACRO_RECALCULATION_SPEED">
            <summary>
            Improving macro recalculation speed.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MyPendingContactsLiveTileModelProvider">
            <summary>
            Provides live tile model for the My pending contacts dashboard tile.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MyPendingContactsLiveTileModelProvider.GetModel(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Loads total number of pending contacts for the given user.
            </summary>
            <param name="liveTileContext">Context of the live tile. Contains information about the user and the site the model is requested for</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="liveTileContext"/> is null</exception>
            <returns>Live tile model</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MyPendingContactsLiveTileModelProvider.GetPendingContactsCount(CMS.SiteProvider.SiteInfo,CMS.Base.IUserInfo)">
            <summary>
            Gets total number of pending contacts for given user.
            </summary>
            <param name="site">Contacts' site</param>
            <param name="user">User the contacts are assigned to</param>
            <returns>Number of pending contacts</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.AbTestLiveTileModelProvider">
            <summary>
            Provides live tile model for the AB test dashboard tile.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AbTestLiveTileModelProvider.GetModel(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Loads total number of currently running AB tests.
            </summary>
            <param name="liveTileContext">Context of the live tile. Contains information about the user and the site the model is requested for</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="liveTileContext"/> is null</exception>
            <returns>Live tile model</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AbTestLiveTileModelProvider.GetRunningTestsCount(CMS.SiteProvider.SiteInfo)">
            <summary>
            Gets number of running tests.
            </summary>
            <param name="site">Tests site</param>
            <returns>Number of tests</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactManagementEvents">
            <summary>
            Contact management events.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactManagementEvents.ProcessContactActionsBatch">
            <summary>
            Event fires when contact actions batch (activities, contact changes) is being processed from log file to DB.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ProcessContactActionsBatchEventArgs">
            <summary>
            Arguments for the ProcessActivitiesHandler event handler.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ProcessContactActionsBatchEventArgs.LoggedActivities">
            <summary>
            Activities which are going to be (Before) or were inserted to the DB (After). 
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ProcessContactActionsBatchEventArgs.LoggedContactChanges">
            <summary>
            Contact changes which took place in the last interval. Those changes are already written in the database even on the Before event. 
            This list serves as an information for online marketing calculators (contact groups, scoring, etc.), so they know which groups or scoring rules should be recalculated.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ProcessContactActionsBatchHandler">
            <summary>
            Handler for processing contact actions in a batch.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ProcessContactActionsBatchHandler.StartEvent(System.Collections.Generic.IList{CMS.WebAnalytics.ActivityData},System.Collections.Generic.IList{CMS.OnlineMarketing.ContactChangeData})">
            <summary>
            Initiates event handling.
            </summary>
            <param name="activities">Activities which are going to be (Before) or were inserted to the DB (After)</param>
            <param name="changes">Contact changes which took place in the last interval. Those changes are already written in the database even on the Before event</param>
        </member>
        <member name="T:CMS.OnlineMarketing.CachedMacroRuleTrees">
            <summary>
            Cache for parsed macro conditions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedMacroRuleTrees.GetParsedTree(System.String)">
            <summary>
            Parses serialized macro (for example in a contact group) to a <see cref="T:CMS.MacroEngine.MacroRuleTree"/> and saves it to cache for subsequent calls.
            If macro rule tree was already parsed, returns it from cache.
            </summary>
            <param name="macroCondition">Macro condition</param>
            <returns>MacroRuleTree that is parsed from <paramref name="macroCondition"/> or taken from cache or null if it cannot be parsed</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="macroCondition"/> cannot be null</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.IMacroRuleInstanceToDataQueryTranslator">
            <summary>
            Defines methods needed to translate one instance of macro rule to the data query which when executed
            will return objects fulfilling macro rule condition.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IMacroRuleInstanceToDataQueryTranslator.Translate(CMS.OnlineMarketing.MacroRuleInstance)">
            <summary>
            Translates macro rule with its parameters to data query. Created data query returns Contacts fulfilling 
            macro rule. Exception is thrown if rule cannot be translated into data query.
            </summary>
            <param name="macroRuleInstance">Macro rule instance to be translated</param>
            <returns>DataQuery representing macro rule</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.IMacroRuleInstanceToDataQueryTranslator.CanBeTranslated(System.String)">
            <summary>
            Checks whether macro rule with the passed code name can be translated to data query. If this method returns false, 
            calling <see cref="M:CMS.OnlineMarketing.IMacroRuleInstanceToDataQueryTranslator.Translate(CMS.OnlineMarketing.MacroRuleInstance)"/> method with the same rule name will result into an exception being thrown.
            </summary>
            <param name="ruleName">Code name of the rule to be translated</param>
            <returns>True if it is possible to translate rule with the passed code name to data query; false otherwise</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.IMacroRuleTreeToDataQueryTranslator">
            <summary>
            Defines methods for translating whole tree of macro rule instances into data query. Produced data query will return
            objects which will pass the macro.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IMacroRuleTreeToDataQueryTranslator.TranslateWithTransformation(CMS.MacroEngine.MacroRuleTree,System.Func{CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo}})">
            <summary>
            Translates macro rule tree into a data query. Macro rule instances are translated into individual data queries
            and combined together using UNION and INTERSECT statements into single data query. A transformation function 
            specified in <paramref name="transformation"/> is applied to every individual data query converted from a macro 
            rule instance.  Produced data queries will return objects matching the condition of the macro rule tree. 
            Throws exception if any of the macro rules cannot be translated.
            </summary>
            <param name="macroRuleTreeRoot">Root element of the macro rule tree</param>
            <param name="transformation">
            Transformation function which will be applied to every data query part. Use this function to further
            restrict results by applying Where, to specify column which should be returned, etc.
            </param>
            <returns>DataQuery representing macro rule tree</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.IMacroRuleTreeToDataQueryTranslator.CanBeTranslated(CMS.MacroEngine.MacroRuleTree)">
            <summary>
            Checks if macro rule tree can be translated into data query. Tree can be translated if all of its rules can be translated.
            </summary>
            <param name="macroRuleTreeRoot">Macro rule tree</param>
            <returns>True if tree can be translated into data query; false otherwise</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.MacroRuleInstanceToDataQueryTranslator">
            <summary>
            Translates macro rule instance to data query. Translation methods are hardcoded in implementations of <see cref="T:CMS.OnlineMarketing.IMacroRuleInstanceTranslator"/> interface. 
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MacroRuleInstance">
            <summary>
            Represents one line from the macro rule condition builder.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MacroRuleInstance.MacroRuleName">
            <summary>
            Codename of the rule.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MacroRuleInstance.Parameters">
            <summary>
            Parameters that a user filled in an instance of a macro rule.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MacroRuleMetadata">
            <summary>
            Metadata for a MacroRule in Online Marketing context. See <see cref="T:CMS.OnlineMarketing.MacroRuleMetadataContainer"/> for information on how to use it to 
            speed up recalculation of contact groups.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MacroRuleMetadata.ALL_ACTIVITIES">
            <summary>
            A constant representing all activities. Is used in <see cref="F:CMS.OnlineMarketing.MacroRuleMetadata.AffectingActivities"/> to mark that all activities affect this macro rule.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MacroRuleMetadata.ALL_ATTRIBUTES">
            <summary>
            A constant representing all attributes. Is used in <see cref="F:CMS.OnlineMarketing.MacroRuleMetadata.AffectingAttributes"/> to mark that all attributes affect this macro rule.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MacroRuleMetadata.MacroRuleName">
            <summary>
            Codename of the <see cref="T:CMS.MacroEngine.MacroRuleInfo"/>.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MacroRuleMetadata.Translator">
            <summary>
            A translator to use for <see cref="T:CMS.MacroEngine.MacroRuleInfo"/> with <see cref="F:CMS.OnlineMarketing.MacroRuleMetadata.MacroRuleName"/>.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MacroRuleMetadata.AffectingAttributes">
            <summary>
            Determines whether the macro rule is affected by change of contact's attribute.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MacroRuleMetadata.mAllActivitiesList">
            <summary>
            List with <see cref="F:CMS.OnlineMarketing.MacroRuleMetadata.ALL_ACTIVITIES"/> to mark that the rule should be recalculated on every activity.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MacroRuleMetadata.AffectingActivities">
            <summary>
            Activities that affect given macro rule (that means if any of these activities performs, the rule should be recalculated).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleMetadata.#ctor(System.String,CMS.OnlineMarketing.IMacroRuleInstanceTranslator,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="macroRuleName">Rule of the macro (see <see cref="P:CMS.MacroEngine.MacroRuleInfo.MacroRuleName"/>)</param>
            <param name="translator">A translator to use for macro with name <paramref name="macroRuleName"/></param>
            <param name="affectingActivities">
            List of activities that affect this macro rule. The rule gets recalculated only if one of these activity types performs.
            Leave null to not recalculate the rule on any activity.
            </param>
            <param name="affectingAttributes">
            List of attributes that affect this macro rule. The rule gets recalculated only if one of these attributes changes.
            Leave null to not recalculate the rule on any attribute change.
            </param>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleMetadata.#ctor(System.String,CMS.OnlineMarketing.IMacroRuleInstanceTranslator,System.Collections.Generic.IList{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="macroRuleName">Rule of the macro (see <see cref="P:CMS.MacroEngine.MacroRuleInfo.MacroRuleName"/>)</param>
            <param name="translator">A translator to use for macro with name <paramref name="macroRuleName"/></param>
            <param name="affectingActivities">
            List of activities that affect this macro rule. The rule gets recalculated only if one of these activity types performs.
            Leave null to recalculate the rule on all activities.
            </param>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleMetadata.#ctor(System.String,CMS.OnlineMarketing.IMacroRuleInstanceTranslator,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="macroRuleName">Rule of the macro (see <see cref="P:CMS.MacroEngine.MacroRuleInfo.MacroRuleName"/>)</param>
            <param name="translator">A translator to use for macro with name <paramref name="macroRuleName"/></param>
            <param name="affectingActivity">An activity that affect this macro rule. The rule gets recalculated only if this activity type performs.</param>
        </member>
        <member name="F:CMS.OnlineMarketing.MacroRuleMetadata.mAllAttributesList">
            <summary>
            List with <see cref="F:CMS.OnlineMarketing.MacroRuleMetadata.ALL_ACTIVITIES"/> to mark that the rule should be recalculated on every activity.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MacroRuleTreeAnalyzer">
            <summary>
            Provides methods to analyze a MacroRuleTree.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTreeAnalyzer.CanTreeBeTranslated(CMS.MacroEngine.MacroRuleTree)">
            <summary>
            Checks whether a macro tree can be translated to a <see cref="T:CMS.DataEngine.DataQuery"/>.
            </summary>
            <param name="macroRuleTree">Macro rule tree</param>
            <returns>True when the macro rule tree can be translated to DataQuery</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTreeAnalyzer.GetAffectingAttributeNames(CMS.MacroEngine.MacroRuleTree)">
            <summary>
            Gets all attributes that can affect given <see cref="T:CMS.MacroEngine.MacroRuleTree"/>. Uses <see cref="F:CMS.OnlineMarketing.MacroRuleMetadata.ALL_ATTRIBUTES"/> to mark that it
            should be recalculated no matter what attribute changed.
            </summary>
            <param name="tree">Macro rule tree</param>
            <returns>Set of attributes that affect given Macro rule tree</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTreeAnalyzer.GetAffectingActivityCodeNames(CMS.MacroEngine.MacroRuleTree)">
            <summary>
            Gets all activities that can affect given <see cref="T:CMS.MacroEngine.MacroRuleTree"/>. Uses <see cref="F:CMS.OnlineMarketing.MacroRuleMetadata.ALL_ACTIVITIES"/> to mark that it
            should be recalculated no matter what activity performed.
            </summary>
            <param name="tree">Macro rule tree</param>
            <returns>Set of activities that affect given Macro rule tree</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTreeAnalyzer.GetAffectingItems(CMS.MacroEngine.MacroRuleTree,System.Func{CMS.OnlineMarketing.MacroRuleMetadata,System.Collections.Generic.IList{System.String}})">
            <summary>
            Gets all items that can affect given <see cref="T:CMS.MacroEngine.MacroRuleTree"/>. 
            </summary>
            <param name="tree">Macro rule tree</param>
            <param name="type">Provide attribute which should be selected</param>
            <returns>Set of items that affect given Macro rule tree</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.MacroRuleMetadataContainer">
            <summary>
            Class for registering <see cref="T:CMS.OnlineMarketing.MacroRuleMetadata"/> to the system. Use <see cref="M:CMS.OnlineMarketing.MacroRuleMetadataContainer.RegisterMetadata(CMS.OnlineMarketing.MacroRuleMetadata)"/> to speed up recalculation of contact groups 
            when registered macro rule is used in group condition.
            </summary>
            <remarks>
            Registering <see cref="T:CMS.OnlineMarketing.MacroRuleMetadata"/> can have two profound effects on speed of recalculation. 
            
            First is recalculating contacts in the database - normally, when a contact group is being rebuilt, system takes all contacts from database and runs the macro 
            condition on each of those. By registering a translator to a rule, the computation can be inverted, that means at first, a database query will be constructed 
            to select only those contacts that fit given macro condition.
            
            All of the macro rules must be able to translate themselves to database query to use this functionality.
            
            
            Second is recalculating the rule only when specified type of activity performs, for example when a <see cref="F:CMS.WebAnalytics.PredefinedActivityType.PAGE_VISIT"/> performs,
            there is no need to recalculate <see cref="F:CMS.WebAnalytics.PredefinedActivityType.NEWSLETTER_OPEN"/> macro rules. This can significantly reduce the count of contact groups
            that need rebuild on each request.
            </remarks>
        </member>
        <member name="F:CMS.OnlineMarketing.MacroRuleMetadataContainer.mMetadata">
            <summary>
            Translators container.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleMetadataContainer.GetMetadata(System.String)">
            <summary>
            Gets a translator for given macro rule codename.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleMetadataContainer.IsTranslatorAvailable(System.String)">
            <summary>
            Checks whether a translator is registered for given macro rule codename.
            </summary>
            <returns>True if translator is registered</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleMetadataContainer.RegisterMetadata(CMS.OnlineMarketing.MacroRuleMetadata)">
            <summary>
            Registers metadata for a macro rule. Overrides already registered translators if the <see cref="F:CMS.OnlineMarketing.MacroRuleMetadata.MacroRuleName"/> collides.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleMetadataContainer.RegisterDefaultMetadata">
            <summary>
            Registers default metadata for existing macro rules.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MacroRuleTreeParser">
            <summary>
            Class that parses a macro condition <see cref="T:CMS.MacroEngine.MacroRuleTree"/> from a <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTreeParser.TryParse(System.String)">
            <summary>
            Parses macro condition (for example in a contact group) to a <see cref="T:CMS.MacroEngine.MacroRuleTree"/>.
            </summary>
            <param name="macroCondition">Macro condition as a string</param>
            <returns>MacroRuleTree that is parsed from <paramref name="macroCondition"/> or null if it cannot be parsed</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="macroCondition"/> cannot be null</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.MacroRuleTreeEvaluator">
            <summary>
            Evaluates <see cref="T:CMS.MacroEngine.MacroRuleTree"/> and returns IDs of contacts that match it.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTreeEvaluator.SetMacroRuleTree(CMS.MacroEngine.MacroRuleTree)">
            <summary>
            Sets macro rule tree that can be evaluated.
            </summary>
            <param name="macroRuleTree">Macro rule tree</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTreeEvaluator.#ctor(CMS.OnlineMarketing.IMacroRuleTreeToDataQueryTranslator)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTreeEvaluator.CanBeEvaluated">
            <summary>
            Checks whether the condition that has been set in the <see cref="M:CMS.OnlineMarketing.MacroRuleTreeEvaluator.SetMacroRuleTree(CMS.MacroEngine.MacroRuleTree)"/> property can be rebuilt using this rebuilder.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTreeEvaluator.EvaluateAllContactIDs">
            <summary>
            Evaluates the condition set by the <see cref="M:CMS.OnlineMarketing.MacroRuleTreeEvaluator.SetMacroRuleTree(CMS.MacroEngine.MacroRuleTree)"/> method. At first, macro rule tree is converted to data query. This data query is then executed on the database
            and a list of ContactIDs is retrieved. Exception is thrown if macro rule tree cannot be converted to data query (can be checked with the <see cref="M:CMS.OnlineMarketing.MacroRuleTreeEvaluator.CanBeEvaluated"/> method.
            Only not merged contacts are returned. If <see cref="P:CMS.OnlineMarketing.MacroRuleTreeEvaluator.SiteID"/> property is set, only contacts from specific site are returned.
            </summary>
            <returns>IDs of contacts satisfying the condition</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTreeEvaluator.EvaluateContacts(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Evaluates the condition set by the <see cref="M:CMS.OnlineMarketing.MacroRuleTreeEvaluator.SetMacroRuleTree(CMS.MacroEngine.MacroRuleTree)"/> method. At first, macro rule tree is converted to data query. This data query is then executed on the database
            and a list of ContactIDs is retrieved. Exception is thrown if macro rule tree cannot be converted to data query (can be checked with the <see cref="M:CMS.OnlineMarketing.MacroRuleTreeEvaluator.CanBeEvaluated"/> method.
            Only not merged contacts are returned. If <see cref="P:CMS.OnlineMarketing.MacroRuleTreeEvaluator.SiteID"/> property is set, only contacts from specific site are returned.
            </summary>
            <param name="contactIDsToEvaluate">Only those contacts will be checked for compliance with condition</param>
            <returns>IDs of contacts satisfying the condition</returns>
        </member>
        <member name="P:CMS.OnlineMarketing.MacroRuleTreeEvaluator.SiteID">
            <summary>
            Site ID on which the rule should be evaluated.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.IMacroRuleInstanceTranslator">
            <summary>
            Defines methods needed to translate macro rule instance of one particular macro rule type to data query.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IMacroRuleInstanceTranslator.Translate(CMS.OnlineMarketing.MacroRuleInstance)">
            <summary>
            Translates one rule to object query returning contacts. Is used to speed up the process of recalculating contact groups.
            </summary>
            <param name="macroRuleInstance">Instance of the macro rule representing one line in the condition builder.</param>
            <returns>Object query for contacts that fit in this rule.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.SingleMacroRuleInstanceTranslatorBase.Translate(CMS.OnlineMarketing.MacroRuleInstance)">
            <summary>
            Translates one rule to object query returning contacts. Is used to speed up the process of recalculating contact groups.
            </summary>
            <param name="macroRuleInstance">Instance of the macro rule representing one line in the condition builder.</param>
            <returns>Object query for contacts that fit in this rule.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactIsInCommunityGroupInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            CMSContactIsInCommunityGroup
            Contact {_is} in {_any} of the community groups: {groups}
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactHasClickedALinkInNewsletterInTheLastXDaysInstanceTranslator">
            <summary>
            Translates CMSContactHasClickedALinkInNewsletterInTheLastXDays Macro rule.
            Contact {_perfectum} clicked a link in newsletter {item} in the last {days} day(s)
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasMadeAtLeastXOrdersInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            CMSContactHasMadeAtLeastXOrders
            Contact {_perfectum} made at least {num} order(s)
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasClickedALinkInNewsletterIssueInLastXDaysInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactHasClickedALinkInNewsletterIssueInLastXDays Macro rule.
            Contact {_perfectum} clicked a link in newsletter issue {issue} in the last {days} days.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasDoneAnyActivityInTheLastXDaysInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            CMSContactHasDoneAnyActivityInTheLastXDays
            Contact {_perfectum} done any activity in the last {days} day(s)
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasOpenedSpecifiedNewsletterInTheLastXDaysInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactHasOpenedSpecifiedNewsletterInTheLastXDays Macro rule.
            Contact {_perfectum} opened newsletter {item} in the last {days} day(s)
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasOpenedSpecifiedNewsletterIssueInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Contact {_perfectum} opened newsletter issue {issue}.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasOpenedSpecifiedNewsletterIssueInTheLastXDaysInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Contact {_perfectum} opened newsletter issue {issue} in the last {days} days
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasClickedALinkInNewsletterIssueInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactHasClickedALinkInNewsletterIssue Macro rule.
            Contact {_perfectum} clicked a link in newsletter issue {issue}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasComeToSpecifiedLandingPageInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactHasComeToSpecifiedLandingPage Macro rule.
            Contact {_perfectum} come to landing page {page}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasDoneFollowingActivitiesInTheLastXDaysInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            CMSContactHasDoneFollowingActivitiesInTheLastXDays
            Contact {_perfectum} done {_any} of the following activities in the last {days} day(s): {activities}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasLoggedInInTheLastXDaysInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            CMSContactHasLoggedInInTheLastXDays
            Contact {_perfectum} logged in in the last {days} day(s)
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasPurchasedNumberOfProductsInTheLastXDaysInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactHasPurchasedNumberOfProductsInTheLastXDays Macro rule.
            Contact {_perfectum} purchased at least {num} product(s) in the last {days} day(s)
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasSpentMoneyInTheStoreInTheLastXDaysInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactHasSpentMoneyInTheStoreInTheLastXDays Macro rule.
            Contact {_perfectum} spent between {money1} and {money2} in the store in the last {days} day(s)
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasSubmittedSpecifiedFormInLastXDaysInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            CMSContactHasSubmittedSpecifiedFormInLastXDays
            Contact {_perfectum} submitted form {item} in last {days} day(s)
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasVisitedSpecifiedPageInLastXDaysInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            CMSContactHasVisitedSpecifiedPageInLastXDays
            Contact {_perfectum} visited page {item} in the last {days} day(s)
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasSearchedForSpecifiedKeywordsInLastXDaysInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            CMSContactHasSearchedForSpecifiedKeywordsInLastXDays
            Contact {_perfectum} searched for {_any} of the following keywords in last {days} day(s): {keywords}
            {_perfectum}Contact.SearchedForKeywords("{keywords}", ToInt({days}), {_any})
            keywords: Enter keywords separated with semicolon.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasPurchasedSpecifiedProductInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactHasPurchasedSpecifiedProduct Macro rule.
            Contact {_perfectum} purchased product {product}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasVotedInSpecifiedPollInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactHasVotedInSpecifiedPoll Macro rule.
            Contact {_perfectum} voted {answer} in poll {item}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactIsInContactGroupInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactIsInContactGroup Macro rule.
            Contact {_is} in {_any} of the contact groups: {groups}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactIsInRoleInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactIsInRole Macro rule.
            Contact {_is} in {_any} of the roles: {roles}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactIsRegisteredAsAUserInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactIsRegisteredAsAUser Macro rule.
            Contact {_is} registered as a user
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactIsRegisteredForSpecifiedEventInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactIsRegisteredForSpecifiedEvent Macro rule.
            Contact {_is} registered for event {item}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactIsSubscribedToSpecifiedNewsletterInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactIsSubscribedToSpecifiedNewsletter Macro rule.
            Contact {_is} subscribed to newsletter {item}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactStatusIsInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactStatusIs Macro rule.
            Contact status {_is} {status}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSCurrentDatetimeIsInRangeInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSCurrentDatetimeIsInRange Macro rule.
            Current date/time {_is} between {date1} and {date2}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactAgeIsGreaterThanInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactAgeIsGreaterThan macro rule.
            Contact age {op} {age}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactAgeIsBetweenInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            CMSContactAgeIsBetween
            Contact age {_is} between {age1} and {age2}
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactHasDownloadedSpecifiedFileInLastXDaysInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSContactHasDownloadedSpecifiedFileInLastXDays Macro rule.
            Contact {_perfectum} downloaded file {item} in the last {days} day(s)
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSCurrentMonthIsInstanceTranslator.TranslateInternal(CMS.Base.StringSafeDictionary{CMS.MacroEngine.MacroRuleParameter})">
            <summary>
            Translates CMSCurrentMonthIs Macro rule.
            Current month {_is} one of the following: {months}
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityInfoObjectQueryExtensions">
            <summary>
            Extends <see cref="T:CMS.DataEngine.ObjectQuery`1"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoObjectQueryExtensions.NewerThan(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ActivityInfo},System.TimeSpan)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.ObjectQuery"/> with Activities that are older than given <paramref name="time"/>.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions">
            <summary>
            Extensions of <see cref="T:CMS.DataEngine.ObjectQuery`1"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.WithAge(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.ObjectQuery`1"/> with contacts that are exactly age of <paramref name="yearsOld"/> years old.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.NotWithAge(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.ObjectQuery`1"/> with contacts that are not exactly <paramref name="yearsOld"/> years old.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.OlderThan(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.ObjectQuery`1"/> with contacts that are older than <paramref name="yearsOld"/> (contacts with age <paramref name="yearsOld"/> are not included).
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.OlderThanOrWithAge(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.ObjectQuery`1"/> with contacts that are older than <paramref name="yearsOld"/> (contacts with age <paramref name="yearsOld"/> are included).
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.YoungerThan(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.ObjectQuery`1"/> with contacts that are younger than <paramref name="yearsOld"/> (contacts with age <paramref name="yearsOld"/> are not included).
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.YoungerThanOrWithAge(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},System.Int32)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.ObjectQuery`1"/> with contacts that are younger than <paramref name="yearsOld"/> (contacts with age <paramref name="yearsOld"/> are included).
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.WithBirthdayAfter(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},System.DateTime)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.ObjectQuery`1"/> with contacts that have date of birth later than <paramref name="fromExclusive"/>. The method takes only Date part.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.WithBirthdayBefore(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},System.DateTime)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.ObjectQuery`1"/> with contacts that have date of birth sooner than <paramref name="toExclusive"/>. The method takes only Date part.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.CreatedAfter(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},System.DateTime)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.ObjectQuery`1"/> with contacts that have been created later than <paramref name="from"/>.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.CreatedBefore(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},System.DateTime)">
            <summary>
            Returns <see cref="T:CMS.DataEngine.ObjectQuery`1"/> with contacts that have been created before <paramref name="to"/>.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.NotMerged(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo})">
            <summary>
            Filters out contacts merged to another contact.
            Global contacts merged to global contact and site contacts merged to site contacts are considered as merged.
            Site contacts merged to global contacts are not considered as merged.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.SearchedForAll(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Filters out contacts who have searched for all of the specified keywords in last x days.
            </summary>
            <param name="contactsQuery">Object query for contact info</param>
            <param name="keywords">Array of keywords</param>
            <param name="lastXDays">In last x days</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.SearchedForAny(CMS.DataEngine.ObjectQuery{CMS.OnlineMarketing.ContactInfo},System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Filters out contacts who have searched for any of the specified keywords in last x days.
            </summary>
            <param name="contactsQuery">Object query for contact info</param>
            <param name="keywords">Array of keywords</param>
            <param name="lastXDays">In last x days</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactsQuery"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoObjectQueryExtensions.SearchActivities(System.Int32)">
            <summary>
            Returns activities with only ActivityActiveContactID column from all search activities.
            </summary>
            <param name="lastXDays">In last x days</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreMacroRuleSqlRecalculator">
            <summary>
            Recalculates macro scoring rules. Recalculation is done by converting dynamic macro condition to SQL query and thus leaving most of 
            the work on the SQL Server.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreMacroRuleSqlRecalculator.#ctor(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreMacroRuleSqlRecalculator.CanBeRecalculated">
            <summary>
            Checks whether the scoring rule can be recalculated with this class.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreMacroRuleSqlRecalculator.RecalculateRule">
            <summary>
            Recalculates the given rule.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreMacroRuleSqlRecalculator.RecalculateRuleForContacts(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Recalculates the given rule for contacts.
            </summary>
            <param name="contactsToRebuild">Contacts whose rule points will be recalculated</param>
        </member>
        <member name="T:CMS.OnlineMarketing.TextComparer">
            <summary>
            Compares two strings based on <see cref="T:CMS.UIControls.TextCompareOperatorEnum"/> condition.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.TextComparer.Compare(System.String,CMS.UIControls.TextCompareOperatorEnum,System.String)">
            <summary>
            Checks whether given text in <paramref name="value"/> matches given condition. 
            Comparison is case-insensitive and <code>null</code> is considered as empty string.
            For example "test text" <see cref="F:CMS.UIControls.TextCompareOperatorEnum.Like"/> "Test" is true.
            </summary>
            <returns>True if <paramref name="value"/> matches given <paramref name="compareOperator"/> and <paramref name="value2"/>.</returns>
            <exception cref="T:System.NotImplementedException"><paramref name="compareOperator"/> is not supported</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ABHandlers">
            <summary>
            AB testing event handlers.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABHandlers.ABSESSIONCONVERSION_FIRST">
            <summary>
            Code name of the first session conversion used in log files.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABHandlers.ABSESSIONCONVERSION_RECURRING">
            <summary>
            Code name of the recurring session conversion used in log files.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABHandlers.ABCONVERSION">
            <summary>
            Conversion name.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABHandlers.ABTESTTYPE">
            <summary>
            Test type for caching purposes.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABHandlers.ABTESTCOOKIE_PREFIX">
            <summary>
            Cookie prefix.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABHandlers.PARAM_ABTEST_NAME">
            <summary>
            Used as a query parameter when logging analytics via JavaScript. 
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABHandlers.PARAM_ABVISIT_FIRST">
            <summary>
            Used as a query parameter when logging analytics via JavaScript. 
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABHandlers.CACHE_MINUTES">
            <summary>
            Caching set to 6 hours.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABHandlers.LOGVIAJAVASCRIPTKEYNAME">
            <summary>
            Log via JavaScript key name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.Init">
            <summary>
            Initializes the events handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.ProcessABTest(System.Object,CMS.URLRewritingEngine.ProcessABTestEventArgs)">
            <summary>
            Fires when PageInfo potentially using A/B test is required
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.ExcludeVisitorFromAB(System.Object,System.EventArgs)">
            <summary>
            Checks traffic and macro condition to decide whether exclude visitor from test or not.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.LogABVisit(System.Object,System.EventArgs)">
            <summary>
            Checks whether the request is on AB test and user got assigned AB test variant.
            Context properties (<see cref="P:CMS.OnlineMarketing.ABTestContext.CurrentABTest"/>, <see cref="P:CMS.OnlineMarketing.ABTestContext.CurrentABTestVariant"/>, <see cref="P:CMS.OnlineMarketing.ABTestContext.IsFirstABRequest"/>) 
            used are assigned in ABTestInfoProvider when AB variant for a PageInfo is requested (not in this handler).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.LogABVisit(System.String,System.String,System.Boolean,CMS.DocumentEngine.PageInfo)">
            <summary>
            Logs AB visit.
            </summary>
            <param name="testName">AB test name</param>
            <param name="variantName">AB variant name</param>
            <param name="isFirstVisit">Indicates whether the request is user's first visit of the page</param>
            <param name="page">Page the user visits, uses DocumentContext.CurrentPageInfo if left empty</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.LogABVisitViaJavascript(System.Object,CMS.WebAnalytics.AnalyticsJSEventArgs)">
            <summary>
            Logs AB visit via JavaScript snippet.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.InsertABTestJavaScriptWebServiceParameters(System.Object,CMS.WebAnalytics.AnalyticsJSEventArgs)">
            <summary>
            Inserts additional query parameters to the web analytics Javascript snippet.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.LogABConversion(System.Object,CMS.Base.CMSEventArgs{CMS.WebAnalytics.LogRecord})">
            <summary>
            Logs AB conversions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.LogABTestConversion(System.String,System.String,System.String,System.Int32,System.Int32,System.Double)">
            <summary>
            Checks cookies and logs AB test conversions.
            </summary>
            <param name="siteName">Site name</param>
            <param name="culture">Culture</param>
            <param name="conversionName">Conversion name</param>
            <param name="objectId">Object ID</param>
            <param name="count">Conversions count</param>
            <param name="value">Conversions value</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.UpdateAliasPaths(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Updates paths of AB variants and AB tests when underlying document is moved or updated (document/node and AB variant/test are linked together just by alias path, not FK).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.MarkDocumentInContentTree(System.Object,CMS.DocumentEngine.DocumentMarkEventArgs)">
            <summary>
            Marks documents in content tree with icons.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.GenerateABStatistics(System.Object,CMS.WebAnalytics.GenerateStatisticsEventArgs)">
            <summary>
            Generates sample statistics for AB tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.SendPageFromCache(System.Object,CMS.OutputFilter.OutputCacheEventArgs)">
            <summary>
            Tries to fetch correct content from output cache if page AB testing is enabled.
            If page content is not present in cache, indicates that cache should be skipped (fallback to regular load).
            </summary>
            <param name="sender">Sender</param>
            <param name="ea">Event args needed to perform loading from output cache</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.GenerateNewABVariant(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Generates new AB test variant and returns its name.
            </summary>
            <param name="abTest">AB test</param>
            <returns>Returns null if variant is not found or is not active.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.SaveABToOutputCache(System.Object,CMS.OutputFilter.OutputCacheEventArgs)">
            <summary>
            Applies AB testing on the output cache.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABHandlers.SaveDummyItemToCache(System.String,CMS.OutputFilter.CachedOutput)">
            <summary>
            Creates dummy cache item with A/B test name in <see cref="P:CMS.OutputFilter.CachedOutput.TestCookieName"/> property.
            </summary>
            <param name="testName">A/B test name</param>
            <param name="output">Cached output</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABSegmentationEvaluator">
            <summary>
            Class that evaluates AB segmentation conditions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABSegmentationEvaluator.CheckUserIsEditor">
            <summary>
            Returns true if visitor is editor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABSegmentationEvaluator.CheckIncludedTrafficCondition(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns false if visitor did not pass traffic condition.
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABSegmentationEvaluator.CheckVisitorTargetingMacro(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns false if visitor did not pass targeting macro condition.
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.StaticRandom">
            <summary>
            Class that provides <see cref="T:System.Random"/> generator from thread local storage. This class is preferred to use, because <see cref="T:System.Random"/> class is not
            thread-safe.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.StaticRandom.Next(System.Int32)">
            <summary>
            Returns a nonnegative random number less than the specified maximum.
            </summary>
            <returns>
            A 32-bit signed integer greater than or equal to zero, and less than <paramref name="maxValue"/>; that is, the range of return values ordinarily includes zero but not <paramref name="maxValue"/>. However, if <paramref name="maxValue"/> equals zero, <paramref name="maxValue"/> is returned.
            </returns>
            <param name="maxValue">The exclusive upper bound of the random number to be generated. <paramref name="maxValue"/> must be greater than or equal to zero. </param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxValue"/> is less than zero. </exception>
        </member>
        <member name="M:CMS.OnlineMarketing.StaticRandom.Next(System.Int32,System.Int32)">
            <summary>
            Returns a random number within a specified range.
            </summary>
            <returns>
            A 32-bit signed integer greater than or equal to <paramref name="minValue"/> and less than <paramref name="maxValue"/>; that is, the range of return values includes <paramref name="minValue"/> but not <paramref name="maxValue"/>. If <paramref name="minValue"/> equals <paramref name="maxValue"/>, <paramref name="minValue"/> is returned.
            </returns>
            <param name="minValue">The inclusive lower bound of the random number returned. </param><param name="maxValue">The exclusive upper bound of the random number returned. <paramref name="maxValue"/> must be greater than or equal to <paramref name="minValue"/>. </param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="minValue"/> is greater than <paramref name="maxValue"/>. </exception>
        </member>
        <member name="P:CMS.OnlineMarketing.StaticRandom.Instance">
            <summary>
            Gets instance for generator. Differs for each thread.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestDataGenerator">
            <summary>
            Class generating and deleting sample statistics for AB tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestDataGenerator.#ctor(CMS.SiteProvider.SiteInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="site">Site to generate data for</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestDataGenerator.Generate(System.DateTime,System.DateTime)">
            <summary>
            Generates statistics for AB tests on the current site.
            </summary>
            <param name="from">Date to generate data from</param>
            <param name="to">Date to generate data to</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestDataGenerator.GetSampleConversionInfos">
            <summary>
            Gets sample conversions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestDataGenerator.GetOrSetConversionInfo(System.String,System.String)">
            <summary>
            Gets conversion with given code name or sets new one using display name and codename.
            </summary>
            <param name="displayName">Display name</param>
            <param name="codeName">Code name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestDataGenerator.LogConversionHit(System.String,CMS.OnlineMarketing.ABTestInfo,CMS.OnlineMarketing.ABVariantInfo,CMS.WebAnalytics.ConversionInfo,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Logs hit for conversion of the given type.
            </summary>
            <param name="conversionType">Conversion type</param>
            <param name="test"></param>
            <param name="variant"></param>
            <param name="conversion"></param>
            <param name="conversionFirstCount"></param>
            <param name="hitsValue">Conversion value</param>
            <param name="logTime">Log time</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestDataGenerator.LogVisitHit(System.String,CMS.OnlineMarketing.ABTestInfo,CMS.OnlineMarketing.ABVariantInfo,System.Int32,System.DateTime)">
            <summary>
            Logs hit for visit of the given type.
            </summary>
            <param name="visitType">Visit type</param>
            <param name="test">AB test</param>
            <param name="variant">AB variant</param>
            <param name="visits">Number of visits</param>
            <param name="logTime">Log time</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestDataGenerator.GetVisits(System.Int32,System.Int32)">
            <summary>
            Gets visit count from approximate values.
            </summary>
            <param name="visitsApprox">Approximate visit count</param>
            <param name="visitsDeviation">Visit deviation</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestDataGenerator.GetConversionRate(System.Double,System.Double)">
            <summary>
            Gets conversion rate from approximate values.
            </summary>
            <param name="conversionRateApprox">Approximate conversion rate</param>
            <param name="conversionRateDeviation">Conversion rate deviation</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestDataGenerator.GetConversionCount(System.Int32,System.Double)">
            <summary>
            Gets conversion count.
            </summary>
            <param name="visitCount">Visit count</param>
            <param name="conversionRate">Conversion rate</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestDataGenerator.TestData">
            <summary>
            Class representing random data for an AB test. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestDataGenerator.TestData.#ctor(System.Random)">
            <summary>
            Constructor.
            </summary>
            <param name="random">Random generator</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.TestData.VisitFirstApprox">
            <summary>
            Approximate visit first count.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.TestData.VisitFirstDeviation">
            <summary>
            Visit first deviation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.TestData.VisitReturnApprox">
            <summary>
            Approximate visit return count.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.TestData.VisitReturnDeviation">
            <summary>
            Visit return deviation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.TestData.ConversionFirstRateApprox">
            <summary>
            Approximate conversion first rate.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.TestData.ConversionFirstRateDeviation">
            <summary>
            Conversion first rate deviation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.TestData.ConversionRecurringRateApprox">
            <summary>
            Approximate conversion recurring rate.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.TestData.ConversionRecurringRateDeviation">
            <summary>
            Conversion recurring rate deviation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.TestData.ConversionEveryRateApprox">
            <summary>
            Approximate conversion every rate.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.TestData.ConversionEveryRateDeviation">
            <summary>
            Conversion every rate deviation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.TestData.Random">
            <summary>
            Random generator.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestDataGenerator.VariantData">
            <summary>
            Class representing random data for an AB variant. 
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.mRandom">
            <summary>
            Random generator.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.#ctor(CMS.OnlineMarketing.ABTestDataGenerator.TestData)">
            <summary>
            Constructor.
            </summary>
            <param name="testData">Test data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.GetConversionRate(System.Double,System.Double)">
            <summary>
            Gets conversion rate from approximate values.
            </summary>
            <param name="conversionRateApprox">Approximate conversion rate</param>
            <param name="conversionRateDeviation">Conversion rate deviation</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.VisitFirstApprox">
            <summary>
            Approximate visit first count.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.VisitFirstDeviation">
            <summary>
            Visit first deviation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.VisitReturnApprox">
            <summary>
            Approximate visit return count.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.VisitReturnDeviation">
            <summary>
            Visit return deviation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.ConversionFirstRateApprox">
            <summary>
            Approximate conversion first rate.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.ConversionFirstRateDeviation">
            <summary>
            Conversion first rate deviation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.ConversionRecurringRateApprox">
            <summary>
            Approximate conversion recurring rate.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.ConversionRecurringRateDeviation">
            <summary>
            Conversion recurring rate deviation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.ConversionEveryRateApprox">
            <summary>
            Approximate conversion every rate.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestDataGenerator.VariantData.ConversionEveryRateDeviation">
            <summary>
            Conversion every rate deviation.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestMessagesWriter">
            <summary>
            Class that writes info messages into the page using a delegate <see cref="T:CMS.OnlineMarketing.ABTestMessagesWriter.ShowMessageHandler"/>.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestMessagesWriter.#ctor(CMS.OnlineMarketing.ABTestMessagesWriter.ShowMessageHandler)">
            <summary>
            Constructor.
            </summary>
            <param name="showMessage">ShowMessage method from CMSPage</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="showMessage"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestMessagesWriter.ShowMissingVariantsTranslationsWarning(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Shows warning if any of AB variants do not have translations into all cultures.
            Applies only if test is multicultural and current site has more than one culture.
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestMessagesWriter.ShowABTestScheduleInformation(CMS.OnlineMarketing.ABTestInfo,CMS.OnlineMarketing.ABTestStatusEnum)">
            <summary>
            Shows status information about the test if it is scheduled to be started of finished. 
            </summary>
            <param name="abTest">ABTest</param>
            <param name="testStatus">AB test status</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestMessagesWriter.ShowStatusInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Displays status information (running/disabled/none) about given AB test.
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestMessagesWriter.ShowMessage">
            <summary>
            Gets ShowMessage method handler.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestMessagesWriter.ShowMessageHandler">
            <summary>
            Shows the specified message, optionally with a tooltip text and description.
            </summary>
            <param name="type">Message type</param>
            <param name="text">Message text</param>
            <param name="description">Additional description</param>
            <param name="tooltipText">Tooltip text</param>
            <param name="persistent">Indicates if the message is persistent</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantPerformanceCalculatorFactory">
            <summary>
            Class that provides IABVariantPerformanceCalculator implementation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantPerformanceCalculatorFactory.GetImplementation(System.Int32,System.Int32)">
            <summary>
            Returns new instance of IABVariantPerformanceCalculator implementation.
            </summary>
            <param name="controlConversions">Number of control conversions</param>
            <param name="controlVisits">Number of control visits</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer">
            <summary>
            Class visualizing AB conversion rate interval.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.mRange">
            <summary>
            The difference between the minimum lower bound and the maximum upper bound values for the test.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.mMin">
            <summary>
            The minimum lower bound of the conversion rate intervals for the test.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.mChallengerInterval">
            <summary>
            Conversion rate interval for the challenger variant.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.mOriginalInterval">
            <summary>
            Conversion rate interval for the original variant.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.HORIZONTAL_COLOR">
            <summary>
            Color of the horizontal line (axis).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.BORDER_COLOR">
            <summary>
            Color of the vertical border lines.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.OVERLAP_COLOR">
            <summary>
            Color of the rectangle representing the overlap with the original variant.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.NEGATIVE_COLOR">
            <summary>
            Color of the rectangle representing that the variant is losing to the original variant.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.POSITIVE_COLOR">
            <summary>
            Color of the rectangle representing that the variant is outperforming the original variant.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.VERTICAL_COLOR">
            <summary>
            Color of the line displaying variant's mean value.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.#ctor(System.Double,System.Double,CMS.OnlineMarketing.ABConversionRateInterval,CMS.OnlineMarketing.ABConversionRateInterval)">
            <summary>
            Constructor.
            </summary>
            <param name="min">Minimum lower bound of all conversion rate intervals for the test</param>
            <param name="range">Range of all conversion rate intervals for the test</param>
            <param name="challengerInterval">Variant conversion rate interval</param>
            <param name="originalInterval">Original conversion rate interval</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the conversion rate interval visualizer.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the content.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.GetMainWrapper">
            <summary>
            Gets the main wrapper for the conversion rate interval info.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.GetTextWrapper">
            <summary>
            Gets the wrapper for the textual representation of the conversion rate interval.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.GetPictureLayout">
            <summary>
            Gets the layout for the picture representation of the conversion rate interval.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.GetPictureWrapper">
            <summary>
            Gets the wrapper for the picture representation of the conversion rate interval.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.GetLeftBorder">
            <summary>
            Gets the left border of the interval visualizer.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.GetRightBorder">
            <summary>
            Gets the right border of the interval visualizer.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.GetHorizontalLine">
            <summary>
            Gets the horizontal line (axis).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.GetIntervalWrapper">
            <summary>
            Gets the wrapper for the conversion rate interval panels. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.CreateIntervalPanels(System.Web.UI.WebControls.Panel)">
            <summary>
            Creates panels visualizing the conversion rate interval.
            </summary>
            <param name="intervalWrapper">Conversion rate interval wrapper</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.GetOverlapRectangle(System.Double,System.Double)">
            <summary>
            Gets neutral (overlap) portion of the conversion rate rectangle.
            </summary>
            <param name="overlapLeft">Position of the left side of the rectangle</param>
            <param name="overlapWidth">Width of the rectangle</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.GetPositiveRectangle(System.Double,System.Double,System.Double)">
            <summary>
            Gets positive portion of the conversion rate rectangle.
            </summary>
            <param name="originalRight">Position of the right side of the original's rectangle</param>
            <param name="left">Position of the left side of the rectangle</param>
            <param name="right">Position of the right side of the rectangle</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.GetNegativeRectangle(System.Double,System.Double,System.Double)">
            <summary>
            Gets negative portion of the conversion rate rectangle.
            </summary>
            <param name="left">Position of the left side of the rectangle</param>
            <param name="right">Position of the right side of the rectangle</param>
            <param name="originalLeft">Position of the left side of the original's rectangle</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateIntervalVisualizer.GetVerticalLine(System.Double)">
            <summary>
            Gets line displaying the variant's mean value.
            </summary>
            <param name="center">Center of the conversion rate interval</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantStatisticsData">
            <summary>
            Class that holds AB variant's statistics data.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantStatisticsData.#ctor(System.Int32,System.Double,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="conversionsCount">Conversions count</param>
            <param name="conversionsValue">Conversions value</param>
            <param name="visits">Visits count</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.ConversionsCount">
            <summary>
            Gets conversions count.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.Visits">
            <summary>
            Gets visits count.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.ConversionsValue">
            <summary>
            Gets conversions value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.ConversionRate">
            <summary>
            Gets conversion rate.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantStatisticsData.AverageConversionValue">
            <summary>
            Gets average conversion value.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestValidator">
            <summary>
            Class that validates given test (checks for valid from, to and if there's another test already running in this period).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.IsValidStart(System.DateTime)">
            <summary>
            Checks whether the start date is valid.
            </summary>
            <param name="start">Test start date</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.IsValidFinish(System.DateTime,System.DateTime)">
            <summary>
            Checks whether the finish date is valid.
            </summary>
            <param name="start">Test start date</param>
            <param name="finish">Test finish date</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.CollidesWithOtherTests(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks whether the test is in collision with other tests on the same page.
            </summary>
            <param name="abTest">AB test</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.GetCollidingTestName(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns display name of the colliding test.
            </summary>
            <param name="abTest">AB test</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="abTest"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestValidator.Collides(CMS.OnlineMarketing.ABTestInfo,CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns true if test schedules collide, false otherwise.
            </summary>
            <param name="editedTest">Test being edited</param>
            <param name="rivalTest">Test being compared</param>
            <remarks>This method is internal so it can be accessed in separate assembly for tests.</remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.ABUserStateManager">
            <summary>
            Manages current user's AB test state - can assign an AB variant to him, save which conversions he has done, or read saved state. Internally uses a cookie for permanent state 
            (see <see cref="T:CMS.OnlineMarketing.ABCookieValue"/>) and session for session state(see <see cref="T:CMS.Helpers.SessionHelper"/>).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABUserStateManager.ABCOOKIE_PREFIX">
            <summary>
            Prefix of AB test cookie names.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="testName">Name of the test for which the user's state is managed</param>
            <exception cref="T:System.ArgumentException">testName is null or empty</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.SetVisit">
            <summary>
            Sets a AB test visit for current user so that from now on, conversions can be logged also as AB test session conversions.
            </summary>
            <returns>True if visit was assigned successfully (wasn't already assigned). False if a visit is already set.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.IsABVisit">
            <summary>
            Returns true if user has visited AB test page and has visit session.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.GetUsersTests">
            <summary>
            Gets names of the current user's AB tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.GetVariantName">
            <summary>
            Gets name of the AB variant assigned to the current user. Returns null, if the user hasn't got any variant assigned yet.
            </summary>
            <returns>Code name of the variant that is assigned to the current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.AssignVariant(System.String)">
            <summary>
            Assigns an AB variant to current user so that it can be used on next visit. From now on, permanent conversions can be also saved to
            user's state.
            </summary>
            <param name="variantName">Name of the variant to assign current user to</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.Exclude">
            <summary>
            Excludes visitor from AB test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.GetPermanentConversions">
            <summary>
            Gets permanent conversions that are done by current user.
            </summary>
            <returns>Permanent conversions that are done by current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.GetSessionConversions">
            <summary>
            Gets session conversions that are done by current user.
            </summary>
            <returns>Session conversions that are done by current user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.AddConversion(System.String)">
            <summary>
            Adds a conversion to session and permanent conversions if possible.
            </summary>
            <param name="conversion">Conversion to add to current user</param>
            <exception cref="T:System.ArgumentException">conversion is null or empty</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.IsABTestCookieDefined">
            <summary>
            Returns true when A/B test cookie is defined.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.TryAddPermanentConversion(System.String)">
            <summary>
            Adds specified conversion to permanent cookie.
            </summary>
            <param name="conversion">Conversion name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.TryAddSessionConversion(System.String)">
            <summary>
            Adds specified conversion to session cookie.
            </summary>
            <param name="conversion">Conversion name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.GetCookieValue(System.String)">
            <summary>
            Returns deserialized value of specified cookie.
            </summary>
            <param name="cookieName">Cookie name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABUserStateManager.SetCookie(System.String,CMS.OnlineMarketing.ABCookieValue,System.DateTime)">
            <summary>
            Serializes object to a cookie as a JSON object.
            </summary>
            <param name="cookieName">Name of the cookie to save object to</param>
            <param name="cookieValue">Object to serialize to the cookie</param>
            <param name="expiration">Expiration of the cookie</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ABUserStateManager.CookieValue">
            <summary>
            Gets or sets cached cookie value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABUserStateManager.IsExcluded">
            <summary>
            Indicates whether is visitor included in AB test or not.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABCookieValue">
            <summary>
            Class representing deserialized permanent AB cookie value.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABCookieValue.#ctor">
            <summary>
            Constructor. Sets properties to empty values.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABCookieValue.VariantName">
            <summary>
            AB variant name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABCookieValue.ExcludedFromTest">
            <summary>
            Indicates whether is visitor included in AB test or not.
            If not, Control is always shown and no AB conversions and AB visits are logged.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABCookieValue.Conversions">
            <summary>
            Conversions performed during this test.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestInfo">
            <summary>
            ABTestInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.#ctor">
            <summary>
            Constructor - Creates an empty ABTestInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ABTestInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.RemoveObjectDependencies(System.Boolean,System.Boolean)">
            <summary>
            Removes dependencies from the specified AB test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the AB Test object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestGUID">
            <summary>
            Unique test identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestName">
            <summary>
            Test name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestDisplayName">
            <summary>
            Test display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestOpenTo">
            <summary>
            End date for test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestOpenFrom">
            <summary>
            Start date for test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestConversions">
            <summary>
            Test conversions. Only those conversions that are assigned to the test will be shown on overview tab.
            If none conversions are set, all conversions will be visible.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestCulture">
            <summary>
            Test culture.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestID">
            <summary>
            Test ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestSiteID">
            <summary>
            Site ID of test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestWinnerGUID">
            <summary>
            Test winner GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestOriginalPage">
            <summary>
            Original page for test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestLastModified">
            <summary>
            Last modification of test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestDescription">
            <summary>
            Test description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestIncludedTraffic">
            <summary>
            Indicates what percentage of visitors will be included in AB test.
            This condition is resolved after segmentation macro.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABTestInfo.ABTestVisitorTargeting">
            <summary>
            Segmentation macro which decides whether visitor will be included in ab test or not.
            This condition is resolved before traffic condition.
            Available objects are Contact, User and Visitor. 
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestInfoProvider">
            <summary>
            Class providing ABTestInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.ABTestingEnabled(System.String)">
            <summary>
            Returns true if AB testing is enabled.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.ContainsVariants(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Determines whether the specified AB test contains variants.
            </summary>
            <param name="abTest">The AB test</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfo(System.Int32)">
            <summary>
            Returns AB test with specified ID.
            </summary>
            <param name="abTestId">AB test ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfo(System.String,System.String)">
            <summary>
            Returns AB test with specified name.
            </summary>
            <param name="abTestName">AB test name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTests">
            <summary>
            Returns query of all AB tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.SetABTestInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Sets (updates or inserts) specified AB test.
            </summary>
            <param name="abTestObj">AB test to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.DeleteABTestInfo(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Deletes specified AB test.
            </summary>
            <param name="abTestObj">AB test to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.DeleteABTestInfo(System.Int32)">
            <summary>
            Deletes AB test with specified ID.
            </summary>
            <param name="abTestId">AB test ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestID(System.String,System.String)">
            <summary>
            Returns ID of the specified test.
            </summary>
            <param name="siteName">Site name</param>
            <param name="abTestName">Test name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfoInternal(System.Int32)">
            <summary>
            Returns AB test with specified ID.
            </summary>
            <param name="abTestId">AB test ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestInfoInternal(System.String,System.String)">
            <summary>
            Returns AB test with specified name.
            </summary>
            <param name="abTestName">AB test name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestsInternal">
            <summary>
            Returns query of all AB tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.SetABTestInfoInternal(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Sets (updates or inserts) specified AB test.
            </summary>
            <param name="abTestObj">AB test to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.DeleteABTestInfoInternal(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Deletes specified AB test.
            </summary>
            <param name="abTestObj">AB test to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.GetABTestIDInternal(System.String,System.String)">
            <summary>
            Returns ID of the specified test.
            </summary>
            <param name="siteName">Site name</param>
            <param name="abTestName">Test name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.RenameStatistics(System.String,System.String,System.Int32)">
            <summary>
            Renames AB test statistics data when code name changes.
            </summary>
            <param name="oldName">Old code name</param>
            <param name="newName">New code name</param>
            <param name="siteID">Test site ID </param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestInfoProvider.HandleCodeNameChange(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks for code name change and renames statistics if so.
            </summary>
            <param name="abTestObj">AB Test</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestStatusEvaluator">
            <summary>
            Evaluates status of an AB test based on its start and finish dates and times.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.ABTestIsRunning(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Checks whether the AB test is running.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.GetStatus(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Gets status of the AB test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestStatusEvaluator.GetFormattedStatus(CMS.OnlineMarketing.ABTestStatusEnum)">
            <summary>
            Gets formatted status of the AB test.
            </summary>
            <param name="status">AB test status</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestStatusEnum">
            <summary>
            AB test status enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.Running">
            <summary>
            Running status - test is running.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.Scheduled">
            <summary>
            Scheduled status - test is scheduled to be started.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.NotStarted">
            <summary>
            NotStarted status - test hasn't been started yet.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABTestStatusEnum.Finished">
            <summary>
            Finished status - test has finished.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantColorAssigner">
            <summary>
            Class assigning (graph) colors to AB variants. Is used to generate custom (and cached) colors to Reporting module (see control <see cref="T:CMS.Reporting.ReportGraph"/>), so 
            colors of AB testing graphs are not different throughout CMS.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantColorAssigner.Palette">
            <summary>
            Palette from which to assign colors to a variant.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantColorAssigner.AssignedColors">
            <summary>
            Cached colors assigned to variants of all tests.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.GetColors(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns cached colors for AB variants that belong to given test.
            </summary>
            <param name="test">AB test to get cached colors for</param>
            <returns>Dictionary of cached colors</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="test"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.RemoveTest(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Tries to remove AB test from cache.
            </summary>
            <param name="test">AB test to remove</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="test"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.RemoveVariant(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Tries to remove AB variant from cache. 
            </summary>
            <param name="variant">AB variant to remove</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="variant"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.GetVariantColor(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Gets cached variant color.
            </summary>
            <param name="variant">Variant to get color for</param>
            <returns>Cached variant color</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantColorAssigner.FindLeastUsedColor(System.Collections.Concurrent.ConcurrentDictionary{System.Int32,System.Drawing.Color})">
            <summary>
            Finds the least used color in given test dictionary. If there is an ambiguity, returns the first from internal palette.
            </summary>
            <param name="assignedColors">AB Test dictionary of colors to search for the least used</param>
            <returns>Color that is least used</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantInfo">
            <summary>
            ABVariantInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfo.#ctor">
            <summary>
            Constructor - Creates an empty ABVariantInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ABVariantInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantPath">
            <summary>
            Variant path.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantLastModified">
            <summary>
            Last modification of variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantTestID">
            <summary>
            Variant's test ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantName">
            <summary>
            Variant code name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantDisplayName">
            <summary>
            Variant display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantID">
            <summary>
            Variant ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantGUID">
            <summary>
            Variant GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfo.ABVariantSiteID">
            <summary>
            Site ID of test variant.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantInfoProvider">
            <summary>
            Class providing ABVariantInfo management.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfoProvider.mVariantsById">
            <summary>
            Variants indexed by ABVariantID.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfoProvider.mVariantsByNameSiteTest">
            <summary>
            Variants indexed by key in format [ABVariantName]_[ABVariantSiteID]_[ABVariantTestID].
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariantsForTest(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns variants for AB test.
            </summary>
            <param name="abTest">AB test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.IsABVariantValid(System.String,System.String,System.String)">
            <summary>
            Checks whether AB variant is assigned to the specified AB test and AB test is running. 
            </summary>
            <param name="abTestName">AB test name</param>
            <param name="abVariantName">AB variant name</param>
            <param name="siteName">Site name</param>
            <returns>Returns true if variant is valid</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfo(System.Int32)">
            <summary>
            Returns AB variant with specified ID.
            </summary>
            <param name="variantId">Variant ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfo(System.String,System.String,System.String)">
            <summary>
            Returns cached AB variant with specified name.
            </summary>
            <param name="variantName">Variant name</param>     
            <param name="abTestName">AB test name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariants">
            <summary>
            Returns a query for all the AB variants.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.SetABVariantInfo(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Sets (updates or inserts) specified Variant.
            </summary>
            <param name="variantObj">Variant to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.DeleteABVariantInfo(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Deletes specified Variant.
            </summary>
            <param name="variantObj">Variant to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.DeleteABVariantInfo(System.Int32)">
            <summary>
            Deletes Variant with specified ID.
            </summary>
            <param name="variantId">Variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtables.
            </summary>
            <param name="logTasks">If true, the clear tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariantsWithMissingTranslations(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Returns list of variants which do not have translations into all cultures for multi-cultural test or specific translation for single culture test.
            Returns empty list if no variants were found.
            </summary>
            <exception cref="T:System.ArgumentNullException">abTest is null</exception>
            <param name="abTest">AB Test</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfoInternal(System.Int32)">
            <summary>
            Returns Variant with specified ID.
            </summary>
            <param name="variantId">Variant ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfoInternal(System.String,System.String,System.String)">
            <summary>
            Returns cached variant with specified name.
            </summary>
            <param name="variantName">Variant name</param>                
            <param name="siteName">Site name</param>  
            <param name="abTestName">AB test name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetABVariantInfoFromDBInternal(System.String,System.String,System.String)">
            <summary>
            Returns Variant with specified name from database.
            </summary>
            <param name="abTestName">ABTest name</param>
            <param name="variantName">Variant name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariantsInternal">
            <summary>
            Returns a query for all the variants.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.SetABVariantInfoInternal(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Sets (updates or inserts) specified Variant.
            </summary>
            <param name="variantObj">Variant to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.DeleteABVariantInfoInternal(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Deletes specified Variant.
            </summary>
            <param name="variantObj">Variant to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.GetVariantsForTestInternal(CMS.OnlineMarketing.ABTestInfo)">
            <summary>
            Get variants for test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.LoadVariants">
            <summary>
            Loads Variants into hashtables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.RemoveInvalidCacheRecords(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Removes invalid cache records. 
            This happens when code name changes.
            </summary>
            <param name="variantObj">AB Variant</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.CheckUniqueDisplayName(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Checks whether the object has unique display name.
            </summary>
            <param name="variant">AB variant</param>
            <exception cref="T:CMS.DataEngine.InfoObjectException">Display name is not unique</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.RenameABVariantStatistics(System.String,System.String,System.Int32,System.String)">
            <summary>
            Renames AB variant statistics data when code name changes.
            </summary>
            <param name="oldName">Old code name</param>
            <param name="newName">New code name</param>
            <param name="siteID">Test site ID </param>
            <param name="abTestName">ABTest name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantInfoProvider.HandleCodeNameChange(CMS.OnlineMarketing.ABVariantInfo)">
            <summary>
            Checks for code name change and renames statistics if so.
            </summary>
            <param name="variantObj">AB Variant</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfoProvider.VariantsById">
            <summary>
            Variants indexed by ABVariantID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABVariantInfoProvider.VariantsByNameSiteTest">
            <summary>
            Variants indexed by key in format [ABVariantName]_[ABVariantSiteID]_[ABVariantTestID].
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RecalculateAfterContactActionEventArgs">
            <summary>
            Arguments for event fired when score is recalculated for one contact after contact's action (activity, property change, merge or split).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RecalculateAfterContactActionEventArgs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RecalculateAfterContactActionEventArgs.Contact">
            <summary>
            Gets or sets contact whose score is being recalculated.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RecalculateAfterContactActionEventArgs.CustomArguments">
            <summary>
            Container for custom arguments which can be used by event subscribers.
            </summary>
            <remarks>Is never null</remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.RecalculateAfterContactActionHandler">
            <summary>
            Handler for event fired when score is recalculated for one contact after contact's action (activity, property change, merge or split).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RecalculateAfterContactActionHandler.StartEvent(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Initiates event handling.
            </summary>
            <param name="contact">Contact whose score is being recalculated</param>
            <returns>Handler</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.RecalculateScoreForAllContactsHandler">
            <summary>
            Handler for the event fired when points for all contacts for given score are being recalculated.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RecalculateScoreForAllContactsHandler.StartEvent(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Initiates event handling.
            </summary>
            <param name="recalcuatedScore">Score which is being recalculated</param>
            <returns>Event handler</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreEventArgs">
            <summary>
            Event arguments for events where only information about score is needed.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreEventArgs.Score">
            <summary>
            Score (its meaning depends on which Handler fired the event with this event argument).
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreAsyncRecalculator">
            <summary>
            Recalculates score for ID given in constructor. Recalculation is performed in another thread.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreAsyncRecalculator.#ctor(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.OnlineMarketing.ScoreAsyncRecalculator"/> class.
            </summary>
            <param name="score">Score to be evaluated</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="score"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreAsyncRecalculator.RunAsync">
            <summary>
            Executes asynchronous recalculation of score.
            </summary>
            <returns>Recalculation task.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreAsyncRecalculator.Run">
            <summary>
            Recalculates score for scoreID passed within closure.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreNotificationsSender">
            <summary>
            This class sends notifications about contact exceeding score limit.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreNotificationsSender.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="siteId">Site where score recalculations happen</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreNotificationsSender.SendNotification(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ScoreInfo,System.Int32)">
            <summary>
            Sends notification about <paramref name="contact"/> reaching score limit in <paramref name="score"/>. Email template with code name "scoring.notification" is used.
            </summary>
            <remarks>
            Notification isn't send if email template with code name "scoring.notification" does not exist or <paramref name="score"/> does not have notification email set.
            </remarks>
            <param name="contact">Contact who reached score limit</param>
            <param name="score">ScoreInfo notification is about</param>
            <param name="scoreValue">Number of points <paramref name="contact"/> reached in <paramref name="score"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="contact"/> or <paramref name="score"/> is null</exception>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreNotificationsSender.ScoreNotificationEmailTemplate">
            <summary>
            Template for scoring email notifications.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityRuleTypeCalculator">
            <summary>
            Defines methods, which are able to recalculate score points for a score rules based on activities.
            </summary>
            <remarks>
            Before calling any of the methods in this interface, ensure that previously saved score points which can be overwritten are cleared via
            <see cref="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.DeleteScoreContactRule(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})"/> method.
            </remarks>
        </member>
        <member name="T:CMS.OnlineMarketing.IRuleTypeCalculator">
            <summary>
            Defines methods, which are able to recalculate score points for a certain rule type.
            </summary>
            <remarks>
            Before calling any of the methods in this interface, ensure that previously saved score points which can be overwritten are cleared 
            via <see cref="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.DeleteScoreContactRule(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})"/>. Please use <see cref="T:CMS.OnlineMarketing.RuleTypeCalculatorFactory"/> class to obtain instances implementing this interface.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.IRuleTypeCalculator.CalculateContact(CMS.OnlineMarketing.RuleInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Recalculates points for one contact for one specific rule.
            </summary>
            <remarks>
            Before calling this method, previously saved score points for this rule and contact must be cleared.
            </remarks>
            <param name="rule">Points for this rule will be recalculated</param>
            <param name="contact">Points for this contact will be recalculated</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IRuleTypeCalculator.CalculateContacts(CMS.OnlineMarketing.RuleInfo,System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Recalculates points for a set of contacts for one specific rule.
            </summary>
            <remarks>
            Before calling this method, previously saved score points for this rule and contacts must be cleared.
            </remarks>
            <param name="rule">Points for this rule will be recalculated</param>
            <param name="contactIDs">Points for contacts identified by those IDs will be recalculated</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IRuleTypeCalculator.CalculateAllContacts(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Recalculates points for all contacts for one specified rule.
            </summary>
            <remarks>
            Before calling this method, previously saved score points for this rule must be cleared.
            </remarks>
            <param name="rule">Points for this rule will be recalculated</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityRuleTypeCalculator.CalculateContact(CMS.OnlineMarketing.RuleInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Recalculates points for one contact for one specific rule.
            </summary>
            <remarks>
            Before calling this method, previously saved score points for this rule and contact must be cleared.
            </remarks>
            <param name="rule">Points for this rule will be recalculated</param>
            <param name="contact">Points for this contact will be recalculated</param>
            <exception cref="T:System.ArgumentException"><paramref name="rule"/> is of type not supported by this instance</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="rule"/> or <paramref name="contact"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityRuleTypeCalculator.CalculateContacts(CMS.OnlineMarketing.RuleInfo,System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Recalculates points for a set of contacts for one specific rule.
            </summary>
            <remarks>
            Before calling this method, previously saved score points for this rule and contacts must be cleared.
            </remarks>
            <param name="rule">Points for this rule will be recalculated</param>
            <param name="contactIDs">Points for contacts identified by those IDs will be recalculated</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityRuleTypeCalculator.CalculateAllContacts(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Recalculates points for all contacts for one specified rule.
            </summary>
            <remarks>
            Before calling this method, previously saved score points for this rule must be cleared.
            </remarks>
            <param name="rule">Points for this rule will be recalculated</param>
            <exception cref="T:System.ArgumentException"><paramref name="rule"/> is of type not supported by this instance</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="rule"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityRuleTypeCalculator.CheckRuleValidity(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Checks if validity in time for this rule is valid. I.e. if rule should be even recalculated.
            </summary>
            <param name="rule">Rule to check</param>
            <returns>True if rule is ok and score should be recalculated, false otherwise</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.AttributeRuleTypeCalculator">
            <summary>
            Defines methods, which are able to recalculate score points for a score rules based on attributes.
            </summary>
            <remarks>
            Before calling any of the methods in this interface, ensure that previously saved score points which can be overwritten are cleared via
            <see cref="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.DeleteScoreContactRule(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})"/> method.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.AttributeRuleTypeCalculator.CalculateContact(CMS.OnlineMarketing.RuleInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Recalculates points for one contact for one specific rule.
            </summary>
            <remarks>
            Before calling this method, previously saved score points for this rule and contact must be cleared.
            </remarks>
            <param name="rule">Points for this rule will be recalculated</param>
            <param name="contact">Points for this contact will be recalculated</param>
            <exception cref="T:System.ArgumentException"><paramref name="rule"/> is of type not supported by this instance</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="rule"/> or <paramref name="contact"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.AttributeRuleTypeCalculator.CalculateContacts(CMS.OnlineMarketing.RuleInfo,System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Recalculates points for a set of contacts for one specific rule.
            </summary>
            <remarks>
            Before calling this method, previously saved score points for this rule and contacts must be cleared.
            </remarks>
            <param name="rule">Points for this rule will be recalculated</param>
            <param name="contactIDs">Points for contacts identified by those IDs will be recalculated</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AttributeRuleTypeCalculator.CalculateAllContacts(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Recalculates points for all contacts for one specified rule.
            </summary>
            <remarks>
            Before calling this method, previously saved score points for this rule must be cleared.
            </remarks>
            <param name="rule">Points for this rule will be recalculated</param>
            <exception cref="T:System.ArgumentException"><paramref name="rule"/> is of type not supported by this instance</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="rule"/> is null</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.MacroRuleTypeCalculator">
            <summary>
            Defines methods, which are able to recalculate score points for a score rules based on macros.
            </summary>
            <remarks>
            Before calling any of the methods in this interface, ensure that previously saved score points which can be overwritten are cleared via
            <see cref="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.DeleteScoreContactRule(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})"/> method.
            </remarks>
        </member>
        <member name="F:CMS.OnlineMarketing.MacroRuleTypeCalculator.PAGE_SIZE">
            <summary>
            Size of page used when recalculating multiple contacts.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTypeCalculator.CalculateContact(CMS.OnlineMarketing.RuleInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Recalculates points for one contact for one rule based on macro.
            </summary>
            <remarks>
            Before calling this method, previously saved score points for this rule and contact must be cleared.
            </remarks>
            <param name="rule">Points for this rule will be recalculated</param>
            <param name="contact">Points for this contact will be recalculated</param>
            <exception cref="T:System.ArgumentException"><paramref name="rule"/> is of type not supported by this instance</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="rule"/> or <paramref name="contact"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTypeCalculator.CalculateContacts(CMS.OnlineMarketing.RuleInfo,System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Recalculates points for a set of contacts for one specific rule.
            </summary>
            <remarks>
            Before calling this method, previously saved score points for this rule and contacts must be cleared.
            </remarks>
            <param name="rule">Points for this rule will be recalculated</param>
            <param name="contactIDs">Points for contacts identified by those IDs will be recalculated</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTypeCalculator.CalculateAllContacts(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Recalculates points for all contacts for one specified rule based on macro.
            </summary>
            <remarks>
            Before calling this method, previously saved score points for this rule must be cleared.
            
            Paginates contacts by <see cref="F:CMS.OnlineMarketing.MacroRuleTypeCalculator.PAGE_SIZE"/> and executes recalculation routine for every page.
            </remarks>
            <param name="rule">Points for this rule will be recalculated</param>
            <exception cref="T:System.ArgumentException"><paramref name="rule"/> is of type not supported by this instance</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="rule"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTypeCalculator.Recalculate(CMS.OnlineMarketing.RuleInfo,System.Collections.Generic.IEnumerable{CMS.OnlineMarketing.ContactInfo})">
            <summary>
            Recalculates macro rule for specified contacts.
            </summary>
            <param name="rule">Rule to be recalculated</param>
            <param name="contacts">Those contact's score points will be recalculated</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MacroRuleTypeCalculator.IsSqlConstraintException(System.Exception)">
            <summary>
            Returns true if exception is sql constraint exception.
            SqlException number for this type of error is 547, for more details go to <a href="http://msdn.microsoft.com/en-us/library/cc645603.aspx">http://msdn.microsoft.com/en-us/library/cc645603.aspx</a>.
            </summary>
            <param name="exception">Exception to check for constraint error</param>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleTypeCalculatorFactory">
            <summary>
            Factory class for IRuleTypeCalculator.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleTypeCalculatorFactory.GetRuleCalculator(CMS.OnlineMarketing.RuleTypeEnum)">
            <summary>
            Creates rule calculator which is able to recalculate rules of the given type.
            </summary>
            <param name="ruleType">Created calculator will be able to recalculate points of rules of this types</param>
            <returns>Created rule calculator</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ABConversionRateInterval">
            <summary>
            Class encapsulating conversion rate interval data.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateInterval.#ctor(System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="conversionRateLowerBound">Conversion rate lower bound. Argument must be larger than 0 and lower than 1.</param>
            <param name="conversionRateUpperBound">Conversion rate upper bound. Argument must be larger than 0 and lower than 1.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABConversionRateInterval.ToString">
            <summary>
            Returns formatted interval as X % +- Y %.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABConversionRateInterval.ConversionRateLowerBound">
            <summary>
            Returns lower bound of the conversion rate interval.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABConversionRateInterval.ConversionRateUpperBound">
            <summary>
            Returns upper bound of the conversion rate interval.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABConversionRateInterval.Rate">
            <summary>
            Returns conversions rate.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ABConversionRateInterval.EstimatedConversionRateVariance">
            <summary>
            Returns estimated conversion rate variance.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABVariantPerformanceCalculator">
            <summary>
            Class calculating conversion rate interval and challengers' chance to beat original using the Normal Distribution Function at 90% significance.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.IABVariantPerformanceCalculator">
            <summary>
            Interface for calculating performance of AB variants.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IABVariantPerformanceCalculator.Initialize(System.Int32,System.Int32)">
            <summary>
            Initializes AB variant performance calculator.
            Needs to be called first, as this class needs the original's conversions and visits to work properly.
            </summary>
            <param name="originalConversions">Number of original conversions</param>
            <param name="originalVisits">Number of original visits</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IABVariantPerformanceCalculator.GetChanceToBeatOriginal(System.Int32,System.Int32)">
            <summary>
            Returns chance to beat original for the specified challenger variant.
            </summary>
            <param name="challengerConversions">Number of challenger conversions</param>
            <param name="challengerVisits">Number of challenger visits</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IABVariantPerformanceCalculator.GetConversionRateInterval(System.Int32,System.Int32)">
            <summary>
            Returns conversion rate interval for the specified variant.
            </summary>
            <param name="variantConversions">Number of conversions</param>
            <param name="variantVisits">Number of visits</param>
        </member>
        <member name="F:CMS.OnlineMarketing.ABVariantPerformanceCalculator.SIGNIFICANCE">
            <summary>
            Represents 80% significance.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantPerformanceCalculator.Initialize(System.Int32,System.Int32)">
            <summary>
            Initializes ABVariantPerformanceCalculator.
            Needs to be called first, as this class needs the original's conversions and visits to work properly.
            </summary>
            <param name="originalConversions">Number of original conversions</param>
            <param name="originalVisits">Number of original visits</param>
            <exception cref="T:System.ArgumentException"><paramref name="originalConversions"/> is negative or <paramref name="originalVisits"/> is zero or negative</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantPerformanceCalculator.GetChanceToBeatOriginal(System.Int32,System.Int32)">
            <summary>
            Returns challenging variant's chance to beat original.
            </summary>
            <param name="challengerConversions">Number of challenger conversions</param>
            <param name="challengerVisits">Number of challenger visits</param>
            <exception cref="T:System.InvalidOperationException">ABVariantPerformanceCalculator hasn't been initialized. Call Initialize method first.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="challengerConversions"/> is negative or <paramref name="challengerVisits"/> is zero or negative</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantPerformanceCalculator.GetConversionRateInterval(System.Int32,System.Int32)">
            <summary>
            Returns AB conversion rate interval for specified variant.
            </summary>
            <param name="variantConversions">Number of variant conversions</param>
            <param name="variantVisits">Number of variant visits</param>
            <exception cref="T:System.InvalidOperationException">ABVariantPerformanceCalculator hasn't been initialized. Call Initialize method first.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="variantConversions"/> is negative or <paramref name="variantVisits"/> is zero or negative</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantPerformanceCalculator.GetVariantZScore(System.Double,System.Double)">
            <summary>
            Returns Z-score for specified challenger's data compared to the original.
            </summary>
            <param name="variantConversionRate">Variant conversion rate</param>
            <param name="variantStandardError">Variant standard error</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantPerformanceCalculator.GetConversionRate(System.Int32,System.Int32)">
            <summary>
            Returns conversion rate for specified variant's data.
            </summary>
            <param name="conversions">Number of conversions</param>
            <param name="visits">Number of visits</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ABVariantPerformanceCalculator.GetStandardError(System.Double,System.Int32)">
            <summary>
            Returns standard error for specified variant's data.
            </summary>
            <param name="conversionRate">Conversion rate</param>
            <param name="visits">Number of visits</param>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleMacroItem">
            <summary>
            Represents macro rule definition.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleItem">
            <summary>
            RuleItem class.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleItem.Clone">
            <summary>
            Clones current object and returns copy of it.
            </summary>
            <returns>Returns clone of either RuleAttributeInfo or RuleActivityInfo depending on current object</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleItem.GetXmlNode(System.Xml.XmlDocument)">
            <summary>
            Returns XML representation of current object.
            </summary>
            <param name="doc">XML document with other items</param>
            <returns>Returns XmlNode</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleMacroItem.#ctor(System.String)">
            <summary>
            Constructor, initializes the macro field to given string value.
            </summary>
            <param name="macroValue">Value of macro rule</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleMacroItem.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor, initializes the macro field info instance from the given XML node.
            </summary>
            <param name="fieldNode">XML node with the field data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleMacroItem.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>Cloned RuleMacroInfo</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleMacroItem.GetXmlNode(System.Xml.XmlDocument)">
            <summary>
            Returns the XML node representing the macro condition.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleMacroItem.MacroValue">
            <summary>
            Value of macro condition.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CachedRulesManager">
            <summary>
            Loads rules that are eligible for recalculation from cache. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedRulesManager.GetAttributeRulesCached(System.String,System.Int32)">
            <summary>
            Returns cached attribute RuleInfo objects based on attribute name.
            </summary>
            <param name="attributeName">Name of the attribute which rules correspond to</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedRulesManager.GetActivityRulesCached(System.String,System.Int32)">
            <summary>
            Returns cached activity RuleInfo objects based on activity type name.
            </summary>
            <param name="activityTypeName">Name of the activity type name which rules correspond to</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedRulesManager.GetMacroRulesCached(System.Int32)">
            <summary>
            Returns cached macro RuleInfo objects.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedRulesManager.GetEnabledRules">
            <summary>
            Returns cached RuleInfos types belonging to enabled Scores on all sites.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CachedRulesManager.GetCacheDependency">
            <summary>
            Gets <see cref="T:CMS.Helpers.CMSCacheDependency"/> for score/persona rules, so that any change to score or rule will drop the cache.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleRecalculator">
            <summary>
            This class performs tasks which are required to be done when recalculating score points for single rules. Those tasks include
            clearing cache after recalculation or calling right calculator (based on rule type). Calculation itself is handled by classes implementing
            <see cref="T:CMS.OnlineMarketing.IRuleTypeCalculator"/> interface.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleRecalculator.#ctor(CMS.OnlineMarketing.IRuleTypeCalculatorFactory)">
            <summary>
            Constructor.
            </summary>
            <param name="ruleTypeCalculatorFactory">Factory constructing calculators for needed rule types</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="ruleTypeCalculatorFactory"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleRecalculator.RecalculateRuleForAllContacts(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Recalculates score points for all contacts and one specified rule.
            </summary>
            <param name="rule">Score points for this rule will be recalculated</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="rule"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleRecalculator.RecalculateRuleForContacts(CMS.OnlineMarketing.RuleInfo,System.Collections.Generic.ISet{System.Int32})">
            <summary>
            Recalculates score points for a set of contacts and one specified rule.
            </summary>
            <param name="rule">Score points for this rule will be recalculated</param>
            <param name="contactIDs">ContactIDs whose points will be recalculated</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="rule"/> is null</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactIDs"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleRecalculator.RecalculateRuleForContact(CMS.OnlineMarketing.RuleInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Recalculates score points for one specified rule and one contact.
            </summary>
            <param name="rule">Score points for this rule will be recalculated</param>
            <param name="contact">Score points for this rule will be recalculated</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="rule"/> or <paramref name="contact"/> is null</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreRecalculator">
            <summary>
            Recalculates more than one scoring rule (for example all rules for one contact or all rules after contact performed activity). If you want to recalculate one rule only, use <see cref="T:CMS.OnlineMarketing.RuleRecalculator"/>. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreRecalculator.#ctor(CMS.OnlineMarketing.IRuleRecalculator,CMS.OnlineMarketing.ICachedRulesManager,CMS.OnlineMarketing.IRuleWithContactActionsMatchersFactory)">
            <summary>
            Constructor.
            </summary>
            <param name="ruleRecalculator">Class handling recalculation of individual rules</param>
            <param name="cachedRulesManager">Cached macro rules</param>
            <param name="ruleMatchersFactory">Factory for producing rule matchers</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreRecalculator.RecalculateScoreRulesForAllContacts(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Recalculates score points for all rules in one score for all contact.
            </summary>
            <param name="score">Points for this score will be recalculated</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="score"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreRecalculator.RecalculateScoreRulesAfterContactActionsBatch(System.Collections.Generic.IList{CMS.OnlineMarketing.ActivityInfo},System.Collections.Generic.IList{CMS.OnlineMarketing.ContactChangeData})">
            <summary>
            Recalculates scoring rules for contacts who performed some action. Recalculates only scoring rules which could have been affected by performed activities.
            Recalculation is made in batches, so only one operation is made for one scoring rule.
            </summary>
            <param name="processedActivities">Activities performed by contacts</param>
            <param name="contactChanges">Changes of contacts properties</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreRecalculator.GetRulesWithAffectedContacts(System.Collections.Generic.IList{CMS.OnlineMarketing.ActivityInfo},System.Collections.Generic.IList{CMS.OnlineMarketing.ContactChangeData})">
            <summary>
            Calculates the pair of scoring rule and contacts whose score points in the rule could have been affected by performed actions.
            </summary>
            <param name="processedActivities">Activities performed by contacts</param>
            <param name="contactChanges">Changes applied to contacts</param>
            <returns>Scoring rules and contacts who could be affected by them</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.AllContactsScoreNotificationsChecker">
            <summary>
            This class handles sending notification emails for contacts who exceeded score limit after recalculating score points for the whole ScoreInfo.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AllContactsScoreNotificationsChecker.SendAllNotifications(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Sends notification emails to address specified in the ScoreInfo for contacts who exceeded score limit.
            </summary>
            <param name="score">Score info object</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="score"/> is null</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreContactRuleInfo">
            <summary>
            Info object for binding score - contact - rule.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreContactRuleInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreContactRuleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfo.#ctor">
            <summary>
            Constructor - Creates an empty ScoreContactRuleInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ScoreContactRuleInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreContactRuleInfo.ScoreID">
            <summary>
            ScoreInfo ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreContactRuleInfo.ContactID">
            <summary>
            ContactInfo ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreContactRuleInfo.RuleID">
            <summary>
            RuleInfo ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreContactRuleInfo.Value">
            <summary>
            Total value of score gained (value of a rule can be recurring and can be limited).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreContactRuleInfo.Expiration">
            <summary>
            Expiration gets refreshed each time that value is increased.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreContactRuleInfo.ScoreContactRuleID">
            <summary>
            ScoreContactRule ID.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreContactRuleInfoProvider">
            <summary>
            Class providing ScoreContactRuleInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.GetScoreContactRules">
            <summary>
            Returns a query for all the ScoreContactRuleInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.GetScoreContactRuleInfo(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns ScoreContactRuleInfo with specified IDs.
            </summary>
            <param name="scoreId">Score ID</param>
            <param name="contactId">Contact ID</param>
            <param name="ruleId">Rule ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.SetScoreContactRuleInfo(CMS.OnlineMarketing.ScoreContactRuleInfo)">
            <summary>
            Sets (updates or inserts) specified ScoreContactRuleInfo.
            </summary>
            <param name="infoObj">ScoreContactRuleInfo to be set.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.DeleteScoreContactRuleInfo(CMS.OnlineMarketing.ScoreContactRuleInfo)">
            <summary>
            Deletes specified ScoreContactRuleInfo.
            </summary>
            <param name="infoObj">ScoreContactRuleInfo to be deleted.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.DeleteScoreContactRuleInfo(System.Int32,System.Int32,System.Int32)">
            <summary>
            Deletes ScoreContactRuleInfo with specified IDs.
            </summary>
            <param name="scoreId">Score ID</param>
            <param name="contactId">Contact ID</param>
            <param name="ruleId">Rule ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.DeleteScoreContactRule(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes score-contact-rule relation.
            </summary>
            <param name="scoreId">Score ID</param>
            <param name="contactId">Contact ID</param>
            <param name="ruleId">Rule ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.DeleteScoreContactRules(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Deletes points for the given contacts and rule.
            </summary>
            <param name="ruleID">Id of the scoring rule. Points for this rule will be cleared</param>
            <param name="contactIDs">Points of this contacts for rule <paramref name="ruleID"/> will be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.GetContactsWithScore(System.Int32)">
            <summary>
            Returns IDs of contacts with score values who gained more than minimum score value.
            </summary>
            <param name="minScoreValue">Minimum score value</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.GetContactsWithScore">
            <summary>
            Returns IDs of contacts with score values.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.GetContactScore(System.Int32,System.Int32)">
            <summary>
            Returns score value of specified contact.
            </summary>
            <param name="scoreId">Score ID</param>
            <param name="contactId">Contact ID</param>
            <returns>Score value of contact</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.RecalculateRuleWithWhereCondition(CMS.OnlineMarketing.RuleInfo,System.Int32)">
            <summary>
            Recalculates rules that are internally specified by where condition (attribute and activity rule types). Contact's points affected by recalculated rule has to be cleared before calling this method.
            </summary>
            <param name="ri">RuleInfo with specified rule</param>
            <param name="contactId">Contacts which will be recalculated. If null, all contacts will be recalculated</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.RecalculateRuleWithWhereCondition(CMS.OnlineMarketing.RuleInfo,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Recalculates rules that are internally specified by where condition (attribute and activity rule types). Contact's points affected by recalculated rule has to be cleared before calling this method.
            </summary>
            <param name="ri">RuleInfo with specified rule</param>
            <param name="contactIDs">Contacts which will be recalculated. If null, all contacts will be recalculated</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.AddScoreContactRules(CMS.OnlineMarketing.RuleInfo,System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Adds score contact rules to the database. All bindings must be cleared before calling this procedure.
            </summary>
            <param name="rule">Rule for which the contacts will get <paramref name="value"/> points.</param>
            <param name="contactIDs">Contacts to whom <paramref name="value"/> points will be added for <paramref name="rule"/> score rule</param>
            <param name="value">Score value that will be set to the contacts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.GetScoreContactRulesInternal">
            <summary>
            Returns a query for all the ScoreContactRuleInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.GetScoreContactRuleInfoInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns ScoreContactRuleInfo with specified IDs.
            </summary>
            <param name="scoreId">Score ID</param>
            <param name="contactId">Contact ID</param>
            <param name="ruleId">Rule ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.SetScoreContactRuleInfoInternal(CMS.OnlineMarketing.ScoreContactRuleInfo)">
            <summary>
            Sets (updates or inserts) specified ScoreContactRuleInfo.
            </summary>
            <param name="infoObj">ScoreContactRuleInfo to be set.</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.DeleteScoreContactRuleInfoInternal(CMS.OnlineMarketing.ScoreContactRuleInfo)">
            <summary>
            Deletes specified ScoreContactRuleInfo.
            </summary>
            <param name="infoObj">ScoreContactRuleInfo to be deleted.</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.DeleteScoreContactRuleInternal(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Deletes score-contact-rule relation.
            </summary>
            <param name="scoreId">Score ID</param>
            <param name="contactId">Contact ID</param>
            <param name="ruleId">Rule ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.GetContactsWithScoreInternal">
            <summary>
            Returns contact IDs, score IDs with their score values.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleInfoProvider.GetContactScoreInternal(System.Int32,System.Int32)">
            <summary>
            Returns score value of specified contact.
            </summary>
            <param name="scoreId">Score ID</param>
            <param name="contactId">Contact ID</param>
            <returns>Score value of contact</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoringEvents">
            <summary>
            Scoring related events.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoringEvents.RecalculateAfterContactAction">
            <summary>
            When contact performs an action which can affect its score, score has to be recalculated. This event is fired when this recalculation happens.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoringEvents.RecalculateScoreForAllContacts">
            <summary>
            Fired when recalculation of points for all contacts for one score is performed (e.g. when manually performing recalculation of rules by hitting the "Recalculate" button).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoringEvents.RecalculateAfterContactActionsBatch">
            <summary>
            Fired when score is recalculated for contacts batch after their actions (activity, property change, merge or split).
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactWithScoreValueCollection">
            <summary>
            Container for scores together with amount of points certain contact reached.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactWithScoreValueCollection.#ctor(System.Collections.Generic.IEnumerable{CMS.OnlineMarketing.ContactWithScoreValue})">
            <summary>
            Constructor.
            </summary>
            <param name="scoreIDsWithPoints">Initial data</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="scoreIDsWithPoints"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactWithScoreValueCollection.RemoveItemsWithScoreId(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Removes items from the collection based on the given list of score IDs.
            </summary>
            <param name="scoreIDs">ScoreIDs used to remove items from the collection</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="scoreIDs"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactWithScoreValueCollection.RelativeComplement(CMS.OnlineMarketing.ContactWithScoreValueCollection)">
            <summary>
            Subtracts subtrahend from the collection.
            </summary>
            <param name="subtrahend">Collection to be subtracted from the current collection</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="subtrahend"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactWithScoreValueCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator of KeyValuePair of int and int where key is ScoreID and value is number of points.
            </returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactWithScoreValueCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An enumerator of KeyValuePair of int and int where key is ScoreID and value is number of points.
            </returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactWithScoreValue">
            <summary>
            Represents number of points contact has in certain score.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactWithScoreValue.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactWithScoreValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactWithScoreValue.ScoreID">
            <summary>
            ID of the score the points belong to.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactWithScoreValue.ScoreValue">
            <summary>
            Number of points contact reached.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactWithScoreValue.ContactID">
            <summary>
            ID of the contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactWithScoreValue.SiteID">
            <summary>
            ID of the site.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoringHandlers">
            <summary>
            Event handlers of the Scoring module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoringHandlers.Init">
            <summary>
            Subscribes to events.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoringHandlers.RecalculateScoresBatch(System.Object,CMS.OnlineMarketing.ProcessContactActionsBatchEventArgs)">
            <summary>
            Recalculates scores after batch of contact activities was processed.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoringHandlers.SaveScoresSnapshotBeforeBatchRecalculation(System.Object,CMS.OnlineMarketing.RecalculateAfterContactActionsBatchEventArgs)">
            <summary>
            Saves current score values before score is recalculated, so email notifications can be send later and corresponding marketing automation triggers can be fired.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments containing collection of affected contacts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoringHandlers.PerformActionsAfterRecalculationToBatchGroup(System.Object,CMS.OnlineMarketing.RecalculateAfterContactActionsBatchEventArgs)">
            <summary>
            Performs actions after score calculation.
            Sends notification emails when contact exceeded points limit (saved by <see cref="M:CMS.OnlineMarketing.ScoringHandlers.SaveScoresSnapshotBeforeBatchRecalculation(System.Object,CMS.OnlineMarketing.RecalculateAfterContactActionsBatchEventArgs)"/> method)
            and processes marketing automation score triggers.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments containing collection of affected contacts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoringHandlers.FireOldRecalculateEvent(System.Object,CMS.OnlineMarketing.RecalculateAfterContactActionsBatchEventArgs)">
            <summary>
            Backward compatibility. Invokes the events which were invoked when scoring was processed, before they were replaced by ScoringEvents.RecalculateAfterContactActionsBatch in version 8.1.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityInfoMethods">
            <summary>
            Online marketing methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoMethods.ActivityLinkedToObject(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns if activity is linked to object of type given in parameter and codename given in second parameter.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.OnlineMarketing.AutomationStateInfoMethods">
            <summary>
            Online marketing methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomationStateInfoMethods.GetLastNewsletterIssue(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns GUID of last newsletter that was sent to the user in scope of given automation state. 
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactInfoMethods">
            <summary>
            Online marketing methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.IsInRoles(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact is in any/all of the specified roles (i.e. if any of the user assigned to the contact is in any/all specified roles).
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.IsInCommunityGroup(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact is in any/all of the specified community groups (i.e. if any of the user assigned to the contact is in any/all specified community groups).
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.LastActivityOfType(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns contact's last activity of specified activity type.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.FirstActivityOfType(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns contact's first activity of specified activity type.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.IsInContactGroup(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns TRUE if the contact is in specified contact group on current site.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.GetScore(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns contact's points in specified score on current site.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.BelongsToAccount(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if contact belongs to specified account.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.DidActivities(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact did any/all of the specified activities.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.DidActivity(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if contact belongs to specified account.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.CameToLandingPage(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if contact came to specified landing page.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.IsFromCountry(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact's country matches one of the specified countries.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.IsFromState(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact's state matches one of the specified countries.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.SearchedForKeywords(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact did search for specified keywords in last X days.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.SpentMoney(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact spent specified amount of money (counted by order total price in main currency) in last X days.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.PurchasedNumberOfProducts(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact purchased specified number of products in last X days.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.VisitedPage(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact visited specified page.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.SubmittedForm(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact submitted specified form.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.OpenedNewsletter(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact opened specified newsletter.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.VotedInPoll(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact voted in the poll.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.LoggedIn(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact logged in.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.SubscribedToNewsletter(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Checks whether contact is subscribed to the given newsletter. Check is made based on the contact's email address. If
            there is a subscriber with the contact's email subscribed to the newsletter, it means contact is subscribed. If subscriber with
            contact's email is not subscribed, contact's activities are checked. If contact has subscription activity, he is subscribed.        
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.RegisteredForEvent(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact registered for specific event.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.ClickedLinkInNewsletter(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact clicked link in specified newsletter.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.ClickedLinkInNewsletterIssue(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact clicked link in the specified newsletter issue.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.OpenedNewsletterIssue(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact opened the specified newsletter issue
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoMethods.PurchasedProduct(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if the contact purchased specified product.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions">
            <summary>
            Online marketing functions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.LastActivityOfType(System.Object,System.Object)">
            <summary>
            Returns contact's last activity of specified activity type.
            </summary>
            <param name="contact">Contact info object</param>
            <param name="activityType">Activity type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.FirstActivityOfType(System.Object,System.Object)">
            <summary>
            Returns contact's first activity of specified activity type.
            </summary>
            <param name="contact">Contact info object</param>
            <param name="activityType">Activity type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.IsInContactGroup(System.Object,System.Object,System.Boolean)">
            <summary>
            Returns TRUE if the contact is in any/all specified contact group(s) on current site.
            </summary>
            <param name="contact">Contact info object</param>
            <param name="contactGroupName">Contact group name(s) separated by semicolon</param>
            <param name="allGroups">If true contact has to be in all specified groups, if false, it is sufficient if the contact is in any of the specified groups.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.GetScore(System.Object,System.Object)">
            <summary>
            Returns contact's points in specified score on current site.
            </summary>
            <param name="contact">Contact info object</param>
            <param name="scoreName">Score name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.GetEmailDomain(System.Object)">
            <summary>
            Returns e-mail domain name.
            </summary>
            <param name="email">E-mail address</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.BelongsToAccount(System.Object,System.Object)">
            <summary>
            Returns true if contact belongs to specified account.
            </summary>
            <param name="contact">Contact info object</param>
            <param name="accountID">Account ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.DidActivities(System.Object,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns true if the contact did any/all of the specified activities.
            </summary>
            <param name="contact">Contact the activities of which should be checked</param>
            <param name="activityTypes">Name of the activity(ies) to check separated with semicolon</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
            <param name="allActivities">If true, all specified types has to be found for the method to return true. If false, at least one of any specified types is sufficient to return true for the method.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.DidActivity(System.Object,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns true if the contact did a specified activity.
            </summary>
            <param name="contact">Contact the activities of which should be checked</param>
            <param name="activityType">Name of the activity to check (can specify more than one separated with semicolon, all of the types match than)</param>
            <param name="cancelActivityType">Name of the activity which cancels the original activity (for example UnsubscribeNewsletter is a canceling event for SubscribeNewsletter etc.)</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
            <param name="whereCondition">Additional WHERE condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.IsFromCountry(System.Object,System.String)">
            <summary>
            Returns true if the contact's country matches one of the specified countries.
            </summary>
            <param name="contact">Contact the activities of which should be checked</param>
            <param name="countryList">Countries list (separated with semicolon)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.IsFromState(System.Object,System.String)">
            <summary>
            Returns true if the contact's country matches one of the specified countries.
            </summary>
            <param name="contact">Contact the activities of which should be checked</param>
            <param name="stateList">State list (separated with semicolon)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.SearchedForKeywords(System.Object,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns true if the contact did search (internal or external) for specified keywords in last X days.
            </summary>
            <param name="contact">Contact the activities of which should be checked</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
            <param name="keywords">Keywords separated with comma or semicolon (if null or empty, than method returns true iff contact did any search in last X days)</param>
            <param name="allKeywords">If true all keywords has to be matched, if false at least one match has to be found</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.SpentMoney(System.Object,System.Double,System.Double,System.Int32)">
            <summary>
            Returns true if the contact spent specified amount of money (counted by order total price in main currency) in last X days.
            </summary>
            <param name="contact">Contact the activities of which should be checked</param>
            <param name="lowerBound">Inclusive lower bound of the amount of money (in main currency) spent by contact</param>
            <param name="upperBound">Inclusive upper bound of the amount of money (in main currency) spent by contact</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.PurchasedNumberOfProducts(System.Object,System.Int32,System.Int32)">
            <summary>
            Returns true if the contact purchased specified number of products in last X days.
            </summary>
            <param name="contact">Contact the activities of which should be checked</param>
            <param name="lowerBound">Inclusive lower bound of the number of products bought</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.IsInRoles(System.Object,System.String,System.Boolean)">
            <summary>
            Returns true if the contact is in any/all of the specified roles (i.e. if any of the user assigned to the contact is in any/all specified roles).
            </summary>
            <param name="contact">Contact which should be checked</param>
            <param name="roleNames">Name of the roles separated with semicolon</param>
            <param name="allRoles">If true, contact has to in all specified roles. If false, it is sufficient if the contact is at least in one of the roles.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.IsInCommunityGroup(System.Object,System.String,System.Boolean)">
            <summary>
            Returns true if the contact is in any/all of the specified community groups (i.e. if any of the user assigned to the contact is in any/all specified community groups).
            </summary>
            <param name="contact">Contact which should be checked</param>
            <param name="groupNames">Name of the groups separated with semicolon</param>
            <param name="allGroups">If true, contact has to in all specified groups. If false, it is sufficient if the contact is at least in one of the groups.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.SubmittedForm(System.Object,System.String,System.Int32)">
            <summary>
            Returns true if the contact submitted specified form.
            </summary>
            <param name="contact">Contact which should be checked</param>
            <param name="formName">Form name</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.OpenedNewsletter(System.Object,System.String,System.Int32)">
            <summary>
            Returns true if the contact opened specified newsletter.
            </summary>
            <param name="contact">Contact which should be checked</param>
            <param name="newsletterName">Newsletter name</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.VotedInPoll(System.Object,System.String,System.String,System.Int32)">
            <summary>
            Returns true if the contact voted in the poll.
            </summary>
            <param name="contact">Contact which should be checked</param>
            <param name="pollName">Poll name</param>
            <param name="answer">Poll answer text</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.LoggedIn(System.Object,System.Int32)">
            <summary>
            Returns true if the contact logged in.
            </summary>
            <param name="contact">Contact which should be checked</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.SubscribedToNewsletter(System.Object,System.String,System.Int32)">
            <summary>
            Checks whether contact is subscribed to the given newsletter. Check is made based on the contact's email address. If
            there is a subscriber with the contact's email subscribed to the newsletter, it means contact is subscribed. If subscriber with
            contact's email is not subscribed, contact's activities are checked. If contact has subscription activity, he is subscribed.
            </summary>
            <param name="contact">Contact whose email should be checked</param>
            <param name="newsletterName">Newsletter name</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.ClickedLinkInNewsletter(System.Object,System.String,System.Int32)">
            <summary>
            Returns true if the contact clicked link in specified newsletter.
            </summary>
            <param name="contact">Contact which should be checked</param>
            <param name="newsletterName">Newsletter name</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.InteractedWithNewsletterIssue(System.Object,System.Guid,System.Boolean,System.Int32)">
            <summary>
            Returns true if the contact clicked link in the specified newsletter issue.
            </summary>
            <param name="contact">Contact that should be checked</param>
            <param name="issueGuid">Newsletter issue GUID</param>
            <param name="click">Indicates whether contact should have clicked the newsletter issue or just open it.</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.PurchasedProduct(System.Object,System.String,System.Int32)">
            <summary>
            Returns true if the contact purchased specified product or its variant.
            </summary>
            <param name="contact">Contact which should be checked</param>
            <param name="skuName">Name or guid of the SKU</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.VisitedPage(System.Object,System.String,System.String,System.Int32)">
            <summary>
            Returns true if the contact visited specified page.
            </summary>
            <param name="contact">Contact which should be checked</param>
            <param name="nodeAliasPath">Page node alias path</param>
            <param name="culture">Culture of the document</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.RegisteredForEvent(System.Object,System.String,System.Int32)">
            <summary>
            Returns true if the contact registered for specific event.
            </summary>
            <param name="contact">Contact which should be checked</param>
            <param name="nodeAliasPath">Node alias path of BookingEvent document</param>
            <param name="lastXDays">Constraint for last X days (if zero or negative value is given, no constraint is applied)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.GetLastNewsletterIssue(CMS.Automation.AutomationStateInfo)">
            <summary>
            Returns last newsletter issue that was sent to the contact of the state.
            </summary>
            <param name="state">Automation state</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.ActivityLinkedToObject(CMS.OnlineMarketing.ActivityInfo,System.String,System.String)">
            <summary>
            Returns if activity is linked to object of type given in parameter and codename given in second parameter.
            </summary>
            <param name="activityInfo">Activity that should be checked</param>
            <param name="objectType">Object type</param>
            <param name="identifier">Code name or GUID of object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.GetObjectID(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns object ID.
            </summary>
            <param name="objectType">Object type of the object</param>
            <param name="guidOrCodeName">Code name or GUID of the object</param>
            <param name="siteID">Site ID</param>
            <param name="allowGlobalObjects">Allow global objects (if site object is not found, global object with given name is retrieved)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationFunctions.GetContactInfo(CMS.Newsletters.SubscriberInfo)">
            <summary>
            Returns contact related with subscriber. If there is no known relation between contact and subscriber, 
            returns contact with the same email. In this case, if there is more contacts with the same email, selects the one with last logged activity.
            </summary>
            <param name="subscriber">Subscriber info</param>
            <returns>Contact info related to subscriber</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when subscriber is null</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingTransformationMethods">
            <summary>
            Online marketing methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingTransformationMethods.GetEmailDomain(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns e-mail domain name.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestModule">
            <summary>
            Represents the A/B tests module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestModule.#ctor">
            <summary>
            Initializes a new instance of the ABTestModule class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ABTestModuleMetadata">
            <summary>
            Represents the A/B tests module metadata.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ABTestModuleMetadata.#ctor">
            <summary>
            Initializes a new instance of the ABTestModuleMetadata class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactManagementHandlers">
            <summary>
            Contact management events handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementHandlers.Init">
            <summary>
            Initializes the events handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementHandlers.FireOldProcessActivityEvents(System.Object,CMS.OnlineMarketing.ProcessContactActionsBatchEventArgs)">
            <summary>
            Backward compatibility. Invokes the events which were invoked when activities were processed, before they were replaced by ContactManagementEvents.ProcessContactActionsBatch in version 8.1.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementHandlers.LogActivityToQueue(System.Object,CMS.WebAnalytics.ActivityLoggedEventArgs)">
            <summary>
            Executes when individual activity is logged
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementHandlers.MergeCurrentContactWithGivenContact(System.Int32)">
            <summary>
            Merges current contact with given contact when current contact does not have email address filled.
            We don't want to impersonate when email was forwarded to known contact.
            </summary>
            <param name="contactId">Contact Id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementHandlers.UpdateContactLastLogon(System.Object,CMS.WebAnalytics.ActivityLoggedEventArgs)">
            <summary>
            Updates contact's last logon timestamp to <see cref="P:System.DateTime.Now"/> for user login activity.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementHandlers.SynchronizeNameAndEmailOfContactSubscriber(System.Object,CMS.DataEngine.ObjectEventArgs)">
            <summary>
            Updates matching information in contact subscriber when e-mail address, firstName, middleName or lastName have changed.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementHandlers.RenameContactGroupSubscriber(System.Object,CMS.DataEngine.ObjectEventArgs)">
            <summary>
            Renames contact group subscriber when name of contact group changes.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactManagementModule">
            <summary>
            Represents the Contact Management module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementModule.OnInit">
            <summary>
            Initializes the module.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountContactListInfo">
            <summary>
            Account-Contact relation class used for listing.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountContactListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountContactListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactListInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountContactListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountContactListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountContactListInfo.ColumnNames">
            <summary>
            Columns in appropriate SQL view.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountContactInfo">
            <summary>
            AccountContactInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountContactInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountContactInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountContactInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountContactInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountContactInfo.AccountContactID">
            <summary>
            Primary key - ID of relation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountContactInfo.AccountID">
            <summary>
            Gets or sets the ID of the account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountContactInfo.ContactID">
            <summary>
            Gets or sets the ID of the contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountContactInfo.ContactRoleID">
            <summary>
            Gets or sets the ID of the contact's role.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountContactInfoProvider">
            <summary>
            Class providing AccountContactInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetRelationships">
            <summary>
            Returns query of all relationships between accounts and contacts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetAccountContactInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified account and contact.
            </summary>
            <param name="accountId">Account ID</param>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetAccountContactInfo(System.Int32)">
            <summary>
            Returns relationship by ID.
            </summary>
            <param name="accountContactId">AccountContactID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.SetAccountContactInfo(CMS.OnlineMarketing.AccountContactInfo)">
            <summary>
            Sets relationship between specified account and contact.
            </summary>
            <param name="infoObj">Account-contact relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.DeleteAccountContactInfo(CMS.OnlineMarketing.AccountContactInfo)">
            <summary>
            Deletes relationship between specified account and contact.
            </summary>
            <param name="infoObj">Account-contact relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.DeleteAccountContactInfo(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified account and contact.
            </summary>
            <param name="accountId">Account ID</param>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.DeleteAccountContactInfo(System.Int32)">
            <summary>
            Deletes relationship with specific AccountContactID.
            </summary>
            <param name="accountContactId">AccountContactID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.DeleteAllAccountContacts(System.String)">
            <summary>
            Deletes relationships between specified accounts and contacts defined in where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.UpdateContactRole(System.Int32,System.String)">
            <summary>
            Updates contact role of relationships between accounts and contacts.
            </summary>
            <param name="roleId">New contact role ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.ResetAccountMainContacts(System.Int32,System.Int32,System.String)">
            <summary>
            Resets main contact IDs of account(s) to NULL if any of the contacts, specified by where-condition, was set as primary or secondary contact.
            </summary>
            <param name="accountId">Account ID - required if called from specific account</param>
            <param name="contactId">Contact ID - required if called from specific contact</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.SetContactsIntoAccount(System.Int32,System.String,System.Int32)">
            <summary>
            Sets relationship between specified account and contact.
            </summary>
            <param name="accountID">Account to be set</param>
            <param name="where">WHERE condition specifying contacts to be set</param>
            <param name="roleID">Account-contact role to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.SetAccountsIntoContact(System.Int32,System.String,System.Int32)">
            <summary>
            Sets relationship between specified account and contact.
            </summary>
            <param name="contactID">Contact to be set</param>
            <param name="where">WHERE condition specifying contacts to be set</param>
            <param name="roleID">Account-contact role to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetRelationshipsInternal">
            <summary>
            Returns query of all relationships between accounts and contacts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetAccountContactInfoInternal(System.Int32)">
            <summary>
            Returns relationship by AccountContactID.
            </summary>
            <param name="accountContactId">AccountContactID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.GetAccountContactInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified account and contact.
            </summary>
            <param name="accountId">Account ID</param>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.SetAccountContactInfoInternal(CMS.OnlineMarketing.AccountContactInfo)">
            <summary>
            Sets relationship between specified account and contact.
            </summary>
            <param name="infoObj">Account-contact relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.DeleteAccountContactInfoInternal(CMS.OnlineMarketing.AccountContactInfo)">
            <summary>
            Deletes relationship between specified account and contact.
            </summary>
            <param name="infoObj">Account-contact relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.DeleteAllAccountContactsInternal(System.String)">
            <summary>
            Deletes realtionships between specified accounts and contacts defined in where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.UpdateContactRoleInternal(System.Int32,System.String)">
            <summary>
            Updates contact role of relationships between accounts and contacts.
            </summary>
            <param name="roleId">New contact role ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.ResetAccountMainContactsInternal(System.Int32,System.Int32,System.String)">
            <summary>
            Resets main contact IDs of account(s) to NULL if any of the contacts, specified by where-condition, was set as primary or secondary contact.
            </summary>
            <param name="accountId">Account ID - required if called from specific account</param>
            <param name="contactId">Contact ID - required if called from specific contact</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.SetContactsIntoAccountInternal(System.Int32,System.String,System.Int32)">
            <summary>
            Sets relationship between specified account and contact.
            </summary>
            <param name="accountID">Account to be set</param>
            <param name="where">WHERE condition specifying contacts to be set</param>
            <param name="roleID">Account-contact role to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountContactInfoProvider.SetAccountsIntoContactInternal(System.Int32,System.String,System.Int32)">
            <summary>
            Sets relationship between specified account and contact.
            </summary>
            <param name="contactID">Contact to be set</param>
            <param name="where">WHERE condition specifying contacts to be set</param>
            <param name="roleID">Account-contact role to be set</param>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountInfo">
            <summary>
            AccountInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountStateID">
            <summary>
            Gets or sets the account's state ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountEmail">
            <summary>
            Gets or sets the account's email address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountCreated">
            <summary>
            Gets or sets the date and time when the account was created.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountNotes">
            <summary>
            Gets or sets the notes for this account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountOwnerUserID">
            <summary>
            Gets or sets the user that owns this account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountAddress2">
            <summary>
            Gets or sets the second line of the account's address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountCity">
            <summary>
            Gets or sets the account's city.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountFax">
            <summary>
            Gets or sets the account's fax number.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountGlobalAccountID">
            <summary>
            Gets or sets the ID of the account's current related global account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountSecondaryContactID">
            <summary>
            Gets or sets the account's secondary contact ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountMergedWithAccountID">
            <summary>
            Gets or sets the ID of the account that was merged to create this one.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountID">
            <summary>
            Gets or sets the account's ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountPhone">
            <summary>
            Gets or sets the account's phone number.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountPrimaryContactID">
            <summary>
            Gets or sets the account's primary contact ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountName">
            <summary>
            Gets or sets the account's name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountLastModified">
            <summary>
            Gets or sets the date and time when the account was last modified.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountStatusID">
            <summary>
            Gets or sets the account's status ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountAddress1">
            <summary>
            Gets or sets the first line of the account's address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountWebSite">
            <summary>
            Gets or sets the account's web site URL.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountSubsidiaryOfID">
            <summary>
            Gets or sets the account that is a parent account to this one.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountGUID">
            <summary>
            Gets or sets the account's GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountCountryID">
            <summary>
            Gets or sets the account's country ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountSiteID">
            <summary>
            Gets or sets the account's site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountZIP">
            <summary>
            Gets or sets the account's postal code.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.MergedAccounts">
            <summary>
            Collection of all accounts merged into current account. Returns only accounts which are directly merged into current account.
            To receive complete tree of all accounts's you must iterate through items from MergedAccounts and retrieve merged accounts recursively.
            Global accounts return both site and global accounts merged into current account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.Subsidiaries">
            <summary>
            Collection of subsidiaries belonging to the account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountInfo.AccountDescriptiveName">
            <summary>
            Gets the account full name with 'merged'/'global' flags.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountInfoProvider">
            <summary>
            Class providing AccountInfo management.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountInfoProvider.deleteLock">
            <summary>
            Locking object for mass deleting.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.#ctor">
            <summary>
            Constructor which sets weak references for ID caching.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccounts">
            <summary>
            Returns query for all the accounts objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountInfo(System.Int32)">
            <summary>
            Returns account with specified ID.
            </summary>
            <param name="accountId">Account ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountInfo(System.Guid,System.String)">
            <summary>
            Returns account with specified GUID.
            </summary>
            <param name="accountGuid">Account GUID</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.SetAccountInfo(CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Sets (updates or inserts) specified account.
            </summary>
            <param name="accountObj">Account to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.DeleteAccountInfo(CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Deletes specified account.
            </summary>
            <param name="accountObj">Account to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.DeleteAccountInfo(System.Int32)">
            <summary>
            Deletes account with specified ID.
            </summary>
            <param name="accountId">Account ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.DeleteAccountInfos(System.String,System.Boolean)">
            <summary>
            Deletes accounts by specified WHERE condition.
            </summary>
            <param name="where">SQL WHERE condition</param>
            <param name="deleteSubsidiaries">Delete subsidiaries</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hash tables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.UpdateAccountHQ(System.Int32,System.String)">
            <summary>
            Updates HQ ID of specified accounts.
            </summary>
            <param name="subsidiaryOfID">HQ ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.UpdateAccountStatus(System.Int32,System.String)">
            <summary>
            Updates account status ID of specified accounts.
            </summary>
            <param name="statusId">Account status ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.UpdateAccountPrimaryContact(System.Int32,System.Int32)">
            <summary>
            Updates primary and secondary contact of all accounts.
            </summary>
            <param name="oldContactID">ID of contact to be replaced</param>
            <param name="newContactID">ID of new contact to replace oldContact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountsInternal">
            <summary>
            Returns query for all the accounts objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountInfoInternal(System.Int32)">
            <summary>
            Returns account with specified ID.
            </summary>
            <param name="accountId">Account ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountInfoInternal(System.String,System.String)">
            <summary>
            Returns account with specified name.
            </summary>
            <param name="accountName">Account name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.GetAccountInfoInternal(System.Guid,System.String)">
            <summary>
            Returns account with specified GUID.
            </summary>
            <param name="accountGuid">Account GUID</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.SetAccountInfoInternal(CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Sets (updates or inserts) specified account.
            </summary>
            <param name="accountObj">Account to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.DeleteAccountInfoInternal(CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Deletes specified account.
            </summary>
            <param name="accountObj">Account to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.DeleteAccountInfosInternal(System.String,System.Boolean)">
            <summary>
            Deletes accounts by WHERE condition
            </summary>
            <param name="where">SQL WHERE condition to specify deleted accounts</param>        
            <param name="deleteSubsidiaries">Indicates if subsidiaries should be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.UpdateAccountPrimaryContactInternal(System.Int32,System.Int32)">
            <summary>
            Updates primary and secondary contact of all accounts.
            </summary>
            <param name="oldContactID">ID of contact to be replaced</param>
            <param name="newContactID">ID of new contact to replace oldContact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.UpdateAccountHQInternal(System.Int32,System.String)">
            <summary>
            Updates HQ ID of specified accounts.
            </summary>
            <param name="subsidiaryOfID">HQ account ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountInfoProvider.UpdateAccountStatusInternal(System.Int32,System.String)">
            <summary>
            Updates account status ID of specified accounts.
            </summary>
            <param name="statusId">Account status ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountListInfo">
            <summary>
            "Virtual" object for loading data from contact view.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountListInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountMembershipListInfo">
            <summary>
            "Virtual" object for loading data from account-membership view.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountMembershipListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountMembershipListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountMembershipListInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountMembershipListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountMembershipListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountMembershipListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityListInfo">
            <summary>
            "Virtual" object for loading activities for particular contact (not merged).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ActivityListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ActivityListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityContactListInfo">
            <summary>
            "Virtual" object for loading activities for particular contact (not merged).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityContactListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityContactListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ActivityContactListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ActivityContactListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityContactListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityContactMergedListInfo">
            <summary>
            "Virtual" object for loading activities for particular contact (not merged).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityContactMergedListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityContactMergedListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactMergedListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ActivityContactMergedListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactMergedListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ActivityContactMergedListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactMergedListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityContactMergedListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityContactGlobalListInfo">
            <summary>
            "Virtual" object for loading activities for particular contact (not merged).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityContactGlobalListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityContactGlobalListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactGlobalListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ActivityContactGlobalListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactGlobalListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ActivityContactGlobalListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityContactGlobalListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityContactGlobalListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityObjectMapper">
            <summary>
            Object used to map activity to its related objects, for example Forum post activity to related forum.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityObjectMapper.GetLinkedObject(CMS.OnlineMarketing.ActivityInfo,System.String)">
            <summary>
            Gets function to resolve object based on activity type and given object type.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactAccountAction">
            <summary>
            Class for Change contact account action
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactAutomationAction">
            <summary>
            Base class for contact action.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactAutomationAction.Contact">
            <summary>
            Gets current Contact object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactAccountAction.SetAccountContactRelation">
            <summary>
            Inserts or updated relation between contact and account
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactAccountAction.Execute">
            <summary>
            Executes current action
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactAccountAction.AccountGUID">
            <summary>
            Account identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactAccountAction.RoleName">
            <summary>
            Contact role identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactAccountAction.ContactAction">
            <summary>
            Gets current action - 0 for ADD TO, 1 for REMOVE FROM account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactAccountAction.SiteName">
            <summary>
            Name of site
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactAccountAction.Role">
            <summary>
            Role info object
            Null value possible
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactAccountAction.RoleID">
            <summary>
            ID of role
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactAccountAction.Account">
            <summary>
            Account info object
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupAction">
            <summary>
            Class for automation action that modifies relation between contact group and contact
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupAction.Execute">
            <summary>
            Executes current action
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupAction.ContactGroupName">
            <summary>
            Contact group identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupAction.ContactAction">
            <summary>
            Gets current action - 0 for ADD, 1 for REMOVE contact from contact group.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactPropertyAction">
            <summary>
            Class for Set attribute value
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactPropertyAction.Execute">
            <summary>
            Execute
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactPropertyAction.PropertyName">
            <summary>
            Gets property name
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactPropertyAction.PropertyValue">
            <summary>
            Gets property value
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactStatusAction">
            <summary>
            Class for Set contact status action.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactStatusAction.ContactStatus">
            <summary>
            Gets selected status
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CustomActivityAction">
            <summary>
            Class for Log custom activity action.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CustomActivityAction.Execute">
            <summary>
            Executes action.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CustomActivityAction.ActivityType">
            <summary>
            Activity type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CustomActivityAction.ActivityTitle">
            <summary>
            Activity title.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CustomActivityAction.ActivityValue">
            <summary>
            Activity value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CustomActivityAction.ActivityUrl">
            <summary>
            Activity URL.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CustomActivityAction.ActivityCampaign">
            <summary>
            Campaign.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CustomActivityAction.ActivityComment">
            <summary>
            Comment.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.DeleteContactAction">
            <summary>
            Class for contact deletion action.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.DeleteContactAction.Execute">
            <summary>
            Executes action.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.DeleteContactAction.DeleteMerged">
            <summary>
            Indicates if merged child contacts should be deleted as well or will be split before deleting parent contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.DeleteContactAction.MoveActivities">
            <summary>
            Indicates if activities, relationships, IPs and UserAgents created on merged contact should be moved to parent contact.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupStatusEnum">
            <summary>
            Types of contact group status used by ContactGroupInfo object.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupStatusEnum.Unspecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupStatusEnum.Ready">
            <summary>
            Ready
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupStatusEnum.Rebuilding">
            <summary>
            Rebuilding
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupStatusEnum.ConditionChanged">
            <summary>
            Condition changed - rebuild is required
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactScoreListInfo">
            <summary>
            Contact-Score relation table.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactScoreListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactScoreListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactScoreListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactScoreListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactScoreListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactScoreListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactScoreListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactScoreListInfo.ColumnNames">
            <summary>
            Columns of appropriate SQL view.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AutomaticContactMerger">
            <summary>
            Class for automatic contact merging. Merges similar contacts together - can merge site contacts based on given columns, then global contacts based on given columns, then merge those two together.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AutomaticContactMerger.mMergeByColumns">
            <summary>
            When Run() method invoked, contacts will be merged based on columns set in this list.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AutomaticContactMerger.mMergeContactsWithinSite">
            <summary>
            Defines if contacts should be automatically merged into the best found (defined by setting CMSContactForVisitor) within one site.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AutomaticContactMerger.mMergeContactsToGlobal">
            <summary>
            Defines whether contacts should be merged into one global contact based on MergeByColumns property.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AutomaticContactMerger.mMergeContactsToGlobalSetting">
            <summary>
            Setting by which merging contact within site will be decided. Site of given contact will be used.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AutomaticContactMerger.mMergeContactsWithinSiteSetting">
            <summary>
            Setting by which merging contact to a global one will be decided. Site of given contact will be used.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.ContactIsMergedByColumn(System.String)">
            <summary>
            Checks if automatic contact merging is based on given contact column.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
            <summary>
            Sets custom automatic merging of contacts based on same contact columns.
            </summary>
            <param name="mergeByColumns">List of contact properties to automatically merge by (all properties must be equal, you can override this behaviour in GetWhereCondition method)</param>
            <param name="mergeContactsWithinSite">Defines if contacts should be automatically merged into the best found (defined by setting CMSContactForVisitor) within one site</param>
            <param name="mergeContactsToGlobal">Defines whether contacts should be merged into one global contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Sets custom automatic merging of contacts based on same contact columns.
            </summary>
            <param name="mergeByColumns">List of contact properties to automatically merge by (all properties must be equal, you can override this behaviour in GetWhereCondition method)</param>
            <param name="mergeContactsWithinSiteSetting">Setting by which merger decides whether to merge contacts within site or not. Site of given contact will be used for getting the setting.</param>
            <param name="mergeContactsToGlobalSetting">Setting by which merger decides whether to merge contacts to a global or not. Site of given contact will be used for getting the setting.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.Run(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Runs the merge itself. Merges contact with contacts with same values in columns specified in sameColumns parameter.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.GetNotMergedIntoSiteCondition(System.String)">
            <summary>
            Adds condition to where condition that gets only contacts that are not merged into a site contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.AllowMergeToGlobal(System.String)">
            <summary>
            Decides whether contacts should be merged to a global contact or not.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.AllowMergeWithinSite(System.String)">
            <summary>
            Decides whether contacts should be merged within a site or not.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.GetWhereCondition(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Gets where condition used to get contacts similar to given one (without site ID).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.MergeGlobals(CMS.OnlineMarketing.ContactInfo,System.String,System.String)">
            <summary>
            Merges global contacts to a best fitting based on CMSSelectGlobalContactBy global setting.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.GetNotMergedIntoGlobalCondition(System.String)">
            <summary>
            Adds condition to where condition that gets only contacts that are not merged into a global contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.CreateGlobalContact(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Creates a global version of given contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.MergeWithinSite(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.List{CMS.OnlineMarketing.ContactInfo},System.String)">
            <summary>
            Merges contacts within a site. Decides to which one to merge by CMSContactForVisitor site setting.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AutomaticContactMerger.Equals(CMS.OnlineMarketing.AutomaticContactMerger)">
            <summary>
            Compares object with another for equality.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.IPAndUserAgentHelper">
            <summary>
            Class for manipulation with contact's User-Agent and IP address.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.#ctor">
            <summary>
            Constructor initializing objects with current context data.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.#ctor(CMS.OnlineMarketing.ContactInfo,System.String)">
            <summary>
            Constructor initializing objects with parameters.
            </summary>
            <param name="contact">Contact to be updated</param>
            <param name="siteName">Site name used for settings check</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.UpdateIPAndUserAgent">
            <summary>
            Updates IP and User Agent information for current contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.UpdateContactLocation(System.Boolean)">
            <summary>
            Update contact profile based on geolocation data from the IP address.
            </summary>
            <param name="saveContact">If true, the contact is saved after its location is updated</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.CheckLicense">
            <summary>
            License check.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.StoreIP">
            <summary>
            Store current IP address into the contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.StoreUserAgent">
            <summary>
            Stores current User-Agent information into the contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.UpdateLocation">
            <summary>
            Update contact's columns where location should be stored.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.UpdateOrganization">
            <summary>
            Update contact's column where organization should be stored.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.UpdateContactColumn(System.String,System.Object)">
            <summary>
            Update value in contact's column only if empty.
            </summary>
            <param name="geoIPsetting">GEO setting name</param>
            <param name="value">GEO value</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.InsertCountryValue(System.String,System.Object)">
            <summary>
            Update country display name or ID.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.InsertStateValue(System.String,System.Object)">
            <summary>
            Update state display name or ID.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.InsertValue(System.String,System.Object)">
            <summary>
            Insert value.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPAndUserAgentHelper.AppendSuffix(System.String,System.Object)">
            <summary>
            Append suffix into string column.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSDataComDialogPage">
            <summary>
            Represents a modal dialog web page of Data.com module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSDataComDialogPage.AuthorizeRequest">
            <summary>
            Checks the license and redirects the user to a special page when the license does not include Data.com integration.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSDataComPage">
            <summary>
            Represents a web page of Data.com module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSDataComPage.AuthorizeReadRequest(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Checks the license and read permissions for the specified contact and redirects the user to a special page when there is a problem.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSDataComPage.AuthorizeModifyRequest(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Checks the license and modify permissions for the specified contact and redirects the user to a special page when there is a problem.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSDataComPage.AuthorizeReadRequest(CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Checks the license and read permissions for the specified account and redirects the user to a special page when there is a problem.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSDataComPage.AuthorizeModifyRequest(CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Checks the license and modify permissions for the specified account and redirects the user to a special page when there is a problem.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSSalesForceDialogPage">
            <summary>
            Represents a modal dialog web page of Data.com module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSSalesForceDialogPage.AuthorizeRequest">
            <summary>
            Checks the license and redirects the user to a special page when the license does not include Salesforce.com Connector.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSAutomationPage">
            <summary>
            Base contact management page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSAutomationPage.GetSiteID(System.String)">
            <summary>
            Gets valid site id for current user.
            </summary>
            <param name="queryStringSiteId">Site id from querystring</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSAutomationPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event handler.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSAutomationPage.CheckPermissions(System.Boolean)">
            <summary>
            Checks if on-line marketing is available on site.
            </summary>
            <param name="redirectOnError">If set to <c>true</c> then redirect to error permission page when not authorized</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSAutomationPage.AddSiteQuery(System.String,System.Nullable{System.Int32})">
            <summary>
            Adds querystring parameters 'isSiteManager' and 'siteid' to provided URL. Applied only in site manager.
            </summary>
            <param name="url">Existing url</param>
            <param name="currentSiteID">Current site ID</param>
            <returns>Returns modified URL</returns>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSAutomationPage.AuthorizedForGlobalContacts">
            <summary>
            Indicates if current user is authorized for reading global contacts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSAutomationPage.AuthorizedForSiteContacts">
            <summary>
            Indicates if current user is authorized for reading site contacts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSAutomationPage.SiteID">
            <summary>
            Returns correct site id for current user.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSAutomationPage.IsSiteManager">
            <summary>
            Returns TRUE if current site is being displayed in Site Manager.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreContactListInfo">
            <summary>
            Support class for view of contacts in scoring
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreContactListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreContactListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ScoreContactListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ScoreContactListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreStatusFormatter">
            <summary>
            Returns formatted text for score status.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreStatusFormatter.#ctor(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="scoreInfo">Score info object.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreStatusFormatter.GetFormattedStatus">
            <summary>
            Gets formatted score status. Score can be disabled, it can be scheduled to rebuild in the future or its status is one of <see cref="T:CMS.OnlineMarketing.ScoreStatusEnum"/>.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreStatusFormatter.RecalculationURL">
            <summary>
            Optional. URL of the dialog for recalculation details.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreStatusFormatter.DisplayTooltips">
            <summary>
            Indicates if tooltips should be displayed.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMergedSite">
            <summary>
            Merged into site contact.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.SettingsWhere">
            <summary>
            Abstract class for WHERE condition from settings.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMergedWhen">
            <summary>
            Contact merged before X days.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactLastModified">
            <summary>
            Contact last modified before X days.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactLastLogon">
            <summary>
            Contact last logon before X days.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactCreatedBefore">
            <summary>
            Contact created before X days.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactIsAnonymous">
            <summary>
            Contact is anonymous.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMergedGlobal">
            <summary>
            Contact merged into global contact.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactCustomQuery">
            <summary>
            Custom query.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.LastActivityOlderThan">
            <summary>
            Last activity older than specified number of days.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.WhereAssembler">
            <summary>
            Creates complete SQL WHERE condition for specified site for deleting inactive contacts based on settings. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.WhereAssembler.GetWhereCondition">
            <summary>
            Returns WHERE condition for specified site's settings.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.WhereAssembler.GetSettingsWhere">
            <summary>
            Returns WHERE condition from settings.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.WhereAssembler.AppendSiteWhere">
            <summary>
            Appends site WHERE condition to complete WHERE.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.DeleteInactiveContacts">
            <summary>
            Scheduled task that deletes old contacts. Contacts to be deleted are specified by task data. Each line in task data section represents one rule for contact filtering.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.DeleteInactiveContacts.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
             Evaluates the membership of contacts to given contact group.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="M:CMS.OnlineMarketing.DeleteInactiveContacts.DeleteContactsForAllSites">
            <summary>
            Delete old contacts for all sites.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.DeleteInactiveContacts.AllowDeleteContactsForSite(CMS.SiteProvider.SiteInfo)">
            <summary>
            Indicates if contacts should be deleted for given site.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.DeleteInactiveContacts.DeleteContactsForSite(System.Int32)">
            <summary>
            Deletes contacts for specified site.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.DynamicConditionEvaluator">
            <summary>
            Is able to evaluate Contact group's dynamic condition in asynchronous thread or synchronously.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.DynamicConditionEvaluator.mWindowsIdentity">
            <summary>
            Windows identity.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.DynamicConditionEvaluator.mContactCache">
            <summary>
            Cached contacts which were recently processed.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.DynamicConditionEvaluator.RunAsync(System.Security.Principal.WindowsIdentity)">
            <summary>
            Run asynchronous evaluation.
            </summary>
            <param name="wi">Windows identity</param>
        </member>
        <member name="M:CMS.OnlineMarketing.DynamicConditionEvaluator.Run">
            <summary>
            Run contact group evaluation, this is not asynchronous execution.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.DynamicConditionEvaluator.ActivityForAllGroups(System.String[])">
            <summary>
            Evaluates all contact group conditions and assigns contact to those which conditions are met.
            Doesn't run in separate thread as it is called from task for processing activities.
            InvalidateCache method must be called after all activities are processed.
            </summary>
            <param name="values">Values which were used to create activity</param>
        </member>
        <member name="M:CMS.OnlineMarketing.DynamicConditionEvaluator.ActivityForAllGroups(CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Evaluates all contact group conditions and assigns contact to those which conditions are met.
            Doesn't run in separate thread as it is called from task for processing activities.
            InvalidateCache method must be called after all activities are processed.
            </summary>
            <param name="ai">Activity info</param>
        </member>
        <member name="M:CMS.OnlineMarketing.DynamicConditionEvaluator.InvalidateCache">
            <summary>
            Invalidates contacts which were used in last mass operation. Must be deleted after every mass 
            operation to prevent difference between DB and cache.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.DynamicConditionEvaluator.EvaluateCondition(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactGroupInfo,CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Evaluates contact group's dynamic condition according to specified contact and activity.
            Merged contacts are ignored.
            </summary>
            <param name="contact">Current contact</param>
            <param name="contactGroup">Current contact group</param>
            <param name="activity">Current activity</param>
        </member>
        <member name="P:CMS.OnlineMarketing.DynamicConditionEvaluator.Contact">
            <summary>
            Contact which caused activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.DynamicConditionEvaluator.ContactGroup">
            <summary>
            Current group which is being evaluated.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.DynamicConditionEvaluator.Activity">
            <summary>
            Activity which causes evaluation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.DynamicConditionEvaluator.ContactCache">
            <summary>
            Cached contacts which were recently processed.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MemberAddedHowEnum">
            <summary>
            Possible types of how can be contact added to contact group.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MemberAddedHowEnum.Dynamic">
            <summary>
            Contact is added through dynamic macro evaluation.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MemberAddedHowEnum.Account">
            <summary>
            Contact is added through account which is member of contact group.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MemberAddedHowEnum.Manual">
            <summary>
            Contact is manually added.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ConfigurationHelper">
            <summary>
            Class providing configuration helping methods.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ConfigurationHelper.AuthorizedReadConfiguration(System.Int32,System.Boolean)">
            <summary>
            Indicates if current user is authorized for configuration.
            </summary>
            <param name="siteID">SiteID of an configuration</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ConfigurationHelper.AuthorizedModifyConfiguration(System.Int32,System.Boolean)">
            <summary>
            Returns if current user is authorized to modify configuration.
            </summary>
            <param name="siteID">SiteID of an configuration</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ConfigurationHelper.ObjectSiteID(System.Object)">
            <summary>
            Returns Site ID of configuration.
            </summary>
            <param name="configuration">AccountStatusInfo or ContactStatusInfo or ContactRoleInfo</param>
            <returns>Returns site ID. Returns -1 when conversion of object fails.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupHelper">
            <summary>
            Class used for group helper methods.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupHelper.AuthorizedReadContactGroup(System.Int32,System.Boolean)">
            <summary>
            Indicates if current user is authorized for site CG.
            </summary>
            <param name="siteID">SiteID of an CG</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupHelper.AuthorizedModifyContactGroup(System.Int32,System.Boolean)">
            <summary>
            Returns if current user is authorized to modify CG.
            </summary>
            <param name="siteID">SiteID of an CG</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupHelper.ObjectSiteID(System.Object)">
            <summary>
            Returns Site ID of CG.
            </summary>
            <param name="contactGroup">CG info</param>
            <returns>Returns site ID. Returns -1 when conversion of object fails.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementAccountsPage">
            <summary>
            Base page for CMS ContactManagement - Accounts page.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementPage">
            <summary>
            Base contact management page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementPage.GetSiteID(System.String)">
            <summary>
            Gets valid site id for current user.
            </summary>
            <param name="queryStringSiteId">Site id from querystring</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event handler.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementPage.CheckPermissions(System.Boolean)">
            <summary>
            Checks if contact management is available on site.
            </summary>
            <param name="redirectOnError">If set to <c>true</c> then redirect to error permission page when not authorized</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementPage.AddSiteQuery(System.String,System.Nullable{System.Int32})">
            <summary>
            Adds querystring parameters 'isSiteManager' and 'siteid' to provided URL. Applied only in sitemanager.
            </summary>
            <param name="url">Existing url</param>
            <param name="currentSiteID">Current site ID</param>
            <returns>Returns modified URL</returns>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementPage.SiteID">
            <summary>
            Returns correct site id for current user.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementPage.IsSiteManager">
            <summary>
            Returns TRUE if current site is being displayed in Site Manager.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementAccountsPage.GetSiteID(System.String)">
            <summary>
            Gets valid site id for current user.
            </summary>
            <param name="queryStringSiteId">Site id from querystring</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementAccountsPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementAccountsPage.CheckReadPermission(System.Int32)">
            <summary>
            Checks "read" permission of site/global account for current user.
            </summary>
            <param name="siteId">Account site ID</param>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementAccountsPage.AuthorizedForGlobalAccounts">
            <summary>
            Indicates if current user is authorized for reading global accounts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementAccountsPage.AuthorizedForSiteAccounts">
            <summary>
            Indicates if current user is authorized for reading site accounts.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementAccountStatusPage">
            <summary>
            Base page for CMS ContactManagement - Configuration page - account status.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementConfigurationPage">
            <summary>
            Base page for CMS ContactManagement - Configuration page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.GetSiteID(System.String)">
            <summary>
            Gets valid site id for current user.
            </summary>
            <param name="queryStringSiteId">Site id from querystring</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.GetSiteFilter(System.String)">
            <summary>
            Returns SQL WHERE condition for current site.
            </summary>
            <param name="siteColumn">Name of site column.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.CheckReadPermission(System.Int32)">
            <summary>
            Checks "read" permission of site/global object for current user.
            </summary>
            <param name="siteId">Account site ID</param>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.AuthorizedForGlobalConfiguration">
            <summary>
            Gets a value indicating if current user is authorized for reading global configuration.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.AuthorizedForSiteConfiguration">
            <summary>
            Gets a value indicating if current user is authorized for reading site configuration.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.ModifyGlobalConfiguration">
            <summary>
            Gets value indicating if current user is authorized for modyfying global configuration objects.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.ModifySiteConfiguration">
            <summary>
            Gets value indicating if current user is authorized for modyfying site configuration objects.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementConfigurationPage.UnifiedSiteID">
            <summary>
            Gets current site ID for CMS Desk or selected site ID for Site Manager.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementAccountStatusPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementActivitiesPage">
            <summary>
            Base page for CMS ContactManagement - Contacts page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementActivitiesPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage">
            <summary>
            Base page for CMS ContactManagement - Contact groups page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.GetSiteID(System.String)">
            <summary>
            Gets valid site id for current user.
            </summary>
            <param name="queryStringSiteId">Site id from querystring</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.CheckUIElements">
            <summary>
            Checks permissions for UI Elements.
            Redirects to Access denied page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.CheckReadPermissions">
            <summary>
            Checks permissions for current user.
            Redirects to Access denied page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.CheckLicense">
            <summary>
            Checks licence.
            Redirects to Access denied page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.CheckObjectReadPermission(System.Int32)">
            <summary>
            Checks "read" permission of site/global object for current user.
            </summary>
            <param name="siteId">Contact group site ID</param>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.AuthorizedForGlobalContactGroups">
            <summary>
            Indicates if current user is authorized for reading global contact groups.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementContactGroupsPage.AuthorizedForSiteContactGroups">
            <summary>
            Indicates if current user is authorized for reading site contact groups.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementContactRolePage">
            <summary>
            Base page for CMS ContactManagement - Configuration page - contact role.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactRolePage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementContactsPage">
            <summary>
            Base page for CMS ContactManagement - Contacts page.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactsPage.GetSiteID(System.String)">
            <summary>
            Gets valid site id for current user.
            </summary>
            <param name="queryStringSiteId">Site id from query string</param>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactsPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactsPage.CheckReadPermission(System.Int32)">
            <summary>
            Checks "read" permission of site/global contact for current user.
            </summary>
            <param name="siteId">Contact site ID</param>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementContactsPage.AuthorizedForGlobalContacts">
            <summary>
            Indicates if current user is authorized for reading global contacts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSContactManagementContactsPage.AuthorizedForSiteContacts">
            <summary>
            Indicates if current user is authorized for reading site contacts.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSContactManagementContactStatusPage">
            <summary>
            Base page for CMS ContactManagement - Configuration page - contact status.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSContactManagementContactStatusPage.OnInit(System.EventArgs)">
            <summary>
            OnInit event handler.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSRulePage">
            <summary>
            Base class for score - rule pages.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.CMSScorePage">
            <summary>
            Base class for scoring pages.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSScorePage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event handler.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSScorePage.CheckSiteIntegrity">
            <summary>
            Check that score object is on current site.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSScorePage.CheckReadPermission">
            <summary>
            Checks if user is eligible for reading score.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSScorePage.Score">
            <summary>
            Score object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.CMSRulePage.CheckSiteIntegrity">
            <summary>
            Checks site integrity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.CMSRulePage.Rule">
            <summary>
            Edited Rule.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.IPGlobalListInfo">
            <summary>
            "Virtual" object for loading contact-ip relation data (for merged contacts).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.IPGlobalListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.IPGlobalListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPGlobalListInfo.#ctor">
            <summary>
            Constructor - Creates an empty IPGlobalListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPGlobalListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new IPGlobalListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPGlobalListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IPGlobalListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipGlobalCustomerListInfo">
            <summary>
            "Virtual" object for loading contact-customer relation data (for merged contact).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipGlobalCustomerListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipGlobalCustomerListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipGlobalCustomerListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactMembershipGlobalCustomerListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipGlobalCustomerListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactMembershipGlobalCustomerListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipGlobalCustomerListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipGlobalCustomerListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipGlobalSubscriberListInfo">
            <summary>
            "Virtual" object for loading contact-subscriber relation data (for merged contact).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipGlobalSubscriberListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipGlobalSubscriberListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipGlobalSubscriberListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactMembershipGlobalSubscriberListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipGlobalSubscriberListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactMembershipGlobalSubscriberListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipGlobalSubscriberListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipGlobalSubscriberListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipGlobalUserListInfo">
            <summary>
            "Virtual" object for loading contact-user relation data (for merged contact).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipGlobalUserListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipGlobalUserListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipGlobalUserListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactMembershipGlobalUserListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipGlobalUserListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactMembershipGlobalUserListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipGlobalUserListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipGlobalUserListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.IPMergedListInfo">
            <summary>
            "Virtual" object for loading contact-ip relation data (for merged contacts).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.IPMergedListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.IPMergedListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPMergedListInfo.#ctor">
            <summary>
            Constructor - Creates an empty IPMergedListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPMergedListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new IPMergedListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPMergedListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IPMergedListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.IPListInfo">
            <summary>
            "Virtual" object for loading contact-user relation data.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.IPListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.IPListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPListInfo.#ctor">
            <summary>
            Constructor - Creates an empty IPListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new IPListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IPListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipMergedCustomerListInfo">
            <summary>
            "Virtual" object for loading contact-customer relation data (for merged contact).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipMergedCustomerListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipMergedCustomerListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipMergedCustomerListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactMembershipMergedCustomerListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipMergedCustomerListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactMembershipMergedCustomerListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipMergedCustomerListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipMergedCustomerListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipMergedSubscriberListInfo">
            <summary>
            "Virtual" object for loading contact-subscriber relation data (for merged contact).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipMergedSubscriberListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipMergedSubscriberListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipMergedSubscriberListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactMembershipMergedSubscriberListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipMergedSubscriberListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactMembershipMergedSubscriberListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipMergedSubscriberListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipMergedSubscriberListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipMergedUserListInfo">
            <summary>
            "Virtual" object for loading contact-user relation data (for merged contact).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipMergedUserListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipMergedUserListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipMergedUserListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactMembershipMergedUserListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipMergedUserListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactMembershipMergedUserListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipMergedUserListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipMergedUserListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipSubscriberListInfo">
            <summary>
            "Virtual" object for loading contact-subscriber relation data.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipSubscriberListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipSubscriberListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipSubscriberListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactMembershipSubscriberListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipSubscriberListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactMembershipSubscriberListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipSubscriberListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipSubscriberListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipCustomerListInfo">
            <summary>
            "Virtual" object for loading contact-customer relation data.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipCustomerListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipCustomerListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipCustomerListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactMembershipCustomerListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipCustomerListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactMembershipCustomerListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipCustomerListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipCustomerListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipUserListInfo">
            <summary>
            "Virtual" object for loading contact-user relation data.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipUserListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipUserListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipUserListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactMembershipUserListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipUserListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactMembershipUserListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipUserListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipUserListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MemberTypeEnum">
            <summary>
            Type of membership relation.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MemberTypeEnum.CmsUser">
            <summary>
            User
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MemberTypeEnum.EcommerceCustomer">
            <summary>
            Customer
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MemberTypeEnum.NewsletterSubscriber">
            <summary>
            Newsletter subscriber
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleActivityItem">
            <summary>
            Represents activity rule definition.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityItem.ToString">
            <summary>
            Returns activity type name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityItem.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityItem.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor, initializes the activity rule info instance from the given XML node.
            </summary>
            <param name="ruleNode">XML node with the rule data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityItem.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>Returns RuleAttributeInfo</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityItem.GetXmlNode(System.Xml.XmlDocument)">
            <summary>
            Returns the XML node representing the RuleActivityInfo object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleActivityItem.ActivityName">
            <summary>
            Activity type name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleActivityItem.Fields">
            <summary>
            Returns the list of activity fields' definitions.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleActivityItem.RuleActivityField">
            <summary>
            Represents field definition of an activity rule.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityItem.RuleActivityField.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityItem.RuleActivityField.#ctor(System.String,System.String)">
            <summary>
            Constructor, initializes the activity field info instance from given properties.
            </summary>
            <param name="name">Field name</param>
            <param name="value">Field value</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityItem.RuleActivityField.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor, initializes the activity field info instance from the given XML node.
            </summary>
            <param name="fieldNode">XML node with the field data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityItem.RuleActivityField.ToString">
            <summary>
            Returns activity field name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityItem.RuleActivityField.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>Returns RuleActivityField</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleActivityItem.RuleActivityField.GetXmlNode(System.Xml.XmlDocument)">
            <summary>
            Returns the XML node representing the RuleActivityField object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleActivityItem.RuleActivityField.Name">
            <summary>
            Activity field name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleActivityItem.RuleActivityField.Value">
            <summary>
            Activity field value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleActivityItem.RuleActivityField.Parameters">
            <summary>
            Parameters pairs (hash table).
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleAttributeItem">
            <summary>
            Represents attribute rule definition.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleAttributeItem.ToString">
            <summary>
            Returns attribute name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleAttributeItem.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleAttributeItem.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor, initializes the attribute rule info instance from the given XML node.
            </summary>
            <param name="ruleNode">XML node with the rule data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleAttributeItem.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>Returns RuleAttributeInfo</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleAttributeItem.GetXmlNode(System.Xml.XmlDocument)">
            <summary>
            Returns the XML node representing the RuleAttributeInfo object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleAttributeItem.Name">
            <summary>
            Attribute name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleAttributeItem.Value">
            <summary>
            Attribute value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleAttributeItem.Parameters">
            <summary>
            Parameters pairs (hash table).
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleCondition">
            <summary>
            Ensures management of XML file that represents the rule condition.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleCondition.mItemsList">
            <summary>
            Items array list.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleCondition.#ctor(System.String)">
            <summary>
            Constructor, creates the rule condition structure and loads specified rule definition.
            </summary>
            <param name="ruleCondition">XML definition of the rule condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleCondition.GetXmlDefinition">
            <summary>
            Returns rule condition definition in xml.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleCondition.Clone">
            <summary>
            Clones the object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleCondition.ItemsList">
            <summary>
            Returns the list of all RuleAttributeInfos or RuleActivityInfos.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleCondition.WhereCondition">
            <summary>
            Gets or sets where condition of the rule.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleHelper">
            <summary>
            Class providing rule helper methods.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.GetAttributeCondition(CMS.Base.IDataContainer,System.String)">
            <summary>
            Returns attribute condition in XML format based on specific data.
            </summary>
            <param name="row">Data row container with rule information</param>
            <param name="whereCondition">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.GetActivityCondition(CMS.Base.IDataContainer,System.String,System.String)">
            <summary>
            Returns activity condition in XML format based on specific data.
            </summary>
            <param name="row">Data row container with rule information</param>
            <param name="whereCondition">Where condition</param>
            <param name="activityType">Activity type name in case the rule type is activity</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.GetMacroCondition(System.String)">
            <summary>
            Returns macro rule condition in XML format based on specific data.
            </summary>
            <param name="macroValue">Macro rule value</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.GetDataFromCondition(CMS.OnlineMarketing.RuleInfo,System.Data.DataTable,System.String@)">
            <summary>
            Returns data row container initialized with data from rule condition if the table definition contains column named as rule item name.
            If there is no column named as rule item name then empty data row container is returned.
            </summary>
            <param name="rule">RuleInfo object</param>
            <param name="table">Table definition</param>
            <param name="activityTypeName">Activity type name is returned via this parameter if it is activity rule</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.GetMacroConditionFromRule(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Returns macro condition saved within the given Rule. If there is no corresponding condition in the rule, returns empty string.
            </summary>
            <param name="rule">Rule containing the macro</param>
            <returns>Macro condition of given rule, if available; empty string otherwise</returns>
            <exception cref="T:System.ArgumentNullException">Argument <paramref name="rule"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.GetValue(CMS.Base.IDataContainer,System.String)">
            <summary>
            Returns value in DB culture (en-us).
            </summary>
            <param name="row">Data source</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleHelper.SetValue(CMS.Base.DataRowContainer,System.String,System.Object)">
            <summary>
            Sets value (in en-us format) into data container in current culture format.
            </summary>
            <param name="row">Data container</param>
            <param name="columnName">Column name</param>
            <param name="value">Value</param>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleInfo">
            <summary>
            RuleInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleInfo.OBJECT_TYPE_PERSONA">
            <summary>
            Object type for persona rule
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleInfo.PERSONARULETYPEINFO">
            <summary>
            Persona rule type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfo.ClearWhereCondition">
            <summary>
            Clears RuleWhereCondition property - it is used in SetRuleInfo method reset the property.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfo.#ctor">
            <summary>
            Constructor - Creates an empty RuleInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RuleInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfo.#ctor(CMS.OnlineMarketing.RuleInfo,System.Boolean)">
            <summary>
            Constructor - Creates a new RuleInfo object from the given DataClass.
            </summary>
            <param name="ruleObj">Source RuleInfo object</param>
            <param name="keepSourceData">If true, source data are kept in the object</param>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleValue">
            <summary>
            Rule value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleGUID">
            <summary>
            Unique identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleDisplayName">
            <summary>
            Rule display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleValidity">
            <summary>
            Specifies time periods - minute, hour, day, week, month, year. In database, this value is saved as underlying int value of the ValidityEnum.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleLastModified">
            <summary>
            Last modification time.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleValidFor">
            <summary>
            Number of time periods the rule is valid for.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleName">
            <summary>
            Rule code name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleScoreID">
            <summary>
            FK to Score (OM_ContactGroup table).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleID">
            <summary>
            RuleID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleType">
            <summary>
            Indicates rule type - activity type or attribute.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleCondition">
            <summary>
            Rule condition in XML format.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleIsRecurring">
            <summary>
            Indicates if the rule is recurring.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleMaxPoints">
            <summary>
            Limits number of recurrences of the rule.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleParameter">
            <summary>
            Name of the rule type - activity type name or attribute name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleValidUntil">
            <summary>
            Specific day until the rule is valid.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleWhereCondition">
            <summary>
            Gets string representation of the where condition.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleSiteID">
            <summary>
            FK to Site (CMS_Site table).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.RuleBelongsToPersona">
            <summary>
            Gets or sets the RuleIsPersona flag.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.RuleInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleInfoProvider">
            <summary>
            Class providing RuleInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRules">
            <summary>
            Returns a query for all the RuleInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRuleInfo(System.Int32)">
            <summary>
            Returns rule with specified ID.
            </summary>
            <param name="ruleId">Rule ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRuleInfo(System.String,System.Int32)">
            <summary>
            Returns rule with specified name.
            </summary>
            <param name="ruleName">Rule name</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRuleInfo(System.Guid)">
            <summary>
            Returns rule with specified GUID.
            </summary>
            <param name="ruleGuid">Rule GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.SetRuleInfo(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Sets (updates or inserts) specified rule.
            </summary>
            <param name="ruleObj">Rule to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.DeleteRuleInfo(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Deletes specified rule.
            </summary>
            <param name="ruleObj">Rule to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.DeleteRuleInfo(System.Int32)">
            <summary>
            Deletes rule with specified ID.
            </summary>
            <param name="ruleId">Rule ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.LoadRulesByRuleParameter(System.String,CMS.OnlineMarketing.RuleTypeEnum,System.Int32)">
            <summary>
            Returns RuleInfo objects based on item name (attribute or activity name).
            </summary>
            <param name="ruleParameter">Item name</param>
            <param name="ruleType">Item type - attribute or activity</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.LoadMacroRules(System.Int32)">
            <summary>
            Returns RuleInfo objects based on macros.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRulesInternal">
            <summary>
            Returns a query for all the RuleInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRuleInfoInternal(System.Int32)">
            <summary>
            Returns rule with specified ID.
            </summary>
            <param name="ruleId">Rule ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRuleInfoInternal(System.String,System.Int32)">
            <summary>
            Returns rule with specified name.
            </summary>
            <param name="ruleName">Rule name</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.GetRuleInfoInternal(System.Guid)">
            <summary>
            Returns rule with specified GUID.
            </summary>
            <param name="ruleGuid">Rule GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.SetRuleInfoInternal(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Sets (updates or inserts) specified rule.
            </summary>
            <param name="ruleObj">Rule to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.DeleteRuleInfoInternal(CMS.OnlineMarketing.RuleInfo)">
            <summary>
            Deletes specified rule.
            </summary>
            <param name="ruleObj">Rule to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.LoadRulesByRuleParameterInternal(System.String,CMS.OnlineMarketing.RuleTypeEnum,System.Int32)">
            <summary>
            Returns RuleInfo objects based on item name (attribute or activity name).
            </summary>
            <param name="ruleParameter">Item name</param>
            <param name="ruleType">Item type - attribute or activity</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.RuleInfoProvider.RefreshScore(System.Int32)">
            <summary>
            Sets score to status where recalculation might be needed.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.RuleTypeEnum">
            <summary>
            Rule type.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleTypeEnum.Activity">
            <summary>
            Activity type.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleTypeEnum.Attribute">
            <summary>
            Attribute type.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.RuleTypeEnum.Macro">
            <summary>
            Macro type.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreContactRuleListInfo">
            <summary>
            Support class for view of contact's score detail in scoring
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreContactRuleListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreContactRuleListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ScoreContactRuleListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ScoreContactRuleListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreContactRuleListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreInfo">
            <summary>
            ScoreInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreInfo.OBJECT_TYPE_PERSONA">
            <summary>
            Object type for the score that is used by persona
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreInfo.PERSONASCORETYPEINFO">
            <summary>
            Type information for persona objects that use scoring module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfo.#ctor">
            <summary>
            Constructor - Creates an empty ScoreInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ScoreInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfo.RemoveObjectDependencies(System.Boolean,System.Boolean)">
            <summary>
            Removes object dependencies
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfo.ExecuteRemoveDependencyQuery(System.String,System.String)">
            <summary>
            Executes given query text using specified connection string. Increases allowed timeout for deleting dependencies, because scoring can
            have huge number of dependencies and default timeout is not enough in some cases.
            </summary>
            <param name="removeDependenciesText">Remove dependency query text</param>
            <param name="connectionString">Connection string</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreDisplayName">
            <summary>
            Gets or sets the display name of the score.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreDescription">
            <summary>
            Gets or sets the description of the score.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreID">
            <summary>
            Gets or sets the ID of the score.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreSiteID">
            <summary>
            Gets or sets the site ID for this score.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreName">
            <summary>
            Gets or sets the name of the score.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreEnabled">
            <summary>
            Gets or sets if the score is enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreEmailAtScore">
            <summary>
            Gets or sets score value at which notification e-mail should be sent.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreNotificationEmail">
            <summary>
            Gets or sets notification e-mail.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreLastModified">
            <summary>
            Gets or sets the date and time when the score was last modified.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreGUID">
            <summary>
            Gets or sets the score's unique identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreScheduledTaskID">
            <summary>
            Gets or sets the ID of scheduled task for recalculation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreBelongsToPersona">
            <summary>
            Gets or sets the ScoreBelongsToPersona flag.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.ScoreStatus">
            <summary>
            Gets or sets status of the score.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.Contacts">
            <summary>
            Collection of all contacts within the scoring group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ScoreInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreInfoProvider">
            <summary>
            Class providing ScoreInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.#ctor">
            <summary>
            Constructor using ID hashtable.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScores">
            <summary>
            Returns a query for all the ScoreInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoreInfo(System.Int32)">
            <summary>
            Returns score with specified ID.
            </summary>
            <param name="scoreId">Score ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoreInfo(System.String,System.String)">
            <summary>
            Returns score with specified name.
            </summary>
            <param name="scoreName">Score name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.SetScoreInfo(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Sets (updates or inserts) specified score.
            </summary>
            <param name="scoreObj">Score to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.DeleteScoreInfo(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Deletes specified score.
            </summary>
            <param name="scoreObj">Score to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.DeleteScoreInfo(System.Int32)">
            <summary>
            Deletes score with specified ID.
            </summary>
            <param name="scoreId">Score ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.DeleteAllScores(System.String)">
            <summary>
            Deletes scores specified by where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoresWhereContactExceededLimit(System.Int32)">
            <summary>
            Returns IDs and values of scores where specified contact exceeded score limit. Used to send notification emails.
            </summary>
            <param name="contactId">Contact ID</param>
            <returns>Collection containing score, contact and values where the limit was exceeded.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoresWhereContactsExceededLimit(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Returns IDs and values of scores where specified contacts exceeded score limit. Used to send notification emails.
            </summary>
            <param name="contactIds">Contact IDs</param>
            <returns>Collection containing score, contact and values where the limit was exceeded.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.EnsureScheduledTask(CMS.OnlineMarketing.ScoreInfo,System.String,System.DateTime,System.Boolean,System.Boolean)">
            <summary>
            Returns existing scheduled task for recalculation or creates new one based on the score info and other settings.
            </summary>
            <param name="score">Score info</param>
            <param name="scheduledInterval">Scheduled interval string for new task</param>
            <param name="nextRunTime">Next run time for new task</param>
            <param name="taskEnabled">Indicates if new task should be enabled</param>
            <param name="saveNewTask">Indicates if new task should be saved (inserted into DB)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScheduledTask(CMS.OnlineMarketing.ScoreInfo,System.String,System.DateTime,System.Boolean,System.Boolean)">
            <summary>
            If appropriate scheduled task for Score exists then it is returned. Instead new 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.DeleteScoreScheduledTask(System.Int32)">
            <summary>
            Deletes scheduled task of score with given ID.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetNewScheduledTask(CMS.OnlineMarketing.ScoreInfo,System.String,System.DateTime,System.Boolean,System.Boolean)">
            <summary>
            Creates new scheduled task with basic properties set.
            </summary>
            <param name="score">Score info</param>
            <param name="scheduledInterval">Scheduled interval string</param>
            <param name="nextRunTime">Next run time</param>
            <param name="taskEnabled">Indicates if task should be enabled</param>
            <param name="saveNewTask">Indicates if new task should be saved (inserted into DB)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.ProcessTriggers(System.Int32,System.Int32,System.Data.DataSet)">
            <summary>
            Processes workflow triggers based on given score and contact ID.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.ProcessTriggers(CMS.OnlineMarketing.ScoreInfo,System.Nullable{System.Int32},System.Data.DataSet)">
            <summary>
            Processes workflow triggers based on given score and contact ID.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.MarkScoreAsReady(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Marks score object as ready. This method does not log changes to the event log, staging log and export log.
            </summary>
            <param name="score">Score info object</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="score"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.MarkScoreAsFailed(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Marks score object as failed. This method does not log changes to the event log, staging log and export log.
            </summary>
            <param name="score">Score info object</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="score"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.MarkScoreAsRecalculating(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Marks score object as being recalculated. This method does not log changes to the event log, staging log and export log.
            </summary>
            <param name="score">Score info object</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="score"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.MarkScoreAsRecalculationRequired(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Marks score object as recalculation required. This method does not log changes to the event log, staging log and export log.
            </summary>
            <param name="score">Score info object</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="score"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoresInternal">
            <summary>
            Returns a query for all the ScoreInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoreInfoInternal(System.Int32)">
            <summary>
            Returns score with specified ID.
            </summary>
            <param name="scoreId">Score ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoreInfoInternal(System.String,System.String)">
            <summary>
            Returns score with specified name.
            </summary>
            <param name="scoreName">Score name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.SetScoreInfoInternal(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Sets (updates or inserts) specified score.
            </summary>
            <param name="scoreObj">Score to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.DeleteScoreInfoInternal(CMS.OnlineMarketing.ScoreInfo)">
            <summary>
            Deletes specified score.
            </summary>
            <param name="scoreObj">Score to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.DeleteAllScoresInternal(System.String)">
            <summary>
            Deletes scores specified by where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoresWhereContactExceededLimitInternal(System.Int32)">
            <summary>
            Returns IDs and values of scores where specified contact exceeded score limit. Used to send notification emails.
            </summary>
            <param name="contactId">Contact ID</param>
            <returns>Collection containing score, contact and values where the limit was exceeded.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.GetScoresWhereContactsExceededLimitInternal(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Returns IDs and values of scores where specified contacts exceeded score limit. Used to send notification emails.
            </summary>
            <param name="contactIds">Contact IDs</param>
            <returns>Collection containing score, contact and values where the limit was exceeded.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.ProcessTriggersInternal(System.Int32,System.Int32,System.Data.DataSet)">
            <summary>
            Processes triggers for scores for given contact on given site.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.ProcessTriggersInternal(CMS.OnlineMarketing.ScoreInfo,System.Nullable{System.Int32},System.Data.DataSet)">
            <summary>
            Processes triggers based on given score and contact ID.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.CreateHashtableFromScoreValues(System.Data.DataSet)">
            <summary>
            Creates hash table from dataset of contact ID - score ID - score value.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreInfoProvider.SetScoreStatusInternal(CMS.OnlineMarketing.ScoreInfo,CMS.OnlineMarketing.ScoreStatusEnum)">
            <summary>
            Changes status of the Score and sets it immediately to the database. This method does not log changes to the event log, staging log and export log.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreStatusEnum">
            <summary>
            Types of score status used by ScoreInfo object.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreStatusEnum.Unspecified">
            <summary>
            Unspecified.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreStatusEnum.Ready">
            <summary>
            Score is up to date.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreStatusEnum.Recalculating">
            <summary>
            Recalculating.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreStatusEnum.RecalculationRequired">
            <summary>
            New, recalculation required.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ScoreStatusEnum.RecalculationFailed">
            <summary>
            Recalculation failed.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupEvaluator">
            <summary>
            Task for evaluation of dynamic contact group.
            Contacts' (site or all for global contact group) membership to a contact group depends on meeting the dynamic condition.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupEvaluator.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Evaluates the membership of contacts to given contact group.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupEvaluator.Run">
            <summary>
            Starts contact groups members evaluation.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupEvaluator.ContactGroupID">
            <summary>
            Contact group ID. Optional, should be set if this class is used outside the scheduler.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupEvaluator.ContactGroup">
            <summary>
            Contact group. Optional, should be set if this class is used outside the scheduler.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ScoreEvaluator">
            <summary>
            Task for score recalculation. For internal purposes only, for manual run please use ScoreAsyncRecalculator instead.
            Internally calls ScoreAsyncRecalculator thus recalculation runs in another thread.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ScoreEvaluator.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Evaluates the membership of contacts to given contact group or persona.
            </summary>
            <param name="task">Task to process</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="task"/> is null</exception>
        </member>
        <member name="T:CMS.OnlineMarketing.ContentPersonalizationVariantInfo">
            <summary>
            ContentPersonalizationVariant data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.OBJECT_TYPE_DOCUMENTVARIANT">
            <summary>
            Object type for document variant
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.TYPEINFO_DOCUMENT">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.GetAutomaticCodeName">
            <summary>
            Gets the automatic code name for the object.
            </summary>
            <remarks>
            There are many cases where the codename has to or has not to be unique. To avoid necessary complexity and prevent further defects, GUID is used for the code name instead.
            </remarks>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.SetObjectOrderPostprocessing">
            <summary>
            Method which is called after the order of the object was changed. Generates staging tasks and webfarm tasks by default.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContentPersonalizationVariant object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContentPersonalizationVariant object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantInstanceGUID">
            <summary>
            Personalization variant instance GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantPosition">
            <summary>
            Personalization variant position.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantDisplayCondition">
            <summary>
            Personalization variant display condition.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantWebParts">
            <summary>
            Personalization variant web parts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantLastModified">
            <summary>
            Personalization variant last modified.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantName">
            <summary>
            Personalization variant code name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantID">
            <summary>
            Personalization variant id.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantDescription">
            <summary>
            Personalization variant description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantDisplayName">
            <summary>
            Personalization variant display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantEnabled">
            <summary>
            Personalization variant enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantDocumentID">
            <summary>
            Personalization variant document id.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantPageTemplateID">
            <summary>
            Personalization variant page template id.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantZoneID">
            <summary>
            Personalization variant zone id.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.VariantGUID">
            <summary>
            Personalization variant GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.WebPartInstance">
            <summary>
            Variant web part/widget instance containing data built from this info object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.WebPartZoneInstance">
            <summary>
            Variant zone instance containing data built from this info object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContentPersonalizationVariantInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider">
            <summary>
            Class providing ContentPersonalizationVariant management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariants">
            <summary>
            Returns a query for all the ContentPersonalizationVariantInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariants(System.Int32)">
            <summary>
            Gets all the Content personalization variants for the specified template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariant(System.Int32)">
            <summary>
            Returns content personalization variant with specified ID.
            </summary>
            <param name="variantId">Content personalization variant ID.</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariant(System.String)">
            <summary>
            Returns content personalization variant with specified name.
            </summary>
            <param name="variantName">Content personalization variant name.</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SetContentPersonalizationVariant(CMS.OnlineMarketing.ContentPersonalizationVariantInfo)">
            <summary>
            Sets (updates or inserts) specified content personalization variant.
            </summary>
            <param name="variantObj">Content personalization variant to be set.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteContentPersonalizationVariant(CMS.OnlineMarketing.ContentPersonalizationVariantInfo)">
            <summary>
            Deletes specified content personalization variant.
            </summary>
            <param name="variantObj">Content personalization variant to be deleted.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteContentPersonalizationVariant(System.Int32)">
            <summary>
            Deletes content personalization variant with specified ID.
            </summary>
            <param name="variantId">Content personalization variant ID.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hash tables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.CombineWithPersonalization(CMS.DocumentEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Combines the specified page template instance with Content personalization variants.
            </summary>
            <param name="pi">The page info</param>
            <param name="instance">The page template instance</param>
            <param name="viewMode">The current view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.ContentPersonalizationEnabled(System.String)">
            <summary>
            Indicates whether the content personalization is enabled.
            </summary>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariants(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets the Content personalization variants for a web part/zone/widget.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SaveVariant(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Guid,System.Int32,System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="variantDisplayCondition">The variant display condition</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SaveVariantWebparts(System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant properties.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.UpdateWebPartVariants(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates the web part variants with a new zone id.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id.</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.RemoveWebPartsVariants(System.Collections.Generic.IEnumerable{CMS.PortalEngine.WebPartInstance})">
            <summary>
            Removes the variants of the selected web parts.
            </summary>
            <param name="webParts">The web parts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteWidgetVariants(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes all variants of all widgets in the document.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="templateId">The template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.MoveVariantUp(System.Int32)">
            <summary>
            Moves the variant up in the position sequence (up = smaller VariantPosition = sooner in the navigation)
            </summary>
            <param name="variantId">The variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.MoveVariantDown(System.Int32)">
            <summary>
            Moves the variant down in the position sequence (down = larger VariantPosition = later in the navigation)
            </summary>
            <param name="variantId">The variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantId(System.Int32,System.String)">
            <summary>
            Returns the Content personalization variant id for the specified template and code name.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantName">The variant code name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.LoadContentPersonalizationVariants(System.Object,System.Boolean)">
            <summary>
            Loads the Content personalization variants for the specified instance (web part/zone/widget).
            Return true, if the variants were successfully loaded.
            </summary>
            <param name="instance">The instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
            <returns>True, if the variants were successfully loaded. False, if it was not possible to load variants, for example due to missing information in the instance.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.CloneTemplateVariants(System.Int32,System.Int32)">
            <summary>
            Clones all the Content personalization variants of the specific page template.
            </summary>
            <param name="originalTemplateId">The original template id</param>
            <param name="newTemplateId">The new template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantsInternal">
            <summary>
            Returns a query for all the ContentPersonalizationVariantInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantInternal(System.Int32)">
            <summary>
            Returns content personalization variant with specified ID.
            </summary>
            <param name="variantId">Content personalization variant ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantInternal(System.String)">
            <summary>
            Returns content personalization variant with specified name.
            </summary>
            <param name="variantName">Content personalization variant name.</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SetContentPersonalizationVariantInternal(CMS.OnlineMarketing.ContentPersonalizationVariantInfo)">
            <summary>
            Sets (updates or inserts) specified content personalization variant.
            </summary>
            <param name="variantObj">Content personalization variant to be set.</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteContentPersonalizationVariantInternal(CMS.OnlineMarketing.ContentPersonalizationVariantInfo)">
            <summary>
            Deletes specified content personalization variant.
            </summary>
            <param name="variantObj">Content personalization variant to be deleted.</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.CombineWithPersonalizationInternal(CMS.DocumentEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Combines the specified page template instance with content personalization variants.
            </summary>
            <param name="pi">The page info</param>
            <param name="instance">The page template instance</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantsInternal(System.Int32)">
            <summary>
            Gets all the Content personalization variants for the specified template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantsInternal(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets the Content personalization variants for a web part/zone/widget.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SaveVariantInternal(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Guid,System.Int32,System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant and generates new combinations if the variant is new.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="variantDisplayCondition">The variant display condition</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.SaveVariantWebpartsInternal(System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant properties.
            </summary>
            <param name="variantId">The variant id.</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.UpdateWebPartVariantsInternal(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates the web part variants with a new zone id.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id.</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.RemoveWebPartsVariantsInternal(System.Collections.Generic.IEnumerable{CMS.PortalEngine.WebPartInstance})">
            <summary>
            Removes the variants of the selected web parts.
            </summary>
            <param name="webParts">The web parts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.DeleteWidgetVariantsInternal(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes all variants of all widgets in the document.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.MoveVariantUpInternal(System.Int32)">
            <summary>
            Moves task up in the order sequence (up = smaller VariantPosition = sooner in the navigation)
            </summary>
            <param name="variantId">The variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.MoveVariantDownInternal(System.Int32)">
            <summary>
            Moves task down in the order sequence (down = larger VariantPosition = later in the navigation)
            </summary>
            <param name="variantId">The variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetMatchingZoneInstance(CMS.PortalEngine.WebPartZoneInstance,System.Int32,CMS.PortalEngine.ViewModeEnum,System.Collections.Hashtable)">
            <summary>
            Returns the zone instance variant which fulfill its display condition. If no variant found, return the original zone.
            </summary>
            <param name="originalZone">The original zone instance</param>
            <param name="templateId">The template id</param>
            <param name="viewMode">The view mode</param>
            <param name="chosenVariants">The hash table containing chosen variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetMatchingWebPartInstance(CMS.PortalEngine.WebPartInstance,System.Int32,CMS.PortalEngine.ViewModeEnum,System.Collections.Hashtable)">
            <summary>
            Returns the web part instance variant which fulfill its display condition. If no variant found, return the original web part.
            </summary>
            <param name="originalWebPart">The original web part</param>
            <param name="templateId">The template id</param>
            <param name="viewMode">The view mode</param>
            <param name="chosenVariants">The hash table containing chosen variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.GetContentPersonalizationVariantIdInternal(System.Int32,System.String)">
            <summary>
            Returns the Content personalization variant id for the specified template and code name.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantName">The variant code name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.LoadContentPersonalizationVariantsInternal(System.Object,System.Boolean)">
            <summary>
            Loads the Content personalization variants for the specified instance (web part/zone/widget).
            Return true, if the variants were successfully loaded.
            </summary>
            <param name="instance">The instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
            <returns>True, if the variants were successfully loaded. False, if it was not possible to load variants, for example due to missing information in the instance.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationVariantInfoProvider.CloneTemplateVariantsInternal(System.Int32,System.Int32)">
            <summary>
            Clones all the Content personalization variants of the specific page template.
            </summary>
            <param name="originalTemplateId">The original template id</param>
            <param name="newTemplateId">The new template id</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactManagementModuleMetadata">
            <summary>
            Represents the Contact Management module metadata.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactManagementResolvers">
            <summary>
            Resolvers used in e-mail templates and other macro visual components.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactManagementResolvers.AutomationSimpleResolver">
            <summary>
            Returns simple automation macro resolver with Contact field.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactManagementResolvers.AutomationResolver">
            <summary>
            Returns automation e-mail macro resolver with On-line marketing fields.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactManagementResolvers.ScoringResolver">
            <summary>
            Returns scoring e-mail template macro resolver.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactManagementResolvers.ContactResolver">
            <summary>
            Returns contact resolver.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactManagementResolvers.ContactActivityResolver">
            <summary>
            Returns contact activity resolver (for trigger macro).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactManagementResolvers.ContactScoreResolver">
            <summary>
            Returns contact score resolver (for trigger macro).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactManagementResolvers.VariantResolver">
            <summary>
            Returns variant resolver.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactManagementImportSpecialActions">
            <summary>
            Handles special actions during the import process.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactManagementImportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContentPersonalizationModule">
            <summary>
            Represents the Content personalization module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationModule.#ctor">
            <summary>
            Initializes a new instance of the ContentPersonalizationModule class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContentPersonalizationModuleMetadata">
            <summary>
            Represents the Content personalization module metadata.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContentPersonalizationModuleMetadata.#ctor">
            <summary>
            Initializes a new instance of the ContentPersonalizationModuleMetadata class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestModule">
            <summary>
            Represents the MVT tests module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestModule.#ctor">
            <summary>
            Initializes a new instance of the MVTestModule class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestModuleMetadata">
            <summary>
            Represents the MVT tests module metadata.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestModuleMetadata.#ctor">
            <summary>
            Initializes a new instance of the MVTestModuleMetadata class.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingImportSpecialActions">
            <summary>
            Handles special actions during the import process.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingImportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingImportSpecialActions.RenameNewsletterScheduledTasks(CMS.Scheduler.TaskInfo)">
            <summary>
            Handles rename of Newsletters library for Scheduled tasks.
            Rename was from CMS.Newsletter to CMS.Newsletters.
            </summary>
            <param name="taskInfo">Task object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingImportSpecialActions.RegisterTranslationRecords(System.Data.DataSet,System.String,CMS.DataEngine.TranslationHelper,System.String[])">
            <summary>
            Ensure translation records registration.
            </summary>
            <param name="data">Source dataset</param>
            <param name="objectType">Type of the object</param>
            <param name="th">Translation helper</param>
            <param name="excludedNames">Excluded object names</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingImportSpecialActions.IsDocumentObjectType(System.String)">
            <summary>
            Returns true if object type is from documents data.
            </summary>
            <param name="objectType">Type of the object</param>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingHandlers">
            <summary>
            Online marketing event handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.Init">
            <summary>
            Initializes the events handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.StoreContactActivities(System.Object,System.EventArgs)">
            <summary>
            Performs bulk insert of activities currently stored in memory before the application ends to ensure the persistence. 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.LogPageVisitActivities(System.Object,CMS.WebAnalytics.AnalyticsJSEventArgs)">
            <summary>
            Logs landing page, external search, page visit activities and updates contact information based on 
            his IP.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.RunActivityTriggers(System.Object,CMS.OnlineMarketing.ProcessContactActionsBatchEventArgs)">
            <summary>
            Runs marketing automation triggers connected to activities.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.CloneTemplateVariants(System.Object,CMS.PortalEngine.PageTemplateCloneEventArgs)">
            <summary>
            Clones content personalization and MVT variants of the template after template is cloned as ad-hoc.
            </summary>
            <param name="sender">Sender</param>
            <param name="pageTemplateClonedEventArgs">Template clone data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingHandlers.CombinePageTemplateInstance_After(System.Object,CMS.DocumentEngine.PageInfoEventArgs)">
            <summary>
            Combines the page template instance with MVT and personalization data
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingModuleMetadata">
            <summary>
            Represents the Online Marketing module metadata.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTContext">
            <summary>
            MVT Test context
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTContext.CurrentMVTestName">
            <summary>
            Gets or sets the current multivariate test name
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTContext.CurrentMVTCombinationName">
            <summary>
            Current MVT combination name
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTHandlers">
            <summary>
            MV testing event handlers.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTHandlers.MVTESTTYPE">
            <summary>
            Test type constant for caching purposes.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTHandlers.MVTCOOKIE_PREFIX">
            <summary>
            Cookie prefix.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTHandlers.MVTCONVERSION">
            <summary>
            Conversion name.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTHandlers.LogViaJavaScriptKeyName">
            <summary>
            Log via JavaScript key name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.Init">
            <summary>
            Initializes the events handlers.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.SaveMVTToOutputCache(System.Object,CMS.OutputFilter.OutputCacheEventArgs)">
            <summary>
            Applies MVT testing on the output cache.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.SendMVTFromCache(System.Object,CMS.OutputFilter.OutputCacheEventArgs)">
            <summary>
            Tries to fetch correct content from output cache if page MVT testing is enabled.
            If page content is not present in cache, indicates that cache should be skipped (fallback to regular load).
            </summary>
            <param name="sender">Sender</param>
            <param name="ea">Event args needed to perform loading from output cache</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.GetMVTVariantName(System.String,CMS.PortalEngine.ViewModeEnum,System.String)">
            <summary>
            Gets name of the MV test variant.
            </summary>
            <param name="siteName">Site name</param>
            <param name="viewMode">View mode of the page</param>
            <param name="testName">Name of the MVT test</param>
            <returns>Returns empty string if variant is not found or is not active.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.LogMVTConversion(System.Object,CMS.Base.CMSEventArgs{CMS.WebAnalytics.LogRecord})">
            <summary>
            Logs AB and MVT conversions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.LogMVTestConversion(System.String,System.String,System.String,System.Int32,System.Int32,System.Double)">
            <summary>
            Checks cookies and logs MVT conversions.
            </summary>
            <param name="siteName">Site name</param>
            <param name="culture">Culture</param>
            <param name="conversionName">Conversion name</param>
            <param name="objectId">Object ID</param>
            <param name="count">Conversions count</param>
            <param name="value">Conversions value</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.HandleMVTestConversion(System.Object,CMS.Base.CMSEventArgs{CMS.WebAnalytics.LogRecord})">
            <summary>
            Checks if conversion is applicable for MV Test and saves it.
            </summary>
            <param name="sender">Sender</param>
            <param name="processLogRecordEventArgs">Log record data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.ConversionExists(System.String,System.String)">
            <summary>
            Returns false if conversion does not exists
            </summary>
            <param name="conversionName">Conversion name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.GetNewValue(System.Int32,System.Collections.Generic.IList{System.Double})">
            <summary>
            Returns value according to stored conversions.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.LoadVariants(System.Object,CMS.PortalEngine.WebPartLoadVariantsArgs)">
            <summary>
            Loads all the MVT/Content personalization variants for this web part instance.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.LoadZoneVariants(System.Object,CMS.PortalEngine.WebPartLoadVariantsArgs)">
            <summary>
            Loads all the MVT/Content personalization variants for this zone instance.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.MoveAllWebParts(System.Object,CMS.PortalEngine.MoveWebPartsArgs)">
            <summary>
            Updates web parts variants after all webparts are moved
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.MoveWebPart(System.Object,CMS.PortalEngine.MoveWebPartsArgs)">
            <summary>
            Updates web parts variants after webpart move        
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.RemoveWebPart(System.Object,CMS.PortalEngine.RemoveWebPartsArgs)">
            <summary>
            Remove MVT a CP variants
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.RemoveAllWebParts(System.Object,CMS.PortalEngine.RemoveWebPartsArgs)">
            <summary>
            Remove MVT a CP variants for all webparts
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.MVTVariantsEnabled(System.Object,CMS.PortalEngine.PortalEngineEventArgs)">
            <summary>
            Event to find whether mvt variatns are enabled
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.PageTemplateDelete(System.Object,CMS.DataEngine.ObjectEventArgs)">
            <summary>
            Event raised after page template is deleted.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.GetVariants(System.Object,CMS.PortalEngine.GetVariantsEventArgs)">
            <summary>
            Event raised after template's variants are requested
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.GetVariant(System.Object,CMS.PortalEngine.GetVariantEventArgs)">
            <summary>
            Raised when variant is requested.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.SetVariantWebParts(System.Object,CMS.PortalEngine.SetVariantEventArgs)">
            <summary>
            Event raised when variant is to be saved
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.SetVariant(System.Object,CMS.PortalEngine.SetVariantEventArgs)">
            <summary>
            Event raised when variant's properties are saved
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHandlers.DeleteWidgetVariants(System.Object,CMS.PortalEngine.DeleteVariantEventArgs)">
            <summary>
            Event raised when variants are to be deleted.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTHelper">
            <summary>
            Helper class for MVTests
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHelper.LoadVariants(System.Boolean,CMS.PortalEngine.VariantModeEnum,CMS.PortalEngine.WebPartInstance)">
            <summary>
            Loads all the MVT/Content personalization variants for this web part instance.
            </summary>
            <param name="forceLoad">Indicates if already loaded variants should be reloaded</param>
            <param name="variantMode">Specifies which variants should be loaded (MVT/ContentPersonalization/None - means both MVT+CP variants should try to load)</param>
            <param name="wpInstance">Web part's instance</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHelper.LoadZoneVariants(System.Boolean,CMS.PortalEngine.VariantModeEnum,CMS.PortalEngine.WebPartZoneInstance)">
            <summary>
            Loads all the MVT/Content personalization variants for this zone instance.
            </summary>
            <param name="forceLoad">Indicates if already loaded variants should be reloaded</param>
            <param name="variantMode">Specifies which variants should be loaded (MVT/ContentPersonalization/None - means both MVT+CP variants should try to load)</param>
            <param name="wpZoneInstance">Zone's instance</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHelper.UpdateWebPartsVariants(CMS.PortalEngine.WebPartZoneInstance,CMS.PortalEngine.WebPartZoneInstance,CMS.PortalEngine.PageTemplateInfo)">
            <summary>
            Updates web parts variants 
            </summary>
            <param name="zone">Zone instance</param>
            <param name="targetZone">Target zone instance</param>
            <param name="pti">Zone's page template info</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTHelper.ContainsPageInfoObject(CMS.PortalEngine.WebPartZoneInstance)">
            <summary>
            Indicates whether the given zone instance contains a valid page info object.
            </summary>
            <param name="zoneInstance">The zone instance.</param>
        </member>
        <member name="T:CMS.OnlineMarketing.Range`1">
            <summary>
            Class representing range of values.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.Range`1.#ctor(`0,`0)">
            <summary>
            Class representing range of values.
            </summary>
            <param name="endpoint1">One endpoint of given range</param>
            <param name="endpoint2">Second endpoint of given range</param>
        </member>
        <member name="M:CMS.OnlineMarketing.Range`1.IntersectsWith(CMS.OnlineMarketing.Range{`0})">
            <summary>
            Returns true if range intersects with another one.
            </summary>
            <param name="range">Second range to check for intersection</param>
            <returns>True if the two ranges intersects, false otherwise</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.VariantTypeEnum">
            <summary>
            Variant type enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.VariantTypeEnum.Zone">
            <summary>
            Zone
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.VariantTypeEnum.WebPart">
            <summary>
            Web part
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.VariantTypeEnum.Widget">
            <summary>
            Widget
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.VariantTypeFunctions">
            <summary>
            Helper functions for webpart/zone/widget variant type enum.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantTypeFunctions.GetVariantTypeEnum(System.String)">
            <summary>
            Returns VariantTypeEnum enum.
            </summary>
            <param name="variantType">The variant type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.VariantTypeFunctions.GetVariantTypeString(CMS.OnlineMarketing.VariantTypeEnum)">
            <summary>
            Returns VariantType string.
            </summary>
            <param name="variantType">The variant type</param>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingContext">
            <summary>
            Contact context method and variables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.CheckPermissions(CMS.OnlineMarketing.VariantTypeEnum)">
            <summary>
            Check permissions for MVT or CP. 
            </summary>
            <param name="variantType">Type of editing object (widget, webpart, zone)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.GetCurrentContact">
            <summary>
            Returns current contact. Tries to find contact in persistent storage, obtains it from the users or tries to recognize it according to known information. If no contact can be found, it creates a new anonymous contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.GetCurrentContact(CMS.Membership.CurrentUserInfo,System.Boolean)">
            <summary>
            Returns current contact. Tries to find contact in persistent storage, obtains it from the users or tries to recognize it according to known information. If no contact can be found, it creates a new anonymous contact. 
            </summary>
            <param name="currentUser">User info</param>
            <param name="isLogin">Indicates if current operation requesting CurrentContact is user login</param>
            <returns>Returns current contact</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.SelectContactForVisitor(System.Data.DataSet)">
            <summary>
            Returns single contact determined for current visitor by settings 'When a visitor has more Contacts, use'.
            </summary>
            <param name="foundContacts">DataSet with found contacts</param>
            <returns>ContactInfo of selected contact</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.FindCurrentOrCreateNewContact(CMS.Membership.CurrentUserInfo,System.Boolean,System.Boolean)">
            <summary>
            Tries to find contact in persistent storage, obtains it from the users or tries to recognize it according to known information. If no contact can be found, it creates a new anonymous contact.
            </summary>
            <param name="currentUser">User from which the contact can be obtained</param>
            <param name="getContactFromUser">Determines, whether the contact should be obtained from the current user</param>
            <param name="isLoginRequest">Determines whether the current request is the login one</param>
            <returns></returns>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.ValidateContact(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Updates contact from hashtables/DB. If contact does not belong to current site, returns null. If contact is merged, returns parent contact if available.
            </summary>
            <param name="contact">Contact to be validated</param>
            <returns>Returns appropriate contact</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.SetCurrentContact(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Stores contact in request items, session or cookies.
            </summary>
            <param name="contact">Contact to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.SetPersistentContact(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Sets given contact to session or to the cookie. Used storage is determined by the site settings. 
            </summary>
            <param name="contact">Contact to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.GetPersistentContact">
            <summary>
            Tries to get current contact from session or from cookies. If no contact is found or the contact is from different site, returns null.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.GetUserContact(CMS.OnlineMarketing.ContactInfo,CMS.Membership.CurrentUserInfo,System.Boolean)">
            <summary>
            Tries to find contact for current user.
            </summary>
            <param name="contactFromSession">Current contact from session or cookie.</param>
            <param name="currentUser">Current user.</param>
            <param name="isLogin">Indicates if current operation requesting contact is a login operation</param>
            <returns>Returns ContactInfo of contact assigned to given user</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.AssingUserToContact(CMS.OnlineMarketing.ContactInfo,CMS.Membership.CurrentUserInfo,System.Boolean)">
            <summary>
            Assigns provided contact to current user. If contact is anonymous then it fills in information from user 
            and changed anonymous contact to regular contact.
            </summary>
            <param name="contact">Contact to be assigned to current user</param>
            <param name="user">Current user</param>
            <param name="isLogin">Indicates if current operation requesting contact is a login operation</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.RecognizeContact">
            <summary>
            Tries to determine contact from available information about visitor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.CheckEnabled">
            <summary>
            Checks if Online marketing is enabled, including license check and crawler check.
            </summary>
            <returns>Returns TRUE if all conditions are valid.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.CheckLicense">
            <summary>
            Checks license.
            </summary>
            <returns>Returns TRUE if license is valid</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingContext.CheckBotsEnabled">
            <summary>
            Checks if current visitor is a crawler and if logging of crawlers is enabled.
            </summary>
            <returns>Returns TRUE if bot is enabled</returns>
        </member>
        <member name="P:CMS.OnlineMarketing.OnlineMarketingContext.CurrentContact">
            <summary>
            Current contact info        
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.OnlineMarketingContext.CurrentContactID">
            <summary>
            Current contact ID
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupAccountListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupAccountListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupAccountListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactGroupAccountListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupAccountListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactGroupAccountListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupAccountListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupContactListInfo">
            <summary>
            Contact group contacts list
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupContactListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupContactListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupContactListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactGroupContactListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupContactListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactGroupContactListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupContactListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupContactListInfo.ColumnNames">
            <summary>
            Column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupMemberTypeEnum">
            <summary>
            Types of contact group members used by ContactGroupInfo object.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupMemberTypeEnum.Contact">
            <summary>
            Contact
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupMemberTypeEnum.Account">
            <summary>
            Account
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactAccountListInfo">
            <summary>
            Contact-Account relation table.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactAccountListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactAccountListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactAccountListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactAccountListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactAccountListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactAccountListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactAccountListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactAccountListInfo.ColumnNames">
            <summary>
            Columns of appropriate SQL view.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipListInfo">
            <summary>
            "Virtual" object for loading data from contact-membership view.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipListInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountHelper">
            <summary>
            Helper class for merging, splitting and deleting accounts.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountHelper.MERGED">
            <summary>
            Prefix for accounts created from merging.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Merge(CMS.OnlineMarketing.AccountInfo,System.Data.DataSet,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Will merge accounts into another account. If accounts are from different sites then new global account will be created.
            </summary>
            <param name="mergeInto">Optional. If not specified then new account will be created</param>
            <param name="mergeAccounts">Dataset of AccountInfo objects to be merged</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'ContactID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>If merged accounts are from different sites then newly created account will be returned. Otherwise account passed as mergeInto parameter will be returned.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Merge(CMS.OnlineMarketing.AccountInfo,System.Collections.Generic.List{CMS.OnlineMarketing.AccountInfo},System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Will merge accounts into another account. If accounts are from different sites then new global account will be created.
            </summary>
            <param name="mergeInto">Optional. If not specified then new account will be created.</param>
            <param name="mergeAccounts">List of AccountInfo objects to be merged</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'ContactID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>If merged accounts are from different sites then newly created account will be returned. Otherwise account passed as mergeInto parameter will be returned.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Merge(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Merges one account into another account. Accounts must be on the same site (or global).
            </summary>
            <param name="mergeInto">Will be merging into this account. Must be on same site as 'mergeFrom' account or global.</param>
            <param name="mergeFrom">Will be merged. Must be on the same site as 'mergeInto' account or global if 'mergeInto' is global.</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'ContactID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>Returns TRUE if merging was successful.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.MergeIntoGlobalAccount(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Merging into global account.
            </summary>
            <param name="mergeInto">Must be a global account</param>
            <param name="mergeFrom">Must be site account</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'ContactID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.MergeIntoSiteAccount(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Merging two accounts from the same site.
            </summary>
            <param name="mergeInto">Merging into this account. Must be a site account</param>
            <param name="mergeFrom">Merging this account. Must be a site account</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'ContactID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>Returns TRUE if merging was successful.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.MergeContactGroupRelations(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo,System.Collections.Hashtable)">
            <summary>
            Changes active account for all Account-ContactGroup relations into 'mergeFrom' account.
            </summary>
            <param name="mergeInto">Account-ContactGroup relation will be assigned to this account</param>
            <param name="mergeFrom">Account-ContactGroup relations from this account will be changed</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.CreateContactGroupMemberRelation(System.Int32,System.Int32)">
            <summary>
            Creates new ContactGroup - Contact relation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.MergeAccountContactRelations(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo,System.Collections.Hashtable)">
            <summary>
            Changes all Account - Contact relations assigned to 'mergeFrom' to be newly assigned to 'mergeInto'.
            </summary>
            <param name="mergeInto">Account - Contact relations will be assigned to this account</param>
            <param name="mergeFrom">Relations of this account will be changed</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'ContactID' keys and 'ContactRoleID' values.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.CreateAccountContactRelation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new Account - Contact relation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.UpdateAccountContactRelation(System.Data.DataRow,System.Int32)">
            <summary>
            Updates Account - Contact relation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.MergeSubsidiaryOfRelations(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Changes accounts' subsidiaryOf account where 'mergeFrom' account is used.
            </summary>
            <param name="mergeInto">Accounts' subsidiaryOf relation is changed to point to this account</param>
            <param name="mergeFrom">Accounts' subsidiaryOf relation are pointing to this account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.GetMergedName">
            <summary>
            Returns original name for newly created merged account.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Split(CMS.OnlineMarketing.AccountInfo,System.Collections.Generic.IList{System.String},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits accounts from parent.
            </summary>
            <param name="parentAccount">Parent account from which accounts are being splitted</param>
            <param name="accounts">List of accounts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on account to split should be filled with fields from merged account</param>
            <param name="removeContacts">Indicates if contacts related to splitted account should be removed from parent account</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted account should be removed from parent account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Split(CMS.OnlineMarketing.AccountInfo,System.Data.DataSet,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits accounts from parent.
            </summary>
            <param name="parentAccount">Parent account from which accounts are being splitted</param>
            <param name="accounts">List of accounts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on account to split should be filled with fields from merged account</param>
            <param name="removeContacts">Indicates if contacts related to splitted account should be removed from parent account</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted account should be removed from parent account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Split(CMS.OnlineMarketing.AccountInfo,System.Collections.Generic.List{CMS.OnlineMarketing.AccountInfo},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits accounts from parent.
            </summary>
            <param name="parentAccount">Parent account from which accounts are being splitted</param>
            <param name="accounts">List of accounts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on account to split should be filled with fields from merged account</param>
            <param name="removeContacts">Indicates if contacts related to splitted account should be removed from parent account</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted account should be removed from parent account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.SplitFromAccount(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits merged account from another account.
            </summary>
            <param name="parentAccount">Parent account under which is account merged</param>
            <param name="mergedAccount">Merged account</param>
            <param name="copyMissingFields">Indicates if fields which are empty on merged account should be filled with data from parent account</param>
            <param name="removeContacts">Indicates if contacts related to splitted account should be removed from parent account</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted account should be removed from parent account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.CopyMissingFields(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Copies fields which are filled in parent account and are empty in merged account.
            </summary>
            <param name="parentAccount">Source of data</param>
            <param name="mergedAccount">Fields are filled in this account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.CopyField(System.Object,System.Object,System.String)">
            <summary>
            Copy field specified by its data type.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.CopyStringField(System.String,System.String)">
            <summary>
            Copies string field content.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.CopyIntegerField(System.Int32,System.Int32)">
            <summary>
            Copies integer field content.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.SplitRecords(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Recursively loops through all accounts merged into 'parentAccount' and changes all records to point to 'splitAccount'.
            </summary>
            <param name="mergedAccount">Account placed under 'splitAccount' will be modified</param>
            <param name="splitAccount">Account being splitted from parent account</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.SplitGroupRelations(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Loops through all Account-ContactGroup relations created for 'mergedAccount' account and changes active account to be 'splitAccount' account.
            </summary>
            <param name="mergedAccount">Account which is merged under 'splitAccount'</param>
            <param name="splitAccount">Account being splitted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.DeleteAccountContactRelations(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Removes all Account - Contact relations.
            </summary>
            <param name="parentAccount">Parent account</param>
            <param name="mergedAccount">Child account being splitted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.DeleteContactGroupRelations(CMS.OnlineMarketing.AccountInfo,CMS.OnlineMarketing.AccountInfo)">
            <summary>
            Remove contact group - account relations from parent account when relation to contact group is on merged account as well.
            </summary>
            <param name="parent">Parent account</param>
            <param name="merged">Account being splitted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.Delete(CMS.OnlineMarketing.AccountInfo,System.Boolean,System.Boolean)">
            <summary>
            Deletes account. All related records are moved to parent account or deleted.
            </summary>
            <param name="account">Account to be deleted</param>
            <param name="deleteMerged">Indicates if merged child accounts should be deleted as well or will be splitted before deleting parent account.</param>
            <param name="deleteSubsidiaries">Indicates if subsidiary accounts should be deleted as well.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.GetAccounListInfos(CMS.DataEngine.QueryDataParameters,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns ccounListInfos for specified parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">SQL WHERE condition</param>
            <param name="orderBy">SQL ORDER BY parameters</param>
            <param name="topN">SQL TOP N parameters</param>
            <param name="columns">Selected columns</param>
            <returns>Returns DataSet</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.GetNewAccount(System.String,System.Int32)">
            <summary>
            Creates and returns new  account.
            </summary>
            <returns>Returns new AccountInfo</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.GetName(System.String)">
            <summary>
            Returns name for newly created account
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.AuthorizedReadAccount(System.Int32,System.Boolean)">
            <summary>
            Indicates if current user is authorized for site accounts.
            </summary>
            <param name="siteID">SiteID of an contact</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.AuthorizedModifyAccount(System.Int32,System.Boolean)">
            <summary>
            Returns if current user is authorized to modify contact.
            </summary>
            <param name="siteID">SiteID of an contact</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountHelper.ObjectSiteID(System.Object)">
            <summary>
            Returns Site ID of account.
            </summary>
            <param name="account">Account info</param>
            <returns>Returns site ID. Returns -1 when conversion of object fails.</returns>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountStatusInfo">
            <summary>
            AccountStatusInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountStatusInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.AccountStatusInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfo.#ctor">
            <summary>
            Constructor - Creates an empty AccountStatusInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AccountStatusInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountStatusInfo.AccountStatusDisplayName">
            <summary>
            Gets or sets the account status display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountStatusInfo.AccountStatusID">
            <summary>
            Gets or sets the account status ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountStatusInfo.AccountStatusSiteID">
            <summary>
            Gets or sets the account status site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountStatusInfo.AccountStatusName">
            <summary>
            Gets or sets the account status name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.AccountStatusInfo.AccountStatusDescription">
            <summary>
            Gets or sets the account status description.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.AccountStatusInfoProvider">
            <summary>
            Class providing AccountStatusInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.#ctor">
            <summary>
            Constructor using ID and codename Hashtables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatuses">
            <summary>
            Returns a query for all the AccountStatusInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatusInfo(System.Int32)">
            <summary>
            Returns account status with specified ID.
            </summary>
            <param name="statusId">Account status ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatusInfo(System.String,System.String)">
            <summary>
            Returns account status with specified name.
            </summary>
            <param name="statusName">Account status name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.SetAccountStatusInfo(CMS.OnlineMarketing.AccountStatusInfo)">
            <summary>
            Sets (updates or inserts) specified account status.
            </summary>
            <param name="statusObj">Account status to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.DeleteAccountStatusInfo(CMS.OnlineMarketing.AccountStatusInfo)">
            <summary>
            Deletes specified account status.
            </summary>
            <param name="statusObj">Account status to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.DeleteAccountStatusInfo(System.Int32)">
            <summary>
            Deletes account status with specified ID.
            </summary>
            <param name="statusId">Account status ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatusesInternal">
            <summary>
            Returns a query for all the AccountStatusInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatusInfoInternal(System.Int32)">
            <summary>
            Returns account status with specified ID.
            </summary>
            <param name="statusId">Account status ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.GetAccountStatusInfoInternal(System.String,System.String)">
            <summary>
            Returns account status with specified name.
            </summary>
            <param name="statusName">Account status name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.SetAccountStatusInfoInternal(CMS.OnlineMarketing.AccountStatusInfo)">
            <summary>
            Sets (updates or inserts) specified account status.
            </summary>
            <param name="statusObj">Account status to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.AccountStatusInfoProvider.DeleteAccountStatusInfoInternal(CMS.OnlineMarketing.AccountStatusInfo)">
            <summary>
            Deletes specified account status.
            </summary>
            <param name="statusObj">Account status to be deleted</param>        
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityDetail">
            <summary>
            Activity detail user control.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.LoadData(CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Loads data to control. Returns false if data not found.
            </summary>
            <param name="ai">Activity info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.EncodeLabel(System.Web.UI.WebControls.Label,System.String)">
            <summary>
            Encodes and assigns text to label.
            </summary>
            <param name="lbl">Label</param>
            <param name="text">Text</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.GetDocumentByNodeID(System.Int32,System.String)">
            <summary>
            Rerturns document for the given document node ID.
            </summary>
            <param name="nodeId">Docuemnt node ID</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.GetURL(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns URL to CMSDesk for the given document.
            </summary>
            <param name="node">TreeNode of the Site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.GetLink(System.String,System.String)">
            <summary>
            Returns link.
            </summary>
            <param name="url">URL</param>
            <param name="content">Link text (will be HTML encoded)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.GetUserName(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Joins user name consisting of first, middle, last and e-mail address in one string.
            </summary>
            <param name="first">First name</param>
            <param name="middle">Middle name</param>
            <param name="last">Last name</param>
            <param name="emailAddress">E-mail address</param>
            <param name="userName">User name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityDetail.GetLinkForDocument(System.Int32,System.String)">
            <summary>
            Returns link for given document node ID to CMSDesk.
            </summary>
            <param name="nodeId">Document node ID</param>
            <param name="culture">Document culture</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityInfo">
            <summary>
            ActivityInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ActivityInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfo.#ctor">
            <summary>
            Constructor - Creates an empty ActivityInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ActivityInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfo.RegisterProperties">
            <summary>
            Registers the properties of this object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityCampaign">
            <summary>
            Gets or sets the campaign code name for this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityItemDetailID">
            <summary>
            Gets or sets the ID othe item detail that relates to this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityID">
            <summary>
            Gets or sets the activity ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityActiveContactID">
            <summary>
            Gets or sets the ID of the active contact for this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityNodeID">
            <summary>
            Gets or sets the node ID that relates to this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityGUID">
            <summary>
            Gets or sets the activity's unique identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityTitle">
            <summary>
            Gets or sets the activity title.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityOriginalContactID">
            <summary>
            Gets or sets the ID of the original contact for this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityType">
            <summary>
            Gets or sets the type of the activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityValue">
            <summary>
            Gets or sets the value of this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityURL">
            <summary>
            Gets or sets the URL of this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityCreated">
            <summary>
            Gets or sets the date and time the activity was created.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivitySiteID">
            <summary>
            Gets or sets the site ID for this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityItemID">
            <summary>
            Gets or sets the ID of the item that relates to this activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityIPAddress">
            <summary>
            Gets or sets user host IP address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityURLReferrer">
            <summary>
            Gets or sets URL referrer.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityComment">
            <summary>
            Gets or set additional comment.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ActivityInfo.ActivityCulture">
            <summary>
            Gets or sets the document culture where activity occurred.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityInfoProvider">
            <summary>
            Class providing ActivityInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivities">
            <summary>
            Returns a query for all the ActivityInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivityInfo(System.Int32)">
            <summary>
            Returns activity with specified ID.
            </summary>
            <param name="activityId">Activity ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivityInfo(System.Guid,System.String)">
            <summary>
            Returns activity with specified GUID.
            </summary>
            <param name="activityGuid">Activity GUID</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.SetActivityInfo(CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Sets (updates or inserts) specified activity. If contact set as ActivityActiveContactID is merged, this method will not update it to its parent. It is up to called to ensure that activities are
            property assigned to not merged contact.
            </summary>
            <param name="activityObj">Activity to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.DeleteActivityInfo(CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Deletes specified activity.
            </summary>
            <param name="activityObj">Activity to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.DeleteActivityInfo(System.Int32)">
            <summary>
            Deletes activity with specified ID.
            </summary>
            <param name="activityId">Activity ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetContactsLastActivity(System.Int32,System.String)">
            <summary>
            Returns last contact's activity, may be restricted to specific activity type.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="activityType">Activity type - optional</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetContactsFirstActivity(System.Int32,System.String)">
            <summary>
            Returns first contact's activity, may be restricted to specific activity type.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="activityType">Activity type - optional</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.ProcessTriggers(CMS.OnlineMarketing.ActivityInfo,System.Boolean)">
            <summary>
            Processes triggers on given activity. Triggers are processed synchronously.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivitiesInternal">
            <summary>
            Returns a query for all the ActivityInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivityInfoInternal(System.Int32)">
            <summary>
            Returns activity with specified ID.
            </summary>
            <param name="activityId">Activity ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetActivityInfoInternal(System.Guid,System.String)">
            <summary>
            Returns activity with specified GUID.
            </summary>
            <param name="activityGuid">Activity GUID</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.SetActivityInfoInternal(CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Sets (updates or inserts) specified activity.
            </summary>
            <param name="activityObj">Activity to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.ProcessTriggersInternal(CMS.OnlineMarketing.ActivityInfo,System.Boolean)">
            <summary>
            Processes all triggers that are bound to ActivityInfo object type.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.DeleteActivityInfoInternal(CMS.OnlineMarketing.ActivityInfo)">
            <summary>
            Deletes specified activity.
            </summary>
            <param name="activityObj">Activity to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetContactsActivityInternal(System.Int32,System.String,System.String)">
            <summary>
            Returns TOP 1 contact's activity depending on 'order by' and 'activity type' parameters.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="activityType">Activity type - optional</param>
            <param name="orderBy">Order by</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.BulkInsertActivityData(System.Collections.Generic.IList{CMS.WebAnalytics.ActivityData})">
            <summary>
            Inserts multiple log records to the database. Returns the first inserted activity ID. Other activities in the given list will have subsequent IDs.
            </summary>
            <remarks>
            This method does not touch cache keys for the inserted activity ("om.activity|all", "om.contact|..|children", etc.) automatically. It has to be done by caller if needed.
            </remarks>
            <param name="activities">Activity records to insert</param>
            <returns>ID of the first activity which was created or -1 when no activity was created</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.RemapActivityIDs(System.Data.DataTable,System.String,System.Int32)">
            <summary>
            Re-maps the activity indexes to activity IDs
            </summary>
            <param name="dt">Data table to process</param>
            <param name="idColumn">ID column</param>
            <param name="firstActivityId">First activity ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.GetOtherParamOrNull(CMS.WebAnalytics.ActivityData,System.String)">
            <summary>
            Gets the value from other parameters array of the given activity
            </summary>
            <param name="activityData">Activity data</param>
            <param name="paramName">Parameter name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityInfoProvider.CreateTable(System.String)">
            <summary>
            Creates the activity table for inserting activities
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ActivityHelper">
            <summary>
            Helper for activity manipulation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.DuplicateActivity(CMS.OnlineMarketing.ActivityInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Duplicates record in Activity table and all related tables if required. Keeps ActivityGUID same.
            </summary>
            <param name="ai">Duplicate this activity</param>
            <param name="contact">Optional. Contact which will be used for ActivityActiveContactID and ActivityOriginalContactID. If not specified then original values will remain</param>
            <returns>Duplicated activity</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.AuthorizedReadActivity(System.Int32,System.Boolean)">
            <summary>
            Indicates if current user is authorized for activities.
            </summary>
            <param name="siteID">SiteID of an activity</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.AuthorizedManageActivity(System.Int32,System.Boolean)">
            <summary>
            Returns if current user is authorized to manage activities.
            </summary>
            <param name="siteID">SiteID of an activity</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.LogLandingPage(System.Int32,System.String,CMS.DocumentEngine.PageInfo,CMS.WebAnalytics.ActivityContext)">
            <summary>
            Logs landing page according to current context data.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="siteName">Current site name. Optional.</param>
            <param name="currentPage">Current page. Optional.</param>
            <param name="activityContext">Current activity context</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.LogExternalSearch(System.Int32,System.String,CMS.DocumentEngine.PageInfo,CMS.WebAnalytics.ActivityContext)">
            <summary>
            Logs external search.
            </summary>
            <param name="contactId">ContactID</param>
            <param name="siteName">Current site name. Optional.</param>
            <param name="currentPage">Current page. Optional.</param>
            <param name="activityContext">Current activity context</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.LogPageVisit(System.Int32,System.String,CMS.DocumentEngine.PageInfo,CMS.WebAnalytics.ActivityContext)">
            <summary>
            Logs page visit.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="siteName">Current site name. Optional.</param>
            <param name="currentPage">Current page. Optional.</param>
            <param name="activityContext">Current activity context</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ActivityHelper.LogLogin(CMS.Membership.UserInfo)">
            <summary>
            Logs login activity
            </summary>
            <param name="ui">User info</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupInfo">
            <summary>
            ContactGroupInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactGroupInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactGroupInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.RemoveObjectDependencies(System.Boolean,System.Boolean)">
            <summary>
            Removes dependencies when deleting contact group
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfo.RegisterProperties">
            <summary>
            Register the custom properties
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupDisplayName">
            <summary>
            Gets or sets the display name of the contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupDescription">
            <summary>
            Gets or sets the description of the contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupID">
            <summary>
            Gets or sets the ID of the contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupSiteID">
            <summary>
            Gets or sets the site ID for this contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupName">
            <summary>
            Gets or sets the name of the contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupDynamicCondition">
            <summary>
            Gets or sets the macro condition of given group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupScheduledTaskID">
            <summary>
            Gets or sets the ID of scheduled task for re-evaluation if the group is dynamic.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupEnabled">
            <summary>
            Gets or sets if the contact group is enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupLastModified">
            <summary>
            Gets or sets the date and time when the contact group was last modified.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupGUID">
            <summary>
            Gets or sets the contact group's unique identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.ContactGroupStatus">
            <summary>
            Gets or sets status of dynamic contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupInfo.IsRebuildScheduled">
            <summary>
            Gets whether the contact group is being automatically rebuilt.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupInfoProvider">
            <summary>
            Class providing ContactGroupInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.#ctor">
            <summary>
            Constructor using ID and codename Hashtables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroups">
            <summary>
            Returns a query for all the ContactGroupInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroupInfo(System.Int32)">
            <summary>
            Returns contact group with specified ID.
            </summary>
            <param name="groupId">Contact group ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroupInfo(System.String,System.String)">
            <summary>
            Returns contact group with specified name.
            </summary>
            <param name="groupName">Contact group name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.SetContactGroupInfo(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Sets (updates or inserts) specified contact group.
            </summary>
            <param name="groupObj">Contact group to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.DeleteContactGroupInfo(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Deletes specified contact group.
            </summary>
            <param name="groupObj">Contact group to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.DeleteContactGroupInfo(System.Int32)">
            <summary>
            Deletes contact group with specified ID.
            </summary>
            <param name="groupId">Contact group ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.EnableScheduledTask(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Enables scheduled task connected to the given contact group.
            If such task does not exits, creates a new one.
            </summary>
            <param name="contactGroup">Contact group containing the scheduled task</param>
            <exception cref="T:System.ArgumentException">Task info ID provided in <paramref name="contactGroup"/> is null. -or-Task info with ID provided in <paramref name="contactGroup"/> does not exist.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactGroup"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.DisableScheduledTask(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Disables scheduled task connected to the given contact group.
            </summary>
            <param name="contactGroup">Contact group containing the scheduled task</param>
            <exception cref="T:System.ArgumentException">Task info ID provided in <paramref name="contactGroup"/> is null. -or-Task info with ID provided in <paramref name="contactGroup"/> does not exist.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactGroup"/> is null</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroupsInternal">
            <summary>
            Returns a query for all the ContactGroupInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroupInfoInternal(System.Int32)">
            <summary>
            Returns contact group with specified ID.
            </summary>
            <param name="groupId">Contact group ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.GetContactGroupInfoInternal(System.String,System.String)">
            <summary>
            Returns contact group with specified name.
            </summary>
            <param name="groupName">Contact group name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.SetContactGroupInfoInternal(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Sets (updates or inserts) specified contact group.
            </summary>
            <param name="groupObj">Contact group to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupInfoProvider.DeleteContactGroupInfoInternal(CMS.OnlineMarketing.ContactGroupInfo)">
            <summary>
            Deletes specified contact group.
            </summary>
            <param name="groupObj">Contact group to be deleted</param>        
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupMemberInfo">
            <summary>
            ContactGroupMembersInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupMemberInfo.OBJECT_TYPE_CONTACT">
            <summary>
            Object type for contact
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupMemberInfo.OBJECT_TYPE_ACCOUNT">
            <summary>
            Object type for account
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupMemberInfo.TYPEINFOCONTACT">
            <summary>
            Type information for group members of type contact.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactGroupMemberInfo.TYPEINFOACCOUNT">
            <summary>
            Type information for group members of type account.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactGroupMemberInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactGroupMemberInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberID">
            <summary>
            Gets or sets the ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberType">
            <summary>
            Gets or sets the type of the related object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberContactGroupID">
            <summary>
            Gets or sets the ID of the contact group.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberRelatedID">
            <summary>
            Gets or sets the ID of the related object - contact or account.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberFromCondition">
            <summary>
            Gets or sets value indicating if current contact group member is added from dynamic condition.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberFromAccount">
            <summary>
            Gets or sets value indicating if current contact group member is added as an account member.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.ContactGroupMemberFromManual">
            <summary>
            Gets or sets value indicating if current contact group member is manually added.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactGroupMemberInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactGroupMemberInfoProvider">
            <summary>
            Class providing ContactGroupMemberInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetRelationships">
            <summary>
            Returns a query of all relationships among contact groups, related objects of specific types.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetContactGroupMemberInfo(System.Int32)">
            <summary>
            Returns relationship by ID.
            </summary>
            <param name="contactGroupMemberId">Contact group member ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetContactGroupMemberInfoByData(System.Int32,System.Int32,CMS.OnlineMarketing.ContactGroupMemberTypeEnum)">
            <summary>
            Returns relationship among specified contact group and related object of specific type.
            </summary>
            <param name="groupId">Contact group ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Member type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.SetContactGroupMemberInfo(CMS.OnlineMarketing.ContactGroupMemberInfo)">
            <summary>
            Sets relationship among specified contact group and related object of specific type.
            </summary>
            <param name="infoObj">Contact group-related object-object type relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.SetContactGroupMemberInfo(System.Int32,System.Int32,CMS.OnlineMarketing.ContactGroupMemberTypeEnum,CMS.OnlineMarketing.MemberAddedHowEnum)">
            <summary>
            Sets relationship among specified contact group and related object of specific type.
            </summary>	
            <param name="groupId">Contact group ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Member type</param>
            <param name="addedHow">Possible types of contact addition into contact group</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteContactGroupMemberInfo(CMS.OnlineMarketing.ContactGroupMemberInfo)">
            <summary>
            Deletes relationship among specified contact group and related object of specific type.
            </summary>
            <param name="infoObj">Contact group-related object-object type relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteContactGroupMemberInfo(System.Int32)">
            <summary>
            Deletes relationship specified by ID.
            </summary>
            <param name="contactGroupMemberId">Contact group member ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteContactGroupMemberInfo(System.Int32,System.Int32,CMS.OnlineMarketing.ContactGroupMemberTypeEnum)">
            <summary>
            Deletes relationship among specified contact group and related object of specific type.
            </summary>
            <param name="groupId">Contact group ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Member type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteMemberInfosForContact(System.Int32)">
            <summary>
            Removes specified contact from all groups.
            </summary>
            <param name="contactId">Contact to be removed from groups</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteContactGroupMembers(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Deletes relationships between specified contact groups and related objects (contact, account) defined in where condition.
            </summary>
            <param name="where">Where condition</param>
            <param name="contactGroupID">Current groupID. Used only when deleting accounts and removing its contacts.</param>
            <param name="deletingAccount">Indicates if deleting accounts. If TRUE then also contacts will be removed as well.</param>
            <param name="removeAccount">If TRUE then account will be deleted, not only its contacts. Applicable only when deleting accounts.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.UpdateMergedAccountContacts(System.Int32)">
            <summary>
            Updates contacts of specified account which was merged.
            </summary>
            <param name="accountID">Account ID which was merged before.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetNumberOfContactsInGroup(System.Int32)">
            <summary>
            Returns number of contacts in specified contact group.
            </summary>
            <param name="contactGroupId">Contact group ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.SetContactsAsDynamic(CMS.OnlineMarketing.ContactGroupInfo,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Sets contacts represented by <paramref name="contactIDsToBeAdded"/> as dynamic members of given Contact Group. 
            Preserves all existing memberships that are not dynamic (manual or from account).
            </summary>
            <param name="contactGroup">Contact group in which the contacts will be assigned (and removed)</param>
            <param name="contactIDsToBeAdded">Contacts that will be set as dynamic in given contact group</param>
            <param name="allContactIDs">
            Contacts which are present in this list and are not in <paramref name="contactIDsToBeAdded"/> will be removed from the group by dynamic condition. 
            If null, this method will remove all contacts which are not in <paramref name="contactIDsToBeAdded"/> from group.
            </param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.SetContactAsDynamic(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Sets a contact represented by <paramref name="contact"/> as dynamic members of given contact groups represented by <paramref name="contactGroupIDs"/>.
            Preserves all existing memberships that are not dynamic (manual or from account).
            </summary>
            <param name="contact">Contact which will be assigned (and removed) as dynamic member</param>
            <param name="contactGroupIDs">Contact groups that will be set as dynamic membership for given contact group</param>
            <param name="allContactGroupIDs">Contact groups that are in this list and not in <paramref name="contactGroupIDs"/> will be unassigned from <paramref name="allContactGroupIDs"/></param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.CreateManualContactGroupMembers(CMS.OnlineMarketing.ContactGroupInfo,System.Collections.Generic.IEnumerable{CMS.OnlineMarketing.ContactInfo})">
            <summary>
            Adds contacts represented by <paramref name="contacts"/> to the contact group specified by <paramref name="contactGroup"/>. 
            Only those contacts which are not part of contact group should be passed in <paramref name="contacts"/>. If some contact who is already
            a member of the group will be added, the whole operation will be unsuccessful.
            Contacts will be added as manual, not automatic and not from account.
            </summary>
            <param name="contactGroup">Contact group where contacts will be assigned</param>
            <param name="contacts">Contacts which will be added</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetRelationshipsInternal">
            <summary>
            Returns a query of all relationships among contact groups and related objects of specific types
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetContactGroupMemberInfoInternal(System.Int32)">
            <summary>
            Returns relationship specified by id.
            </summary>
            <param name="contactgroupmemberId">Contact group ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetContactGroupMemberInfoByDataInternal(System.Int32,System.Int32,CMS.OnlineMarketing.ContactGroupMemberTypeEnum)">
            <summary>
            Returns relationship among specified contact group and related object of specific type.
            </summary>
            <param name="groupId">Contact group ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Membership type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.SetContactGroupMemberInfoInternal(CMS.OnlineMarketing.ContactGroupMemberInfo)">
            <summary>
            Sets relationship among specified contact group and related object of specific type.
            </summary>
            <param name="infoObj">Contact group-related object-object type relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteContactGroupMemberInfoInternal(CMS.OnlineMarketing.ContactGroupMemberInfo)">
            <summary>
            Deletes relationship among specified contact group and related object of specific type.
            </summary>
            <param name="infoObj">Contact group-related object-object type relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.DeleteContactGroupMembersInternal(System.String)">
            <summary>
            Deletes relationships between specified contact groups and related objects (contact, account) defined in where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetNumberOfContactsInGroupInternal(System.Int32)">
            <summary>
            Returns number of contacts in specified contact group.
            </summary>
            <param name="contactGroupId">Contact group ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.SetContactGroupMembersInfo(System.Int32,System.Collections.Generic.List{System.String},CMS.OnlineMarketing.ContactGroupMemberTypeEnum,CMS.OnlineMarketing.MemberAddedHowEnum)">
            <summary>
            Sets relationship among specified contact group and related objects of specific type.
            </summary>
            <param name="groupId">Contact group ID</param>
            <param name="relatedObjectIds">List of strings with related object IDs</param>
            <param name="memberType">Member type</param>
            <param name="addedHow">Possible types of contact addition into contact group</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.SetContactGroupMembersInfo(System.Int32,System.Collections.Generic.List{System.Int32},CMS.OnlineMarketing.ContactGroupMemberTypeEnum,CMS.OnlineMarketing.MemberAddedHowEnum)">
            <summary>
            Sets relationship among specified contact group and related objects of specific type.
            </summary>
            <param name="groupId">Contact group ID</param>
            <param name="relatedObjectIds">List of integers with related object IDs</param>
            <param name="memberType">Member type</param>
            <param name="addedHow">Possible types of contact addition into contact group</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetNumberOfContactsInGroup(System.Int32,System.Boolean)">
            <summary>
            Returns number of contacts in specified contact group.
            </summary>
            <param name="contactGroupId">Contact group ID</param>
            <param name="excludeMerged">Indicates if merged contacts should be excluded from the count</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactGroupMemberInfoProvider.GetNumberOfContactsInGroupInternal(System.Int32,System.Boolean)">
            <summary>
            Returns number of contacts in specified contact group.
            </summary>
            <param name="contactGroupId">Contact group ID</param>
            <param name="excludeMerged">Indicates if merged contacts should be excluded from the count</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactInfo">
            <summary>
            ContactInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.RegisterProperties">
            <summary>
            Register the custom properties
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.LoadDefaultData">
            <summary>
            Loads the default data to the object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.RemoveObjectDependencies(System.Boolean,System.Boolean)">
            <summary>
            Removes object dependencies.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.InsertAsClonePostprocessing(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Clones workflow transitions objects (has to be done after the whole process because it needs the steps already created).
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Result of the cloning - messages in this object will be altered by processing this method</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfo.ClearSalesForceColumns">
            <summary>
            Set all columns that are related with SalesForce to null.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactEmail">
            <summary>
            Gets or sets the contact's e-mail address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactLastModified">
            <summary>
            Gets or sets the date and time when the contact was last modified.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactMonitored">
            <summary>
            Gets or sets whether this contact is monitored.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactTitleBefore">
            <summary>
            Gets or sets the title used in front of a contact's name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactMergedWhen">
            <summary>
            Gets or sets the date and time when the contact was merged.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactBirthday">
            <summary>
            Gets or sets the contact's birth date.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactGender">
            <summary>
            Gets or sets the contact's gender.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactFirstName">
            <summary>
            Gets or sets the contact's first name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactCountryID">
            <summary>
            Gets or sets the contact's country ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactID">
            <summary>
            Gets or sets the contact's ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactMobilePhone">
            <summary>
            Gets or sets the contact's mobile phone number.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactGlobalContactID">
            <summary>
            Gets or sets the ID of the global contact ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactLastName">
            <summary>
            Gets or sets the contact's last name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactMergedWithContactID">
            <summary>
            Gets or sets the ID of the contact that was merged to create this contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactCity">
            <summary>
            Gets or sets the contact's city.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactIsAnonymous">
            <summary>
            Gets or sets whether the contact is anonymous.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactSiteID">
            <summary>
            Gets or sets the contact's site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactTitleAfter">
            <summary>
            Gets or sets the title used after the contact's name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactWebSite">
            <summary>
            Gets or sets the URL of the contact's web site.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactOwnerUserID">
            <summary>
            Gets or sets the ID of the user that owns this contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactCreated">
            <summary>
            Gets or sets the the date and time when the contact was created.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactGUID">
            <summary>
            Gets or sets the contact's unique identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactJobTitle">
            <summary>
            Gets or sets the contact's job title.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactStateID">
            <summary>
            Gets or sets the contact's state ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactAddress2">
            <summary>
            Gets or sets the second line of the contact's address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactAddress1">
            <summary>
            Gets or sets the first line of the contact's address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactNotes">
            <summary>
            Gets or sets the notes for this contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactZIP">
            <summary>
            Gets or sets the contact's postal code.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactMiddleName">
            <summary>
            Gets or sets the contact's middle name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactBusinessPhone">
            <summary>
            Gets or sets the contact's business phone number.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactHomePhone">
            <summary>
            Gets or sets the contact's home phone number.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactStatusID">
            <summary>
            Gets or sets the contact's status ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactCampaign">
            <summary>
            Gets or sets the contact's campaign
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactSalutation">
            <summary>
            Gets or sets the salutation to use for this contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactBounces">
            <summary>
            Gets or sets the number of bounced e-mails for this contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactLastLogon">
            <summary>
            Gets or sets timestamp of last logon.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactCompanyName">
            <summary>
            Gets or sets the contact's e-company name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactPersonaID">
            <summary>
            Gets or sets persona ID the contact belongs to or null, if no such persona exists.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactAge">
            <summary>
            Gets the contact's age (returns 0 if contact's birthday is not set).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.IsMerged">
            <summary>
            Checks whether contact is merged. Site contact merged to site contact and global contact merged to 
            global contact are considered as merged by this property. Site contacts merged to global contacts 
            are not considered as merged by this property.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactDescriptiveName">
            <summary>
            Gets the contact full name with 'merged'/'global' flags.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.Accounts">
            <summary>
            Collection of the accounts belonging to the object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.Orders">
            <summary>
            Collection or all contact orders made on current site.
            Global contact does not have any orders even thou its merged site contact have them.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.PurchasedProducts">
            <summary>
            Collection of all contacts purchased products from all sites.
            Global contact does not have any products even thou its merged site contact have them.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.Wishlist">
            <summary>
            Collection of all contacts wishlist items from all sites.
            Global contact does not have any wishlist items even thou its merged site contact have them.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.Users">
            <summary>
            Collection of all contacts users. Global contact does not have any users even thou its merged site contact have them.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.Roles">
            <summary>
            Collection of all contacts roles.
            Global contact does not have any roles even thou its merged site contact have them.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.ContactGroups">
            <summary>
            Collection of all contacts groups.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.MergedContacts">
            <summary>
            Collection of all contacts merged into current contact. Returns only contacts which are directly merged into current contact.
            To receive complete tree of all contact's you must iterate through items from MergedContacts and retrieve merged contacts recursively.
            Global contacts return both site and global contacts merged into current contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.LastActivity">
            <summary>
            Last activity of the contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactInfo.CurrentIPStored">
            <summary>
            Indicates if contact already visited site and is IP and User-Agent information are stored in session.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactInfoProvider">
            <summary>
            Class providing ContactInfo management.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactInfoProvider.deleteLock">
            <summary>
            Delete lock
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactInfoProvider.mMergers">
            <summary>
            Automatic contact mergers added via API
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.#ctor">
            <summary>
            Constructor which enables weak reference caching by ID and GUID.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContacts">
            <summary>
            Returns a query for all the ContactInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactInfo(System.Int32)">
            <summary>
            Returns contact with specified ID.
            </summary>
            <param name="contactId">Contact ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactInfo(System.Guid,System.String)">
            <summary>
            Returns contact with specified GUID.
            </summary>
            <param name="contactGuid">Contact GUID</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactInfo(System.Guid,System.Boolean,System.String)">
            <summary>
            Returns contact with specified GUID.
            </summary>
            <param name="contactGuid">Contact GUID</param>                
            <param name="merged">Indicates if merged contacts should be included</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.SetContactInfo(CMS.OnlineMarketing.ContactInfo,System.Boolean)">
            <summary>
            Sets (updates or inserts) specified contact.
            </summary>
            <param name="contactObj">Contact to be set</param>
            <param name="processAutomaticMerging">Switch whether or not should be processed automatic contact merging. Default is true.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.SetContactInfo(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Sets (updates or inserts) specified contact.
            </summary>
            <param name="contactObj">Contact to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DeleteContactInfo(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Deletes specified contact. To delete dependencies use ContactHelper.Delete() instead.
            </summary>
            <param name="contactObj">Contact to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DeleteContactInfo(System.Int32)">
            <summary>
            Deletes contact with specified ID. To delete dependencies use ContactHelper.Delete() instead.
            </summary>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DeleteContactInfos(System.String)">
            <summary>
            Deletes all infos by stored procedure.
            </summary>
            <param name="whereCondition">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DeleteContactInfos(System.String,System.Int32)">
            <summary>
            Deletes all infos by stored procedure.
            </summary>
            <param name="whereCondition">Where condition</param>
            <param name="batchLimit">Batch limit.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hash tables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateLeadReplicationStatus(CMS.OnlineMarketing.ContactInfo,System.DateTime)">
            <summary>
            Updates the specified contact in database with information related to Salesforce lead replication.
            </summary>
            <param name="contact">The contact to update.</param>
            <param name="lastLeadReplicationDateTime">The date and time of contact's last successful replication.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.RequireLeadReplication(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Marks the specified contact as required for lead replication despite its score.
            </summary>
            <param name="contact">The contact to mark for lead replication.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactFullName(System.Int32)">
            <summary>
            Returns full contact name consisting of first, middle and last name.
            </summary>
            <param name="id">Contact info ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactFullName(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Returns full contact name consisting of first, middle and last name.
            </summary>
            <param name="ci">Contact info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactStatus(System.Int32,System.String)">
            <summary>
            Updates contact status ID of specified contacts.
            </summary>
            <param name="statusId">Contact status ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.MoveRelations(System.Int32,System.Int32)">
            <summary>
            Moves activities, memberships, IPs, UserAgents and ContactGroup relations into parent contact.
            </summary>
            <param name="mergeIntoContactID">ID of parent contact</param>
            <param name="mergeFromContactID">ID of merging child contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.RemoveRelations(System.Int32,System.Int32)">
            <summary>
            Removes relations before object is deleted. Applicable only for merged contacts.
            </summary>
            <param name="contactID">Deleted contact ID</param>
            <param name="mergedWithContactID">Parent contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.SplitRelations(System.Int32,System.Int32)">
            <summary>
            Splits contact's related records.
            </summary>
            <param name="mergeContactID">ID of parent contact</param>
            <param name="splitContactID">ID of contact being split</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DuplicateRelations(System.Int32,System.Int32,System.DateTime)">
            <summary>
            Duplicate contact's related records.
            </summary>
            <param name="parentContactID">ID of parent contact</param>
            <param name="mergedContactID">ID of contact being split</param>
            <param name="mergedContactWhen">DateTime when contact was merged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetLastLogged(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Returns contact from given set of ContactIDs which has last logged activity.
            </summary>
            <remarks>
            Returns first ID from contactIds list when no activities are found for specified contacts.
            </remarks>
            <param name="contactIds">List of Contact IDs</param>
            <returns>Returns ID of found ContactInfo</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactIds"/> is null</exception>
            <exception cref="T:System.ArgumentException"><paramref name="contactIds"/> cannot be empty</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetMostActive(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Returns contact from given set of ContactIDs which has most activities.
            </summary>
            <remarks>
            Returns first ID from contactIds list when no activities are found for specified contacts.
            </remarks>
            <param name="contactIds">List of Contact IDs</param>
            <returns>ID of contact with most activities</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="contactIds"/> is null</exception>
            <exception cref="T:System.ArgumentException"><paramref name="contactIds"/> cannot be empty</exception>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.SetContactBounces(System.Int32,System.Int32)">
            <summary>
            Sets the bounced e-mails counter to specified value for a contact.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="bounces">Number of bounced emails of the contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.AddContactBounce(System.Int32)">
            <summary>
            Increments number of bounces by one for specified contact.
            </summary>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.AddContactBounceByEmail(System.String)">
            <summary>
            Increments number of bounces by one for all contacts specified by e-mail address across all sites.
            </summary>
            <param name="email">E-mail address</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.MakeContactNotAnonymous(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            If contact is anonymous then it is changed not to be anonymous.
            </summary>
            <param name="contact">COntact to be modified</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.AddAutomaticContactMerger(CMS.OnlineMarketing.AutomaticContactMerger)">
            <summary>
            Registers automatic contact merger that gets ran when method SetContactInfo is called.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.RemoveAutomaticContactMerger(CMS.OnlineMarketing.AutomaticContactMerger)">
            <summary>
            Deregisters automatic contact merger that gets ran when method SetContactInfo is called.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.RemovePersonaFromContacts(System.Int32)">
            <summary>
            Removes given persona from contacts. Sets column ContactPersonaID to NULL on contacts where this column equals to given persona ID.
            </summary>
            <param name="personaID">This persona will be removed from contacts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactsInternal">
            <summary>
            Returns a query for all the ContactInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactInfoInternal(System.Int32)">
            <summary>
            Returns contact with specified ID.
            </summary>
            <param name="contactId">Contact ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactInfoInternal(System.Guid,System.String)">
            <summary>
            Returns contact with specified GUID.
            </summary>
            <param name="contactGuid">Contact GUID</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContactInfoInternal(System.Guid,System.Boolean,System.String)">
            <summary>
            Returns contact with specified GUID.
            </summary>
            <param name="contactGuid">Contact GUID</param>                
            <param name="merged">Merged contacts should be included</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.SetContactInfoInternal(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Sets (updates or inserts) specified contact.
            </summary>
            <param name="contactObj">Contact to be set</param>   
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.SetContactInfoInternal(CMS.OnlineMarketing.ContactInfo,System.Boolean)">
            <summary>
            Sets (updates or inserts) specified contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.ProcessTriggers(CMS.OnlineMarketing.ContactInfo,System.Boolean)">
            <summary>
            Processes all triggers that are bound to ContactInfo object type.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.ProcessAutomaticMerging(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.List{System.String})">
            <summary>
            Runs all automatic contact mergers. Starts with merging by email set up in settings, then proceeds to AutomaticContactMergers added via API.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DeleteContactInfoInternal(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Deletes specified contact.
            </summary>
            <param name="contactObj">Contact to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DeleteContactInfosInternal(System.String)">
            <summary>
            Deletes all contacts by specified ID. 
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.DeleteContactInfosInternal(System.String,System.Int32)">
            <summary>
            Deletes all contacts by specified ID. 
            </summary>
            <param name="where">Where condition</param>
            <param name="batchLimit">Batch limit</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateLeadReplicationStatusInternal(CMS.OnlineMarketing.ContactInfo,System.DateTime)">
            <summary>
            Updates the specified contact in database with information related to Salesforce lead replication.
            </summary>
            <param name="contact">The contact to update.</param>
            <param name="lastLeadReplicationDateTime">The date and time of contact's last successful replication.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.RequireLeadReplicationInternal(CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Marks the specified contact as required for lead replication despite its score.
            </summary>
            <param name="contact">The contact to mark for lead replication.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.LogContactChange(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.List{System.String},System.Int32,System.Boolean)">
            <summary>
            Logs the contact change to the change queue, so it can be processed later by Contact Group and Scoring evaluators.
            </summary>
            <param name="contact">Currently changed contact</param>
            <param name="changedProperties">List of properties which were changed</param>
            <param name="wasMergedInto">ID of the previously parent contact if split is being performed now</param>
            <param name="newContact">If true the change represents a new contact creation</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactStatusInternal(System.Int32,System.String)">
            <summary>
            Updates contact status ID of specified contacts.
            </summary>
            <param name="statusId">Contact status ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactFromExternalData(CMS.DataEngine.BaseInfo,System.Boolean)">
            <summary>
            Updates contact information from record submitted through BizForm module - this requires form fields to be mapped to contact.
            </summary>
            <param name="source">Data class object with source data and mapping definition</param>
            <param name="allowOverwrite">If TRUE existing contact data can be overwritten otherwise only empty properties can be filled</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactFromExternalData(System.Int32,CMS.OnlineMarketing.MemberTypeEnum,System.Int32,System.Boolean)">
            <summary>
            Updates contact information from record submitted through BizForm module - this requires form fields to be mapped to contact.
            </summary>
            <param name="relatedId">Related ID of the object</param>
            <param name="memberType">Type of source object</param>
            <param name="contactId">Contact ID</param>
            <param name="allowOverwrite">If TRUE existing contact data can be overwritten otherwise only empty properties can be filled</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactFromExternalData(CMS.DataEngine.BaseInfo,System.Boolean,System.Int32)">
            <summary>
            Updates contact information from record submitted through BizForm module - this requires form fields to be mapped to contact.
            </summary>
            <param name="source">Data class object with source data and mapping definition</param>
            <param name="allowOverwrite">If TRUE existing contact data can be overwritten otherwise only empty properties can be filled</param>
            <param name="contactID">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactFromExternalData(CMS.DataEngine.BaseInfo,System.Boolean,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Updates contact information from record submitted through BizForm module - this requires form fields to be mapped to contact.
            </summary>
            <param name="source">Data class object with source data and mapping definition</param>
            <param name="allowOverwrite">If TRUE existing contact data can be overwritten otherwise only empty properties can be filled</param>
            <param name="contact">Optional. If null then current contact will be updated.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContactFromExternalSource(System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Updates contact information from set of data.
            </summary>
            <param name="contactData">Set of data</param>
            <param name="allowOverwrite">Allows overwrite existing contact information</param>
            <param name="contactId">Updated contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.UpdateContact(CMS.OnlineMarketing.ContactInfo,System.String,System.Object,System.Nullable{System.Boolean})">
            <summary>
            Updates single contact information.
            </summary>
            <param name="updatedContact">Contact being updated</param>
            <param name="key">Property of contact being updated</param>
            <param name="value">New value of the contact</param>
            <param name="allowOverwrite">Indicates if existing value can be overwritten</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetCountryID(System.Object)">
            <summary>
            Helper method that returns country ID based on input value.
            </summary>
            <param name="value">Contains either int or string value (country ID or name)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetStateID(System.Object)">
            <summary>
            Helper method that returns state ID based on input value.
            </summary>
            <param name="value">Contains either int or string value (state ID or name)</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.SetContactBouncesInternal(System.Int32,System.Int32)">
            <summary>
            Sets the bounced e-mails counter to specified value for a contact.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="bounces">Number of bounced emails of the contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.AddContactBounceInternal(System.Int32)">
            <summary>
            Incerements number of bounces by one for specified contact.
            </summary>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.AddContactBounceByEmailInternal(System.String)">
            <summary>
            Incerements number of bounces by one for all contacts specified by e-mail address across all sites.
            </summary>
            <param name="email">E-mail address</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.RemovePersonaFromContactsInternal(System.Int32)">
            <summary>
            Removes given persona from contacts. Sets column ContactPersonaID to NULL on contacts where this column equals to given persona ID.
            </summary>
            <param name="personaID">This persona will be removed from contacts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactInfoProvider.GetContact(System.Int32)">
            <summary>
            Gets contact from context or by ID.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactListInfo">
            <summary>
            "Virtual" object for loading data from contact view.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactListInfo.ColumnNames">
            <summary>
            Gets the list of column names
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactRoleInfo">
            <summary>
            ContactRoleInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactRoleInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactRoleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactRoleInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactRoleInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactRoleInfo.ContactRoleDescription">
            <summary>
            Gets or sets the contact role description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactRoleInfo.ContactRoleDisplayName">
            <summary>
            Gets or sets the contact role display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactRoleInfo.ContactRoleName">
            <summary>
            Gets or sets the contact role name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactRoleInfo.ContactRoleSiteID">
            <summary>
            Gets or sets the contact role site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactRoleInfo.ContactRoleID">
            <summary>
            Gets or sets the contact role ID.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactRoleInfoProvider">
            <summary>
            Class providing ContactRoleInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.#ctor">
            <summary>
            Constructor using ID and codename Hashtables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoles">
            <summary>
            Returns a query for all the ContactRoleInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoleInfo(System.Int32)">
            <summary>
            Returns contact role with specified ID.
            </summary>
            <param name="roleId">Contact role ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoleInfo(System.String,System.String)">
            <summary>
            Returns contact role with specified name.
            </summary>
            <param name="roleName">Contact role name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.SetContactRoleInfo(CMS.OnlineMarketing.ContactRoleInfo)">
            <summary>
            Sets (updates or inserts) specified contact role.
            </summary>
            <param name="roleObj">Contact role to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.DeleteContactRoleInfo(CMS.OnlineMarketing.ContactRoleInfo)">
            <summary>
            Deletes specified contact role.
            </summary>
            <param name="roleObj">Contact role to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.DeleteContactRoleInfo(System.Int32)">
            <summary>
            Deletes contact role with specified ID.
            </summary>
            <param name="roleId">Contact role ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRolesInternal">
            <summary>
            Returns a query for all the ContactRoleInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoleInfoInternal(System.Int32)">
            <summary>
            Returns contact role with specified ID.
            </summary>
            <param name="roleId">Contact role ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.GetContactRoleInfoInternal(System.String,System.String)">
            <summary>
            Returns contact role with specified name.
            </summary>
            <param name="roleName">Contact role name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.SetContactRoleInfoInternal(CMS.OnlineMarketing.ContactRoleInfo)">
            <summary>
            Sets (updates or inserts) specified contact role.
            </summary>
            <param name="roleObj">Contact role to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactRoleInfoProvider.DeleteContactRoleInfoInternal(CMS.OnlineMarketing.ContactRoleInfo)">
            <summary>
            Deletes specified contact role.
            </summary>
            <param name="roleObj">Contact role to be deleted</param>        
        </member>
        <member name="T:CMS.OnlineMarketing.ContactStatusInfo">
            <summary>
            ContactStatusInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactStatusInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactStatusInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactStatusInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactStatusInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactStatusInfo.ContactStatusDescription">
            <summary>
            Gets or set the contact status description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactStatusInfo.ContactStatusName">
            <summary>
            Gets or set the contact status name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactStatusInfo.ContactStatusSiteID">
            <summary>
            Gets or set the contact status site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactStatusInfo.ContactStatusDisplayName">
            <summary>
            Gets or set the contact status display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactStatusInfo.ContactStatusID">
            <summary>
            Gets or set the contact status ID.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactStatusInfoProvider">
            <summary>
            Class providing ContactStatusInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.#ctor">
            <summary>
            Constructor using ID and codename Hashtables.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatuses">
            <summary>
            Returns a query for all the ContactStatusInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatusInfo(System.Int32)">
            <summary>
            Returns contact status with specified ID.
            </summary>
            <param name="statusId">Contact status ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatusInfo(System.String,System.String)">
            <summary>
            Returns contact status with specified name.
            </summary>
            <param name="statusName">Contact status name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.SetContactStatusInfo(CMS.OnlineMarketing.ContactStatusInfo)">
            <summary>
            Sets (updates or inserts) specified contact status.
            </summary>
            <param name="statusObj">Contact status to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.DeleteContactStatusInfo(CMS.OnlineMarketing.ContactStatusInfo)">
            <summary>
            Deletes specified contact status.
            </summary>
            <param name="statusObj">Contact status to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.DeleteContactStatusInfo(System.Int32)">
            <summary>
            Deletes contact status with specified ID.
            </summary>
            <param name="statusId">Contact status ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatusesInternal">
            <summary>
            Returns a query for all the ContactStatusInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatusInfoInternal(System.Int32)">
            <summary>
            Returns contact status with specified ID.
            </summary>
            <param name="statusId">Contact status ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.GetContactStatusInfoInternal(System.String,System.String)">
            <summary>
            Returns contact status with specified name.
            </summary>
            <param name="statusName">Contact status name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.SetContactStatusInfoInternal(CMS.OnlineMarketing.ContactStatusInfo)">
            <summary>
            Sets (updates or inserts) specified contact status.
            </summary>
            <param name="statusObj">Contact status to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.ContactStatusInfoProvider.DeleteContactStatusInfoInternal(CMS.OnlineMarketing.ContactStatusInfo)">
            <summary>
            Deletes specified contact status.
            </summary>
            <param name="statusObj">Contact status to be deleted</param>        
        </member>
        <member name="T:CMS.OnlineMarketing.IPInfo">
            <summary>
            IPInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.IPInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.IPInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfo.#ctor">
            <summary>
            Constructor - Creates an empty IPInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new IPInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.IPInfo.IPID">
            <summary>
            Gets or sets the ID of this IP address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IPInfo.IPAddress">
            <summary>
            Gets or sets the IP address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IPInfo.IPCreated">
            <summary>
            Gets or sets the date and time when this IP address was created.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IPInfo.IPOriginalContactID">
            <summary>
            Gets or sets the ID of original contact for this IP address.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.IPInfo.IPActiveContactID">
            <summary>
            Gets or sets the ID of active contact for this IP address.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.IPInfoProvider">
            <summary>
            Class providing IPInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.GetIps">
            <summary>
            Returns a query for all the IPInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.GetIPInfo(System.Int32)">
            <summary>
            Returns ip with specified ID.
            </summary>
            <param name="ipId">Ip ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.SetIPInfo(CMS.OnlineMarketing.IPInfo)">
            <summary>
            Sets (updates or inserts) specified ip.
            </summary>
            <param name="ipObj">Ip to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.DeleteIPInfo(CMS.OnlineMarketing.IPInfo)">
            <summary>
            Deletes specified ip.
            </summary>
            <param name="ipObj">Ip to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.DeleteIPInfo(System.Int32)">
            <summary>
            Deletes ip with specified ID.
            </summary>
            <param name="ipId">Ip ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.GetIpsInternal">
            <summary>
            Returns a query for all the IPInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.GetIPInfoInternal(System.Int32)">
            <summary>
            Returns ip with specified ID.
            </summary>
            <param name="ipId">Ip ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.SetIPInfoInternal(CMS.OnlineMarketing.IPInfo)">
            <summary>
            Sets (updates or inserts) specified ip.
            </summary>
            <param name="ipObj">Ip to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.IPInfoProvider.DeleteIPInfoInternal(CMS.OnlineMarketing.IPInfo)">
            <summary>
            Deletes specified ip.
            </summary>
            <param name="ipObj">Ip to be deleted</param>        
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipInfo">
            <summary>
            ContactMembershipInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipInfo.OBJECT_TYPE_USER">
            <summary>
            Object type for user
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipInfo.OBJECT_TYPE_SUBSCRIBER">
            <summary>
            Object type for subscriber
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipInfo.OBJECT_TYPE_CUSTOMER">
            <summary>
            Object type for customer
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipInfo.TYPEINFOUSER">
            <summary>
            Type information for user membership relations.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipInfo.TYPEINFOSUBSCRIBER">
            <summary>
            Type information for newsletter subscriber membership relations.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactMembershipInfo.TYPEINFOCUSTOMER">
            <summary>
            Type information for ecommerce customer membership relations.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfo.GetExisting">
            <summary>
            Returns the existing object based on current object data.
            </summary>
            <returns>ContactMembershipInfo object</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactMembershipInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactMembershipInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipInfo.MembershipID">
            <summary>
            Gets or sets the ID of relationship.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipInfo.OriginalContactID">
            <summary>
            Gets or sets the ID of the original contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipInfo.ActiveContactID">
            <summary>
            Gets or sets the ID of the active contact.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipInfo.MemberType">
            <summary>
            Gets or sets the type of object this contact is related to.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipInfo.RelatedID">
            <summary>
            Gets or sets the ID of the related object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipInfo.MembershipGUID">
            <summary>
            Gets or sets the membership's unique identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipInfo.MembershipCreated">
            <summary>
            Gets or sets the date and time the membership object was created.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactMembershipInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactMembershipInfoProvider">
            <summary>
            Class providing ContactMembershipInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.GetRelationships">
            <summary>
            Returns a query for all the ContactMembershipInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.GetRelationships(System.Int32,CMS.OnlineMarketing.MemberTypeEnum)">
            <summary>
            Returns list of IDs of all related objects for specified contact and membership type.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="membershipType">Membership type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.SetRelationship(System.Int32,CMS.OnlineMarketing.MemberTypeEnum,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Adds specified relationship among specified contact, related object and object type.
            </summary>
            <param name="relatedId">ID of related object</param>
            <param name="memberType">Type of object</param>
            <param name="originalContactId">Contact ID</param>
            <param name="activeContactId">Contact ID</param>
            <param name="mergeUsers">Indicates if user contacts should be merged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.SetRelationship(CMS.OnlineMarketing.MemberTypeEnum,CMS.DataEngine.BaseInfo,CMS.OnlineMarketing.ContactInfo,System.Boolean)">
            <summary>
            Adds specified relationship among specified contact, related object and object type.
            </summary>
            <param name="memberType">Type of object</param>
            <param name="info">Base info of related object</param>
            <param name="currentContact">Contact info</param>
            <param name="mergeUsers">Indicates if users should be merged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.DeleteRelationship(System.Int32)">
            <summary>
            Deletes specified relationship among specified contact, related object and object type.
            </summary>
            <param name="membershipId">Membership ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.DeleteRelationship(System.Int32,System.Int32)">
            <summary>
            Deletes specified relationship among specified contact, related object and object type.
            </summary>
            <param name="membershipId">Membership ID</param>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.HasRelationship(System.Int32)">
            <summary>
            Check whether given contact has relationship.
            </summary>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.GetMembershipInfo(System.Int32)">
            <summary>
            Returns relationship among specified contact, related object and object type.
            </summary>
            <param name="membershipID">ID of membership record</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.GetMembershipInfo(System.Int32,System.Int32,System.Int32,CMS.OnlineMarketing.MemberTypeEnum)">
            <summary>
            Returns relationship among specified contact, related object and object type.
            </summary>
            <param name="activeContactId">Active contact ID</param>
            <param name="originalContactId">Original contact ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Member type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.SetMembershipInfo(CMS.OnlineMarketing.ContactMembershipInfo)">
            <summary>
            Sets relationship among specified contact, related object and object type.
            </summary>
            <param name="infoObj">Contact-related object-object type relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.DeleteMembershipInfo(CMS.OnlineMarketing.ContactMembershipInfo)">
            <summary>
            Deletes relationship among specified contact, related object and object type.
            </summary>
            <param name="infoObj">Contact-related object-object type relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.DeleteMembershipInfo(System.Int32)">
            <summary>
            Deletes relationship among specified contact, related object and object type.
            </summary>
            <param name="membershipID">ID of record</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.DeleteMembershipInfo(System.Int32,System.Int32,System.Int32,CMS.OnlineMarketing.MemberTypeEnum)">
            <summary>
            Deletes relationship among specified contact, related object and object type.
            </summary>
            <param name="activeContactId">Active contact ID</param>
            <param name="originalContactId">Original contact ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Member type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.GetRelationshipsInternal">
            <summary>
            Returns a query for all the ContactMembershipInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.GetMembershipInfoInternal(System.Int32)">
            <summary>
            Returns relationship among specified contact, related object and object type.
            </summary>
            <param name="membershipID">ID of relation</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.GetMembershipInfoInternal(System.Int32,System.Int32,System.Int32,CMS.OnlineMarketing.MemberTypeEnum)">
            <summary>
            Returns relationship among specified contact, related object and object type.
            </summary>
            <param name="activeContactId">Active contact ID</param>
            <param name="originalContactId">Original contact ID</param>
            <param name="relatedObjectId">Related object ID</param>
            <param name="memberType">Member type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.SetMembershipInfoInternal(CMS.OnlineMarketing.ContactMembershipInfo)">
            <summary>
            Sets relationship among specified contact, related object and object type.
            </summary>
            <param name="infoObj">Contact-related object-object type relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactMembershipInfoProvider.DeleteMembershipInfoInternal(CMS.OnlineMarketing.ContactMembershipInfo)">
            <summary>
            Deletes relationship among specified contact, related object and object type.
            </summary>
            <param name="infoObj">Contact-related object-object type relationship to be deleted</param>
        </member>
        <member name="T:CMS.OnlineMarketing.ContactHelper">
            <summary>
            Class used for merging, splitting and deleting contacts.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactHelper.ANONYMOUS">
            <summary>
            Prefix for anonymous contacts.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactHelper.MERGED">
            <summary>
            Prefix for contacts created from merging.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactHelper.REPLACED_BRACKET_LEFT">
            <summary>
            Replaced left bracket.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.ContactHelper.REPLACED_BRACKET_RIGHT">
            <summary>
            Replaced right bracket.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Merge(CMS.OnlineMarketing.ContactInfo,System.Data.DataSet,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Will merge contacts into another contact. If contacts are from different sites then new global contact will be created.
            </summary>
            <param name="mergeInto">Optional. If not specified then new contact will be created</param>
            <param name="mergeContacts">Dataset of ContactInfo objects to be merged</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of account-contact collision results. Contains 'AccountID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>If merged contacts are from different sites then newly created contact will be returned. Otherwise contact passed as mergeInto parameter will be returned.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Merge(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.List{CMS.OnlineMarketing.ContactInfo},System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Will merge contacts into another contact. If contacts are from different sites then new global contact will be created.
            </summary>
            <param name="mergeInto">Optional. If not specified then new contact will be created</param>
            <param name="mergeContacts">List of ContactInfo object to be merged</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of collision results. Contains 'AccountID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>If merged contacts are from different sites then newly created contact will be returned. Otherwise contact passed as mergeInto parameter will be returned.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Merge(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Merges one contact into another contact. Contacts must be on the same site (or global).
            </summary>
            <param name="mergeInto">Will be merging into this contact. Must be on same site as 'mergeFrom' contact or global</param>
            <param name="mergeFrom">Will be merged. Must be as 'mergeInto' contact or global if 'mergeInto' is global</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of collision results. Contains 'AccountID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>Returns TRUE if merging was successful.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeIntoGlobalContact(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Merging into global contact.
            </summary>
            <param name="mergeInto">Must be a global contact</param>
            <param name="mergeFrom">May be global or site contact</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of collision results. Contains 'AccountID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeIntoSiteContact(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Merging two contacts from the same site.
            </summary>
            <param name="mergeInto">Merging into this contact. Must be a site contact</param>
            <param name="mergeFrom">Merging this contact. Must be a site contact</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of collision results. Contains 'AccountID' keys and 'ContactRoleID' values.</param>
            <param name="CGresult">Optional. Hashtable containing result of contact groups which should be added to parent contact.</param>
            <returns>Returns TRUE if merging was successful.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeAccountContactRelations(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Collections.Hashtable)">
            <summary>
            Changes all Account - Contact relations assigned to 'mergeFrom' to be newly created in 'mergeInto' contact
            if not already exist.
            </summary>
            <param name="mergeInto">Account - Contact of merging parent contact</param>
            <param name="mergeFrom">Relation of merging child contact</param>
            <param name="ACcollisionResult">Optional. Hashtable containing result of collision results. Contains 'AccountID' keys and 'ContactRoleID' values.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeContactGroupRelations(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Collections.Hashtable)">
            <summary>
            Compares contact group relations of merged and parent contact and creates new relations by default or uses values determined by user.
            </summary>
            <param name="mergeInto">Parent contact</param>
            <param name="mergeFrom">Child contact</param>
            <param name="CGcollisionResult">Optional. Hashtable containing result of user choice in merging dialog. Contains 'ContactGroupID' keys and 'true/false' values. Default value is TRUE if key is not contained.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.UpdateAdditionalTables(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Updates Marketing automation state for merged contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CreateAccountContactRelation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new Account - Contact relation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.UpdateAccountContactRelation(System.Data.DataRow,System.Int32)">
            <summary>
            Updates Account - Contact relation.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Split(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.IList{System.String},System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits contacts.
            </summary>
            <param name="parentContact">Parent contact from which contacts are splitted</param>
            <param name="contacts">List of contacts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on split contact should be filled with fields from merged contact</param>
            <param name="copyActivities">Indicates if activities, IPs, membership relations</param>
            <param name="removeAccounts">Indicates if accounts related to splitted contact should be removed from parent contact</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted contact should be removed from parent contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Split(CMS.OnlineMarketing.ContactInfo,System.Data.DataSet,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits contacts.
            </summary>
            <param name="parentContact">Parent contact from which contacts are splitted</param>
            <param name="contacts">List of contacts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on split contact should be filled with fields from merged contact</param>
            <param name="copyActivities">Indicates if activities, IPs, membership relations</param>
            <param name="removeAccounts">Indicates if accounts related to splitted contact should be removed from parent contact</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted contact should be removed from parent contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Split(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.List{CMS.OnlineMarketing.ContactInfo},System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits contacts.
            </summary>
            <param name="parentContact">Parent contact from which contacts are splitted</param>
            <param name="contacts">List of contacts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on split contact should be filled with fields from merged contact</param>
            <param name="copyActivities">Indicates if activities, IPs, membership relations</param>
            <param name="removeAccounts">Indicates if accounts related to splitted contact should be removed from parent contact</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted contact should be removed from parent contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.SplitContacts(CMS.OnlineMarketing.ContactInfo,System.Collections.Generic.List{CMS.OnlineMarketing.ContactInfo},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits contacts.
            </summary>
            <param name="parentContact">Parent contact from which contacts are splitted</param>
            <param name="contacts">List of contacts to split</param>
            <param name="copyMissingFields">Indicates if empty fields on split contact should be filled with fields from merged contact</param>
            <param name="copyActivities">Indicates if activities, IPs, membership relations</param>
            <param name="removeAccounts">Indicates if accounts related to splitted contact should be removed from parent contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.SplitFromContact(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Splits merged contact from another contact.
            </summary>
            <param name="parentContact">Parent contact under which is contact merged</param>
            <param name="mergedContact">Merged contact</param>
            <param name="copyMissingFields">Indicates if fields which are empty on merged contact should be filled with data from parent account</param>
            <param name="copyActivities">Indicates if fields which are empty on merged contact should be filled with data from parent account</param>
            <param name="removeAccounts">Indicates if accounts related to splitted contact should be removed from parent contact</param>
            <param name="removeContactGroups">Indicates if contact groups related to splitted contact should be removed from parent contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CopyParentActivities(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Copies activities which were created on parent contact after contacts were merged.
            </summary>
            <param name="parentContact">Parent contact under which is contact merged</param>
            <param name="mergedContact">Merged site contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CopyMissingFields(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Copies fields which are filled in parent contact and are empty in merged contact.
            </summary>
            <param name="sourceContact">Source of data</param>
            <param name="targetContact">Fields are filled in this contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CopyField(System.Object,System.Object,System.String)">
            <summary>
            Copy field specified by its data type.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CopyStringField(System.String,System.String)">
            <summary>
            Copies string field content.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CopyIntegerField(System.Int32,System.Int32)">
            <summary>
            Copies integer field content.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CopyDateTimeField(System.DateTime,System.DateTime)">
            <summary>
            Copies DateTime field content.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.SplitRecords(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo,System.Boolean)">
            <summary>
            Recursively loops through all contacts merged into 'parentContact' and changes all records to point to 'splitContact'.
            </summary>
            <param name="mergedContact">Contacts placed under 'splitContact'</param>
            <param name="splitContact">Contact being splitted</param>
            <param name="splitFromGlobal">Indicates if contact is splited from global</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.DeleteAccountRelations(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Remove account-contact relations from parent contact when relation to account is on merged contact as well.
            </summary>
            <param name="parentContact">Parent contact</param>
            <param name="mergedContact">Contact being splitted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.DeleteContactGroupRelations(CMS.OnlineMarketing.ContactInfo,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Remove contact group-contact relations from parent contact when relation to contact group is on merged contact as well.
            </summary>
            <param name="parentContact">Parent contact</param>
            <param name="mergedContact">Contact being splitted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.Delete(CMS.OnlineMarketing.ContactInfo,System.Boolean,System.Boolean)">
            <summary>
            Deletes contact. All related records are moved to parent contact or deleted.
            </summary>
            <param name="contact">Contact to be deleted</param>
            <param name="deleteMerged">Indicates if merged child contacts should be deleted as well or will be splitted before deleting parent contact.</param>
            <param name="moveActivities">Indicates if activities, relationships, IPs and UserAgents created on merged contact should be moved to parent contact.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.GetContactListInfos(CMS.DataEngine.QueryDataParameters,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns ContactListInfos for specified parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">SQL WHERE condition</param>
            <param name="orderBy">SQL ORDER BY parameters</param>
            <param name="topN">SQL TOP N parameters</param>
            <param name="columns">Selected columns</param>
            <returns>Returns DataSet</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.GetEmailDomain(System.String)">
            <summary>
            Returns email domain name.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeContactsForRelations(System.Int32,CMS.OnlineMarketing.MemberTypeEnum,System.Boolean,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Merges multiple contacts which are related to customer, user or subscriber.
            Merges contacts only when multiple contacts exists on single site. When multiple contacts exists on multiple sites then global contact is created.
            </summary>
            <param name="relatedID">ID of related object</param>
            <param name="memberType">Type of related object</param>
            <param name="mergeUsers">Indicates if users should be merged</param>
            <param name="currentContact">Current contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.CreateNewContact(System.String,System.String,System.String,System.Int32,System.Int32,CMS.OnlineMarketing.MemberTypeEnum)">
            <summary>
            Creates new contact for subscriber and its relation.
            </summary>
            <param name="firstName">Contact first name</param>
            <param name="lastName">Contact last name</param>
            <param name="emailAddress">Contact e-mail address</param>
            <param name="siteId">Site ID</param>
            <param name="relId">ID for relation</param>
            <param name="memberType">Member type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.GetNewContact(System.String,System.Boolean,System.Int32)">
            <summary>
            Creates and returns new anonymous contact.
            </summary>
            <returns>Returns new ContactInfo</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.GetName(System.String)">
            <summary>
            Returns name for newly created anonymous contact.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.EscapeString(System.String)">
            <summary>
            Escapes SQL string for use in dataset row filtering
            </summary>
            <param name="text">Text to be escaped</param>
            <returns>Returns escaped string</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.GetSiteParentRecursive(System.Int32)">
            <summary>
            Gets parent contact. If parent contact is merged then its parent contact is recursively found and returned.
            </summary>
            <param name="parentContactId">Parent contact to be found</param>
            <returns>Returns parent contact which is not merged into another site contact</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.AuthorizedReadContact(System.Int32,System.Boolean)">
            <summary>
            Indicates if current user is authorized for site contacts.
            </summary>
            <param name="siteID">SiteID of an contact</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.AuthorizedModifyContact(System.Int32,System.Boolean)">
            <summary>
            Returns if current user is authorized to modify contact.
            </summary>
            <param name="siteID">SiteID of an contact</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.AuthorizedForObject(System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns true if user is authorized per resource
            </summary>
            <param name="siteID">Object's site ID</param>
            <param name="permissionSite">Name of the permission for site objects</param>
            <param name="permissionGlobal">Name of the permission for global objects</param>
            <param name="globalSetting">Name of settings for global objects</param>
            <param name="noPermissionRedirect">Indicates if redirect should be done when not enough permissions</param>
            <returns>Returns TRUE if user is authorized for the object</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.ObjectSiteID(System.Object)">
            <summary>
            Returns Site ID of contact.
            </summary>
            <param name="contact">Contact info object</param>
            <returns>Returns site ID. Returns -1 when conversion of object fails.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeContactsForSubscriberOrCustomer(System.Int32,CMS.OnlineMarketing.MemberTypeEnum,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Merges contacts which are related to specific newsletter subscriber or customer.
            </summary>
            <param name="relatedId">ID of the related object</param>
            <param name="memberType">Type of the object</param>
            <param name="currentContact">Current contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeUserSiteContacts(System.Int32,CMS.OnlineMarketing.ContactInfo)">
            <summary>
            Merges contacts on same site which are related to specified user.
            </summary>
            <param name="userId">User ID</param>
            <param name="currentContact">Current contact</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.MergeGlobalContactsForUser(System.Int32)">
            <summary>
            Merges site contacts into global contact when specified user has contacts on multiple sites.
            </summary>
            <param name="userID">User ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.SelectGlobalContact(System.Collections.Generic.IEnumerable{CMS.OnlineMarketing.ContactInfo})">
            <summary>
            Selects best possible global contact from given list of contacts.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.ContactHelper.RemoveCustomer(System.Int32)">
            <summary>
            Removes customer dependencies in all contact management objects.
            </summary>
            <param name="customerID">Customer being deleted</param>
        </member>
        <member name="P:CMS.OnlineMarketing.ContactHelper.IsSiteManager">
            <summary>
            Indicates if control is placed in Site manager.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.PageVisitInfo">
            <summary>
            PageVisitInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.PageVisitInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.PageVisitInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfo.#ctor">
            <summary>
            Constructor - Creates an empty PageVisitInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new PageVisitInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.PageVisitInfo.PageVisitID">
            <summary>
            Gets or sets the ID of the page visit.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.PageVisitInfo.PageVisitMVTCombinationName">
            <summary>
            Gets or sets the name of the MVT combination for this page visit.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.PageVisitInfo.PageVisitDetail">
            <summary>
            Gets or sets the querystring part of the referer URL for this page visit.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.PageVisitInfo.PageVisitABVariantName">
            <summary>
            Gets or sets the name of the AB variant for this page visit.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.PageVisitInfo.PageVisitActivityID">
            <summary>
            Gets or sets the ID of the page visit activity.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.PageVisitInfoProvider">
            <summary>
            Class providing PageVisitInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisits">
            <summary>
            Returns a query for all the PageVisitInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitInfo(System.Int32)">
            <summary>
            Returns page visit with specified ID.
            </summary>
            <param name="visitId">Page visit ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitInfo(System.String)">
            <summary>
            Returns page visit with specified name.
            </summary>
            <param name="visitName">Page visit name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitInfoByActivityID(System.Int32)">
            <summary>
            Returns page visit for the given activity ID.
            </summary>
            <param name="activityId">Activity ID</param>    
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.SetPageVisitInfo(CMS.OnlineMarketing.PageVisitInfo)">
            <summary>
            Sets (updates or inserts) specified page visit.
            </summary>
            <param name="visitObj">Page visit to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.DeletePageVisitInfo(CMS.OnlineMarketing.PageVisitInfo)">
            <summary>
            Deletes specified page visit.
            </summary>
            <param name="visitObj">Page visit to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.DeletePageVisitInfo(System.Int32)">
            <summary>
            Deletes page visit with specified ID.
            </summary>
            <param name="visitId">Page visit ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitsInternal">
            <summary>
            Returns a query for all the PageVisitInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitInfoInternal(System.Int32)">
            <summary>
            Returns page visit with specified ID.
            </summary>
            <param name="visitId">Page visit ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitInfoInternal(System.String)">
            <summary>
            Returns page visit with specified name.
            </summary>
            <param name="visitName">Page visit name</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.SetPageVisitInfoInternal(CMS.OnlineMarketing.PageVisitInfo)">
            <summary>
            Sets (updates or inserts) specified page visit.
            </summary>
            <param name="visitObj">Page visit to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.DeletePageVisitInfoInternal(CMS.OnlineMarketing.PageVisitInfo)">
            <summary>
            Deletes specified page visit.
            </summary>
            <param name="visitObj">Page visit to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.PageVisitInfoProvider.GetPageVisitInfoByActivityIDInternal(System.Int32)">
            <summary>
            Returns page visit for the given activity ID.
            </summary>
            <param name="activityId">Activity ID</param>    
        </member>
        <member name="T:CMS.OnlineMarketing.SearchInfo">
            <summary>
            SearchInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.SearchInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.SearchInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfo.#ctor">
            <summary>
            Constructor - Creates an empty SearchInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SearchInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.SearchInfo.SearchProvider">
            <summary>
            Gets or sets the search provider.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.SearchInfo.SearchID">
            <summary>
            Gets or sets the search ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.SearchInfo.SearchActivityID">
            <summary>
            Gets or sets the ID of search activity.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.SearchInfo.SearchKeywords">
            <summary>
            Gets or sets the keywords for search.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.SearchInfoProvider">
            <summary>
            Class providing SearchInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.GetSearches">
            <summary>
            Returns a query for all the SearchInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.GetSearchInfo(System.Int32)">
            <summary>
            Returns search with specified ID.
            </summary>
            <param name="searchId">Search ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.GetSearchInfoByActivityID(System.Int32)">
            <summary>
            Returns search info for the specified activity.
            </summary>
            <param name="activityId">Activity ID</param>    
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.SetSearchInfo(CMS.OnlineMarketing.SearchInfo)">
            <summary>
            Sets (updates or inserts) specified search.
            </summary>
            <param name="searchObj">Search to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.DeleteSearchInfo(CMS.OnlineMarketing.SearchInfo)">
            <summary>
            Deletes specified search.
            </summary>
            <param name="searchObj">Search to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.DeleteSearchInfo(System.Int32)">
            <summary>
            Deletes search with specified ID.
            </summary>
            <param name="searchId">Search ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.GetSearchesInternal">
            <summary>
            Returns a query for all the SearchInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.GetSearchInfoInternal(System.Int32)">
            <summary>
            Returns search with specified ID.
            </summary>
            <param name="searchId">Search ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.SetSearchInfoInternal(CMS.OnlineMarketing.SearchInfo)">
            <summary>
            Sets (updates or inserts) specified search.
            </summary>
            <param name="searchObj">Search to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.DeleteSearchInfoInternal(CMS.OnlineMarketing.SearchInfo)">
            <summary>
            Deletes specified search.
            </summary>
            <param name="searchObj">Search to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.SearchInfoProvider.GetSearchInfoByActivityIDInternal(System.Int32)">
            <summary>
            Returns search info for the specified activity.
            </summary>
            <param name="activityId">Activity ID</param>    
        </member>
        <member name="T:CMS.OnlineMarketing.UserAgentInfo">
            <summary>
            UserAgentInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.UserAgentInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.UserAgentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserAgentInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserAgentInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.UserAgentInfo.UserAgentActiveContactID">
            <summary>
            Gets or sets the ID of active contact for this user agent.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.UserAgentInfo.UserAgentOriginalContactID">
            <summary>
            Gets or sets the ID of original contact for this user agent.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.UserAgentInfo.UserAgentString">
            <summary>
            Gets or sets the user agent string.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.UserAgentInfo.UserAgentID">
            <summary>
            Gets or sets the user agent's ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.UserAgentInfo.UserAgentCreated">
            <summary>
            Gets or sets the date and time when this UserAgent was created.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.UserAgentInfoProvider">
            <summary>
            Class providing UserAgentInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.GetUserAgents">
            <summary>
            Returns a query for all the UserAgentInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.GetUserAgentInfo(System.Int32)">
            <summary>
            Returns user agent with specified ID.
            </summary>
            <param name="agentId">User agent ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.SetUserAgentInfo(CMS.OnlineMarketing.UserAgentInfo)">
            <summary>
            Sets (updates or inserts) specified user agent.
            </summary>
            <param name="agentObj">User agent to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.DeleteUserAgentInfo(CMS.OnlineMarketing.UserAgentInfo)">
            <summary>
            Deletes specified user agent.
            </summary>
            <param name="agentObj">User agent to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.DeleteUserAgentInfo(System.Int32)">
            <summary>
            Deletes user agent with specified ID.
            </summary>
            <param name="agentId">User agent ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.GetUserAgentsInternal">
            <summary>
            Returns a query for all the UserAgentInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.GetUserAgentInfoInternal(System.Int32)">
            <summary>
            Returns user agent with specified ID.
            </summary>
            <param name="agentId">User agent ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.SetUserAgentInfoInternal(CMS.OnlineMarketing.UserAgentInfo)">
            <summary>
            Sets (updates or inserts) specified user agent.
            </summary>
            <param name="agentObj">User agent to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.UserAgentInfoProvider.DeleteUserAgentInfoInternal(CMS.OnlineMarketing.UserAgentInfo)">
            <summary>
            Deletes specified user agent.
            </summary>
            <param name="agentObj">User agent to be deleted</param>        
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestStatusEnum">
            <summary>
            MVT test status enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestStatusEnum.Disabled">
            <summary>
            Disabled - task is disabled.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestStatusEnum.Running">
            <summary>
            Running status - task is running.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestStatusEnum.NotRunning">
            <summary>
            Not running - task is enabled, but not running yet
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestStatusEnum.Finished">
            <summary>
            Finished status - task has finished.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTCombinationInfo">
            <summary>
            MVTCombinationInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfo.OBJECT_TYPE_DOCUMENTCOMBINATION">
            <summary>
            Object type for document combination
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfo.TYPEINFO">
            <summary>
            Type information (Web part, zone combinations).
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfo.TYPEINFO_DOCUMENT">
            <summary>
            Type information (Combinations containing widgets).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTCombinationInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTCombinationInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationConversions">
            <summary>
            Number of conversions of the current combination
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationGUID">
            <summary>
            Unique combination identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationID">
            <summary>
            MVT combination ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationDocumentID">
            <summary>
            MVT combination document ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationLastModified">
            <summary>
            Last modification of the MVT combination.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationName">
            <summary>
            MVT combination code name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationCustomName">
            <summary>
            MVT combination custom name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationPageTemplateID">
            <summary>
            MVT combination page template ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationEnabled">
            <summary>
            MVT combination enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationEnabledOriginal">
            <summary>
            MVT combination enabled - original value.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.MVTCombinationIsDefault">
            <summary>
            Indicates whether the MVT combination is a default combination (without any mvt variants).
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTCombinationInfoProvider">
            <summary>
            Class providing MVTCombinationInfo management.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfoProvider.COMBINATION_NAME_PREFIX">
            <summary>
            Default prefix for new combinations.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfoProvider.COMBINATION_CUSTOMNAME_MAX_LENGHT">
            <summary>
            The maximum allowed length of the automatically generated combination custom names.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationInfoProvider.mTemplateCombinations">
            <summary>
            Dictionary containing combination infos with keys: templateID_combinationName 
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinations">
            <summary>
            Returns a query for all the MVTCombinationInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfo(System.Int32)">
            <summary>
            Returns MVT combination with the specified ID.
            </summary>
            <param name="combinationId">Combination ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfo(System.Int32,System.String)">
            <summary>
            Returns MVT combination with the specified combination name and template id.
            </summary>
            <param name="combinationName">Code name of the combination.</param>
            <param name="pageTemplateId">The page template id.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Returns MVT combination with the specified parameters.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="culture">Culture code</param>
            <param name="combinationName">Combination name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetDefaultCombinationInfo(System.Int32)">
            <summary>
            Returns the default MVT combination for the specified page template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.SetMVTCombinationInfo(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Sets (updates or inserts) specified MVT combination.
            </summary>
            <param name="combinationObj">MVT combination to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteMVTCombinationInfo(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Deletes specified MVT combination.
            </summary>
            <param name="combinationObj">MVT combination to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteMVTCombinationInfo(System.Int32)">
            <summary>
            Deletes MVT combination with the specified ID.
            </summary>
            <param name="combinationId">MVT combination ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteMVTCombinationInfo(System.String)">
            <summary>
            Deletes MVT combinations using the specified condition.
            </summary>
            <param name="whereCondition">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.IsMVTCombinationValid(System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether the specified MVT combination is assigned to a specified multivariate test and the multivariate test is running.
            </summary>
            <param name="combinationName">Combination name</param>
            <param name="testName">Test name</param>
            <param name="siteName">Site name</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsForTemplate(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of MVT combinations for the specified page template.
            </summary>
            <param name="pageTemplateId">PageTemplate id parameter</param>
            <param name="enabledOnly">Indicates whether only enabled combinations should be loaded</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsWithoutWebpart(System.Int32,System.Guid,System.Int32)">
            <summary>
            Gets the combinations which do not contain the specified webpart (instanceGuid).
            </summary>
            <param name="pageTemplateId">The template id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsWithoutZone(System.Int32,System.String,System.Int32)">
            <summary>
            Gets the combinations which do not contain the specified zone.
            </summary>
            <param name="pageTemplateId">The template id</param>
            <param name="zoneId">The zone id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetNewCombinationNumber(System.Int32,System.Int32)">
            <summary>
            Gets the new combination number.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnsureTestCombination(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Ensures that the multivariate test has a default combination created.
            </summary>
            <param name="testObj">The multivariate test obj</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnsureTestCombination(System.Int32)">
            <summary>
            Ensures that the page template has a default combination created.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnableCombinations(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Disables/enables all combinations where the MVT variant is used.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantId">The MVT variant id</param>
            <param name="enable">True = Enable the combinations; False = Disable the combinations</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTestCombination(CMS.OnlineMarketing.MVTestInfo,System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Returns the combination for the specified multivariate test object.
            If any combination for this multivariate test is stored in a browser cookie then this combination will be used,
            otherwise will be chosen a random combination for this test.
            </summary>
            <param name="testObj">The multivariate test object</param>
            <param name="culture">Required culture</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTestCombination(CMS.OnlineMarketing.MVTestInfo,CMS.DocumentEngine.PageInfo,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Returns the combination for the specified multivariate test object.
            If any combination for this multivariate test is stored in a browser cookie then this combination will be used,
            otherwise will be chosen a random combination for this test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
            <param name="pi">The page info object</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetNewCombinationCustomName(System.String,System.String,System.Int32)">
            <summary>
            Combines the old custom name with the new variant.
            </summary>
            <param name="oldCombinationCustomName">The old combination custom name</param>
            <param name="newVariantName">The new variant name</param>
            <param name="newCombinationNumber">The new combination number</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationName(System.Int32)">
            <summary>
            Gets the formated name of the combination (i.e.: number=2 returns "Combination_002").
            </summary>
            <param name="combinationNumber">The number used in the formated combination name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationsInternal">
            <summary>
            Returns a query for all the MVTCombinationInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfoInternal(System.Int32)">
            <summary>
            Returns MVT combination with specified ID.
            </summary>
            <param name="combinationId">MVT combination ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.SetMVTCombinationInfoInternal(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Sets (updates or inserts) specified MVT combination.
            </summary>
            <param name="combinationObj">MVT combination to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteMVTCombinationInfoInternal(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Deletes specified MVT combination.
            </summary>
            <param name="combinationObj">MVT combination to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.DeleteMVTCombinationInfoInternal(System.String)">
            <summary>
            Deletes MVT combinations using the specified condition.
            </summary>
            <param name="whereCondition">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.IsMVTCombinationValidInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether MVT combination is assigned to a specified multivariate test and the multivariate test is running.
            </summary>
            <param name="combinationName">Combination name</param>
            <param name="testName">Test name</param>
            <param name="siteName">Site name</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsForTemplateInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of MVT combinations for the specified page template.
            </summary>
            <param name="pageTemplateId">Page template id</param>
            <param name="enabledOnly">Indicates whether only enabled should be loaded</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfoInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Returns MVT combination with the specified parameters.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="culture">Culture code</param>
            <param name="combinationName">Combination name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetDefaultCombinationInfoInternal(System.Int32)">
            <summary>
            Returns the default MVT combination for the specified page template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsWithoutWebpartInternal(System.Int32,System.Guid,System.Int32)">
            <summary>
            Gets the combinations which do not contain the specified webpart (instanceGuid).
            </summary>
            <param name="pageTemplateId">The template id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationsWithoutZoneInternal(System.Int32,System.String,System.Int32)">
            <summary>
            Gets the combinations which do not contain the specified zone.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetNewCombinationNumberInternal(System.Int32,System.Int32)">
            <summary>
            Gets a new combination number.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnsureTestCombinationInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Ensures that the multivariate test has a default combination created.
            </summary>
            <param name="testObj">The multivariate test obj</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnsureTestCombinationInternal(System.Int32)">
            <summary>
            Ensures that the page template has a default combination created.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.EnableCombinationsInternal(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Disables all combinations where the variant is used.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantId">The variant id</param>
            <param name="enable">True = Enable; false = Disable</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTestCombinationInternal(CMS.OnlineMarketing.MVTestInfo,System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Returns the combination for the specified multivariate test object.
            If any combination for this multivariate test is stored in a browser cookie then this combination will be used,
            otherwise will be chosen a random combination for this test.
            </summary>
            <param name="testObj">The multivariate test object</param>
            <param name="culture">Required culture</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTestCombinationInternal(CMS.OnlineMarketing.MVTestInfo,CMS.DocumentEngine.PageInfo,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Returns the combination for the specified multivariate test object.
            If any combination for this multivariate test is stored in a browser cookie then this combination will be used,
            otherwise will be chosen a random combination for this test.
            </summary>
            <param name="testObj">The multivariate test object</param>
            <param name="pi">The page info object</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.LoadTemplateCombinations">
            <summary>
            Load all combinations from DB to the dictionary.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetTemplateCombinationCode(CMS.OnlineMarketing.MVTCombinationInfo)">
            <summary>
            Gets the template combination code.
            </summary>
            <param name="combinationObj">The combination obj</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetTemplateCombinationCode(System.Int32,System.String)">
            <summary>
            Gets the template combination site code.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationName">Name of the MVT combination</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetMVTCombinationInfoInternal(System.Int32,System.String)">
            <summary>
            Returns MVT combination with the specified combination name and template id.
            </summary>
            <param name="combinationName">Code name of the combination.</param>
            <param name="pageTemplateId">The page template id.</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetNewCombinationCustomNameInternal(System.String,System.String,System.Int32)">
            <summary>
            Combines the old custom name with the new variant.
            </summary>
            <param name="oldCombinationCustomName">The old combination custom name</param>
            <param name="newVariantName">The new variant name</param>
            <param name="newCombinationNumber">The new combination number</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationInfoProvider.GetCombinationNameInternal(System.Int32)">
            <summary>
            Gets the formated name of the combination (i.e.: number=2 returns "Combination_002").
            </summary>
            <param name="combinationNumber">The number used in the formated combination name</param>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfoProvider.TemplateCombinations">
            <summary>
            Dictionary containing combination infos with keys: templateID_combinationName 
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationInfoProvider.RandomGenerator">
            <summary>
            Gets random generator for choosing a combination.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTCombinationVariationInfo">
            <summary>
            MVTCombinationVariationInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationVariationInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTCombinationVariationInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTCombinationVariationInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTCombinationVariationInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationVariationInfo.MVTCombinationID">
            <summary>
            MVT combination ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTCombinationVariationInfo.MVTVariantID">
            <summary>
            MVT variant ID.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider">
            <summary>
            Class providing MVTCombinationVariationInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.GetMVTCombinationVariationInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="combinationId">MVT combination ID</param>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.GetCombinationVariations">
            <summary>
            Returns query of all relationships between MVT combinations and MVT variants.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.SetMVTCombinationVariationInfo(CMS.OnlineMarketing.MVTCombinationVariationInfo)">
            <summary>
            Sets relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="combinationObj">MVT combination - MVT variant relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.AddRelationship(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified MVT combination and MVT variant.
            </summary>	
            <param name="combinationId">MVT combination ID</param>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.DeleteMVTCombinationVariationInfo(CMS.OnlineMarketing.MVTCombinationVariationInfo)">
            <summary>
            Deletes relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="infoObj">MVT combination - MVT variant relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.DeleteMVTCombinationVariationInfo(System.String)">
            <summary>
            Deletes relationship between specified MVT combination and MVT variant using specified condition.
            </summary>
            <param name="whereCondition">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.RemoveRelationship(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="combinationId">MVT combination ID</param>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.CombineCombinationVariants(System.Int32,System.Int32,System.Int32)">
            <summary>
            Combines a new variant with existing combinations.
            </summary>
            <param name="originalCombinationId">The original combination id</param>
            <param name="newCombinationId">The new combination id</param>
            <param name="newVariantId">The new variant id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.GetMVTCombinationVariationInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="combinationId">MVT combination ID</param>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.GetCombinationVariationsInternal">
            <summary>
            Returns query of all relationships between MVT combinations and MVT variants.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.SetMVTCombinationVariationInfoInternal(CMS.OnlineMarketing.MVTCombinationVariationInfo)">
            <summary>
            Sets relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="infoObj">MVT combination - MVT variant relationship to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.DeleteMVTCombinationVariationInfoInternal(CMS.OnlineMarketing.MVTCombinationVariationInfo)">
            <summary>
            Deletes relationship between specified MVT combination and MVT variant.
            </summary>
            <param name="infoObj">MVT combination - MVT variant relationship to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.DeleteMVTCombinationVariationInfoInternal(System.String)">
            <summary>
            Deletes relationship between specified MVT combination and MVT variant using specified condition.
            </summary>
            <param name="whereCondition">Where condition</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTCombinationVariationInfoProvider.CombineCombinationVariantsInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Combines a new variant with existing combinations.
            </summary>
            <param name="originalCombinationId">The original combination id</param>
            <param name="newCombinationId">The new combination id</param>
            <param name="newVariantId">The new variant id</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestInfo">
            <summary>
            MVTestInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestInfo.mOriginalCulture">
            <summary>
            Original culture of the multivariate test.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTestInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTestInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the MVT Test object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestTargetConversionType">
            <summary>
            Multivariate test target conversion type.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestID">
            <summary>
            Multivariate test ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestConversions">
            <summary>
            Multivariate test conversions.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestCulture">
            <summary>
            Multivariate test culture.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestLastModified">
            <summary>
            Last modification of the multivariate test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestOpenFrom">
            <summary>
            Start date of the test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestGUID">
            <summary>
            Unique multivariate test identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestName">
            <summary>
            Multivariate test name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestDisplayName">
            <summary>
            Multivariate test display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestMaxConversions">
            <summary>
            Multivariate test maximum conversions.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestDescription">
            <summary>
            Multivariate test description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestPage">
            <summary>
            Multivariate test page.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestSiteID">
            <summary>
            Multivariate test site ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestOpenTo">
            <summary>
            End date of the test.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.MVTestEnabled">
            <summary>
            Indicates whether the multivariate test is enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTestInfo.OriginalCulture">
            <summary>
            Gets or sets the original culture of the test.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTestInfoProvider">
            <summary>
            Class providing MVTestInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTests">
            <summary>
            Returns a query for all the MVTestInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestInfo(System.Int32)">
            <summary>
            Returns multivariate test with specified ID.
            </summary>
            <param name="testId">Multivariate test ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestInfo(System.String,System.String)">
            <summary>
            Returns multivariate test with the specified name.
            </summary>
            <param name="testName">The multivariate test name</param>                
            <param name="sitename">The site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.SetMVTestInfo(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Sets (updates or inserts) specified multivariate test.
            </summary>
            <param name="testObj">The multivariate test to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.DeleteMVTestInfo(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Deletes specified multivariate test.
            </summary>
            <param name="testObj">The multivariate test to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.DeleteMVTestInfo(System.Int32)">
            <summary>
            Deletes multivariate test with specified ID.
            </summary>
            <param name="testId">The multivariate test ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.IncreaseConversions(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Increases number of conversions in multivariate test and combination.
            </summary>
            <param name="testName">MVTest name</param>
            <param name="combinationName">Combination name</param>
            <param name="siteName">Site name</param>
            <param name="hits">Hits count</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.RenameMVTestStatistics(System.String,System.String,System.Int32)">
            <summary>
            Renames multivariate test statistics data when changed code name
            </summary>
            <param name="oldName">Old code name</param>
            <param name="newName">New code name</param>
            <param name="siteId">The site id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MoveMVTests(System.String,System.String,System.Int32)">
            <summary>
            Moves all MVTests from the document under the oldAlias path to the document under the newAlias path.
            </summary>
            <param name="newAlias">Document's new alias path</param>
            <param name="oldAlias">Document's old alias path</param>
            <param name="siteID">Document's siteID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MVTestingEnabled(System.String)">
            <summary>
            Indicates whether multivariate testing is enabled.
            </summary>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.ContainsMVTest(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Indicates whether a document has defined any multivariate tests.
            </summary>
            <param name="path">The path</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="isLiveSite">Is live site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestStatus(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns status of multivariate test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MVTestIsRunning(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns true if specified multivariate test is running.
            </summary>
            <param name="testObj">Multivariate test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MVTestIsRunning(CMS.OnlineMarketing.MVTestInfo,CMS.OnlineMarketing.MVTestStatusEnum@)">
            <summary>
            Returns true if specified multivariate test is running.
            </summary>
            <param name="testObj">Multivariate test info object</param>
            <param name="status">Returns current test status</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningTest(System.String,System.Int32,System.String)">
            <summary>
            Gets the running multivariate test for a page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.ContainsRunningMVTest(System.String,System.Int32,System.String)">
            <summary>
            Determines whether there is a running multivariate test for the specified document.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.CombineWithMVT(CMS.DocumentEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance,System.Int32,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Combines the specified page template instance with MVT variants.
            </summary>
            <param name="pi">The page info</param>
            <param name="instance">The page template instance</param>
            <param name="combinationId">The combination id</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningTest(System.String,System.Int32,System.String,System.Boolean@)">
            <summary>
            Gets the running multivariate test for the specified page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="mvtTestExists">Returns a value indicating whether a mvt test with the given parameters exists</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetConflicting(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns all conflicting tests (tests running in the same time interval on same page with same culture and are enabled).
            </summary>
            <param name="info">Info to check conflicts for</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTests(System.String,System.Int32)">
            <summary>
            Gets the running multivariate test for the specified page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestsInternal">
            <summary>
            Returns a query for all the MVTestInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestInfoInternal(System.Int32)">
            <summary>
            Returns multivariate test with specified ID.
            </summary>
            <param name="testId">The multivariate test ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestInfoInternal(System.String,System.String)">
            <summary>
            Returns multivariate with specified name.
            </summary>
            <param name="testName">The multivariate test name</param>   
            <param name="siteName">The site name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetConflictingInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns all conflicting tests (tests running in the same time interval on same page with same culture and are enabled).
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.SetMVTestInfoInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Sets (updates or inserts) specified multivariate test.
            </summary>
            <param name="testObj">The multivariate test to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.DeleteMVTestInfoInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Deletes specified multivariate test.
            </summary>
            <param name="testObj">The multivariate test to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetTestTemplates(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Gets the test templates according to tits culture.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.CombineWithMVTInternal(CMS.DocumentEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance,System.Int32,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Combines the specified page template instance with MVT variants.
            </summary>
            <param name="pi">The page info</param>
            <param name="instance">The page template instance</param>
            <param name="combinationId">The combination id</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.IncreaseConversionsInternal(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Increases number of conversions in multivariate test and combination.
            </summary>
            <param name="testName">The multivariate test name</param>
            <param name="combinationName">The combination name</param>
            <param name="siteName">The site name</param>
            <param name="culture">The culture code</param>
            <param name="hits">The hits count</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.RenameMVTestStatisticsInternal(System.String,System.String,System.Int32)">
            <summary>
            Renames multivariate test statistics data when changed code name
            </summary>
            <param name="oldName">Old code name</param>
            <param name="newName">New code name</param>
            <param name="siteID">Test site ID </param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.ContainsMVTestInternal(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Indicates whether a document has defined any multivariate tests.
            </summary>
            <param name="path">The path</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="isLiveSite">Is live site</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestStatusInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns status of multivariate test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTStatusByCombinations(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Returns "Running" or "Finished", based only on MVTest combinations.
            </summary>
            <param name="testObj">MVTestInfo object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningTestInternal(System.String,System.Int32,System.String,System.Boolean@)">
            <summary>
            Gets the running multivariate test for a page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="mvtTestExists">Returns a value indicating whether a multivariate test with the given parameters exists</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestsInternal(System.String,System.Int32)">
            <summary>
            Gets the running multivariate test for a page.
            </summary>
            <param name="testPage">The test page</param>
            <param name="siteId">The site id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningConditionInternal(CMS.OnlineMarketing.MVTestInfo,CMS.DataEngine.QueryDataParameters@)">
            <summary>
            Returns the where condition selecting tests which are running at the same time as the specified test.
            </summary>
            <param name="testObj">The multivariate test info object</param>
            <param name="parameters">The parameters</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetRunningConditionInternal(System.Int32,System.String,System.Int32,System.String,System.DateTime,System.DateTime,CMS.DataEngine.QueryDataParameters@)">
            <summary>
            Returns the where condition selecting multivariate tests which are running for the same conditions as defined in the method params (testPage, testSiteId, testCulture...).
            </summary>
            <param name="testId">The test id to be excluded from the where condition</param>
            <param name="testPage">The test page</param>
            <param name="testSiteId">The test site id</param>
            <param name="testCulture">The test culture</param>
            <param name="openFrom">The open from</param>
            <param name="openTo">The open to</param>
            <param name="parameters">The parameters</param>
            <returns>String containing actual Where condition</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetPageSiteCode(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Gets the page site code.
            </summary>
            <param name="testObj">The multivariate test info object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetPageSiteCode(System.String,System.Int32)">
            <summary>
            Gets the page site code.
            </summary>
            <param name="path">The path</param>
            <param name="siteId">The site id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.MoveMVTestsInternal(System.String,System.String,System.Int32)">
            <summary>
            Moves all MVTests from the document under the oldAlias path to the document under the newAlias path.
            </summary>
            <param name="newAlias">Document's new alias path</param>
            <param name="oldAlias">Document's old alias path</param>
            <param name="siteID">Document's site ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetTestTemplatesInternal(CMS.OnlineMarketing.MVTestInfo)">
            <summary>
            Gets the test templates according to test culture.
            </summary>
            <param name="testObj">Test object</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTTargetConversionTypeString(CMS.OnlineMarketing.MVTTargetConversionTypeEnum)">
            <summary>
            Returns MVTTargetConversionType string.
            </summary>
            <param name="conversionType">Target conversion type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTTargetConversionTypeEnum(System.String)">
            <summary>
            Returns MVTTargetConversionType enum.
            </summary>
            <param name="conversionType">String representation of target conversion type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestStatusString(CMS.OnlineMarketing.MVTestStatusEnum)">
            <summary>
            Returns MVTestStatus string.
            </summary>
            <param name="statusType">Test status type</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestInfoProvider.GetMVTestStatusEnum(System.String)">
            <summary>
            Returns MVTestStatus enum.
            </summary>
            <param name="statusType">String representation of test status type</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTVariantInfo">
            <summary>
            MVTVariantInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.OBJECT_TYPE_DOCUMENTVARIANT">
            <summary>
            Object type for document MVT variant
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.TYPEINFO_DOCUMENTVARIANT">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTVariantInfo.mMVTVariantEnabledOriginal">
            <summary>
            Original value indicating whether the variant is enabled.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.CheckUniqueValues(System.String[])">
            <summary>
            Checks if a record with the same column values already exists in the database. Returns true if the set of values is unique.
            </summary>
            <param name="columns">Columns to check</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTVariantInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTVariantInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the MVT Variant object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantID">
            <summary>
            MVT variant ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantZoneID">
            <summary>
            MVT variant zone ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantDocumentID">
            <summary>
            MVT variant document ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantInstanceGUID">
            <summary>
            Web part instance GUID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantDisplayName">
            <summary>
            MVT variant display name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantDescription">
            <summary>
            MVT variant description.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantPageTemplateID">
            <summary>
            MVT variant page template ID.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantEnabled">
            <summary>
            Last modification of the MVT combination.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantEnabledOriginal">
            <summary>
            Gets or sets the original value indicating whether the variant is enabled.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantGUID">
            <summary>
            Unique project identifier.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantName">
            <summary>
            MVT variant name.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantWebParts">
            <summary>
            MVT variant web parts.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.MVTVariantLastModified">
            <summary>
            Last modification of the MVT variant.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.WebPartInstance">
            <summary>
            Variant web part/widget instance containing data built from this info object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.WebPartZoneInstance">
            <summary>
            Variant zone instance containing data built from this info object.
            </summary>
        </member>
        <member name="P:CMS.OnlineMarketing.MVTVariantInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTVariantInfoProvider">
            <summary>
            Class providing MVTVariantInfo management.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants">
            <summary>
            Returns a query for all the MVTVariantInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfo(System.Int32)">
            <summary>
            Returns MVT variant with specified ID.
            </summary>
            <param name="variantId">MVT variant ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfo(System.Guid)">
            <summary>
            Gets the MVT variant info.
            </summary>
            <param name="variantGuid">The MVT variant GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfo(System.String)">
            <summary>
            Returns MVT variant with specified name.
            </summary>
            <param name="variantName">MVT variant name</param>                
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SetMVTVariantInfo(CMS.OnlineMarketing.MVTVariantInfo)">
            <summary>
            Sets (updates or inserts) specified MVT variant.
            </summary>
            <param name="variantObj">MVT variant to be set</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteMVTVariantInfo(CMS.OnlineMarketing.MVTVariantInfo)">
            <summary>
            Deletes specified MVT variant.
            </summary>
            <param name="variantObj">MVT variant to be deleted</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteMVTVariantInfo(System.Int32)">
            <summary>
            Deletes MVT variant with specified ID.
            </summary>
            <param name="variantId">MVT variant ID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteMVTVariantInfo(System.Guid)">
            <summary>
            Deletes MVT variant with specified ID.
            </summary>
            <param name="variantGuid">The MVT variant GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hash tables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants(System.Int32,System.Int32)">
            <summary>
            Gets pairs "MVTVariantInstanceGUID, MVTVariantGUID" which represent web part instances and their variant GUID for the specified combination.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationId">The combination id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariant(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.Guid,System.Int32,System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant and generates new combinations if the variant is new.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariantWebparts(System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant properties.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteWidgetVariants(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes all variants of all widgets in the document.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="templateId">The template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.UpdateWebPartVariants(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates the web part variants with a new zone id.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id.</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.EnableWebPartVariants(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Enables/Disables the web part variants.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationId">The combination id</param>
            <param name="enable">Indicates whether enable or disable the combination variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.RemoveWebPartsVariants(System.Collections.Generic.IEnumerable{CMS.PortalEngine.WebPartInstance})">
            <summary>
            Removes the variants of the selected web parts.
            </summary>
            <param name="webParts">The web parts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants(System.Int32)">
            <summary>
            Gets all the MVT variants for the specified template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariants(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets the MVT variants.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.LoadMVTVariants(System.Object,System.Boolean)">
            <summary>
            Loads the MVT variants for the specified instance (web part/zone/widget).
            Return true, if the variants were successfully loaded.
            </summary>
            <param name="instance">The instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
            <returns>True, if the variants were successfully loaded. False, if it was not possible to load variants, for example due to missing information in the instance.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantId(System.Int32,System.String)">
            <summary>
            Returns the MVT variant id for the specified template and code name.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantName">The variant code name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.CloneTemplateVariants(System.Int32,System.Int32)">
            <summary>
            Clones all the MVT variants and their combinations of the specific page template.
            </summary>
            <param name="originalTemplateId">The original template id</param>
            <param name="newTemplateId">The new template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantsInternal">
            <summary>
            Returns a query for all the MVTVariantInfo objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfoInternal(System.Int32)">
            <summary>
            Returns MVT variant with specified ID.
            </summary>
            <param name="variantId">MVT variant ID</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfoInternal(System.Guid)">
            <summary>
            Returns MVT variant with specified ID.
            </summary>
            <param name="variantGuid">The MVT variant GUID</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantInfoInternal(System.String)">
            <summary>
            Returns MVT variant with specified name.
            </summary>
            <param name="variantName">MVT variant name</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SetMVTVariantInfoInternal(CMS.OnlineMarketing.MVTVariantInfo)">
            <summary>
            Sets (updates or inserts) specified MVT variant.
            </summary>
            <param name="variantObj">MVT variant to be set</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteMVTVariantInfoInternal(CMS.OnlineMarketing.MVTVariantInfo)">
            <summary>
            Deletes specified MVT variant and MVT combination dependencies.
            </summary>
            <param name="variantObj">MVT variant to be deleted</param>        
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantsInternal(System.Int32,System.Int32)">
            <summary>
            Gets pairs "MVTVariantInstanceGUID, MVTVariantGUID" which represent web part instances and their variant GUID for the specified combination.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationId">The combination id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantsInternal(System.Int32)">
            <summary>
            Gets all the MVT variants for the specified template.
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantsInternal(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets the MVT variants.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.DeleteWidgetVariantsInternal(System.String,System.Int32,System.Int32)">
            <summary>
            Deletes all variants of all widgets in the document.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.UpdateWebPartVariantsInternal(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates the web part variants with a new zone id.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id.</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.EnableWebPartVariantsInternal(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Enables/Disables the web part variants.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="combinationId">The combination id</param>
            <param name="enabled">Indicates whether enable or disable the combination variants</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariantInternal(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.Guid,System.Int32,System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant and generates new combinations if the variant is new.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariantInternal(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.Guid,System.Int32,System.Int32,System.String)">
            <summary>
            Saves the variant and generates new combinations if the variant is new.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicates whether the variant is enabled</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="webPartsXml">Web parts XML string</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.SaveVariantWebpartsInternal(System.Int32,System.Xml.XmlNode)">
            <summary>
            Saves the variant properties.
            </summary>
            <param name="variantId">The variant id.</param>
            <param name="xmlWebParts">Web parts XML</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.RemoveWebPartsVariantsInternal(System.Collections.Generic.IEnumerable{CMS.PortalEngine.WebPartInstance})">
            <summary>
            Removes the variants of the selected web parts.
            </summary>
            <param name="webParts">The web parts</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.GetMVTVariantIdInternal(System.Int32,System.String)">
            <summary>
            Returns the MVT variant id for the specified template and code name.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantName">The variant code name</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.LoadMVTVariantsInternal(System.Object,System.Boolean)">
            <summary>
            Loads the MVT variants for the specified instance (web part/zone/widget).
            Return true, if the variants were successfully loaded. 
            </summary>
            <param name="instance">The instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
            <returns>True, if the variants were successfully loaded. False, if it was not possible to load variants, for example due to missing information in the instance.</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTVariantInfoProvider.CloneTemplateVariantsInternal(System.Int32,System.Int32)">
            <summary>
            Clones all the MVT variants and their combinations of the specific page template.
            </summary>
            <param name="originalTemplateId">The original template id</param>
            <param name="newTemplateId">The new template id</param>
        </member>
        <member name="T:CMS.OnlineMarketing.MVTTargetConversionTypeEnum">
            <summary>
            Target conversion type enumeration.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTTargetConversionTypeEnum.Total">
            <summary>
            Actual conversions are compared with sum of all conversions for multivariate test
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTTargetConversionTypeEnum.AnyCombination">
            <summary>
            Actual conversions are compared with each combination conversion value.
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.OnlineMarketing.MVTestListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MVTestListInfo object.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MVTestListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.OnlineMarketing.MVTestListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="T:CMS.OnlineMarketing.OnlineMarketingModule">
            <summary>
            Represents the Online Marketing module.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.OnInit">
            <summary>
            Initializes the module
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.CheckMacroPermissions(System.Object,CMS.DataEngine.ObjectSecurityEventArgs)">
            <summary>
            Checks permissions for on-line marketing macro rules.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.RegisterCommands">
            <summary>
            Registers the object type of this module
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.MoveMVTests(System.Object[])">
            <summary>
            Move all related MVTests from one location to another
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.EnsureDefaultCombination(System.Object[])">
            <summary>
            Ensure that the page template has a default combination created.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetMVTestSiteId(System.Object[])">
            <summary>
            
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.RemoveCustomer(System.Object[])">
            <summary>
            Removes customer from all contact management objects.
            </summary>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.LogWinAuthLogin(System.Object[])">
            <summary>
            Log windows authentication login
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.LogPageVisit(System.Object[])">
            <summary>
            Log page visit activity
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.LogExternalSearch(System.Object[])">
            <summary>
            Log external search
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.LogLandingPage(System.Object[])">
            <summary>
            Log landing page as activity
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.ContactIsMonitored(System.Object[])">
            <summary>
            Returns TRUE if the given contact is being monitored.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.CreateNewContact(System.Object[])">
            <summary>
            Creates new contact for subscriber (first name, last name, e-mail, site id, relatedid, type)
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.AddContactBounceByEmail(System.Object[])">
            <summary>
            Increments number of bounces by one for all contacts with specified email address across all sites
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.AddContactBounce(System.Object[])">
            <summary>
            Increments number of bounces by one for specified contact
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.SetContactBounces(System.Object[])">
            <summary>
            Sets the bounced e-mails counter to specified value for a contact
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.IsContactUnsubscribed(System.Object[])">
            <summary>
            Returns true if a contact has newsletter unsubscription activity for specified contact group and newsletter
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetContactForNewsletters(System.Object[])">
            <summary>
            Returns dataset with basic data of a contact specified by ID; the contact has to have a valid email address.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetContacts(System.Object[])">
            <summary>
            Returns dataset with basic data of contacts specified by where condition.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetContactGroupMembers(System.Object[])">
            <summary>
            Returns all (or top N) contact IDs in a given contact group for newsletters.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetContactGroupName(System.Object[])">
            <summary>
            Returns display name of a contact group specified by ID
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.CreateRelation(System.Object[])">
            <summary>
            Creates the contact relation
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.UpdateContactInformation(System.Object[])">
            <summary>
            Updates the contact information
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.UpdateContactFromExternalSource(System.Object[])">
            <summary>
            Updates specific contact values
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.UpdateContactFromExternalData(System.Object[])">
            <summary>
            Updates contact information from various sources (bizform record, user, customer, subscriber)
            parameters: source (bizform, user, customer, etc.); overwrite flag (true = contact data will be overwritten;
            false = only blank values will be filled; null = flag from class info will be used); contact ID
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetCurrentContactId(System.Object[])">
            <summary>
            Returns current contact ID
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetCurrentContact(System.Object[])">
            <summary>
            Returns current contact.
            </summary>
            <param name="parameters">Parameters array.</param>
            <returns>Current contact</returns>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.GetUserLoginContactId(System.Object[])">
            <summary>
            Returns contact ID for specified user
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.SelectContactForVisitor(System.Object[])">
            <summary>
            Selects single contact from DataSet of contacts by setting "when visitor has more contacts"
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.OnlineMarketing.OnlineMarketingModule.ClearHashtables(System.Boolean)">
            <summary>
            Clears the module hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
    </members>
</doc>
