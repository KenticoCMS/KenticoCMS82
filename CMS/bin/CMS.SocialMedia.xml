<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.SocialMedia</name>
    </assembly>
    <members>
        <member name="T:CMS.SocialMedia.Facebook.EntityAttributeValueConverterFactory">
            <summary>
            Creates entity attribute value converters corresponding to entity attribute models.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.IEntityAttributeValueConverterFactory">
            <summary>
            Creates entity attribute value converters corresponding to entity attribute models.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.IEntityAttributeValueConverterFactory.CreateConverter(CMS.SocialMedia.Facebook.EntityAttributeModel)">
            <summary>
            Creates an entity attribute value converter that corresponds to the specified entity attribute model.
            </summary>
            <param name="attributeModel">The entity attribute model.</param>
            <returns>An entity attribute value converter that corresponds to the specified entity attribute model, if applicable; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityAttributeValueConverterFactory.CreateConverter(CMS.SocialMedia.Facebook.EntityAttributeModel)">
            <summary>
            Creates an entity attribute value converter that corresponds to the specified entity attribute model.
            </summary>
            <param name="attributeModel">The entity attribute model.</param>
            <returns>An entity attribute value converter that corresponds to the specified entity attribute model, if applicable; otherwise, null.</returns>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityCultureAttributeValueConverter">
            <summary>
            Converts locale values of entity attributes to values compatible with form fields.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityAttributeValueConverterBase">
            <summary>
            Converts values of entity attributes to values compatible with form fields.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityAttributeValueConverterBase.mAttributeModel">
            <summary>
            The model of an entity attribute.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityAttributeValueConverterBase.#ctor(CMS.SocialMedia.Facebook.EntityAttributeModel)">
            <summary>
            Initializes a new instance of the EntityAttributeValueConverterBase.
            </summary>
            <param name="attributeModel">The model of an entity attribute.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityAttributeValueConverterBase.GetFormFieldValue(CMS.FormEngine.FormFieldInfo,System.Object,CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter)">
            <summary>
            Computes a value compatible with the specified form field, and returns it.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <param name="entity">The Facebook API entity</param>
            <param name="attributeValueFormatter">The object that provides formatting of entity attribute values.</param>
            <returns>A value compatible with the specified form field, if applicable; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityAttributeValueConverterBase.IsCompatibleWithFormField(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Determines whether this converter is compatible with the specified form field.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <returns>True, if this mapping is compatible with the specified form field; otherwise, false.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityAttributeValueConverterBase.GetValue``1(System.Object)">
            <summary>
            Gets the attribute value of the specified entity regardless of value nullability, and returns it.
            </summary>
            <typeparam name="T">The type of entity attribute value.</typeparam>
            <param name="entity">The entity to get the value from.</param>
            <returns>The attribute value of the specified entity regardless of value nullability.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityCultureAttributeValueConverter.#ctor(CMS.SocialMedia.Facebook.EntityAttributeModel)">
            <summary>
            Initializes a new instance of the EntityCultureAttributeValueConverterBase.
            </summary>
            <param name="attributeModel">The model of an entity attribute.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityCultureAttributeValueConverter.GetFormFieldValue(CMS.FormEngine.FormFieldInfo,System.Object,CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter)">
            <summary>
            Computes a value compatible with the specified form field, and returns it.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <param name="entity">The Facebook API entity</param>
            <param name="attributeValueFormatter">The object that provides formatting of entity attribute values.</param>
            <returns>A value compatible with the specified form field, if applicable; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityCultureAttributeValueConverter.IsCompatibleWithFormField(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Determines whether this converter is compatible with the specified form field.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <returns>True, if this mapping is compatible with the specified form field; otherwise, false.</returns>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityGenderAttributeValueConverter">
            <summary>
            Converts gender values of entity attributes to values compatible with form fields.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityGenderAttributeValueConverter.#ctor(CMS.SocialMedia.Facebook.EntityAttributeModel)">
            <summary>
            Initializes a new instance of the EntityGenderAttributeValueConverterBase.
            </summary>
            <param name="attributeModel">The model of an entity attribute.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityGenderAttributeValueConverter.GetFormFieldValue(CMS.FormEngine.FormFieldInfo,System.Object,CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter)">
            <summary>
            Computes a value compatible with the specified form field, and returns it.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <param name="entity">The Facebook API entity</param>
            <param name="attributeValueFormatter">The object that provides formatting of entity attribute values.</param>
            <returns>A value compatible with the specified form field, if applicable; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityGenderAttributeValueConverter.IsCompatibleWithFormField(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Determines whether this converter is compatible with the specified form field.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <returns>True, if this mapping is compatible with the specified form field; otherwise, false.</returns>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityIntegerAttributeValueConverter">
            <summary>
            Converts integer values of entity attributes to values compatible with form fields.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityIntegerAttributeValueConverter.#ctor(CMS.SocialMedia.Facebook.EntityAttributeModel)">
            <summary>
            Initializes a new instance of the EntityBooleanAttributeValueConverterBase.
            </summary>
            <param name="attributeModel">The model of an entity attribute.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityIntegerAttributeValueConverter.GetFormFieldValue(CMS.FormEngine.FormFieldInfo,System.Object,CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter)">
            <summary>
            Computes a value compatible with the specified form field, and returns it.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <param name="entity">The Facebook API entity</param>
            <param name="attributeValueFormatter">The object that provides formatting of entity attribute values.</param>
            <returns>A value compatible with the specified form field, if applicable; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityIntegerAttributeValueConverter.IsCompatibleWithFormField(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Determines whether this converter is compatible with the specified form field.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <returns>True, if this mapping is compatible with the specified form field; otherwise, false.</returns>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityTextAttributeValueConverter">
            <summary>
            Converts string values of entity attributes to values compatible with form fields.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityTextAttributeValueConverter.#ctor(CMS.SocialMedia.Facebook.EntityAttributeModel)">
            <summary>
            Initializes a new instance of the EntityTextAttributeValueConverterBase.
            </summary>
            <param name="attributeModel">The model of an entity attribute.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityTextAttributeValueConverter.GetFormFieldValue(CMS.FormEngine.FormFieldInfo,System.Object,CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter)">
            <summary>
            Computes a value compatible with the specified form field, and returns it.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <param name="entity">The Facebook API entity</param>
            <param name="attributeValueFormatter">The object that provides formatting of entity attribute values.</param>
            <returns>A value compatible with the specified form field, if applicable; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityTextAttributeValueConverter.IsCompatibleWithFormField(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Determines whether this converter is compatible with the specified form field.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <returns>True, if this mapping is compatible with the specified form field; otherwise, false.</returns>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityDateTimeAttributeValueConverter">
            <summary>
            Converts date and time values of entity attributes to values compatible with form fields.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityDateTimeAttributeValueConverter.#ctor(CMS.SocialMedia.Facebook.EntityAttributeModel)">
            <summary>
            Initializes a new instance of the EntityDateTimeAttributeValueConverterBase.
            </summary>
            <param name="attributeModel">The model of an entity attribute.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityDateTimeAttributeValueConverter.GetFormFieldValue(CMS.FormEngine.FormFieldInfo,System.Object,CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter)">
            <summary>
            Computes a value compatible with the specified form field, and returns it.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <param name="entity">The Facebook API entity</param>
            <param name="attributeValueFormatter">The object that provides formatting of entity attribute values.</param>
            <returns>A value compatible with the specified form field, if applicable; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityDateTimeAttributeValueConverter.IsCompatibleWithFormField(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Determines whether this converter is compatible with the specified form field.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <returns>True, if this mapping is compatible with the specified form field; otherwise, false.</returns>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityBooleanAttributeValueConverter">
            <summary>
            Converts boolean values of entity attributes to values compatible with form fields.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityBooleanAttributeValueConverter.#ctor(CMS.SocialMedia.Facebook.EntityAttributeModel)">
            <summary>
            Initializes a new instance of the EntityBooleanAttributeValueConverterBase.
            </summary>
            <param name="attributeModel">The model of an entity attribute.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityBooleanAttributeValueConverter.GetFormFieldValue(CMS.FormEngine.FormFieldInfo,System.Object,CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter)">
            <summary>
            Computes a value compatible with the specified form field, and returns it.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <param name="entity">The Facebook API entity</param>
            <param name="attributeValueFormatter">The object that provides formatting of entity attribute values.</param>
            <returns>A value compatible with the specified form field, if applicable; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityBooleanAttributeValueConverter.IsCompatibleWithFormField(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Determines whether this converter is compatible with the specified form field.
            </summary>
            <param name="fieldInfo">The target of value conversion.</param>
            <returns>True, if this mapping is compatible with the specified form field; otherwise, false.</returns>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityAttributeValueFormatter">
            <summary>
            Provides culture-sensitive formatting for attribute values of Facebook API entities.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter">
            <summary>
            Provides formatting for attribute values of Facebook API entities.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter.Format(System.Boolean)">
            <summary>
            Formats a Boolean value, and returns it.
            </summary>
            <param name="value">A value to format.</param>
            <returns>A string representation of the specified value.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter.Format(System.Int64)">
            <summary>
            Formats an Int64 value, and returns it.
            </summary>
            <param name="value">A value to format.</param>
            <returns>A string representation of the specified value.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter.Format(System.Decimal)">
            <summary>
            Formats a Decimal value, and returns it.
            </summary>
            <param name="value">A value to format.</param>
            <returns>A string representation of the specified value.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter.Format(System.DateTime)">
            <summary>
            Formats a DateTime value, and returns it.
            </summary>
            <param name="value">A value to format.</param>
            <returns>A string representation of the specified value.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter.Format(CMS.Membership.UserGenderEnum)">
            <summary>
            Formats a UserGenderEnum value, and returns it.
            </summary>
            <param name="value">A value to format.</param>
            <returns>A string representation of the specified value.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityAttributeValueFormatter.Format(System.Boolean)">
            <summary>
            Formats a Boolean value, and returns it.
            </summary>
            <param name="value">A value to format.</param>
            <returns>A string representation of the specified value.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityAttributeValueFormatter.Format(System.Int64)">
            <summary>
            Formats an Int64 value, and returns it.
            </summary>
            <param name="value">A value to format.</param>
            <returns>A string representation of the specified value.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityAttributeValueFormatter.Format(System.Decimal)">
            <summary>
            Formats a Decimal value, and returns it.
            </summary>
            <param name="value">A value to format.</param>
            <returns>A string representation of the specified value.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityAttributeValueFormatter.Format(System.DateTime)">
            <summary>
            Formats a DateTime value, and returns it.
            </summary>
            <param name="value">A value to format.</param>
            <returns>A string representation of the specified value.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityAttributeValueFormatter.Format(CMS.Membership.UserGenderEnum)">
            <summary>
            Formats a UserGenderEnum value, and returns it.
            </summary>
            <param name="value">A value to format.</param>
            <returns>A string representation of the specified value.</returns>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityMapper`2">
            <summary>
            Provides mapping of Facebook API entities to CMS objects.
            </summary>
            <typeparam name="TEntity">The type of Facebook API entity.</typeparam>
            <typeparam name="TInfo">The type of CMS object.</typeparam>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.IEntityMapper`2">
            <summary>
            Provides mapping of Facebook API entities to CMS objects.
            </summary>
            <typeparam name="TEntity">The type of Facebook API entity.</typeparam>
            <typeparam name="TInfo">The type of CMS object.</typeparam>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.IEntityMapper`2.Map(`0,`1,CMS.SocialMedia.Facebook.EntityMapping)">
            <summary>
            Updates CMS object with data from Facebook API entity.
            </summary>
            <param name="entity">The Facebook API entity.</param>
            <param name="info">The CMS object.</param>
            <param name="mapping">The mapping between a Facebook API entity and a CMS object.</param>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityMapper`2.mEntityModel">
            <summary>
            The model of Facebook API entity.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityMapper`2.mFormInfoProvider">
            <summary>
            The object that provides form info objects suitable for mapping.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityMapper`2.mAttributeValueConverterFactory">
            <summary>
            The object that creates entity attribute value converters.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityMapper`2.mAttributeValueFormatter">
            <summary>
            The objects that provides formatting of entity attribute values.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityMapper`2.mFormInfoCache">
            <summary>
            A collection of form info objects with object type names as keys.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMapper`2.#ctor(CMS.SocialMedia.Facebook.EntityModel,CMS.SocialMedia.Facebook.IFormInfoProvider,CMS.SocialMedia.Facebook.IEntityAttributeValueConverterFactory,CMS.SocialMedia.Facebook.IEntityAttributeValueFormatter)">
            <summary>
            Initializes a new instance of the EntityMapper class.
            </summary>
            <param name="entityModel">The model of Facebook API entity.</param>
            <param name="formInfoProvider">The object that provides form info objects suitable for mapping.</param>
            <param name="attributeValueConverterFactory">The object that creates entity attribute value converters.</param>
            <param name="attributeValueFormatter">The objects that provides formatting of entity attribute values.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMapper`2.Map(`0,`1,CMS.SocialMedia.Facebook.EntityMapping)">
            <summary>
            Updates CMS object with data from Facebook API entity.
            </summary>
            <param name="entity">The Facebook API entity.</param>
            <param name="info">The CMS object.</param>
            <param name="mapping">The mapping between a Facebook API entity and a CMS object.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMapper`2.CreateEntityMappingTask(CMS.SocialMedia.Facebook.EntityMappingItem,CMS.DataEngine.BaseInfo)">
            <summary>
            Creates a task that contains information required for mapping, and returns it.
            </summary>
            <param name="item">The mapping item.</param>
            <param name="info">The CMS object.</param>
            <returns>A task that contains information required for mapping, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMapper`2.GetFormInfo(CMS.DataEngine.BaseInfo)">
            <summary>
            Retrieves an instance of form info suitable for mapping, and returns it.
            </summary>
            <param name="info">The CMS object to retrieve form info for.</param>
            <returns>An instance of form info suitable for mapping, if found; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMapper`2.SetValue(CMS.SocialMedia.Facebook.EntityMapper{`0,`1}.EntityMappingTask,System.Object)">
            <summary>
            Sets the CMS object value.
            </summary>
            <param name="task">A task that contains information required for mapping.</param>
            <param name="value">A CMS object value.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMapper`2.IsEmptyValue(System.Object)">
            <summary>
            Indicates whether the given value is null or empty.
            </summary>
            <param name="value">A value to test.</param>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityMapper`2.EntityMappingTask">
            <summary>
            Represents information required for mapping between a single Facebook API entity attribute and CMS object field.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityMapper`2.EntityMappingTask.FieldInfo">
            <summary>
            The CMS object field info.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityMapper`2.EntityMappingTask.Info">
            <summary>
            The CMS object.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityMapper`2.EntityMappingTask.AttributeModel">
            <summary>
            The Facebook API entity attribute model.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityMapping">
            <summary>
            Represents a mapping between a CMS object and a Facebook API entity.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityMapping.mItems">
            <summary>
            The dictionary that holds pairs of a form field name and related entity mapping item.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMapping.#ctor">
            <summary>
            Initializes a new instance of the EntityMapping class.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMapping.#ctor(System.Collections.Generic.IEnumerable{CMS.SocialMedia.Facebook.EntityMappingItem})">
            <summary>
            Initializes a new instance of the EntityMapping class with the collection of entity mapping items.
            </summary>
            <param name="source">The collection of entity mapping items.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMapping.Add(CMS.SocialMedia.Facebook.EntityAttributeModel,CMS.FormEngine.FormFieldInfo,System.String)">
            <summary>
            Adds the specified entity mapping item to this mapping.
            </summary>
            <param name="attributeModel">The entity attribute name.</param>
            <param name="fieldInfo">The form field name.</param>
            <param name="scope">The form field scope.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMapping.GetFromScope(System.String)">
            <summary>
            Creates a new entity mapping for the specified scope, and returns it.
            </summary>
            <param name="scope">The form field scope.</param>
            <returns>A new entity mapping for the specified scope.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMapping.GetFacebookPermissionScopeNames(CMS.SocialMedia.Facebook.EntityModel)">
            <summary>
            Retrieves a collection of Facebook permission scope names required to obtain required values of Facebook API object, and returns it.
            </summary>
            <param name="model">The model of the Facebook API object.</param>
            <returns>A collection of Facebook permission scope names required to obtain required values of Facebook API object.</returns>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.EntityMapping.Items">
            <summary>
            Gets the array of entity mapping items.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.EntityMapping.HasItems">
            <summary>
            Gets a value that indicates whether this mapping contains items.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityMappingItem">
            <summary>
            Represents an item of an entity mapping.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityMappingItem.mAttributeName">
            <summary>
            The name of the entity attribute that is the target of this mapping item.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityMappingItem.mFieldName">
            <summary>
            The name of the form field that is the source of this mapping item.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMappingItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the EntityMappingItem class with the specified entity attribute and form field name.
            </summary>
            <param name="attributeName">The name of the entity attribute of this mapping item.</param>
            <param name="fieldName">The name of the form field of this mapping item.</param>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.EntityMappingItem.AttributeName">
            <summary>
            Gets the name of the entity attribute that is the target of this mapping item.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.EntityMappingItem.FieldName">
            <summary>
            Gets the name of the form field that is the source of this mapping item.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityMappingSerializer">
            <summary>
            Provides serialization and deserialization between an entity mapping and its string representation.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMappingSerializer.SerializeEntityMapping(CMS.SocialMedia.Facebook.EntityMapping)">
            <summary>
            Serializes the specified entity mapping into a string.
            </summary>
            <param name="mapping">The entity mapping to serialize.</param>
            <returns>The string that contains the specified entity mapping.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityMappingSerializer.UnserializeEntityMapping(System.String)">
            <summary>
            Parses the specified string and returns the deserialized entity mapping.
            </summary>
            <param name="content">The string that contains an entity mapping.</param>
            <returns>The deserialized entity mapping.</returns>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityModelProvider">
            <summary>
            Provides models of Facebook API entities.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityModelProvider.GetEntityModel``1">
            <summary>
            Creates a model of the specified Facebook API entity, and returns it.
            </summary>
            <typeparam name="T">A type of Facebook API entity.</typeparam>
            <returns>A model of the specified Facebook API entity.</returns>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityAttributeModel">
            <summary>
            Represents a model of a Facebook API entity attribute.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityAttributeModel.mPropertyInfo">
            <summary>
            The corresponding property info.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityAttributeModel.mDisplayName">
            <summary>
            The display name.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityAttributeModel.mDescription">
            <summary>
            The description.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityAttributeModel.mFacebookPermissionScopeName">
            <summary>
            The name of a permission scope required by external application to obtain a value of this attribute.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityAttributeModel.mAttributeValueConverterType">
            <summary>
            The type of the required entity attribute value converter.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityAttributeModel.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the EntityAttributeInfo class.
            </summary>
            <param name="propertyInfo">The corresponding entity property info.</param>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.EntityAttributeModel.Name">
            <summary>
            Gets the attribute name.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.EntityAttributeModel.DisplayName">
            <summary>
            Gets the attribute display name.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.EntityAttributeModel.Description">
            <summary>
            Gets the attribute description.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.EntityAttributeModel.FacebookPermissionScopeName">
            <summary>
            Gets the name of a permission scope required by external application to obtain a value of this attribute.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.EntityAttributeModel.AttributeValueConverterType">
            <summary>
            Gets the type of the entity attribute value converter.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.EntityAttributeModel.PropertyInfo">
            <summary>
            Gets the corresponding property info.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.EntityModel">
            <summary>
            Represents a model of a Facebook API entity.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.EntityModel.mItems">
            <summary>
            The dictionary that holds pairs of entity attribute name and the corresponding attribute model.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityModel.#ctor">
            <summary>
            Initializes a new instance of the EntityModel class.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityModel.#ctor(System.Collections.Generic.IEnumerable{CMS.SocialMedia.Facebook.EntityAttributeModel})">
            <summary>
            Initializes a new instance of the EntityModel class with the collection of attribute models.
            </summary>
            <param name="source">The collection of attribute models.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.EntityModel.GetAttributeModel(System.String)">
            <summary>
            Searches for an attribute model with the specified name, and returns it.
            </summary>
            <param name="name">The attribute name.</param>
            <returns>The attribute model with the specified name, if found; otherwise, null.</returns>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.EntityModel.Items">
            <summary>
            Gets the array of attribute models.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.FacebookMappingHelper">
            <summary>
            Provides helper methods for mapping between Facebook API entities and CMS objects.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.FacebookMappingHelper.mUserProfileMapper">
            <summary>
            Stores the instance of the Facebook user profile mapper for caching purposes.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookMappingHelper.GetUserProfileMapping">
            <summary>
            Retrieves the current mapping between Facebook user profile and CMS user, and returns it.
            </summary>
            <returns>The current mapping between Facebook user profile and CMS user.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookMappingHelper.GetUserProfileMappingTrigger(System.String)">
            <summary>
            Retrieves the current condition when the Facebook user profile mapping occurs, and returns it.
            </summary>
            <param name="siteName">The site name.</param>
            <returns>The current condition when the Facebook user profile mapping occurs.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookMappingHelper.GetUserProfileModel">
            <summary>
            Retrieves a model of the Facebook user profile, and returns it.
            </summary>
            <returns>A model of the Facebook user profile.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookMappingHelper.GetUserProfileMapper">
            <summary>
            Retrieves an object that provides mapping between Facebook user profiles to CMS users, and returns it.
            </summary>
            <returns>An object that provides mapping between Facebook user profiles to CMS users.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookMappingHelper.MapUserProfile(CMS.SocialMedia.Facebook.FacebookUserProfile,CMS.Membership.UserInfo)">
            <summary>
            Maps the values of Facebook user profile attributes to the values of CMS user fields depending on the current mapping.
            </summary>
            <param name="userProfile">The Facebook user profile.</param>
            <param name="user">The CMS user.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookMappingHelper.GetUserProfileMappingInternal">
            <summary>
            Retrieves the current mapping between Facebook user profile and CMS user, and returns it.
            </summary>
            <returns>The current mapping between Facebook user profile and CMS user.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookMappingHelper.GetUserProfileMappingTriggerInternal(System.String)">
            <summary>
            Retrieves the current condition when the Facebook user profile mapping occurs, and returns it.
            </summary>
            <param name="siteName">The site name.</param>
            <returns>The current condition when the Facebook user profile mapping occurs.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookMappingHelper.GetUserProfileModelInternal">
            <summary>
            Retrieves a model of the Facebook user profile, and returns it.
            </summary>
            <returns>A model of the Facebook user profile.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookMappingHelper.GetUserProfileMapperInternal">
            <summary>
            Retrieves an object that provides mapping between Facebook user profiles to CMS users, and returns it.
            </summary>
            <returns>An object that provides mapping between Facebook user profiles to CMS users.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookMappingHelper.MapUserProfileInternal(CMS.SocialMedia.Facebook.FacebookUserProfile,CMS.Membership.UserInfo)">
            <summary>
            Maps the values of Facebook user profile attributes to the values of CMS user fields depending on the current mapping.
            </summary>
            <param name="userProfile">The Facebook user profile.</param>
            <param name="user">The CMS user.</param>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookAttribute.#ctor(System.String)">
            <summary>
            Creates attribute specifying which Facebook response property has data for property with this attribute.
            </summary>
            <param name="responsePropertyName">Name of Facebook response's property that has data for property with this attribute.</param>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookAttribute.ResponsePropertyName">
            <summary>
            Gets or sets name of Facebook response's property that has data for property with this attribute.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookAttribute.PermissionScopeName">
            <summary>
            Gets or sets name of the Facebook permission scope that is required for getting this property in the response.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookAttribute.ValueConverterType">
            <summary>
            Gets or sets the type of a value converter.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.FacebookUserProfile">
            <summary>
            Represents partial information from Facebook user profile.
            </summary>
            <remarks>
            This class is intended for updating users with information from their Facebook profile.
            As a result it contains only a a limited number of properties available.
            </remarks>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.FacebookName">
            <summary>
            Gets or sets user's full name.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.FirstName">
            <summary>
            Gets or sets user's first name.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.MiddleName">
            <summary>
            Gets or sets user's middle name.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.LastName">
            <summary>
            Gets or sets user's last name.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.Gender">
            <summary>
            Gets or sets user's gender.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.Biography">
            <summary>
            Gets or sets user's biography.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.Birthday">
            <summary>
            Gets or sets user's birthday.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.Email">
            <summary>
            Gets or sets user's e-mail address.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.City">
            <summary>
            Gets or sets user's current city.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.Website">
            <summary>
            Gets or sets user's website.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.IsVerified">
            <summary>
            Indicates if user's Facebook account is verified.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.Locale">
            <summary>
            Gets or sets user's locale containing the ISO Language Code and ISO Country Code.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.LinkToFacebookProfile">
            <summary>
            Gets or sets the link to the user's Facebook profile page.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.UserName">
            <summary>
            Gets or sets the link to the user's Facebook profile page.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.Facebook.FacebookUserProfile.LastProfileChange">
            <summary>
            Gets or sets the link to the user's Facebook profile page.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.FacebookUserProvider">
            <summary>
            Provider allows you to get information about Facebook user.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.IFacebookUserProvider">
            <summary>
            Provider allows you to get information about Facebook user.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.IFacebookUserProvider.GetFacebookUser(System.String)">
            <summary>
            Gets information about Facebook user. 
            </summary>
            <param name="facebookUserId">Facebook user's ID.</param>
            <returns>Facebook user data class</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.IFacebookUserProvider.GetFacebookUser(System.String,System.String)">
            <summary>
            Gets information about Facebook user. 
            </summary>
            <param name="facebookUserId">Facebook user's ID.</param>
            <param name="accessToken">User's access token.</param>
            <returns>Facebook user data class</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookUserProvider.GetFacebookUser(System.String)">
            <summary>
            Gets public information about Facebook user. 
            </summary>
            <param name="facebookUserId">Facebook user's ID.</param>
            <returns>Facebook user data class</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookUserProvider.GetFacebookUser(System.String,System.String)">
            <summary>
            Gets information about Facebook user. Access token define what information can be retrieved.
            </summary>
            <param name="facebookUserId">Facebook user's ID.</param>
            <param name="accessToken">User's access token.</param>
            <returns>Facebook user data class</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FacebookUserProvider.IsType``1(System.Reflection.PropertyInfo)">
            <summary>
            Indicates whether the given property is type T or nullable type T.
            </summary>
            <typeparam name="T">Type to test.</typeparam>
            <param name="propertyInfo">Property to test.</param>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.FormInfoProvider">
            <summary>
            Provides form info objects suitable for mapping.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.IFormInfoProvider">
            <summary>
            Provides form info objects suitable for mapping.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.IFormInfoProvider.GetFormInfo(CMS.DataEngine.BaseInfo)">
            <summary>
            Creates a new instance of the form info suitable for mapping, and returns it.
            </summary>
            <param name="info">The CMS object to create the form info for.</param>
            <returns>A new instance of the form info suitable for mapping, if applicable; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.IFormInfoProvider.GetFormInfo(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Creates a new instance of the form info suitable for mapping, and returns it.
            </summary>
            <param name="typeInfo">The CMS object type info to create the form info for.</param>
            <returns>A new instance of the form info suitable for mapping, if applicable; otherwise, null.</returns>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.FormInfoProvider.mUserFieldCaptions">
            <summary>
            A dictionary of user field captions with field names as keys.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.FormInfoProvider.mUserSystemFieldNames">
            <summary>
            A set of user system field names suitable for mapping.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.FormInfoProvider.mUserSettingsFieldCaptions">
            <summary>
            A dictionary of user settings field captions with field names as keys.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.FormInfoProvider.mUserSettingsSystemFieldNames">
            <summary>
            A set of user settings system field names suitable for mapping.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FormInfoProvider.GetFormInfo(CMS.DataEngine.BaseInfo)">
            <summary>
            Creates a new instance of the form info suitable for mapping, and returns it.
            </summary>
            <param name="info">The CMS object to create the form info for.</param>
            <returns>A new instance of the form info suitable for mapping, if applicable; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FormInfoProvider.GetFormInfo(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Creates a new instance of the form info suitable for mapping, and returns it.
            </summary>
            <param name="typeInfo">The CMS object type info to create the form info for.</param>
            <returns>A new instance of the form info suitable for mapping, if applicable; otherwise, null.</returns>
        </member>
        <member name="M:CMS.SocialMedia.Facebook.FormInfoProvider.GetFormInfoInternal(CMS.DataEngine.ObjectTypeInfo,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates a new instance of the form info suitable for mapping, and returns it.
            </summary>
            <param name="typeInfo">The type info to retrieve the original form info from.</param>
            <param name="systemFieldNames">A set of system field names suitable for mapping.</param>
            <param name="fieldCaptions">A dictionary of field captions with field names as keys.</param>
            <returns>A new instance of the form info suitable for mapping.</returns>
        </member>
        <member name="T:CMS.SocialMedia.Facebook.FacebookUserProfileMappingTriggerEnum">
            <summary>
            Specifies when the mapping of Facebook user profile occurs.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.FacebookUserProfileMappingTriggerEnum.None">
            <summary>
            Never.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.FacebookUserProfileMappingTriggerEnum.Registration">
            <summary>
            Only when the user signs in.
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.Facebook.FacebookUserProfileMappingTriggerEnum.Login">
            <summary>
            Every time the user logs in.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.GooglePlusActivity">
            <summary>
            GooglePlusActivity class
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.GooglePlusActivity.#ctor(System.String,System.DateTime)">
            <summary>
            GooglePlusActivity constructor
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.GooglePlusActivity.Content">
            <summary>
            Content of the activity.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.GooglePlusActivity.Published">
            <summary>
            Date this activity was published.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.GooglePlusPerson">
            <summary>
            GooglePlusPeople class
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.GooglePlusPerson.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            GooglePlusActivity constructor
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.GooglePlusPerson.DisplayName">
            <summary>
            Display name.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.GooglePlusPerson.URL">
            <summary>
            Profile URL.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.GooglePlusPerson.ImageURL">
            <summary>
            URL of the profile image.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.GooglePlusPerson.UserID">
            <summary>
            UserID in the numeric form
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.GooglePlusProvider">
            <summary>
            GooglePlusProvider class
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.GooglePlusProvider.Authorize(System.String,System.String)">
            <summary>
            Authorizes client application for using user data.
            </summary>
            <param name="clientID">Client ID</param>
            <param name="clientSecret">Client secret</param>
        </member>
        <member name="M:CMS.SocialMedia.GooglePlusProvider.GetActivities(System.String,System.Int32)">
            <summary>
            Gets list of activities 
            </summary>
            <param name="userID">ID of the user or page</param>
            <param name="maxCount">Number of activities to return</param>
        </member>
        <member name="M:CMS.SocialMedia.GooglePlusProvider.FindPerson(System.String)">
            <summary>
            Uses the search method to find a person. 
            Takes first result &amp; returns it.
            </summary>
            <param name="query">Query specifying what to look for</param>
            <returns>If found, first result, null otherwise.</returns>
        </member>
        <member name="M:CMS.SocialMedia.GooglePlusProvider.GetProfileInfo(System.String)">
            <summary>
            Gets profile info of the person (or page) with given ID.
            </summary>
            <param name="userID">ID of the user or page</param>
        </member>
        <member name="M:CMS.SocialMedia.GooglePlusProvider.CreateAuthenticator">
            <summary>
            Creates Google+ Oauth2 authenticator. Client ID and secret is taken from settings.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.GooglePlusProvider.GetAuthorization(DotNetOpenAuth.OAuth2.WebServerClient)">
            <summary>
            Gets authorization state. Tokens are taken from settings.
            
            Refresh token is taken from settings. Access token is refreshed if necessary.
            </summary>
            <param name="client">OAuth2 web server client</param>
        </member>
        <member name="M:CMS.SocialMedia.GooglePlusProvider.GetAuthorizationForTokens(DotNetOpenAuth.OAuth2.WebServerClient)">
            <summary>
            Gets authorization state. Used for authorization in settings.
            
            Gets access and refresh tokens.
            </summary>
            <param name="client">OAuth2 web server client</param>
        </member>
        <member name="M:CMS.SocialMedia.GooglePlusProvider.CheckSettings">
            <summary>
            Checks settings if all necessary values are set
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.GooglePlusProvider.GetAccessToken">
            <summary>
            Gets Google+ access token.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.GooglePlusProvider.AuthState">
            <summary>
            Returns the authorization state which was either cached or set for this session.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.LinkedInCompanyQuerySource">
            <summary>
            Data query source for LinkedIn companies
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInCompanyQuerySource.GetDataSourceName">
            <summary>
            Gets the unique query source ID
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInCompanyQuerySource.GetData(CMS.DataEngine.DataQuerySourceParameters)">
            <summary>
            Executes the query
            </summary>
            <param name="parameters">Query parameters</param>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInCompanyQuerySource.GetData(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.SocialMedia.LinkedInProvider">
            <summary>
            LinkedInProvider class
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.LinkedInProvider.ACCESS_TOKEN_PAGE">
            <summary>
            Access token page.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInProvider.SearchCompany(System.String,System.Int32,System.Int32)">
            <summary>
            Searches LinkedIn for companies according to <paramref name="searchString"/> keyword.
            </summary>
            <param name="searchString">Keyword for the search.</param>
            <param name="offset">Offset - where to start searching.</param>
            <param name="count">Number of results to be returned. Actual number of results may be smaller.</param>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInProvider.Authorize(System.String)">
            <summary>
            Authorizes client application for using user data.
            </summary>
            <param name="txtToken">Token client ID.</param>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInProvider.PrepareService">
            <summary>
            Creates and sets up LinkedInServiceEnhanced instance.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.LinkedInProvider.TokenManager">
            <summary>
            Token manager
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.LinkedInServiceEnhanced">
            <summary>
            LinkedInServiceEnhanced class
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInServiceEnhanced.#ctor(LinkedIn.ILinkedInAuthorization)">
            <summary>
            LinkedInServiceEnhanced constructor
            </summary>
            <param name="authorization"><see cref="T:LinkedIn.ILinkedInAuthorization"/> object.</param>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInServiceEnhanced.SearchCompany(System.String,System.Int32,System.Int32)">
            <summary>
            Searches LinkedIn for companies.
            </summary>
            <param name="searchString">Keyword for the search.</param>
            <param name="offset">Offset.</param>
            <param name="maxCount">Defines maximal number of result to be returned.</param>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInServiceEnhanced.SendRequest(System.Net.WebRequest)">
            <summary>
            Send a <see cref="T:System.Net.WebRequest"/> and retrieve the response.
            </summary>
            <param name="webRequest">The web request to send.</param>
            <exception cref="T:System.Net.WebException">Thrown in case of a connect failure, name resolution failure, send failure or timeout of the WebException.</exception>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInServiceEnhanced.ProcessResponse(System.Net.WebResponse)">
            <summary>
            Process the API response.
            </summary>
            <param name="webResponse">The <see cref="T:System.Net.WebResponse"/> to process.</param>
        </member>
        <member name="T:CMS.SocialMedia.LinkedInCompany">
            <summary>
            LinkedInCompany class
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInCompany.#ctor(System.String,System.String,System.String)">
            <summary>
            LinkedInCompany constructor
            </summary>
            <param name="id">ID of the company</param>
            <param name="name">Name of the company</param>
            <param name="url">Company website address</param>
        </member>
        <member name="P:CMS.SocialMedia.LinkedInCompany.ID">
            <summary>
            Company ID
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.LinkedInCompany.Name">
            <summary>
            Company name
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.LinkedInCompany.Url">
            <summary>
            Company website address
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.LinkedInCompanyListInfo">
            <summary>
            Fake info for list of LinkedIn companies
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.LinkedInCompanyListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.SocialMedia.LinkedInCompanyListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInCompanyListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ContactAccountListInfo object.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInCompanyListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ContactAccountListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.SocialMedia.LinkedInCompanyListInfo.GetDataQueryInternal">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.LinkedInCompanyListInfo.ColumnNames">
            <summary>
            Columns
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.LinkedInCompanyListInfo.DisplayNameColumn">
            <summary>
            Display name column name of the info record
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.SocialMediaModuleMetadata">
            <summary>
            Represents the Social Media module metadata.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.SocialMediaModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.SocialMediaAbstractWebPart">
            <summary>
            Abstract WP layer ensuring CookieLaw is respected in third party WPs
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.SocialMediaAbstractWebPart.OnPreRender(System.EventArgs)">
            <summary>
            Pre-render
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.SocialMedia.SocialMediaAbstractWebPart.ReloadData">
            <summary>
            Reload Data
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.SocialMediaAbstractWebPart.SetupControl">
            <summary>
            Set the control up
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.SocialMediaAbstractWebPart.ShowError(System.Web.UI.WebControls.Label,System.String)">
            <summary>
            Displays a given message in given label if not on Livesite
            </summary>
            <param name="label">Error message label</param>
            <param name="message">Message you want to display or its resource-string</param>
        </member>
        <member name="P:CMS.SocialMedia.SocialMediaAbstractWebPart.HideContent">
            <summary>
            Indicates whether to hide the webpart
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.SocialMediaHelper">
            <summary>
            Helper methods for social media services.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.SocialMediaHelper.GetPathToLinkedInSettings">
            <summary>
            Gets navigation path to LinkedIn settings
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.SocialMediaHelper.GetPathToGooglePlusSettings">
            <summary>
            Gets navigation path to Google+ settings
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.SocialMediaHelper.SocialMediaCookieLevel">
            <summary>
            Gets Social media cookie level.
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.SocialMediaModule">
            <summary>
            Represents the Social Media module.
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.SocialMediaModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.SocialMedia.TokenManager">
            <summary>
            TokenManager class
            </summary>
        </member>
        <member name="M:CMS.SocialMedia.TokenManager.#ctor(System.String,System.String)">
            <summary>
            TokenManager constructor
            </summary>
            <param name="consumerKey">Consumer key.</param>
            <param name="consumerSecret">Consumer secret.</param>
        </member>
        <member name="M:CMS.SocialMedia.TokenManager.AddToken(System.String,System.String)">
            <summary>
            Adds token and its secret to the manager.
            </summary>
            <param name="token">Token.</param>
            <param name="tokenSecret">Token secret.</param>
        </member>
        <member name="M:CMS.SocialMedia.TokenManager.GetTokenSecret(System.String)">
            <summary>
            Gets the Token Secret given a request or access token.
            </summary>
            <param name="token">The request or access token.</param>
        </member>
        <member name="M:CMS.SocialMedia.TokenManager.StoreNewRequestToken(DotNetOpenAuth.OAuth.Messages.UnauthorizedTokenRequest,DotNetOpenAuth.OAuth.Messages.ITokenSecretContainingMessage)">
            <summary>
            Stores a newly generated unauthorized request token, secret, and optional
            application-specific parameters for later recall.
            </summary>
            <param name="request">The request message that resulted in the generation of a new unauthorized request token.</param>
            <param name="response">The response message that includes the unauthorized request token.</param>
        </member>
        <member name="M:CMS.SocialMedia.TokenManager.ExpireRequestTokenAndStoreNewAccessToken(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes a request token and its associated secret and stores a new access
            token and secret.
            </summary>
            <param name="consumerKey">The Consumer that is exchanging its request token for an access token.</param>
            <param name="requestToken">The Consumer's request token that should be deleted/expired.</param>
            <param name="accessToken">The new access token that is being issued to the Consumer.</param>
            <param name="accessTokenSecret">The secret associated with the newly issued access token.</param>
        </member>
        <member name="M:CMS.SocialMedia.TokenManager.GetTokenType(System.String)">
            <summary>
            Classifies a token as a request token or an access token.
            </summary>
            <param name="token">The token to classify.</param>
        </member>
        <member name="P:CMS.SocialMedia.TokenManager.ConsumerKey">
            <summary>
            Consumer key
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.TokenManager.ConsumerSecret">
            <summary>
            Consumer secret
            </summary>
        </member>
        <member name="P:CMS.SocialMedia.TokenManager.Tokens">
            <summary>
            All tokens and their secrets contained in token manager
            </summary>
        </member>
    </members>
</doc>
