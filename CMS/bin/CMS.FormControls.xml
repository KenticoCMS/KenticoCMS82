<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.FormControls</name>
    </assembly>
    <members>
        <member name="T:CMS.FormControls.FormControl">
            <summary>
            Form control for the forms.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormControl.mUseFFI">
            <summary>
            Indicates if control should load properties from FormFieldInfo
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControl.Reload">
            <summary>
            Reloads inner controls. Can be used after additional initialization.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControl.GetValue(System.String)">
            <summary>
            Returns the value of the given web part property property.
            </summary>
            <param name="propertyName">Property name</param>
        </member>
        <member name="M:CMS.FormControls.FormControl.GetValue``1(System.String,``0)">
            <summary>
            Returns the value of the given web part property property.
            </summary>
            <param name="propertyName">Property name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.FormControls.FormControl.SetValue(System.String,System.Object)">
            <summary>
            Sets the property value of the control, setting the value affects only local property value.
            </summary>
            <param name="propertyName">Property name to set</param>
            <param name="value">New property value</param>
        </member>
        <member name="M:CMS.FormControls.FormControl.OnPreRender(System.EventArgs)">
            <summary>
            OnPreRender override.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControl.InitializeControl">
            <summary>
            Loads the form control
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControl.EnsureChildControl``1(``0@)">
            <summary>
            Ensures the first found child control of the given type in the given variable
            </summary>
            <param name="variable">Control variable</param>
        </member>
        <member name="P:CMS.FormControls.FormControl.Properties">
            <summary>
            Properties definition.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.EditingControl">
            <summary>
            Editing control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.Field">
            <summary>
            Field name for the inner controls. This property is only supported in templated form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.FormControlName">
            <summary>
            Form control name.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.IsLiveSite">
            <summary>
            Indicates if control is used on live site.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.ShortID">
            <summary>
            Short ID of the control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.CssClass">
            <summary>
            Control CSS class.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.CheckUnique">
            <summary>
            If true, the field is checked for uniqueness. This property is only supported in UIForm.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.Trim">
            <summary>
            If true, the value is trimmed. This property is only supported if used inside the form control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.Value">
            <summary>
            Value used for initialization as default value.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.FormFieldInfo">
            <summary>
            FormFieldInfo for current control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.Form">
            <summary>
            Form where the control is used.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.UseFFI">
            <summary>
            Indicates if control should load properties from FormFieldInfo. Default TRUE.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.AutoPostBack">
            <summary>
            Gets or sets whether a postback automatically occurs.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.Enabled">
            <summary>
            Gets or sets state enable.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.Text">
            <summary>
            Gets or sets value converted to string
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.TagKey">
            <summary>
            TagKey used to render (Div).
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControl.ContextResolver">
            <summary>
            Macro resolver.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FilterForm">
            <summary>
            Filter form
            </summary>
        </member>
        <member name="T:CMS.FormControls.BasicForm">
            <summary>
            Basic form engine independent on CMS. It displays the specified form.
            </summary>
        </member>
        <member name="T:CMS.FormControls.AbstractBasicForm">
            <summary>
            Abstract class for BasicForm.
            </summary>
        </member>
        <member name="F:CMS.FormControls.AbstractBasicForm.mContextObject">
            <summary>
            Current control context object.
            </summary>
        </member>
        <member name="F:CMS.FormControls.AbstractBasicForm.mTimeZoneType">
            <summary>
            Time zone type.
            </summary>
        </member>
        <member name="F:CMS.FormControls.AbstractBasicForm.mSpellCheckFields">
            <summary>
            List of the field names to spell check.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractBasicForm.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractBasicForm.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control at design-time.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractBasicForm.LoadControlValues">
            <summary>
            Loads the values from the data container to the form controls.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractBasicForm.GetControlValue(System.Web.UI.Control)">
            <summary>
            Gets the value of specified field.
            </summary>
            <param name="ctrl">The control</param>
        </member>
        <member name="M:CMS.FormControls.AbstractBasicForm.GetDataValue(System.String)">
            <summary>
            Returns DataRow value for the specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.FormControls.AbstractBasicForm.ItemChanged(System.String)">
            <summary>
            Checks if item has changed.
            </summary>
            <param name="columnName">Column</param>
        </member>
        <member name="M:CMS.FormControls.AbstractBasicForm.SaveControlValue(System.String,CMS.FormControls.FormEngineUserControl)">
            <summary>
            Saves the control value to the data.
            </summary>
            <param name="columnName">Column name</param>
            <param name="ctrl">Control with the value</param>
        </member>
        <member name="M:CMS.FormControls.AbstractBasicForm.SetDataValue(System.String,System.Object)">
            <summary>
            Sets value of the given column in the data.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param>
        </member>
        <member name="M:CMS.FormControls.AbstractBasicForm.InitSpellCheck">
            <summary>
            Initializes the spell checker.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractBasicForm.GetControlValue(System.String,CMS.FormControls.FormEngineUserControl)">
            <summary>
            Gets the value from a form control either directly or modified by an event handler.
            </summary>
            <param name="columnName">Name of the column</param>
            <param name="formControl">The form control</param>
            <returns>Value of the form control</returns>
        </member>
        <member name="M:CMS.FormControls.AbstractBasicForm.GetControlValue(System.String)">
            <summary>
            Tries to find appropriate value of control.
            </summary>
            <param name="columnName">Column name of edited object</param>
        </member>
        <member name="M:CMS.FormControls.AbstractBasicForm.LoadSpellCheckFields">
            <summary>
            Load client IDs of spell-check fields to SpellCheckFields property.
            </summary>
        </member>
        <member name="E:CMS.FormControls.AbstractBasicForm.OnGetControlValue">
            <summary>
            Occurs when a value is being extracted from a form control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.AllowSpellCheck">
            <summary>
            Indicates if spell check is allowed. Not allowed by default.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.SpellCheckFields">
            <summary>
            List with client Ids of fields that should be spell checked.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.FormInformation">
            <summary>
            Form information.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.Data">
            <summary>
            Data to be edited.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.DataRow">
            <summary>
            Data to be edited.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.IsInsertMode">
            <summary>
            Indicates if the control is used for inserting a new object.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.Mode">
            <summary>
            Gets or sets the mode of the form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.ProcessDisabledFields">
            <summary>
            Indicates if disabled fields should be processed (validated and saved). Default value is true in insert mode and false in edit mode.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.Fields">
            <summary>
            List of field names in order they appear in the form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.FieldLabels">
            <summary>
            FieldLabels.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.FieldControls">
            <summary>
            Dictionary with FormEngineUserControl objects.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.FieldEditingControls">
            <summary>
            Dictionary with EditingFormControl objects.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.FieldErrorLabels">
            <summary>
            FieldErrorLabels.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.FieldVisibilityControls">
            <summary>
            Visibility controls hashtable.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.FieldActionsControls">
            <summary>
            Contains FieldActions controls if the form is in design mode (BasicForm.IsDesignMode property).
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.FieldUpdatePanels">
            <summary>
            Contains update panels which surround the fields (whole rows including labels) if the form is in design mode (BasicForm.IsDesignMode property).
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.ControlContext">
            <summary>
            Gets the current control context.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.TimeZoneType">
            <summary>
            Gets or sets time zone type for child controls. Default value is TimeZoneTypeEnum.Inherit.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractBasicForm.CustomTimeZone">
            <summary>
            Gets or sets custom time zone info. This time zone is used when TimeZoneType is 'custom'.
            </summary>
        </member>
        <member name="T:CMS.FormControls.AbstractBasicForm.OnItemValidationEventHandler">
            <summary>
            Occurs when the particular item is validated.
            </summary>
            <param name="sender">Item control that is just validated</param>
            <param name="errorMessage">Returning errorMessage from the validator</param>
        </member>
        <member name="T:CMS.FormControls.IFormStyleConfiguration">
            <summary>
            Interface describing form style configuration options.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FormCssClass">
            <summary>
            CSS class which will be used to wrap form control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FieldCssClass">
            <summary>
            CSS class for the whole field (usually row).
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.GroupCssClass">
            <summary>
            CSS class for the whole field group with heading.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FieldGroupCssClass">
            <summary>
            CSS class for the whole field group.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FieldGroupCaptionCssClass">
            <summary>
            CSS class for the field group caption.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FieldValueCellCssClass">
            <summary>
            CSS class for the individual field control cell.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FieldCaptionCellCssClass">
            <summary>
            CSS class for the individual field label cell.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FieldCaptionCssClass">
            <summary>
            CSS class for the individual field label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FieldErrorCellCssClass">
            <summary>
            CSS class for the individual field error label cell.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FieldErrorLabelCssClass">
            <summary>
            CSS class for the individual field error label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FieldErrorCssClass">
            <summary>
            CSS class that is added to editing form control after its validation failed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FieldVisibilityCellCssClass">
            <summary>
            CSS class for the individual field visibility cell.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FieldVisibilityCssClass">
            <summary>
            CSS class for the individual field visibility control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.ExplanationTextCssClass">
            <summary>
            CSS class that is added to container that is wrapping content after text (only if content before text is empty).
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FormButtonCssClass">
            <summary>
            CSS class for the form button.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormStyleConfiguration.FormButtonPanelCssClass">
            <summary>
            CSS class for the form button panel.
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.mValidationErrorMessage">
            <summary>
            Validation error message
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.mSubmitButton">
            <summary>
            Form submit button.
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.mSubmitImageButton">
            <summary>
            Form submit image button.
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.categoryListPlaceholder">
            <summary>
            Placeholder for category list.
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.categoryListPanel">
            <summary>
            Category list panel, may be displayed above formPanel.
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.mUseColonBehindLabel">
            <summary>
            If true, colon(:) is placed behind field label.
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.mShowPrivateFields">
            <summary>
            Nonpublic fields are shown if true.
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.visibilityInfo">
            <summary>
            Form visibility info.
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.mAllowExternalEditing">
            <summary>
            Indicates if external editing should be allowed for the controls.
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.mCheckFieldEmptiness">
            <summary>
            Indicates if field emptiness should be checked on validation.
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.mContextResolver">
            <summary>
            Web part context resolver.
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.mIsValid">
            <summary>
            Indicates if entered form data are valid. If it's null the validation needs to be done.
            </summary>
        </member>
        <member name="F:CMS.FormControls.BasicForm.mFieldErrorCssClass">
            <summary>
            CSS class that is added to editing form control after its validation failed. Default value is "Error".
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.#ctor(CMS.Base.IDataContainer)">
            <summary>
            Constructor.
            </summary>
            <param name="data">Source data</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.OnPreRender(System.EventArgs)">
            <summary>
            Pre-render event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control at design-time.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.SaveDataClick(System.Object,System.EventArgs)">
            <summary>
            Saves form data into Data container after the submit button is clicked.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.InitializeControl">
            <summary>
            Initializes the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.InitFormInternal">
            <summary>
            Internal method to initialize the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.AddControlsBeforeInternal">
            <summary>
            Internal method to add components before the form from inherited forms.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.AddControlsAfterInternal">
            <summary>
            Internal method to add components after the form from inherited forms.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.InitializeMainPanel(System.Boolean)">
            <summary>
            Initializes main form container.
            </summary>
            <param name="resetControls">Indicates if the controls collection should be cleared</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ProcessUserVisibility">
            <summary>
            Changes fields' visible attribute according to user visibility settings or changes form definition if visibility can be edited.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ProcessVisibility">
            <summary>
            Changes fields' visible attribute according to visibility.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ProcessContextVisibility">
            <summary>
            Changes fields' visible attribute according to display context.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.InitResolver">
            <summary>
            Initializes macro resolver data sources.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ContextResolver_OnGetValue(System.String)">
            <summary>
            Provides the connection to particular fields by their name
            </summary>
            <param name="name">Value name</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ConnectAssociatedControls">
            <summary>
            Connects associated controls (labels and inputs) together, for accessibility and other reasons.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.HandleFieldsValues">
            <summary>
            Initializes default values for invisible fields.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.SaveDataInternal">
            <summary>
            Internal method to save data to the database.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.AfterSaveActionsInternal(System.String,System.Boolean)">
            <summary> 
            Performs additional actions after save (redirecting or displaying info message).
            </summary>
            <param name="redirectUrlAfterSave">If specified, user is redirected to this URL after data is successfully saved</param>
            <param name="showChangesSaved">If true and redirect URL is not set, Info message "Changes were saved" is displayed</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.GetAttachmentInternal(System.Guid)">
            <summary>
            Gets attachment
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.RaiseOnCheckPermissions">
            <summary>
            Invokes OnCheckPermissions event.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.GetFieldCssClass(CMS.FormEngine.FormFieldInfo,CMS.FormEngine.FormFieldPropertyEnum)">
            <summary>
            Returns CSS class belonging to specified form field element.
            </summary>
            <param name="formField">Form field configuration</param>
            <param name="cssProperty">Property containing CSS class.</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.LoadLayout">
            <summary>
            Loads the form layout.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.LoadTemplateLayout">
            <summary>
            Loads the layout template.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.layout_OnAfterRegisterFormControl(System.Object,System.EventArgs)">
            <summary>
            Event after control has been registered in template layout.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.LoadFormLayout">
            <summary>
            Loads form layout.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.LoadDefaultLayout">
            <summary>
            Loads default layout.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.EnsureLabels">
            <summary>
            Ensures the general labels on the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ReloadData">
            <summary>
            Reloads the form data.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.LoadData(System.Data.DataRow)">
            <summary>
            Renders form and sets field values.
            </summary>
            <param name="dr">DataRow containing form data</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.LoadData(CMS.Base.IDataContainer)">
            <summary>
            Renders form and sets field values.
            </summary>
            <param name="data">DataContainer containing form data</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ValidateData">
            <summary>
            Validates the data, returns true if succeeded.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.SaveData(System.String,System.Boolean)">
            <summary> 
            Saves data and optionally redirects user to specified URL.
            </summary>
            <param name="redirectUrlAfterSave">If specified, user is redirected to this URL after data is successfully saved</param>
            <param name="showChangesSaved">If true and redirect URL is not set, Info message "Changes were saved" is displayed</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.GetFieldValue(System.String)">
            <summary>
            Gets the value of a specified field.
            </summary>
            <param name="fieldName">Field name</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.GetMultifieldValues(System.String)">
            <summary>
            Gets the multi-field values of a specified field.
            </summary>
            <param name="fieldName">Field name</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.IsCategoryCollapsed(System.String)">
            <summary>
            Returns true if the given category is collapsed
            </summary>
            <param name="categoryName">Category name</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.IsFieldAvailable(System.String)">
            <summary>
            Checks if control is included in editing controls hashtable.
            </summary>
            <param name="fieldName">Name of field with control</param>
            <returns>Returns TRUE if field is found. Otherwise returns FALSE.</returns>
        </member>
        <member name="M:CMS.FormControls.BasicForm.IsFieldVisible(System.String)">
            <summary>
            Checks if the given field is evaluated as visible.
            </summary>
            <param name="fieldName">Form field name</param>       
        </member>
        <member name="M:CMS.FormControls.BasicForm.IsAnyFieldVisible">
            <summary>
            Returns TRUE if basic form displays any control.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.GetWhereCondition">
            <summary>
            Gets where condition from all form engine user controls.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.RaiseOnUploadFile(System.Object,System.EventArgs)">
            <summary>
            Raises the OnUploadFile event.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.RaiseOnDeleteFile(System.Object,System.EventArgs)">
            <summary>
            Raises the OnDeleteFile event.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.RaiseOnAfterSave(System.Object,System.EventArgs)">
            <summary>
            Raises the OnAfterSave event.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.RaiseOnSaveFailed(System.Object,System.EventArgs)">
            <summary>
            Raises the OnSaveFailed event.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.RaiseOnBeforeRedirect(System.Object,System.EventArgs)">
            <summary>
            Raises the OnBeforeRedirect event.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.GetAttachment(System.Guid)">
            <summary>
            Returns attachment info and raises OnGetAttachment event.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.EnsureMessagesPlaceholder(CMS.ExtendedControls.MessagesPlaceHolder)">
            <summary>
            Ensures correct set the messages placeholder.
            </summary>
            <param name="plcMess">Page messages placeholder</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ResolveMacros(System.String)">
            <summary>
            Resolves the macros within current WebPart context.
            </summary>
            <param name="inputText">Input text to resolve</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ProcessMacros">
            <summary>
            Processes macros of form controls and sets their properties.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.SetDefaultValuesToDummyFields">
            <summary>
            Sets default values to dummy fields.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.GetFieldsVisibility">
            <summary>
            Gets collections of fields' visibility (key = field name, value = field's evaluated visibility)
            Visibility of the field which uses value from other field in its visibility macro expression might be different from its final visibility.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.GetDefaultValue(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Returns field's default value with resolved macros if macro editing is not allowed or the field requires macro resolving.
            </summary>
            <param name="field">Form field info object</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.StringToFormTypeEnum(System.String)">
            <summary>
            Returns the enumeration representation of the form type.
            </summary>
            <param name="str">Form type codename</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.FormTypeEnumToString(CMS.FormControls.FormTypeEnum)">
            <summary>
            Returns the string representation of the form type.
            </summary>
            <param name="value">Value to convert</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.CreateMessagesPlaceHolder">
            <summary>
            Creates local messages placeholder.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ShowChangesSaved">
            <summary>
            Shows the general changes saved message.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ShowConfirmation(System.String,System.Boolean)">
            <summary>
            Shows the general changes saved message.
            </summary>
            <param name="text">Custom text</param>
            <param name="persistent">Indicates if the message is persistent</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.AddConfirmation(System.String,System.String)">
            <summary>
            Adds confirmation text to existing message on the page, optionally with a tooltip text.
            </summary>
            <param name="text">Information message</param>
            <param name="separator">Separator</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ShowInformation(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Shows the given information on the page, optionally with a tooltip text.
            </summary>
            <param name="text">Information message</param>
            <param name="description">Additional description</param>
            <param name="tooltipText">Tooltip text</param>
            <param name="persistent">Indicates if the message is persistent</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.AddInformation(System.String,System.String)">
            <summary>
            Adds information text to existing message on the page.
            </summary>
            <param name="text">Information message</param>
            <param name="separator">Separator</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.DisplayErrorLabel(System.String,System.String)">
            <summary>
            Displays error label.
            </summary>
            <param name="name">Name of the field</param>
            <param name="validationResult">Error text</param>
            <returns>TRUE if the error label should be displayed</returns>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ShowError(System.String,System.String,System.String)">
            <summary>
            Shows the specified error message, optionally with a tooltip text.
            </summary>
            <param name="text">Error message text</param>
            <param name="description">Additional description</param>
            <param name="tooltipText">Tooltip text</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.PrependError(System.String,System.String)">
            <summary>
            Prepends error text to existing message on the page.
            </summary>
            <param name="text">Error message text</param>
            <param name="separator">Separator</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.AddError(System.String,System.String)">
            <summary>
            Adds error text to existing message on the page.
            </summary>
            <param name="text">Information message</param>
            <param name="separator">Separator</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.ShowWarning(System.String,System.String,System.String)">
            <summary>
            Shows the specified warning message, optionally with a tooltip text.
            </summary>
            <param name="text">Warning message text</param>
            <param name="description">Additional description</param>
            <param name="tooltipText">Tooltip text</param>
        </member>
        <member name="M:CMS.FormControls.BasicForm.AddWarning(System.String,System.String)">
            <summary>
            Adds warning text to existing message on the page.
            </summary>
            <param name="text">Information message</param>
            <param name="separator">Separator</param>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnBeforeDataLoad">
            <summary>
            Before data load event.
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnAfterDataLoad">
            <summary>
            After data load event.
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnBeforeValidate">
            <summary>
            Before validation event.
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnAfterValidate">
            <summary>
            After validation event.
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnBeforeDataRetrieval">
            <summary>
            Before form data retrieval event. It is called during saving process after successful validation and before data are retrieved from form controls.
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnBeforeRedirect">
            <summary>
            Before redirect event (after successful save).
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnBeforeSave">
            <summary>
            Before form data save event. It is called during saving process after data are retrieved from form controls and can be processed further (e.g. saved to DB).
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnAfterSave">
            <summary>
            After form data save event. It is called during saving process when the form content is successfully saved.
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnSaveFailed">
            <summary>
            Occurs when saving data to the database fails.
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnValidationFailed">
            <summary>
            Occurs when validation of the form fails.
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnCheckPermissions">
            <summary>
            Occurs when permission can be checked. It is called at the beginning of the saving process.
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnItemValidation">
            <summary>
            Occurs when a field is validated.
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnUploadFile">
            <summary>
            Occurs when the file is uploaded.
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnDeleteFile">
            <summary>
            Occurs when the file is deleted.
            </summary>
        </member>
        <member name="E:CMS.FormControls.BasicForm.OnGetAttachment">
            <summary>
            Occurs when an attachment is retrieved.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.LayoutTemplate">
            <summary>
            Layout template, if set, the given layout is used.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.SubmitButton">
            <summary>
            Form submit button.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.SubmitImageButton">
            <summary>
            Form submit image button.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.InfoLabel">
            <summary>
            Information label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ErrorLabel">
            <summary>
            Label for the errors.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.MessagesPlaceHolder">
            <summary>
            Messages placeholder
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.TagKey">
            <summary>
            Overrides the generation of the SPAN tag with custom tag.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FormPanel">
            <summary>
            Returns form outer panel.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FormButtonPanel">
            <summary>
            Returns panel surrounding submit button if generated by automatic layouts, otherwise returns null.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.AutomaticLabelWidth">
            <summary>
            Set width of all labels according to the widest label.
            This property is applied only if DefaultFormLayout is set to <see cref="F:CMS.FormEngine.FormLayoutEnum.Divs"/>.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ShowValidationErrorMessage">
            <summary>
            Indicates if error message should be displayed after validation failed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ValidationErrorMessage">
            <summary>
            Optional error message displayed after validation failed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ContextResolver">
            <summary>
            Form context resolver.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.EnsureFirstLetterUpperCase">
            <summary>
            If true, labels of the controls are processed to have the first letter upper case.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.DisplayContext">
            <summary>
            Gets or sets the current display context which is used if control contains DisplayIn value.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.AllowMacroEditing">
            <summary>
            Determines whether to display the "Edit value" button in EditingFormControls.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FormType">
            <summary>
            Indicates in what control is this basic form used.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.Enabled">
            <summary>
            Indicates if the form control is enabled.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ShowPrivateFields">
            <summary>
            Indicates whether to show private fields or not.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FormLayout">
            <summary>
            Definition of the form layout.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FormLayoutType">
            <summary>
            Form layout type.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.AdditionalData">
            <summary>
            Gets a dictionary that provides additional context data for form controls.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.MacroTable">
            <summary>
            Hashtable with IsMacro flags.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ResolverName">
            <summary>
            Gets or sets macro resolver name.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.AssociatedControls">
            <summary>
            Controls associated with FormItems.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldsToHide">
            <summary>
            List of fields to hide (empty by default).
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.HtmlAreaToolbar">
            <summary>
            HTML editor toolbar set name.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.HtmlAreaToolbarLocation">
            <summary>
            HTML editor toolbar location.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ShowImageButton">
            <summary>
            Show image button flag.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.SiteName">
            <summary>
            Current SiteName.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.UseColonBehindLabel">
            <summary>
            If true, colon(:) is placed behind field label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.MarkRequiredFields">
            <summary>
            If true, required field labels are marked with resource string.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.SetDefaultValuesToDisabledFields">
            <summary>
            If true, default values will be set to the disabled fields. Default value is true in insert mode and false in edit mode.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FormGUID">
            <summary>
            Identifies the instance of form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.DefaultFormLayout">
            <summary>
            Form layout.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.DefaultFieldLayout">
            <summary>
            Default field layout.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.DefaultCategoryName">
            <summary>
            Default category name.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.HideSystemFields">
            <summary>
            If true, system fields are hidden.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.DialogParameters">
            <summary>
            Additional parameters for the dialog windows.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.EditedObject">
            <summary>
            Edited object. TreeNode in CMSForm, IDataClass in BizForm and CustomTableForm,
            AbstractInfo or DataClassInfo in DataForm.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ParentObject">
            <summary>
            Parent object. Setup in CMSFrom in insert mode, contains TreeNode.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ApplyVisibility">
            <summary>
            Indicates if field visibility should be applied.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.VisibilityFormName">
            <summary>
            This name is used if ApplyVisibility is 'true' to get visibility definition of current user.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.AllowEditVisibility">
            <summary>
            Indicates if field visibility could be edited.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.AllowExternalEditing">
            <summary>
            Indicates if external editing should be allowed for the controls.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.CheckFieldEmptiness">
            <summary>
            Indicates that field should be checked on emptiness in validation step by BasicForm. Default TRUE. 
            It is preferable to set to FALSE for controls with complex input such as filter form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.RedirectUrlAfterSave">
            <summary>
            URL to which the form redirects after successful save.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldGroupHeadingLevel">
            <summary>
            Heading level for the field group caption.
            </summary>        
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldGroupHeadingIsAnchor">
            <summary>
            Gets or sets a value indicating whether heading for the field group caption is anchor.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FormCssClass">
            <summary>
            CSS class which will be used to wrap form control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldCssClass">
            <summary>
            CSS class for the whole field (usually row).
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.GroupCssClass">
            <summary>
            CSS class for the whole field group with heading.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldGroupCssClass">
            <summary>
            CSS class for the whole field group.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldGroupCaptionCssClass">
            <summary>
            CSS class for the field group caption.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldValueCellCssClass">
            <summary>
            CSS class for the individual field control cell.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldCaptionCellCssClass">
            <summary>
            CSS class for the individual field label cell.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldCaptionCssClass">
            <summary>
            CSS class for the individual field label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldErrorCellCssClass">
            <summary>
            CSS class for the individual field error label cell.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldErrorLabelCssClass">
            <summary>
            CSS class for the individual field error label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldErrorCssClass">
            <summary>
            CSS class that is added to editing form control after its validation failed. Default value is "Error".
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldVisibilityCellCssClass">
            <summary>
            CSS class for the individual field visibility cell.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldVisibilityCssClass">
            <summary>
            CSS class for the individual field visibility control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ExplanationTextCssClass">
            <summary>
            CSS class that is added to container that is wrapping content after text (only if content before text is empty). Default value is "ExplanationText".
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FormButtonCssClass">
            <summary>
            CSS class for the form button.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FormButtonPanelCssClass">
            <summary>
            CSS class for the form button panel.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ForceReloadCategories">
            <summary>
            Forces categories to get to default collapsed state.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ExpandCategoryImageUrl">
            <summary>
            Image URL for expanding a category.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.CollapseCategoryImageUrl">
            <summary>
            Image URL for collapsing a category.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.AllowModeSwitch">
            <summary>
            Determines whether to allow mode switching (simple &lt;-&gt; advanced).
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.IsSimpleMode">
            <summary>
            Sets simple/advanced mode of basicform.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.Layout">
            <summary>
            Layout of the form
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FirstField">
            <summary>
            First field element.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.LastField">
            <summary>
            Last field element.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.IsDesignMode">
            <summary>
            Determines whether the form is in design mode.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.IsFirstLoad">
            <summary>
            Indicates if inner controls are loaded for the first time (the form may be initialized on a postback).
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FieldsVisibility">
            <summary>
            Collections of fields' visibility (key = field name, value = field's evaluated visibility)
            Visibility of the field which uses value from other field in its visibility macro expression might be different from its final visibility.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.ClassInfo">
            <summary>
            DataClassInfo of edited object.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FormInformation">
            <summary>
            Form information.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.AltFormInformation">
            <summary>
            Alternative form information.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.LayoutStyleConfiguration">
            <summary>
            Style-set used by form. Styles are based on <see cref="P:CMS.FormControls.BasicForm.DefaultFormLayout"/> and <see cref="P:CMS.FormControls.BasicForm.FormDefaultStyle"/>.
            </summary>
        </member>
        <member name="P:CMS.FormControls.BasicForm.FormDefaultStyle">
            <summary>
            Default form-specific style configuration.
            </summary>
        </member>
        <member name="T:CMS.FormControls.BasicForm.OnGetAttachmentEventHandler">
            <summary>
            Occurs when the attachment info is required.
            </summary>
            <param name="sender">Item control that raised the event</param>
            <param name="attachmentGuid">Attachment GUID to retrieve</param>
        </member>
        <member name="T:CMS.FormControls.IFilterControl">
            <summary>
            Interface for a general filter control
            </summary>
        </member>
        <member name="M:CMS.FormControls.IFilterControl.ResetFilter">
            <summary>
            Resets the filter state
            </summary>
        </member>
        <member name="M:CMS.FormControls.IFilterControl.StoreFilterState(CMS.Helpers.FilterState)">
            <summary>
            Stores filter state to the specified object.
            </summary>
            <param name="state">The object that holds the filter state.</param>
        </member>
        <member name="M:CMS.FormControls.IFilterControl.RestoreFilterState(CMS.Helpers.FilterState)">
            <summary>
            Restores filter state from the specified object.
            </summary>
            <param name="state">The object that holds the filter state.</param>
        </member>
        <member name="P:CMS.FormControls.IFilterControl.UniqueID">
            <summary>
            Unique control ID
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFilterControl.FilteredControl">
            <summary>
            Control which is being filtered by this control
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFilterControl.Value">
            <summary>
            Filter value
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFilterControl.WhereCondition">
            <summary>
            Returns the where condition for the filter
            </summary>
        </member>
        <member name="E:CMS.FormControls.IFilterControl.OnFilterChanged">
            <summary>
            Raises when the filter changes its state
            </summary>
        </member>
        <member name="M:CMS.FormControls.FilterForm.InitResolver">
            <summary>
            Initializes macro resolver data sources.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FilterForm.ResetFilter">
            <summary>
            Resets the filter state
            </summary>
        </member>
        <member name="M:CMS.FormControls.FilterForm.StoreFilterState(CMS.Helpers.FilterState)">
            <summary>
            Stores filter state to the specified object.
            </summary>
            <param name="state">The object that holds the filter state.</param>
        </member>
        <member name="M:CMS.FormControls.FilterForm.RestoreFilterState(CMS.Helpers.FilterState)">
            <summary>
            Restores filter state from the specified object.
            </summary>
            <param name="state">The object that holds the filter state.</param>
        </member>
        <member name="M:CMS.FormControls.FilterForm.RaiseFilterChanged">
            <summary>
            Raises the filter changed event
            </summary>
        </member>
        <member name="P:CMS.FormControls.FilterForm.FilteredControl">
            <summary>
            Control which is being filtered by this control
            </summary>
        </member>
        <member name="P:CMS.FormControls.FilterForm.Value">
            <summary>
            Filter value
            </summary>
        </member>
        <member name="P:CMS.FormControls.FilterForm.WhereCondition">
            <summary>
            Returns the where condition for the filter
            </summary>
        </member>
        <member name="E:CMS.FormControls.FilterForm.OnFilterChanged">
            <summary>
            Raises when the filter changes its state
            </summary>
        </member>
        <member name="T:CMS.FormControls.ActionEventHandler">
            <summary>
            Action event handler.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FieldMacroRuleDesigner">
            <summary>
            Control provides editing of field validation rules.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FieldMacroRuleDesigner.EDITED_INDEX_NONE">
            <summary>
            Indicates that there is no rule edited.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FieldMacroRuleDesigner.EDITED_INDEX_ADD">
            <summary>
            Indicates that new rule is edited.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.OnInit(System.EventArgs)">
            <summary>
            Init event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.OnLoad(System.EventArgs)">
            <summary>
            Load event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.OnPreRender(System.EventArgs)">
            <summary>
            Pre-render event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.LoadViewState(System.Object)">
            <summary>
            Customized LoadViewState.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.SaveViewState">
            <summary>
            Customized SaveViewState.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.CreateEditPanel">
            <summary>
            Composes panel for rule editing.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.RemoveRule(System.Int32)">
            <summary>
            Removes rule with specified index.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.GenerateRules">
            <summary>
            Generates rule controls by the rule list.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.AddEditPanel">
            <summary>
            Adds dialog for rule editing.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.CreateRule(CMS.FormEngine.FieldMacroRule,System.Boolean,System.Int32)">
            <summary>
            Creates default view for given rule and adds it to the main panel.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.TimeZoneTransformation(System.Object)">
            <summary>
            Displays correct timezone for the rule parameter values.
            </summary>
            <param name="o">Parameter values</param>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.RaiseOnRuleChanged">
            <summary>
            Raise rule added event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldMacroRuleDesigner.GetMacroRuleName(System.String)">
            <summary>
            Returns code name of field validation rule used in specified rule.
            </summary>
            <param name="ruleText">Rule text</param>
        </member>
        <member name="E:CMS.FormControls.FieldMacroRuleDesigner.RuleAdded">
            <summary>
            Fired if new rule is added.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FieldMacroRuleDesigner.Value">
            <summary>
            Gets or sets list with field macro rules.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FieldMacroRuleDesigner.DefaultErrorMessage">
            <summary>
            Default error message which will be used as watermark.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FieldActions">
            <summary>
            Class providing additional actions with fields.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldActions.#ctor(CMS.FormEngine.FormFieldInfo,CMS.FormControls.BasicForm)">
            <summary>
            Constructor.
            </summary>
            <param name="ffi">Form field info</param>
            <param name="form">Form where the control is used.</param>
        </member>
        <member name="M:CMS.FormControls.FieldActions.CreateChildControls">
            <summary>
            Creates child controls.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldActions.CreateRemoveButton">
            <summary>
            Creates button for removing fields.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FilterFormControlWrapper">
            <summary>
            Wrapper for a filter control to become form engine control
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormEngineUserControl">
            <summary>
            Common interface for custom user controls used in forms.
            </summary>
        </member>
        <member name="T:CMS.FormControls.IFormControl">
            <summary>
            Form control interface.
            </summary>
        </member>
        <member name="M:CMS.FormControls.IFormControl.IsValid">
            <summary>
            Returns true if entered data is valid. If data is invalid, it returns false and displays an error message.
            </summary>
        </member>
        <member name="M:CMS.FormControls.IFormControl.GetOtherValues">
            <summary>
            Returns an array of values of any other fields returned by the control.
            </summary>
            <remarks>It returns an array where first dimension is attribute name and the second dimension is its value.</remarks>
        </member>
        <member name="M:CMS.FormControls.IFormControl.LoadOtherValues">
            <summary>
            Loads the other fields values to the state of the form control
            </summary>
        </member>
        <member name="M:CMS.FormControls.IFormControl.LoadControlValue(System.Object)">
            <summary>
            Loads control value
            </summary>
            <param name="value">Value to load</param>
        </member>
        <member name="P:CMS.FormControls.IFormControl.FieldInfo">
            <summary>
            Field info object.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormControl.Form">
            <summary>
            Parent form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormControl.ValueElementID">
            <summary>
            Gets ClientID of the control from which the Value is retrieved or 
            null if such a control can't be specified.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormControl.Value">
            <summary>
            Gets or sets field value. You need to override this method to make the control work properly with the form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormControl.ValueForValidation">
            <summary>
            Returns value prepared for validation.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormControl.ValueDisplayName">
            <summary>
            Gets the display name of the value item. Returns null if display name is not available.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormControl.HasValue">
            <summary>
            Returns true if the control has value, if false, the value from the control should not be used within the form to update the data
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormControl.ValidationError">
            <summary>
            Validation error string shown when the control is not valid.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormControl.FormControlParameter">
            <summary>
            Helper property to use custom parameter in form control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormControl.Visible">
            <summary>
            Gets or sets a value indicating whether the control and all its child controls are displayed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.IFormControl.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.OnInit(System.EventArgs)">
            <summary>
            OnInit event.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders user control.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.UnderlyingFormControl_Changed(System.Object,System.EventArgs)">
            <summary>
            Changed handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.LoadControlValue(System.Object)">
            <summary>
            Loads control value.
            </summary>
            <param name="value">Value to load</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.SetValue(System.String,System.Object)">
            <summary>
            Sets the property value of the control, setting the value affects only local property value.
            </summary>
            <param name="propertyName">Property name to set</param>
            <param name="value">New property value</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetOtherValues">
            <summary>
            Returns an array of values of any other fields returned by the control.
            </summary>
            <remarks>It returns an array where first dimension is attribute name and the second dimension is its value.</remarks>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.LoadOtherValues">
            <summary>
            Loads the other fields values to the state of the form control
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetOtherValue(System.String)">
            <summary>
            Returns a value of other field with specified returned by the control.
            </summary>
            <param name="name">Field name</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.IsValid">
            <summary>
            Returns true if entered data is valid. If data is invalid, it returns false and displays an error message.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetControlInfoMarker">
            <summary>
            Gets the control info marker code
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.ValidateMacroValue(System.String,System.String)">
            <summary>
            Returns true if the given macro value is valid value for this control
            </summary>
            <param name="macro">Macro to check</param>
            <param name="originalValue">Original value</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetSpellCheckFields">
            <summary>
            Returns the list of the field IDs (Client IDs of the inner controls) that should be spell checked.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetWhereCondition">
            <summary>
            Gets a where condition. 
            Returns where condition formatted by WhereConditionFormat from IFilterFormControl interface if form control implements it.
            Otherwise returns where condition in [FieldName] = 'Value' format.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.LoadDefaultProperties(CMS.FormEngine.FormInfo,System.Boolean)">
            <summary>
            Loads the default properties from the given form definition
            </summary>
            <param name="fi">Form information to load</param>
            <param name="forceValues">Indicates if existing parameter values should be overridden</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetResolvedValue``1(System.String,``0)">
            <summary>
            Gets resolved property value
            </summary>
            <typeparam name="ReturnType">Return type of the property</typeparam>
            <param name="name">Name of the property</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.LoadControlFromFFI">
            <summary>
            Loads control with values in FormFieldInfo.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.CheckLength(System.Int32,System.Int32,System.Int32,System.String@,System.String)">
            <summary>
            Checks if field value's length is not shorter or longer than specified borders.
            </summary>
            <param name="minControlSize">Minimal size</param>
            <param name="maxControlSize">Maximal size</param>
            <param name="textLength">Text length</param>
            <param name="errorText">Error text which will be returned in case of failure</param>
            <param name="errorMsg">Custom error message; it's used if it differs from 'Invalid input' message</param>
            <returns>True if field value is not shorter or longer than specified min/max borders.</returns>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.ConnectToForm(CMS.FormControls.BasicForm)">
            <summary>
            Connects the given form control to a form if necessary
            </summary>
            <param name="form">Form control</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.RaiseOnChanged">
            <summary>
            Raises the Changed event.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetInputClientID(System.Web.UI.ControlCollection)">
            <summary>
            Gets client ID of first inner control.
            </summary>
            <param name="controls">Collection of inner controls to look for input control. If null then this.Controls collection is used</param>
            <returns>Returns client ID of input control</returns>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetInputControlID(System.Web.UI.ControlCollection)">
            <summary>
            Gets control ID of first inner control.
            </summary>
            <param name="controls">Collection of inner controls to look for input control. If null then this.Controls collection is used</param>
            <returns>Returns ID of input control</returns>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetDialogConfiguration">
            <summary>
            Returns dialog configuration from the specified form control settings.
            </summary>       
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetDialogConfiguration(System.Collections.Hashtable)">
            <summary>
            Returns dialog configuration from the specified form control settings.
            </summary>       
            <param name="settings">Form control settings</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.ContainsColumn(System.String)">
            <summary>
            Indicates if form control's DataRow contains requested column.
            </summary>
            <param name="columnName">Name of column to look for in data row</param>
            <returns>Returns TRUE if form control's DataRow contains column with given name. Otherwise returns FALSE.</returns>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetColumnValue(System.String)">
            <summary>
            Gets the given column value from the form data
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.ConvertInputValue(System.Object)">
            <summary>
            Ensures that the given value is represented as null is empty, or converted to proper type.
            </summary>
            <param name="value">Value to process</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetStringValue(System.Object)">
            <summary>
            Gets the string value from the given value
            </summary>
            <param name="value">Value to process</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.IsFileTypeAllowed(System.String,System.String)">
            <summary>
            Checks if specified file type is allowed to be uploaded.
            </summary>
            <param name="type">File type, e.g. 'jpg' or '.jpg'</param>
            <param name="allowedTypes">Allowed file types from form field info definition</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.CreateContextResolver(CMS.MacroEngine.MacroResolver,System.Boolean)">
            <summary>
            Creates a context resolver for this form control and registers the control functionality within this resolver.
            </summary>
            <param name="resolver">Parent resolver</param>
            <param name="createAsChild">If true, the resolver if created as a child of the given resolver</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.GetParentResolver">
            <summary>
            Gets the parent resolver for this control resolver
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControl.SetControlAutoPostback(System.Web.UI.Control,System.Boolean)">
            <summary>
            Sets the given control auto postback if available.
            </summary>
            <param name="ctrl">Control to set</param>
            <param name="value">New value</param>
        </member>
        <member name="E:CMS.FormControls.FormEngineUserControl.Changed">
            <summary>
            Fired on the change to the form control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.UnderlyingFormControl">
            <summary>
            Underlying form control, if provided, the form control automatically redirects all properties to that control
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.Form">
            <summary>
            Parent form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.FieldInfo">
            <summary>
            Field info object.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.ValueElementID">
            <summary>
            Gets ClientID of the control from which the Value is retrieved or 
            null if such a control can't be specified.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.Value">
            <summary>
            Gets or sets field value. You need to override this method to make the control work properly with the form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.ValueForValidation">
            <summary>
            Returns value prepared for validation.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.HasValue">
            <summary>
            Returns true if the control has value, if false, the value from the control should not be used within the form to update the data
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.ValueDisplayName">
            <summary>
            Gets the display name of the value item. Returns null if display name is not available.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.Text">
            <summary>
            Gets or sets Value converted to string.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.Data">
            <summary>
            Node data. This property is used only for passing values to the control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.Enabled">
            <summary>
            Gets or sets state enable.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.ValidationError">
            <summary>
            Validation error string shown when the control is not valid.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.StopProcessing">
            <summary>
            If true, control does not process the data.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.FormControlParameter">
            <summary>
            Helper property to use custom parameter in form control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.InputClientID">
            <summary>
            Client ID of primary input control. If not explicitly set, first client ID of inner control of the form control is returned.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.InputControlID">
            <summary>
            Control ID of primary input control. If not explicitly set, first control ID of inner control of the form control is returned.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.CheckFieldEmptiness">
            <summary>
            Indicates that field should be checked on emptiness in validation step by BasicForm. Default TRUE. 
            It is preferable to set to FALSE for controls with complex input such as file uploaders. Field emptiness
            validation then must be placed in custom form control in IsValid() method.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.CheckMinMaxLength">
            <summary>
            Indicates that field should be checked on min/max input length in validation step by BasicForm. Default FALSE.
            It is preferable to set to TRUE for simple text input controls such as TextBox.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.CheckRegularExpression">
            <summary>
            Indicates that field should be checked on regular expressions in validation step  by BasicForm. Default FALSE.
            It is preferable to set to TRUE for controls where user should be able to enter text such as TextBox.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.ErrorMessage">
            <summary>
            Control custom error message.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.HasDependingFields">
            <summary>
            Indicates if another fields depend on this field.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.DependsOnAnotherField">
            <summary>
            Indicates if field depends on another field.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.Field">
            <summary>
            Field name to which the field belongs. This property is only supported in templated form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.CheckUnique">
            <summary>
            If true, the field is checked for uniqueness. This property is only supported in templated form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.Trim">
            <summary>
            If true, the returned value is trimmed. This property is only supported if used inside the form control. Default false.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.RememberOriginalValue">
            <summary>
            If true, the control remembers the original value for evaluation
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.ResolverName">
            <summary>
            Gets or sets macro resolver name.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.ContextResolver">
            <summary>
            Gets or sets macro resolver for given control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.CssClass">
            <summary>
            CSS class of the control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.ControlStyle">
            <summary>
            CSS style of the control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.WhereConditionFormat">
            <summary>
            Format of where condition.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControl.DefaultProperties">
            <summary>
            Control properties
            </summary>
        </member>
        <member name="M:CMS.FormControls.FilterFormControlWrapper.#ctor(CMS.FormControls.IFilterControl)">
            <summary>
            Constructor
            </summary>
            <param name="filterCtrl">Wrapped filter control</param>
        </member>
        <member name="M:CMS.FormControls.FilterFormControlWrapper.CreateChildControls">
            <summary>
            Creates child controls
            </summary>
        </member>
        <member name="M:CMS.FormControls.FilterFormControlWrapper.GetWhereCondition">
            <summary>
            Gets the filter where condition
            </summary>
        </member>
        <member name="M:CMS.FormControls.FilterFormControlWrapper.ConnectToForm(CMS.FormControls.BasicForm)">
            <summary>
            Connects the given form control to a form if necessary
            </summary>
            <param name="form">Form control</param>
        </member>
        <member name="P:CMS.FormControls.FilterFormControlWrapper.Value">
            <summary>
            Provides the control value
            </summary>
        </member>
        <member name="P:CMS.FormControls.FilterFormControlWrapper.FilterControl">
            <summary>
            Filter control
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormControlMacroContainer">
            <summary>
            Container to wrap the form control structure
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlMacroContainer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlMacroContainer.#ctor(CMS.FormControls.FormEngineUserControl)">
            <summary>
            Constructor
            </summary>
            <param name="control">Wrapped form control</param>
        </member>
        <member name="M:CMS.FormControls.FormControlMacroContainer.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlMacroContainer.TryGetProperty(System.String,System.Object@)">
            <summary>
            Gets the context property.
            </summary>
            <param name="name">Property name</param>
            <param name="value">Returning the value</param>
        </member>
        <member name="M:CMS.FormControls.FormControlMacroContainer.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> of current Value.
            </summary>
            <returns><see cref="T:System.String"/> of current Value</returns>
        </member>
        <member name="M:CMS.FormControls.FormControlMacroContainer.ToMacroString">
            <summary>
            Returns Value to string.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlMacroContainer.MacroRepresentation">
            <summary>
            Returns Value.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControlMacroContainer.Value">
            <summary>
            Control value
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControlMacroContainer.Enabled">
            <summary>
            Indicates that control is enabled
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControlMacroContainer.Visible">
            <summary>
            Indicates that control is visible
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControlMacroContainer.Info">
            <summary>
            Corresponding field info
            </summary>
        </member>
        <member name="T:CMS.FormControls.LocalizableFormEngineUserControl">
            <summary>
            Localizable form engine user control 
            </summary>
        </member>
        <member name="M:CMS.FormControls.LocalizableFormEngineUserControl.Save">
            <summary>
            Saves translation for given resource string.
            </summary>
        </member>
        <member name="T:CMS.FormControls.OptionsDesigner">
            <summary>
            Control provides editing of field options.
            </summary>
        </member>
        <member name="F:CMS.FormControls.OptionsDesigner.EMPTY_OPTION">
            <summary>
            Constant used as a value for options with empty text
            </summary>
        </member>
        <member name="F:CMS.FormControls.OptionsDesigner.DEFAULT_OPTION">
            <summary>
            Default option name - used as a prefix with number
            </summary>
        </member>
        <member name="F:CMS.FormControls.OptionsDesigner.mSelectedRow">
            <summary>
            Indicates which row is selected (-1 indicates that no row is selected).
            </summary>
        </member>
        <member name="M:CMS.FormControls.OptionsDesigner.OnInit(System.EventArgs)">
            <summary>
            Init event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.OptionsDesigner.OnLoad(System.EventArgs)">
            <summary>
            Load event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.OptionsDesigner.OnPreRender(System.EventArgs)">
            <summary>
            Pre-render event hadler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.OptionsDesigner.RaiseOnOptionChanged">
            <summary>
            Raise option added event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.OptionsDesigner.LoadViewState(System.Object)">
            <summary>
            Customized LoadViewState.
            </summary>
        </member>
        <member name="M:CMS.FormControls.OptionsDesigner.SaveViewState">
            <summary>
            Customized SaveViewState.
            </summary>
        </member>
        <member name="M:CMS.FormControls.OptionsDesigner.GenerateOptions(System.String)">
            <summary>
            Generates options controls by the options definition.
            </summary>
            <param name="options">Options definition</param>
        </member>
        <member name="M:CMS.FormControls.OptionsDesigner.GetUniqueItem(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Returns unique value in format "prefix{number}" where number will be higher than 
            highest number from source options. (Apply only to strings in format "prefix{number}").
            </summary>
            <param name="items">Source collection of items</param>
            <param name="prefix">Prefix used in value; default value is 'Option '</param>
        </member>
        <member name="E:CMS.FormControls.OptionsDesigner.OptionAdded">
            <summary>
            Fired if new option is added. 
            </summary>
        </member>
        <member name="P:CMS.FormControls.OptionsDesigner.OptionsDefinition">
            <summary>
            Gets or sets options definition in format "value;name" separated by new line.
            </summary>
        </member>
        <member name="P:CMS.FormControls.OptionsDesigner.Value">
            <summary>
            Gets or sets options selected by default in format "option1|option2".
            </summary>
        </member>
        <member name="P:CMS.FormControls.OptionsDesigner.AllowMultipleChoice">
            <summary>
            Indicates if more than one option can be selected.
            </summary>
        </member>
        <member name="T:CMS.FormControls.SQLQueryEnum">
            <summary>
            Describing which sql RegEx can be used
            </summary>
        </member>
        <member name="F:CMS.FormControls.SQLQueryEnum.Columns">
            <summary>
            Columns RegEx
            </summary>
        </member>
        <member name="F:CMS.FormControls.SQLQueryEnum.Where">
            <summary>
            Where RegEx
            </summary>
        </member>
        <member name="F:CMS.FormControls.SQLQueryEnum.OrderBy">
            <summary>
            OrderBy RegEx
            </summary>
        </member>
        <member name="T:CMS.FormControls.AbstractFormStyleConfiguration">
            <summary>
            Container for layout specific form style configuration.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractFormStyleConfiguration.#ctor(CMS.FormControls.IFormStyleConfiguration)">
            <summary>
            Copy constructor used to copy form style configuration to layout style so it can be merged.
            </summary>
            <param name="formStyle">Form style configuration</param>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FormCssClass">
            <summary>
            CSS class which will be used to wrap form control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FieldCssClass">
            <summary>
            CSS class for the whole field (usually row).
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.GroupCssClass">
            <summary>
            CSS class for the whole field group with heading.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FieldGroupCssClass">
            <summary>
            CSS class for the whole field group.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FieldGroupCaptionCssClass">
            <summary>
            CSS class for the field group caption.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FieldValueCellCssClass">
            <summary>
            CSS class for the individual field control cell.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FieldCaptionCellCssClass">
            <summary>
            CSS class for the individual field label cell.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FieldCaptionCssClass">
            <summary>
            CSS class for the individual field label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FieldErrorCellCssClass">
            <summary>
            CSS class for the individual field error label cell.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FieldErrorLabelCssClass">
            <summary>
            CSS class for the individual field error label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FieldErrorCssClass">
            <summary>
            CSS class that is added to editing form control after its validation failed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FieldVisibilityCellCssClass">
            <summary>
            CSS class for the individual field visibility cell.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FieldVisibilityCssClass">
            <summary>
            CSS class for the individual field visibility control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.ExplanationTextCssClass">
            <summary>
            CSS class that is added to container that is wrapping content after text (only if content before text is empty).
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FormButtonCssClass">
            <summary>
            CSS class for the form button.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractFormStyleConfiguration.FormButtonPanelCssClass">
            <summary>
            CSS class for the form button panel.
            </summary>
        </member>
        <member name="T:CMS.FormControls.BasicFormDefaultStyle">
            <summary>
            Default CSS classes used by basic form unless layout overrides them.
            </summary>
        </member>
        <member name="M:CMS.FormControls.BasicFormDefaultStyle.#ctor">
            <summary>
            Initializes default CSS classes for basic form.
            </summary>
        </member>
        <member name="T:CMS.FormControls.SingleTableLayoutStyle">
            <summary>
            Class for initializing default CSS class for basic form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.SingleTableLayoutStyle.#ctor(CMS.FormControls.IFormStyleConfiguration)">
            <summary>
            Sets default CSS class for current layout.
            </summary>
            <param name="formStyle">Form style configuration</param>
        </member>
        <member name="T:CMS.FormControls.TablePerCategoryLayoutCssClass">
            <summary>
            Class for initializing default CSS class for basic form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.TablePerCategoryLayoutCssClass.#ctor(CMS.FormControls.IFormStyleConfiguration)">
            <summary>
            Sets default CSS class for current layout.
            </summary>
            <param name="formStyle">Form style configuration</param>
        </member>
        <member name="T:CMS.FormControls.FieldSetLayoutStyle">
            <summary>
            Class for initializing default CSS class for basic form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldSetLayoutStyle.#ctor(CMS.FormControls.IFormStyleConfiguration)">
            <summary>
            Sets default CSS class for current layout.
            </summary>
            <param name="formStyle">Form style configuration</param>
        </member>
        <member name="T:CMS.FormControls.AbstractTableDefaultLayout">
            <summary>
            Base class for table-based layouts.
            </summary>
        </member>
        <member name="T:CMS.FormControls.AbstractDefaultLayout">
            <summary>
            Default layout
            </summary>
        </member>
        <member name="T:CMS.FormControls.AbstractLayout">
            <summary>
            Abstract class for form layout.
            </summary>
        </member>
        <member name="F:CMS.FormControls.AbstractLayout.mCollapsibleImages">
            <summary>
            Dictionary of the collapsible images indexed by category name
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractLayout.#ctor(CMS.FormControls.BasicForm)">
            <summary>
            Default constructor.
            </summary>
            <param name="basicForm">Basic form with settings</param>
        </member>
        <member name="M:CMS.FormControls.AbstractLayout.LoadLayout">
            <summary>
            Initializes form layout.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractLayout.CreateErrorLabel(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Creates the validation label for a field.
            </summary>
            <param name="ffi">Field info</param>
        </member>
        <member name="M:CMS.FormControls.AbstractLayout.CreateVisibilityControl(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Creates the visibility control for a field.
            </summary>
            <param name="ffi">Field info</param>
        </member>
        <member name="M:CMS.FormControls.AbstractLayout.CreateFieldLabel(CMS.FormEngine.FormFieldInfo,System.Boolean)">
            <summary>
            Creates the field label.
            </summary>
            <param name="ffi">Field info</param>
            <param name="addTooltip">Indicates if tooltip will be added to the label</param>
        </member>
        <member name="M:CMS.FormControls.AbstractLayout.AddControlToPanel(System.Web.UI.Control,CMS.DataEngine.IField)">
            <summary>
            Adds control to form panel.
            </summary>
            <param name="control">Control to add</param>
            <param name="parentControl">IField to which this control belongs to</param>
        </member>
        <member name="M:CMS.FormControls.AbstractLayout.CreateCollapsibleImage(CMS.FormEngine.FormCategoryInfo,System.String,System.Boolean)">
            <summary>
            Gets collapsible image.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractLayout.CreateEditingFormControl(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Creates new EditingFormControl and puts it into FieldEditingControls hash table.
            </summary>
            <returns>Created control</returns>
        </member>
        <member name="M:CMS.FormControls.AbstractLayout.CreateFieldActions(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Creates additional field action buttons and puts them into FieldActionsControls dictionary.
            </summary>
            <param name="ffi">Form field info</param>
            <returns>Created control</returns>
        </member>
        <member name="M:CMS.FormControls.AbstractLayout.IsExcludedRequiredField(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Indicates if field is excluded from applying the required field format string.
            </summary>
            <param name="fieldInfo">Field info</param>
        </member>
        <member name="M:CMS.FormControls.AbstractLayout.IsCategoryCollapsed(System.String)">
            <summary>
            Returns true if the given category is collapsed
            </summary>
            <param name="categoryName">Category name</param>
        </member>
        <member name="P:CMS.FormControls.AbstractLayout.FormPanel">
            <summary>
            Main form panel
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractLayout.BasicForm">
            <summary>
            Form
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractLayout.RequiredMarkCssClass">
            <summary>
            Gets or sets CSS class for the required mark (*)
            </summary>
        </member>
        <member name="E:CMS.FormControls.AbstractLayout.OnAfterRegisterFormControl">
            <summary>
            Event representing control registration.
            </summary>
        </member>
        <member name="F:CMS.FormControls.AbstractDefaultLayout.categories">
            <summary>
            Stores initiated categories(with translated captions).
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.#ctor(CMS.FormControls.BasicForm,System.Web.UI.WebControls.Panel)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="basicForm">Reference to BasicForm</param>
            <param name="categoryListPanel">Panel where category list will be placed</param>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.LoadLayout">
            <summary>
            Loads the default form layout from the given form information.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.Load">
            <summary>
            Loads layout based on specific type.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.CreateCategory(System.Collections.Generic.List{CMS.FormEngine.FormFieldInfo},CMS.FormControls.FieldCreationArgs)">
            <summary>
            Renders whole category (iterates through fields and renders them).
            </summary>
            <param name="formFields">List of fields to render</param>
            <param name="args">Parameters needed for rendering</param>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.CreateField(CMS.FormControls.FieldCreationArgs)">
            <summary>
            Creates the field.
            </summary>
            <param name="args">Form field settings</param>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.CreateInvisibleField(CMS.FormControls.FieldCreationArgs)">
            <summary>
            Creates invisible field with default value if field is not public and it is not allowed to be empty.
            </summary>
            <param name="args">Form field settings</param>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.RegisterScripts">
            <summary>
            Registers necessary JavaScripts.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.GetAnchorID(System.String)">
            <summary>
            Gets identifier for anchor element.
            </summary>
            <param name="caption"></param>
            <returns></returns>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.RegisterButtonPanel">
            <summary>
            Creates submit panel.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.GetSubmitButton">
            <summary>
            Adds the submit button to the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.GetRowCssClassAttribute(CMS.FormControls.FieldCreationArgs,System.String)">
            <summary>
            Gets row CSS class attribute for form field 
            </summary>
            <param name="args">Form field settings</param>
            <param name="extraClass">Additional CSS class to add to the attribute</param>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.GetLocalizedCategoryCaption(CMS.FormEngine.FormCategoryInfo)">
            <summary>
            Returns caption from category info or default category name from parent BasicForm with resolved macros (data and/or localization).
            </summary>
            <param name="categoryInfo">Category info</param>
        </member>
        <member name="M:CMS.FormControls.AbstractDefaultLayout.GetTitleAttribute(System.String)">
            <summary>
            Returns title attribute with encoded text or empty string if no title is defined.
            </summary>
            <param name="title">Title</param>
        </member>
        <member name="P:CMS.FormControls.AbstractDefaultLayout.TotalColumns">
            <summary>
            Indicates number of form columns.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractDefaultLayout.FormElements">
            <summary>
            Gets visible form elements.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AbstractDefaultLayout.CategoryListPanel">
            <summary>
            Category list panel, may be displayed above formPanel.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AbstractTableDefaultLayout.#ctor(CMS.FormControls.BasicForm,System.Web.UI.WebControls.Panel)">
            <summary>
            Default constructor.
            </summary>
            <param name="basicForm">Reference to BasicForm</param>
            <param name="categoryListPanel">Panel where category list will be placed</param>
        </member>
        <member name="M:CMS.FormControls.AbstractTableDefaultLayout.CreateField(CMS.FormControls.FieldCreationArgs)">
            <summary>
            Creates the field.
            </summary>
            <param name="args">Form field settings</param>
        </member>
        <member name="T:CMS.FormControls.DivLayoutStyle">
            <summary>
            Class for initializing default CSS class for basic form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DivLayoutStyle.#ctor(CMS.FormControls.IFormStyleConfiguration)">
            <summary>
            Sets default CSS class for current layout.
            </summary>
            <param name="formStyle">Form style configuration</param>
        </member>
        <member name="T:CMS.FormControls.UIFormDefaultStyle">
            <summary>
            Default CSS classes used by UI form unless layout overrides them.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIFormDefaultStyle.#ctor">
            <summary>
            Initializes default CSS classes for UI form.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FieldCreationArgs">
            <summary>
            Data container of objects necessary for rendering form layout.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FieldCreationArgs.FormFieldInfo">
            <summary>
            Form field settings.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FieldCreationArgs.FormCategoryInfo">
            <summary>
            Form category settings.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FieldCreationArgs.AnchorID">
            <summary>
            ID of form group (category) anchor.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FieldCreationArgs.CollapsibleImage">
            <summary>
            Image used for collapsing form groups (categories).
            </summary>
        </member>
        <member name="T:CMS.FormControls.DivDefaultLayout">
            <summary>
            Divs layout
            </summary>
        </member>
        <member name="M:CMS.FormControls.DivDefaultLayout.#ctor(CMS.FormControls.BasicForm,System.Web.UI.WebControls.Panel)">
            <summary>
            Default constructor.
            </summary>
            <param name="basicForm">BasicForm with settings</param>
            <param name="categoryListPanel">Panel where categories will be placed</param>
        </member>
        <member name="M:CMS.FormControls.DivDefaultLayout.Load">
            <summary>
            Loads field sets layout.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DivDefaultLayout.CreateCategory(System.Collections.Generic.List{CMS.FormEngine.FormFieldInfo},CMS.FormControls.FieldCreationArgs)">
            <summary>
            Renders whole category (iterates through fields and renders them).
            </summary>
            <param name="formFields">List of fields to render</param>
            <param name="args">Parameters needed for rendering</param>
        </member>
        <member name="M:CMS.FormControls.DivDefaultLayout.CreateField(CMS.FormControls.FieldCreationArgs)">
            <summary>
            Creates the field.
            </summary>
            <param name="args">Form field settings</param>
        </member>
        <member name="M:CMS.FormControls.DivDefaultLayout.AddControl(System.Web.UI.Control,CMS.DataEngine.IField,System.Web.UI.UpdatePanel)">
            <summary>
            Adds control to update panel in design mode or directly to the panel otherwise.
            </summary>
            <param name="control">Control to add</param>
            <param name="parentControl">IField to which this control belongs to</param>
            <param name="updatePanel">Update panel to which the control will be added in design mode</param>
        </member>
        <member name="M:CMS.FormControls.DivDefaultLayout.RegisterScripts">
            <summary>
            Registers script for layout.
            </summary>
        </member>
        <member name="T:CMS.FormControls.ObjectOrderEnum">
            <summary>
            Object order enumeration (for newly inserted object).
            </summary>
        </member>
        <member name="F:CMS.FormControls.ObjectOrderEnum.Last">
            <summary>
            Created objects will be put as last.
            </summary>
        </member>
        <member name="F:CMS.FormControls.ObjectOrderEnum.First">
            <summary>
            Created objects will be put as first.
            </summary>
        </member>
        <member name="F:CMS.FormControls.ObjectOrderEnum.Alphabetical">
            <summary>
            Newly created objects will be put in alphabetical order (assuming the rest is alphabetically ordered).
            </summary>
        </member>
        <member name="T:CMS.FormControls.UIFormMacroContainer">
            <summary>
            Container to wrap the UI form structure
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormMacroContainer`1">
            <summary>
            Container to wrap the form structure
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormMacroContainer`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="form">Wrapped form</param>
        </member>
        <member name="M:CMS.FormControls.FormMacroContainer`1.#ctor">
            <summary>
            Constructor for virtual resolvers
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormMacroContainer`1.RegisterColumns">
            <summary>
            Registers columns
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormMacroContainer`1.RegisterProperties">
            <summary>
            Registers properties
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIFormMacroContainer.#ctor(CMS.FormControls.UIForm)">
            <summary>
            Constructor
            </summary>
            <param name="form">Wrapped form</param>
        </member>
        <member name="M:CMS.FormControls.UIFormMacroContainer.#ctor">
            <summary>
            Constructor for virtual resolvers
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIFormMacroContainer.RegisterColumns">
            <summary>
            Registers columns
            </summary>
        </member>
        <member name="T:CMS.FormControls.CMSAbstractFormLayout">
            <summary>
            Abstract class for virtual ASCX form layouts.
            </summary>
        </member>
        <member name="T:CMS.FormControls.CMSAbstractManager`2">
            <summary>
            Base class for managers
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSAbstractManager`2.mResourceCulture">
            <summary>
            Resource strings culture
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.RaiseValidateData(`0)">
            <summary>
            Raises event to validate data
            </summary>
            <param name="args">Event arguments</param>
            <returns>TRUE if data is valid.</returns>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.RaiseLoadData(`0)">
            <summary>
            Raises event to load data
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.RaiseCheckPermissions(`1)">
            <summary>
            Raises event to check permissions
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.RaiseCheckConsistency(`1)">
            <summary>
            Raises event to check consistency
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.GetDefaultCheckPermissionsError(`1)">
            <summary>
            Gets the default error message for check permission error
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.CheckDefaultSecurity(`1)">
            <summary>
            Checks the default security for the editing context
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.CheckDefaultConsistency(`1)">
            <summary>
            Checks the default consistency for the editing context
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.RaiseSaveData(`0)">
            <summary>
            Raises event to get data to save
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.RaiseSaveFailed(`0)">
            <summary>
            Raises event when saving data fails
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.RaiseBeforeAction(`0)">
            <summary>
            Raises event before action
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.RaiseAfterAction(`0)">
            <summary>
            Raises event after action
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.AddText(System.String,System.String)">
            <summary>
            Adds additional text
            </summary>
            <param name="original">Original text</param>
            <param name="text">Additional text</param>
        </member>
        <member name="M:CMS.FormControls.CMSAbstractManager`2.ClearProperties">
            <summary>
            Clears properties
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAbstractManager`2.Mode">
            <summary>
            Manager mode (Update, Insert, New culture version)
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAbstractManager`2.CheckPermissions">
            <summary>
            Indicates if document permissions should be checked.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAbstractManager`2.ResourceCulture">
            <summary>
            Resource strings culture
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAbstractManager`2.DataConsistent">
            <summary>
            Indicates if the data is consistent.
            </summary>
        </member>
        <member name="E:CMS.FormControls.CMSAbstractManager`2.OnValidateData">
            <summary>
            On data validation event handler.
            </summary>
        </member>
        <member name="E:CMS.FormControls.CMSAbstractManager`2.OnCheckPermissions">
            <summary>
            On check permissions event handler.
            </summary>
        </member>
        <member name="E:CMS.FormControls.CMSAbstractManager`2.OnCheckConsistency">
            <summary>
            On check consistency event handler.
            </summary>
        </member>
        <member name="E:CMS.FormControls.CMSAbstractManager`2.OnSaveData">
            <summary>
            On save data event handler.
            </summary>
        </member>
        <member name="E:CMS.FormControls.CMSAbstractManager`2.OnSaveFailed">
            <summary>
            Occurs when saving data fails.
            </summary>
        </member>
        <member name="E:CMS.FormControls.CMSAbstractManager`2.OnLoadData">
            <summary>
            On load data event handler.
            </summary>
        </member>
        <member name="E:CMS.FormControls.CMSAbstractManager`2.OnBeforeAction">
            <summary>
            On before action event handler.
            </summary>
        </member>
        <member name="E:CMS.FormControls.CMSAbstractManager`2.OnAfterAction">
            <summary>
            On after action event handler.
            </summary>
        </member>
        <member name="T:CMS.FormControls.CMSDocumentManager">
            <summary>
            Document manager.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mTree">
            <summary>
            Tree provider to use for DB access.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mWorkflowManager">
            <summary>
            WorkflowManager for managing workflow.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mVersionManager">
            <summary>
            VersionManager for managing version.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mNextSteps">
            <summary>
            Next steps
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mWorkflow">
            <summary>
            Document workflow
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mSiteName">
            <summary>
            Site name of newly created document
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mInvariantNode">
            <summary>
            Invariant document node.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mSourceNode">
            <summary>
            Source document for new language version.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mNodeId">
            <summary>
            Node ID
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mDocumentId">
            <summary>
            Document ID
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mGroupId">
            <summary>
            Community group ID
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mNewNodeClassID">
            <summary>
            New node class ID
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mNewNodeClassName">
            <summary>
            New node class name
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mParentNode">
            <summary>
            Parent document node.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mCultureCode">
            <summary>
            Culture code of document culture
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mRefreshActionContent">
            <summary>
            Indicates if content should be refreshed (action is being processed)
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mNewNodeClass">
            <summary>
            Node class
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mNewNodeCultureCode">
            <summary>
            Node culture of new document.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mRegisterSaveChangesScript">
            <summary>
            Indicates if save changes script should be registered.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.mAddComment">
            <summary>
            Indicates whether add comment dialog should be available.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.hdnArgs">
            <summary>
            Hidden field for post back arguments
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.hdnAnother">
            <summary>
            Hidden field for save action argument
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.hdnClose">
            <summary>
            Hidden field for save &amp; close action argument
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.hdnCurrStep">
            <summary>
            Hidden field for current step argument
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.hdnComment">
            <summary>
            Hidden field for comment argument
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.hdnSaveChanges">
            <summary>
            Hidden field for save changes flag
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.hdnContentChanged">
            <summary>
            Hidden field for content changed flag
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.plcMess">
            <summary>
            Messages placeholder
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSDocumentManager.pnlDocumentInfo">
            <summary>
            Document info panel
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.CreateChildControls">
            <summary>
            CreateChildControls event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.OnLoad(System.EventArgs)">
            <summary>
            Load event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render action.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.RenderScripts">
            <summary>
            Renders scripts
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.GetJSFunction(System.String,System.String,System.String)">
            <summary>
            Gets java-script function
            </summary>
            <param name="action">Action name</param>
            <param name="argument">Action argument</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.GetJSSaveFunction(System.String)">
            <summary>
            Gets java-script function for save action
            </summary>
            <param name="createAnother">Create another flag</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.GetJSFunctionInternal(System.String,System.String,System.String)">
            <summary>
            Gets java-script function
            </summary>
            <param name="action">Action name</param>
            <param name="arg">Argument (optional)</param>
            <param name="comment">Action comment (optional)</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.OnPreRender(System.EventArgs)">
            <summary>
            PreRender event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.IsActionAllowed(System.String)">
            <summary>
            Checks if given action is allowed
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.GetActionKey(System.String)">
            <summary>
            Gets action request key
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.ClearProperties">
            <summary>
            Clears properties
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.GetDefaultCheckPermissionsError(CMS.ExtendedControls.SimpleDocumentManagerEventArgs)">
            <summary>
            Gets the default error message for check permission error
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.CheckDefaultSecurity(CMS.ExtendedControls.SimpleDocumentManagerEventArgs)">
            <summary>
            Checks the default security for the editing context
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.InitializeSecurityProperties(System.String)">
            <summary>
            Initializes security properties
            </summary>
            <param name="storageKey">Storage key for request</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.IsAuthorized(System.Boolean)">
            <summary>
            Checks document limitations and permissions
            </summary>
            <param name="showMessage">Indicates if info message should be shown</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.CheckDefaultConsistency(CMS.ExtendedControls.SimpleDocumentManagerEventArgs)">
            <summary>
            Checks the default consistency for the editing context
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.RaisePostBackEvent(System.String)">
            <summary>
            Raises the post back event.
            </summary>
            <param name="eventArgument">Event argument</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.RemoveWireframe">
            <summary>
            Removes the wireframe from current document
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.UpdateDocument(System.Boolean)">
            <summary>
            Updates the current document
            </summary>
            <param name="useDocumentHelper">If true, the document helper is used to update the document</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.SaveDocument">
            <summary>
            Saves document.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.SaveDocument(System.String)">
            <summary>
            Saves document. Content changed flag is cleared if document was saved.
            </summary>
            <param name="actionContext">Context of the action within which was the document save called.</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.ProcessAdditionalActions">
            <summary>
            Processes additional document actions (task logging, search index task creation...). Substitutes the actions from DocumentHelper if not used.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.UpdateDocumentInternal(System.Boolean)">
            <summary>
            Updates the current document
            </summary>
            <param name="useDocumentHelper">If true, the document helper is used to update the document</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.SaveDocumentInternal(System.String)">
            <summary>
            Saves document.
            </summary>
            <param name="actionContext">Context of the action within which was the document save called.</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.EnsureDocumentsConsistency">
            <summary>
            Ensures documents consistency (Automatic blog post hierarchy etc.)
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.CreateNewVersion">
            <summary>
            Creates new document version. (Moves document to edit step.)
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.ApproveDocument(System.Int32,System.String)">
            <summary>
            Approves document.
            </summary>
            <param name="stepId">Workflow step ID (optional)</param>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.PublishDocument(System.String)">
            <summary>
            Publishes document
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.ArchiveDocument(System.Int32,System.String)">
            <summary>
            Archives document
            </summary>
            <param name="stepId">Workflow step ID (optional)</param>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.RejectDocument(System.String)">
            <summary>
            Rejects document
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.RejectDocument(System.Int32,System.String)">
            <summary>
            Rejects document
            </summary>
            <param name="historyId">Workflow history ID (optional)</param>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.CheckInDocument(System.String)">
            <summary>
            Checks-in document
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.CheckOutDocument">
            <summary>
            Check-outs document
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.UndoCheckOutDocument">
            <summary>
            Undoes check-out document
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.ClearNode">
            <summary>
            Clears current node.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.CheckLicenseLimitations(CMS.ExtendedControls.FormModeEnum,System.Boolean@)">
            <summary>
            Check license limitations for document or language version creation
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.RegisterRefreshScript(System.Boolean)">
            <summary>
            Sets the reload page attributes
            </summary>
            <param name="reloadImmediately">Indicates whether wopener should be reloaded immediately</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.HasLocalMessagesPlaceHolder">
            <summary>
            Indicates if local messages placeholder is used
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.ShowDocumentInfo(System.Boolean)">
            <summary>
            Shows default document information text
            </summary>
            <param name="includeWorkflowInfo">Indicates if workflow information should be included</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.ShowDocumentInfo(System.Boolean,System.String)">
            <summary>
            Shows default document information text
            </summary>
            <param name="includeWorkflowInfo">Indicates if workflow information should be included</param>
            <param name="message">Additional message</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.GetWorkflow">
            <summary>
            Gets the workflow for current document
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.GetDocumentInfo(System.Boolean)">
            <summary>
            Gets default document information text
            </summary>
            <param name="includeWorkflowInfo">Indicates if workflow information should be included</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.GetSaveAnotherScript">
            <summary>
            Gets script for save another action
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.GetSaveAndCloseScript">
            <summary>
            Gets script for save &amp; close action
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.GetAllowSubmitScript">
            <summary>
            Gets allow submit script for save changes support
            </summary>
            <returns>Allow submit script for save changes support</returns>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.GetSubmitScript">
            <summary>
            Gets submit script for save changes support
            </summary>
            <returns>Submit script for save changes support</returns>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.ClearContentChanged">
            <summary>
            Clears content changed flag
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.RegisterComponentEvent(System.String,System.Action{System.Int32},System.Boolean)">
            <summary>
            Registers component event.
            </summary>
            <param name="eventType">Component event type.</param>
            <param name="action">Document action delegate.</param>
            <param name="clearContentChanged">Indicates if content changed flag is always cleared after action.</param>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.RegisterScripts">
            <summary>
            Registers javascript scripts
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.ClearComment">
            <summary>
            Clears current comment
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSDocumentManager.GetDocument(System.String)">
            <summary>
            Gets the document based on manager settings.
            </summary>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.LoadDefaultValues">
            <summary>
            Indicates if default values should be loaded when new document or language version is being created.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.RegisterEvents">
            <summary>
            Indicates if manager should register for common events (save etc.).
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.RegisterSaveChangesScript">
            <summary>
            Indicates if the support script for save changes should be registered.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.SetRefreshFlag">
            <summary>
            Indicates whether reload page property should be automatically added to the page for reload page functionality
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.SetRedirectPageFlag">
            <summary>
            Indicates whether the page should be redirected to the current page which is being edited.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.Tree">
            <summary>
            Tree provider instance used to access data. If no TreeProvider is assigned, a new TreeProvider instance is created.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.WorkflowManager">
            <summary>
            Gets Workflow manager instance.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.VersionManager">
            <summary>
            Version manager instance.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.AutoCheck">
            <summary>
            Indicates if check-in/check-out functionality is automatic.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.Workflow">
            <summary>
            Document workflow.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.Step">
            <summary>
            Document workflow step.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.NextSteps">
            <summary>
            Next steps
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.DocumentInfoLabel">
            <summary>
            Document information label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.DocumentInfo">
            <summary>
            Document information text.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.SourceDocumentID">
            <summary>
            Document ID of document language version, which should be used as a source data for new culture version.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.ComponentName">
            <summary>
            Component name
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.SiteName">
            <summary>
            Site name of the newly created document.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.SiteID">
            <summary>
            Gets site ID of the newly created document.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.RedirectForNonExistingDocument">
            <summary>
            Indicates if the UI should be redirected if document not found.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.CurrentDocument">
            <summary>
            Currently edited document
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.EditedDocument">
            <summary>
            Document edited by the current page. If set to NULL, redirects to the information page with information that document has been deleted.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.Node">
            <summary>
            Returns currently edited document if it is available in the given context.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.InvariantNode">
            <summary>
            Returns current document in any culture.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.SourceNode">
            <summary>
            Source document for new language version
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.NodeID">
            <summary>
            Node ID. Together with DocumentCulture property identifies edited document.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.GroupID">
            <summary>
            Community group ID
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.ParentNodeID">
            <summary>
            Parent node ID. Indicates parent node for document insertion.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.ParentNode">
            <summary>
            Returns parent node for new document insertion.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.DocumentID">
            <summary>
            Document ID. Has higher priority than Node ID. Identifies edited document.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.NewNodeClassID">
            <summary>
            Class ID of the document type of new document.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.NewNodeClassName">
            <summary>
            Class name of the document type of new document.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.NewNodeClass">
            <summary>
            Node class of the document type of new document.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.NewNodeCultureCode">
            <summary>
            Node culture of new document.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.RenderScript">
            <summary>
            Indicates if java script functions for document management should be rendered.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.CultureCode">
            <summary>
            Culture code of document
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.CurrentStepID">
            <summary>
            Current step ID
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.AllowSave">
            <summary>
            Indicates if Save action is allowed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.ProcessingAction">
            <summary>
            Indicates if workflow action is being processed
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.RefreshActionContent">
            <summary>
            Indicates if content should be refreshed (action is being processed)
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.CreateAnother">
            <summary>
            Indicates if another document should be created after newly created.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.CloseDialog">
            <summary>
            Indicates whether dialog should be closed after action
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.ActionComment">
            <summary>
            Action comment
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.SaveChanges">
            <summary>
            Returns true if the changes should be saved.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.ConfirmChanges">
            <summary>
            Indicates if confirm dialog should be displayed if any change to the document was made
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.MessagesPlaceHolder">
            <summary>
            Messages placeholder
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.LocalMessagesPlaceHolder">
            <summary>
            Local messages placeholder
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.DocumentPanel">
            <summary>
            Document info panel
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.LocalDocumentPanel">
            <summary>
            Local document info panel
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.HiddenArguments">
            <summary>
            Hidden argument
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.HiddenAnotherFlag">
            <summary>
            Hidden save another flag
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.HiddenCloseFlag">
            <summary>
            Hidden close flag
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.CurrentStepArg">
            <summary>
            Hidden current step flag
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.HiddenSaveChanges">
            <summary>
            Hidden save changes flag
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.HiddenContentChanged">
            <summary>
            Hidden content changed flag
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.HiddenComment">
            <summary>
            Hidden comment field
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.HandleWorkflow">
            <summary>
            Indicates if workflow actions should be displayed and handled
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.UseDocumentHelper">
            <summary>
            Indicates if DocumentHelper should be used to manage the document (Use FALSE if modifying non-versioned properties.)
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.UseFullFormSaveChanges">
            <summary>
            Indicates whether changes should be tracked for whole form or just for parts defined by data-tracksavechanges attribute.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSDocumentManager.AddComment">
            <summary>
            Indicates whether add comment dialog should be available.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormControlsHelper">
            <summary>
            Helper methods for form controls
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlsHelper.LoadFormControl(System.Web.UI.Page,System.String,System.String,CMS.FormControls.BasicForm,System.Boolean)">
            <summary>
            Loads the given form control from its definition.
            </summary>
            <param name="page">Page where the form control should be loaded</param>
            <param name="controlName">Form control code name</param>
            <param name="fieldName">Field name</param>
            <param name="form">Form</param>
            <param name="loadDefaultProperties">If true, the default properties for the control are set</param>
        </member>
        <member name="T:CMS.FormControls.AttachmentsControl">
            <summary>
            Abstract control for document attachments control.
            </summary>
        </member>
        <member name="F:CMS.FormControls.AttachmentsControl.ATTACHMENT_NAME_LIMIT">
            <summary>
            Maximal length of attachment name
            </summary>
        </member>
        <member name="M:CMS.FormControls.AttachmentsControl.RaiseOnCheckPermissions(System.String,CMS.FormControls.AttachmentsControl)">
            <summary>
            Raises the OnCheckPermissions event, returns true when event was fired.
            </summary>
            <param name="permissionType">Type of the permission to check</param>
            <param name="sender">Sender object</param>
        </member>
        <member name="M:CMS.FormControls.AttachmentsControl.RaiseDeleteFile(System.Object,System.EventArgs)">
            <summary>
            Delete file event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AttachmentsControl.RaiseUploadFile(System.Object,System.EventArgs)">
            <summary>
            Upload file event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AttachmentsControl.HasData">
            <summary>
            Indicates if the control contains some data.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AttachmentsControl.ReloadData">
            <summary>
            Reloads data of the control.
            </summary>
        </member>
        <member name="M:CMS.FormControls.AttachmentsControl.ReloadData(System.Boolean)">
            <summary>
            Reloads data of the control.
            </summary>
            <param name="forceReload">Indicates if data reload should be forced</param>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.SiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.OriginalNodeSiteName">
            <summary>
            Site name of the original node (if linked).
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.AutoCheck">
            <summary>
            Indicates if automatic check-in/check-out should be used
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.TreeProvider">
            <summary>
            Gets or sets tree provider.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.Node">
            <summary>
            Gets tree node.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.WorkflowManager">
            <summary>
            Gets version manager.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.Value">
            <summary>
            Value of the control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.CheckPermissions">
            <summary>
            Indicates if the permissions should be checked.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.GroupGUID">
            <summary>
            Indicates whether grouped attachments should be displayed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.GUIDColumnName">
            <summary>
            Name of document attachment column.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.AllowChangeOrder">
            <summary>
            Indicates if user is allowed to change the order of the attachments.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.AllowEditing">
            <summary>
            Indicates if user can edit the attachments.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.AllowDelete">
            <summary>
            Indicates if user can delete the attachments.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.AllowPaging">
            <summary>
            Indicates if paging is allowed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.PageSize">
            <summary>
            Defines size of the page for paging.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.DefaultPageSize">
            <summary>
            Default page size.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.ResizeToWidth">
            <summary>
            Width of the uploaded image.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.ResizeToHeight">
            <summary>
            Height of the uploaded image.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.ResizeToMaxSideSize">
            <summary>
            Maximal side size of the uploaded image.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.AllowedExtensions">
            <summary>
            List of allowed extensions.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.NodeID">
            <summary>
            Specifies the node of document for which the attachments should be displayed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.DocumentID">
            <summary>
            Specifies the document for which the attachments should be displayed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.NodeParentNodeID">
            <summary>
            Specifies the node parent node.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.NodeClassName">
            <summary>
            Specifies the node class name.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.HideActions">
            <summary>
            Indicates if the actions should be hidden.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.FormGUID">
            <summary>
            Defines the form GUID; indicates that the temporary attachment will be handled.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.InnerAttachmentGUID">
            <summary>
            Inner attachment GUID (GUID of temporary attachment created for new culture version).
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.ShowTooltip">
            <summary>
            Indicates if tooltips should be shown.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.InnerLoadingDivClass">
            <summary>
            CSS class of the new attachment loading element.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.StopProcessing">
            <summary>
            If true, control does not process the data.
            </summary>
        </member>
        <member name="P:CMS.FormControls.AttachmentsControl.UsesWorkflow">
            <summary>
            Indicates if workflow is used.
            </summary>
        </member>
        <member name="E:CMS.FormControls.AttachmentsControl.OnCheckPermissions">
            <summary>
            On check permissions event.
            </summary>
        </member>
        <member name="E:CMS.FormControls.AttachmentsControl.OnDeleteFile">
            <summary>
            Raises when the current file requests to be deleted.
            </summary>
        </member>
        <member name="E:CMS.FormControls.AttachmentsControl.OnUploadFile">
            <summary>
            Raises when a new file is given to be uploaded.
            </summary>
        </member>
        <member name="T:CMS.FormControls.AttachmentsControl.CheckPermissionsEventHandler">
            <summary>
            Delegate of event fired when permissions should be checked.
            </summary>
            <param name="permissionType">Type of a permission to check</param>
            <param name="sender">Sender</param>
        </member>
        <member name="T:CMS.FormControls.CaptchaEnum">
            <summary>
            Captcha enumerator.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CaptchaEnum.Default">
            <summary>
            Default simple captcha - image with numbers
            </summary>
        </member>
        <member name="F:CMS.FormControls.CaptchaEnum.Logic">
            <summary>
            Logic captcha
            </summary>
        </member>
        <member name="F:CMS.FormControls.CaptchaEnum.Text">
            <summary>
            Text captcha
            </summary>
        </member>
        <member name="F:CMS.FormControls.CaptchaEnum.ReCaptcha">
            <summary>
            Image and audio reCaptcha
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormCategory">
            <summary>
            Form field control for the forms.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormCategory.mDefaultFieldLayout">
            <summary>
            Default field layout
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormCategory.OnInit(System.EventArgs)">
            <summary>
            Init event handler
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormCategory.OnPreRender(System.EventArgs)">
            <summary>
            PreRender event handler
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormCategory.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render event handler
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormCategory.Form">
            <summary>
            Form where the control is used.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormCategory.DefaultFieldLayout">
            <summary>
            Layout of the fields in this category.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormCategory.DefaultFormLayout">
            <summary>
            Form layout for this category.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormCategory.DevelopmentModeOnly">
            <summary>
            If true, the field is visible only in development mode
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormCategory.CategoryTitle">
            <summary>
            Gets or sets the category title.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormCategory.CategoryTitleResourceString">
            <summary>
            Gets or sets resource string for the category title.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormCategory.CssClass">
            <summary>
            The CSS class rendered by the Web server control on the client. 
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormErrorMessageLabel">
            <summary>
            Form error message label.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormErrorMessageLabel.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormInfoMessageLabel">
            <summary>
            Form info message label.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormInfoMessageLabel.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:CMS.FormControls.CollapsibleImage">
            <summary>
            Collapsible image control. Used for collapsing categories.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CollapsibleImage.CreateChildControls">
            <summary>
            Creates child controls
            </summary>
        </member>
        <member name="M:CMS.FormControls.CollapsibleImage.OnPreRender(System.EventArgs)">
            <summary>
            OnPreRender event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:CMS.FormControls.CollapsibleImage.Collapsed">
            <summary>
            Inner state of control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CollapsibleImage.CollapsedByDefault">
            <summary>
            Initial collapsed value.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CollapsibleImage.ImageUrl">
            <summary>
            Gets or sets the location of an image to display in the System.Web.UI.WebControls.Image control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CollapsibleImage.CssClass">
            <summary>
            Gets or sets the Cascading Style Sheet (CSS) class rendered by the Web server
            control on the client.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CollapsibleImage.AlternateText">
            <summary>
            Gets or sets the alternate text displayed in the System.Web.UI.WebControls.Image
            control when the image is unavailable. Browsers that support the ToolTips
            feature display this text as a ToolTip.
            </summary>
        </member>
        <member name="T:CMS.FormControls.ReadOnlyFormEngineUserControl">
            <summary>
            Read-only version of the form engine user control
            </summary>
        </member>
        <member name="P:CMS.FormControls.ReadOnlyFormEngineUserControl.Value">
            <summary>
            Gets or sets field value. You need to override this method to make the control work properly with the form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.ReadOnlyFormEngineUserControl.HasValue">
            <summary>
            Returns true if the control has value, if false, the value from the control should not be used within the form to update the data
            </summary>
        </member>
        <member name="T:CMS.FormControls.DataTypeIntegrity">
            <summary>
            Provides check if given value matches field's data type.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataTypeIntegrity.#ctor(System.Object,CMS.FormEngine.FormFieldInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="value">Control's value</param>
            <param name="ffi">Field info</param>
        </member>
        <member name="M:CMS.FormControls.DataTypeIntegrity.#ctor(System.Object,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="value">Control's value</param>
            <param name="dataType">Field data type</param>
        </member>
        <member name="M:CMS.FormControls.DataTypeIntegrity.ValidateDataType">
            <summary>
            Checks if value matches field's data type.
            </summary>
            <returns>Error message if the value doesn't match field's data type; otherwise null.</returns>
        </member>
        <member name="M:CMS.FormControls.DataTypeIntegrity.ValidateInteger">
            <summary>
            Validates value for integer type.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataTypeIntegrity.ValidateLongInteger">
            <summary>
            Validates value for long integer type.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataTypeIntegrity.ValidateDouble">
            <summary>
            Validates value for double type.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataTypeIntegrity.ValidateDecimal">
            <summary>
            Validates value for decimal type.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataTypeIntegrity.ValidateDateTime">
            <summary>
            Validates value for DateTime type.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataTypeIntegrity.ValidateTimeSpan">
            <summary>
            Validates value for TimeSpan type. Value must be less than 24hours to be accepted by Time DB data type.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataTypeIntegrity.ValidateGUID">
            <summary>
            Validates value for GUID type.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.#ctor(CMS.FormControls.EditingFormControl,CMS.FormControls.FormEngineUserControl,CMS.FormEngine.FormFieldInfo,System.Boolean,CMS.MacroEngine.MacroResolver)">
            <summary>
            Constructor for validation of control's value.
            </summary>
            <param name="validatedControl">EditingFormControl to be validated</param>
            <param name="formControl">FormEngineUserControl representing user's control</param>
            <param name="ffi">FormFieldInfo with field settings</param>
            <param name="checkFieldEmptiness">Indicates if control should be checked for field emptiness</param>
            <param name="resolver">Macro resolver</param>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.Validate">
            <summary>
            Validates control.
            </summary>
            <returns>Returns error message when validation failed.</returns>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.LoadControlValue">
            <summary>
            Loads value from appropriate control.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.AppendValidationError(System.String)">
            <summary>
            Add validation error to validation result.
            </summary>
            <param name="error">Error to be appended to validation result</param>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.ValidateFieldEmptiness">
            <summary>
            Checks content of the field and if empty value is allowed.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.EmptinessValidationEnabled">
            <summary>
            Returns if control should be validated for emptiness.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.CheckEditingControlValidity">
            <summary>
            Validate EditingFormControl.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.CheckFormControlValidity">
            <summary>
            Validate FormEngineUserControl.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.ValidateTextFieldLength">
            <summary>
            Checks if text field's content is not longer than maximum field size.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.GetTextLength(System.String)">
            <summary>
            Returns length of the text to be checked for proper length.
            </summary>
            <param name="text">Text containing macros</param>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.CheckSize">
            <summary>
            Checks max length depending on FormFieldInfo.Size (which is database related).
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.CheckMinMaxLength(System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks if field value's length is not shorter or longer than specified borders.
            </summary>
            <param name="minControlSize">Minimal size</param>
            <param name="maxControlSize">Maximal size</param>
            <param name="textLength">Text length</param>
            <returns>True if field value is not shorter or longer than specified min/max borders.</returns>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.CheckDataTypeIntegrity">
            <summary>
            Checks if control's value matches data type.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlValidation.CheckMacroRules">
            <summary>
            Checks field's validation macro rules.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControlValidation.ContextResolver">
            <summary>
            Macro resolver
            </summary>
        </member>
        <member name="T:CMS.FormControls.FieldLayoutEnum">
            <summary>
            Field layout enumeration.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FieldLayoutEnum.Default">
            <summary>
            Default layout.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FieldLayoutEnum.Inline">
            <summary>
            Standard layout - No additional controls.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FieldLayoutEnum.TwoColumns">
            <summary>
            Two columns layout - label | editing + error.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FieldLayoutEnum.ThreeColumns">
            <summary>
            Three columns layout - label | editing | error. The error label in the third column is created automatically.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormEngineUserControlEventArgs">
            <summary>
            Class containing event data pertaining to an event raised for a form control.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineUserControlEventArgs.#ctor(System.String,CMS.FormControls.FormEngineUserControl,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.FormControls.FormEngineUserControlEventArgs"/> class.
            </summary>
            <param name="columnName">Name of the column</param>
            <param name="formControl">The form control</param>
            <param name="value">The value</param>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControlEventArgs.ColumnName">
            <summary>
            Gets the name of the column (field) this form control works with.
            </summary>
            <value>The name of the column</value>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControlEventArgs.FormControl">
            <summary>
            Gets the form control.
            </summary>
            <value>The form control</value>
        </member>
        <member name="P:CMS.FormControls.FormEngineUserControlEventArgs.Value">
            <summary>
            Gets or sets the value of a form control.
            </summary>
            <value>The value</value>
        </member>
        <member name="T:CMS.FormControls.FormSubmit">
            <summary>
            Form submit field.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormField">
            <summary>
            Form field control for the forms.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormField.mLayout">
            <summary>
            Field layout
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormField.mFormControl">
            <summary>
            Form control name
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormField.mResourceString">
            <summary>
            Resource string for the label
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormField.mText">
            <summary>
            Text for the label
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormField.mToolTipResourceString">
            <summary>
            Resource string for the label tooltip
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormField.mDisplayLabel">
            <summary>
            Indicates if label should be displayed in inline layout
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormField.mUseFFI">
            <summary>
            Indicates if control should load properties from FormFieldInfo
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormField.mShowRequiredMark">
            <summary>
            Indicates if required mark (*) should be displayed behind the field label. False by default
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormField.mDisplayColon">
            <summary>
            Indicates if colon (:) should be displayed behind the field label. False by default.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormField.OnInit(System.EventArgs)">
            <summary>
            Init event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormField.EnsureControls">
            <summary>
            Ensures the child controls of the control.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormField.CreateChildControls">
            <summary>
            Creates the child controls.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormField.EnsureInnerControls">
            <summary>
            Ensures the additional inner controls.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormField.GetCssClass(CMS.FormEngine.FormFieldPropertyEnum)">
            <summary>
            Returns CSS class belonging to specified form field element.
            </summary>
            <param name="cssProperty">Property containing CSS class.</param>
        </member>
        <member name="M:CMS.FormControls.FormField.LoadLabel(System.Web.UI.Control)">
            <summary>
            Loads the field label.
            </summary>
            <param name="parent">Parent control for the label</param>
        </member>
        <member name="M:CMS.FormControls.FormField.LoadFormControl(System.Web.UI.Control)">
            <summary>
            Loads the form control.
            </summary>
            <param name="parent">Parent control</param>
        </member>
        <member name="M:CMS.FormControls.FormField.LoadErrorLabel(System.Web.UI.Control)">
            <summary>
            Loads the field error label.
            </summary>
            <param name="parent">Parent control for the label</param>
        </member>
        <member name="P:CMS.FormControls.FormField.DevelopmentModeOnly">
            <summary>
            If true, the field is visible only in development mode
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.Field">
            <summary>
            Field name for the inner controls. This property is only supported in templated form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.HideOnLiveSite">
            <summary>
            If true, the field is hidden on the live site.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.AutomaticValue">
            <summary>
            Automatic value when the form control is missing (resolves macros in the given string).
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.Layout">
            <summary>
            Layout of the field.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.FormLayout">
            <summary>
            Layout of the form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.Text">
            <summary>
            Text for the label, has higher priority.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.ResourceString">
            <summary>
            Resource string for the label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.DisplayColon">
            <summary>
            Indicates if colon (:) should be displayed behind the field label. False by default.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.ShowRequiredMark">
            <summary>
            Indicates if required mark (*) should be displayed behind the field label. False by default.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.FormControl">
            <summary>
            Form control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.EditingControl">
            <summary>
            Editing control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.ErrorLabel">
            <summary>
            Error label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.Label">
            <summary>
            Field label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.CssClass">
            <summary>
            Field's CSS Class.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.CheckUnique">
            <summary>
            If true, the field is checked for uniqueness. This property is only supported in UIForm.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.Trim">
            <summary>
            If true, the value is trimmed. This property is only supported if used inside the form control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.Value">
            <summary>
            Value used for initialization as default value.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.ToolTipResourceString">
            <summary>
            Name of a resource string used for tooltip.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.FormFieldInfo">
            <summary>
            FormFieldInfo for current control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.Form">
            <summary>
            Form where the control is used.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.UseFFI">
            <summary>
            Indicates if control should load properties from FormFieldInfo. Default TRUE.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormField.DisplayLabel">
            <summary>
            Indicates if label should be displayed in inline layout. Default value is True.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormSubmit.LoadFormControl(System.Web.UI.Control)">
            <summary>
            Creates submit button in place of form control.
            </summary>
            <param name="parent">Parent control</param>
        </member>
        <member name="P:CMS.FormControls.FormSubmit.SubmitButton">
            <summary>
            Submit button.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormSubmitButton">
            <summary>
            Form button control.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormSubmitButton.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormSubmitButton.OnLoad(System.EventArgs)">
            <summary>
            OnLoad event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.FormSubmitButton.AddHeaderAction">
            <summary>
            Adds action to the page header actions.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormSubmitButton.RegisterHeaderAction">
            <summary>
            Indicates if header action should be registered. The submit button is hidden and Save header action is added.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormSubmitButton.Action">
            <summary>
            Header action to be inserted to the header actions.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormSubmitButton.Form">
            <summary>
            Form
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormSubmitButton.HeaderActions">
            <summary>
            Header actions control
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormErrorLabel">
            <summary>
            Form error label.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormLabel">
            <summary>
            Form label control for form field.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormLabel.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormLabel.Field">
            <summary>
            Field name for which the label applies. This property is only supported in templated form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormErrorLabel.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:CMS.FormControls.SqlFormControl">
            <summary>
            Base class for SQL form controls
            </summary>
        </member>
        <member name="F:CMS.FormControls.SqlFormControl.mSafeRegEx">
            <summary>
            Regular expression to validate the safe expression
            </summary>
        </member>
        <member name="M:CMS.FormControls.SqlFormControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.FormControls.SqlFormControl.CreateChildControls">
            <summary>
            Creates the child control collection
            </summary>
        </member>
        <member name="M:CMS.FormControls.SqlFormControl.GetControlInfoMarker">
            <summary>
            Gets the control info marker code
            </summary>
        </member>
        <member name="M:CMS.FormControls.SqlFormControl.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Page load.
            </summary>
        </member>
        <member name="M:CMS.FormControls.SqlFormControl.IsSafeValue(System.String)">
            <summary>
            Returns true if the value is safe (matches the Regex)
            </summary>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.FormControls.SqlFormControl.ValidateValue(System.String,System.String)">
            <summary>
            Validates the given value
            </summary>
            <param name="value">Value to validate</param>
            <param name="originalValue">Original value</param>
        </member>
        <member name="M:CMS.FormControls.SqlFormControl.IsValid">
            <summary>
            Validates the value of the control
            </summary>
        </member>
        <member name="M:CMS.FormControls.SqlFormControl.ValidateMacroValue(System.String,System.String)">
            <summary>
            Returns true if the given macro value is valid value for this control
            </summary>
            <param name="macro">Macro to check</param>
            <param name="originalValue">Original value</param>
        </member>
        <member name="M:CMS.FormControls.SqlFormControl.GetSafeRegEx">
            <summary>
            Gets the regular expression for the safe value
            </summary>
        </member>
        <member name="P:CMS.FormControls.SqlFormControl.SafeRegEx">
            <summary>
            Regular expression to validate the safe expression
            </summary>
        </member>
        <member name="P:CMS.FormControls.SqlFormControl.Enabled">
            <summary>
            Gets or sets the enabled state of the control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.SqlFormControl.OriginalValue">
            <summary>
            Original control value
            </summary>
        </member>
        <member name="P:CMS.FormControls.SqlFormControl.Value">
            <summary>
            Gets or sets field value.
            </summary>
        </member>
        <member name="P:CMS.FormControls.SqlFormControl.ValueElementID">
            <summary>
            Gets ClientID of the textbox with emailinput.
            </summary>
        </member>
        <member name="P:CMS.FormControls.SqlFormControl.TextBoxControl">
            <summary>
            Editing textbox
            </summary>
        </member>
        <member name="T:CMS.FormControls.CMSForm">
            <summary>
            Form engine specific for CMS. It displays the given form.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSForm.mDefaultPageTemplateID">
            <summary>
            Default page template ID.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSForm.mOwnerID">
            <summary>
            Owner ID.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSForm.lblError">
            <summary>
            Error label.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSForm.lblInfo">
            <summary>
            Info label.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSForm.uploadFiles">
            <summary>
            List of files (controls) to upload files.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSForm.deleteFiles">
            <summary>
            List of files (controls) to delete files.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSForm.mFormLoaded">
            <summary>
            Indicates if the form has been loaded.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSForm.mMessagesPlaceHolder">
            <summary>
            Messages placeholder
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSForm.mDocumentManager">
            <summary>
            Document manager.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSForm.addDocumentManager">
            <summary>
            Indicates whether DocumentManager should be added to controls collection.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSForm.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSForm.OnInit(System.EventArgs)">
            <summary>
            OnInit event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSForm.OnPreRender(System.EventArgs)">
            <summary>
            OnPreRender event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSForm.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control at design-time.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSForm.CMSForm_OnAfterDataLoad(System.Object,System.EventArgs)">
            <summary>
            OnAfterDataReload event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSForm.LoadForm(System.Boolean)">
            <summary>
            Loads the child controls at run-time.
            </summary>
            <param name="forceReload">Forces nested BasicForm to reload if true</param>
        </member>
        <member name="M:CMS.FormControls.CMSForm.Save">
            <summary>
            Saves document data.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSForm.InitFormInternal">
            <summary>
            Initializes the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSForm.AddControlsBeforeInternal">
            <summary>
            Allows to add additional components before the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSForm.AddControlsAfterInternal">
            <summary>
            Allows to add additional components after the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSForm.InitResolver">
            <summary>
            Initializes macro resolver data sources.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSForm.GetDefaultAlternativeFormName(CMS.ExtendedControls.FormModeEnum)">
            <summary>
            Returns name of the default alternative form for the specified form mode 
            (Insert, Convert modes -> "insert", Update mode -> "update", Insert new culture version mode -> "newculture").
            </summary>
            <param name="mode">Form mode</param>        
        </member>
        <member name="M:CMS.FormControls.CMSForm.GetFirstExistingFormFullName(System.String,System.String,System.String)">
            <summary>
            Returns full name of the first existing alternative form. If no alternative form exists, default form full name is returned.
            </summary>
            <param name="className">Class name</param>
            <param name="formNames">Names of alternative forms to be searched separated by semicolon</param>
            <param name="defaultForm">Name of the default form</param>        
        </member>
        <member name="M:CMS.FormControls.CMSForm.AddDefaultColumns(CMS.FormEngine.FormInfo,CMS.DataEngine.DataClassInfo)">
            <summary>
            Add default columns.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSForm.SaveDataInternal">
            <summary>
            Saves data to database. It's called after mBasicForm.SaveData().
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSForm.UpdateFileControls(CMS.DocumentEngine.TreeNode,System.Collections.Hashtable)">
            <summary>
            Updates controls' values for attachments in new language version mode.
            </summary>
            <param name="node">Document node</param>
            <param name="guidTable">Table of attachment GUIDs mappings</param>
        </member>
        <member name="M:CMS.FormControls.CMSForm.ProcessFiles(CMS.DocumentEngine.TreeNode)">
            <summary>
            Proceeds the file operations on the specified document.
            </summary>
            <param name="treeNode">Document node</param>
            <returns>True if node was changed, false otherwise</returns>
        </member>
        <member name="M:CMS.FormControls.CMSForm.GetClassName">
            <summary>
            Extracts class name from the form name.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSForm.GetAttachmentInternal(System.Guid)">
            <summary>
            Returns attachment info.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.FormControls.CMSForm.GetAttachmentUrl(CMS.DocumentEngine.AttachmentInfo,System.Int32)">
            <summary>
            Gets the attachment URL.
            </summary>
            <param name="attachment">Attachment object</param>
            <param name="versionHistoryId">Version history ID</param>
        </member>
        <member name="M:CMS.FormControls.CMSForm.CreateMessagesPlaceHolder">
            <summary>
            Creates local messages placeholder.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.ComponentName">
            <summary>
            Component name.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.ShowOkButton">
            <summary>
            Indicates if button OK should be displayed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.CopyDefaultDataFromDocumentId">
            <summary>
            Optional DocumentId of the document that should be used as a template with default values.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.NodeId">
            <summary>
            Specifies together with CultureCode edited node.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.NodeID">
            <summary>
            Specifies together with CultureCode edited node.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.DocumentID">
            <summary>
            Specifies together with CultureCode edited node.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.ParentNodeID">
            <summary>
            Parent node ID. Indicates parent node for document insertion.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.Node">
            <summary>
            Document node.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.ParentObject">
            <summary>
            Parent node of currently edited/inserted node
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.CultureCode">
            <summary>
            Culture code.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.FormName">
            <summary>
            Form name in form application.class.form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.TreeProvider">
            <summary>
            Tree provider instance. If it's not provided, it's created automatically.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.FormMode">
            <summary>
            Form mode - insert or update.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.DefaultPageTemplateID">
            <summary>
            Default page template ID.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.OwnerID">
            <summary>
            Owner ID.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.GroupID">
            <summary>
            Group ID.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.AlternativeFormFullName">
            <summary>
            Alternative form full name (ClassName.AlternativeFormName).
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.FormPrefix">
            <summary>
            Form name prefix. If set, form with name in format [FormPrefix][form name] is searched instead of [form name].
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.DefaultValidationErrorMessage">
            <summary>
            Default validation error message.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.DocumentManager">
            <summary>
            Document manager control
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.InfoLabel">
            <summary>
            Information label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.ErrorLabel">
            <summary>
            Label for the errors.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.LocalMessagesPlaceHolder">
            <summary>
            Gets the local messages placeholder
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSForm.MessagesPlaceHolder">
            <summary>
            Messages placeholder.
            </summary>
        </member>
        <member name="T:CMS.FormControls.CustomTableForm">
            <summary>
            Control to edit custom table record.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CustomTableForm.OnPreRender(System.EventArgs)">
            <summary>
            OnPreRender event handler
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CustomTableForm.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control at design-time.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CustomTableForm.InitFormInternal">
            <summary>
            Initializes the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CustomTableForm.AddControlsBeforeInternal">
            <summary>
            Allows to add additional components before the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CustomTableForm.SaveDataInternal">
            <summary>
            Saves data to database.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CustomTableForm.LogActivity(System.Int32,System.String)">
            <summary>
            Logs activity
            </summary>
            <param name="itemID">Custom table item identifier</param>
            <param name="activityTitle">Activity title</param>
        </member>
        <member name="P:CMS.FormControls.CustomTableForm.EditedObject">
            <summary>
            Edited object.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CustomTableForm.CustomTableId">
            <summary>
            Custom table id.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CustomTableForm.ItemID">
            <summary>
            Primary key value of the item being edited.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CustomTableForm.AlternativeFormFullName">
            <summary>
            Alternative form full name (ClassName.AlternativeFormName).
            </summary>
        </member>
        <member name="P:CMS.FormControls.CustomTableForm.DefaultValidationErrorMessage">
            <summary>
            Default validation error message.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CustomTableForm.InfoLabel">
            <summary>
            Information label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CustomTableForm.ErrorLabel">
            <summary>
            Label for the errors.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CustomTableForm.LocalMessagesPlaceHolder">
            <summary>
            Gets the local messages placeholder
            </summary>
        </member>
        <member name="P:CMS.FormControls.CustomTableForm.MessagesPlaceHolder">
            <summary>
            Messages placeholder
            </summary>
        </member>
        <member name="T:CMS.FormControls.DataForm">
            <summary>
            Common form control to edit the data.
            </summary>
        </member>
        <member name="F:CMS.FormControls.DataForm.uploadFiles">
            <summary>
            List of files (controls) to upload files.
            </summary>
        </member>
        <member name="F:CMS.FormControls.DataForm.deleteFiles">
            <summary>
            List of files (controls) to delete files.
            </summary>
        </member>
        <member name="F:CMS.FormControls.DataForm.mInfo">
            <summary>
            Info object.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataForm.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataForm.OnPreRender(System.EventArgs)">
            <summary>
            OnPreRender event handler
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.DataForm.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control at design-time.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataForm.Save">
            <summary>
            Saves basicform content to database.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataForm.ReloadData">
            <summary>
            Reloads the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataForm.InitFormInternal">
            <summary>
            Initializes the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataForm.InitForm">
            <summary>
            Initializes the form properties.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataForm.GetData">
            <summary>
            Returns datarow with the help of ClassName and ItemID or from Info object.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataForm.AddControlsBeforeInternal">
            <summary>
            Allows to add additional components before the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataForm.SaveDataInternal">
            <summary>
            Saves data to database. It's called after form data are retrieved and validated.
            </summary>
        </member>
        <member name="M:CMS.FormControls.DataForm.AfterSaveActionsInternal(System.String,System.Boolean)">
            <summary>
            Executes additional actions after successful save.
            </summary>
            <param name="redirectUrlAfterSave">Target URL for the final redirection</param>
            <param name="showChangesSaved">Indicates if info message should be displayed (redirect URL should be empty)</param>
        </member>
        <member name="E:CMS.FormControls.DataForm.OnFileProcessing">
            <summary>
            Occurs during saving when uploaded or deleted files should be processed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.DataForm.LocalMessagesPlaceHolder">
            <summary>
            Gets the messages placeholder
            </summary>
        </member>
        <member name="P:CMS.FormControls.DataForm.ClassName">
            <summary>
            Class name.
            </summary>
        </member>
        <member name="P:CMS.FormControls.DataForm.ItemID">
            <summary>
            ID value of the edited record. When value is greater than zero, FormMode is switched to update mode.
            </summary>
        </member>
        <member name="P:CMS.FormControls.DataForm.AlternativeFormFullName">
            <summary>
            Alternative form full name (ClassName.AlternativeFormName).
            </summary>
        </member>
        <member name="P:CMS.FormControls.DataForm.Info">
            <summary>
            Info object, usable instead of ClassName and ItemID.
            </summary>
        </member>
        <member name="P:CMS.FormControls.DataForm.ClearAfterSave">
            <summary>
            Determines whether form values have to be cleared after successful saving of the content.
            </summary>
        </member>
        <member name="P:CMS.FormControls.DataForm.DefaultValidationErrorMessage">
            <summary>
            Default validation error message.
            </summary>
        </member>
        <member name="P:CMS.FormControls.DataForm.MessagesPlaceHolder">
            <summary>
            Messages placeholder
            </summary>
        </member>
        <member name="P:CMS.FormControls.DataForm.InfoLabel">
            <summary>
            Information label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.DataForm.ErrorLabel">
            <summary>
            Label for the errors.
            </summary>
        </member>
        <member name="T:CMS.FormControls.DataForm.OnFileProcessingEventHandler">
            <summary>
            Represents the method that will handle the file processing event.
            </summary>
            <param name="sender">Sender object</param>
            <param name="editedObject">Depends on edited object - could be AbstractInfo or IDataClass type</param>
            <param name="uploadedFiles">Array with IDs of uploaders where a file was uploaded</param>
            <param name="deletedFiles">Array with IDs of uploaders where a file was deleted</param>
        </member>
        <member name="T:CMS.FormControls.EditingFormControl">
            <summary>
            EditingFormControl control.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormEngineWebControl">
            <summary>
            Form engine web control.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineWebControl.LoadControlValue(System.Object)">
            <summary>
            Loads control value
            </summary>
            <param name="value">Value to load</param>
        </member>
        <member name="M:CMS.FormControls.FormEngineWebControl.LoadOtherValues">
            <summary>
            Loads the other fields values to the state of the form control
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineWebControl.GetOtherValues">
            <summary>
            Returns an array of values of any other fields returned by the control.
            </summary>
            <remarks>It returns an array where first dimension is attribute name and the second dimension is its value.</remarks>
        </member>
        <member name="M:CMS.FormControls.FormEngineWebControl.IsValid">
            <summary>
            Returns true if entered data is valid. If data is invalid, it returns false and displays an error message.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineWebControl.GetSpellCheckFields">
            <summary>
            Returns the list of the field IDs (Client IDs of the inner controls) that should be spell checked.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormEngineWebControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders user control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.Form">
            <summary>
            Parent form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.FieldInfo">
            <summary>
            Field info object.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.ValueElementID">
            <summary>
            Gets ClientID of the control from which the Value is retrieved or 
            null if such a control can't be specified.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.Value">
            <summary>
            Gets or sets field value. You need to override this method to make the control work properly with the form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.ValueForValidation">
            <summary>
            Returns value prepared for validation.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.HasValue">
            <summary>
            Returns true if the control has value, if false, the value from the control should not be used within the form to update the data
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.ValueDisplayName">
            <summary>
            Gets the display name of the value item. Returns null if display name is not available.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.DataDR">
            <summary>
            Node data. This property is used only for passing values to the control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.ValidationError">
            <summary>
            Validation error string shown when the control is not valid.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.StopProcessing">
            <summary>
            If true, control does not process the data.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.CssClass">
            <summary>
            CSS class of the control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.ControlStyle">
            <summary>
            CSS style of the control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormEngineWebControl.FormControlParameter">
            <summary>
            Helper property to use custom parameter in form control.
            </summary>
        </member>
        <member name="F:CMS.FormControls.EditingFormControl.mInitOnPageInitComplete">
            <summary>
            Indicates that control initialization should be called on  Page.InitComplete event.
            </summary>
        </member>
        <member name="F:CMS.FormControls.EditingFormControl.mInitCompleted">
            <summary>
            Indicates if the control initialization was completed.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.GetOtherValues">
            <summary>
            Redirects to NestedControl GetOtherValues() or returns null if nested control is not FormEngineUserControl.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.#ctor(CMS.FormEngine.FormFieldInfo,CMS.FormControls.BasicForm)">
            <summary>
            Constructor.
            </summary>
            <param name="ffi">Form field info</param>
            <param name="form">Parent form</param>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.OnInit(System.EventArgs)">
            <summary>
            Init event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.LoadViewState(System.Object)">
            <summary>
            Customized LoadViewState.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.SaveViewState">
            <summary>
            Customized SaveViewState.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.CreateChildControls">
            <summary>
            Renders the control at run-time.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.Page_InitComplete(System.Object,System.EventArgs)">
            <summary>
            Event handler of page's init complete.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.OnPreRender(System.EventArgs)">
            <summary>
            PreRender event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control at design-time.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.GetControlValue(System.String)">
            <summary>
            Gets the control value based on the given key
            </summary>
            <param name="key">Value key</param>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.CreateContextResolver(CMS.MacroEngine.MacroResolver,System.Boolean)">
            <summary>
            Creates a context resolver for this form control and registers the control functionality within this resolver.
            </summary>
            <param name="resolver">Parent resolver</param>
            <param name="createAsChild">If true, the resolver if created as a child of the given resolver</param>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.GetParentResolver">
            <summary>
            Gets the parent resolver for this control resolver
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.InitializeControl(System.Boolean)">
            <summary>
            Initializes editing form control.
            </summary>
            <param name="force">Indicates if the initialization should be forced, e.g. during reload</param>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.CreateControl(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Creates the field control.
            </summary>
            <param name="ffi">Form field info</param>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.ReportFormControlError(System.String,CMS.FormEngine.FormUserControlInfo,System.Exception)">
            <summary>
            Reports the form control creation error
            </summary>
            <param name="controlName">Control name</param>
            <param name="ci">Form control info</param>
            <param name="ex">Logged exception</param>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.InitializeFormControl(System.String,CMS.FormEngine.FormFieldInfo)">
            <summary>
            Creates and initializes form control by given path and field information.
            </summary>
            <param name="controlPath">Control path</param>
            <param name="ffi">FormFieldInfo with settings for control</param>
            <returns>Returns initialized form control</returns>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.InitializeFormControl(CMS.FormEngine.FormUserControlInfo,System.String,CMS.FormEngine.FormFieldInfo)">
            <summary>
            Creates and initializes form control by given form control code name and initializes it by provided parameters.
            </summary>
            <param name="ci">Control info to load</param>
            <param name="controlCodeName">FormUserControlInfo code name</param>
            <param name="ffi">FormFieldInfo with settings for control</param>
            <returns>Returns initialized form control</returns>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.LoadFormControl(System.String)">
            <summary>
            Loads the control from the given URL
            </summary>
            <param name="url">URL to load</param>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.InitializeControl(CMS.FormEngine.FormFieldInfo,CMS.FormControls.FormEngineUserControl)">
            <summary>
            Initializes the control with the given form field information
            </summary>
            <param name="ffi">Form field information</param>
            <param name="usrControl">Form control</param>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.InitControlValue(CMS.FormControls.FormEngineUserControl,CMS.FormEngine.FormFieldInfo,System.String,System.Object)">
            <summary>
            Initializes value of the form control.
            </summary>
            <param name="usrControl">Initialized form control</param>
            <param name="ffi">FormFieldInfo with settings for control</param>
            <param name="formControlName">Original form control name; it may differ for inherited form controls</param>
            <param name="value">Data value</param>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.EnsureMacros">
            <summary>
            Sets correct visibility of controls according to macro settings.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.SetControlValue(System.Web.UI.Control,System.Object)">
            <summary>
            Loads the value to the control.
            </summary>
            <param name="c">Control to load</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.EnsureControls">
            <summary>
            Ensures the inner controls.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.Reload">
            <summary>
            Reloads the control.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.CheckBadWords">
            <summary>
            Perform bad words check.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.IsValid">
            <summary>
            Validation of the control.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.GetInputClientID(System.Web.UI.ControlCollection)">
            <summary>
            Gets client ID of first inner input control which is not already associated with some label.
            </summary>
            <param name="controls">Collection of controls</param>
            <returns>Returns string with client ID of first control which has no associated label</returns>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.GetInputControlID(System.Web.UI.ControlCollection)">
            <summary>
            Gets control ID of first inner input control which is not already associated with some label.
            </summary>
            <param name="controls">Collection of controls</param>
            <returns>Returns string with control ID of first control which has no associated label</returns>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.GetInputClientID(System.Web.UI.ControlCollection,System.Collections.Hashtable)">
            <summary>
            Goes through controls collection and insert into provided hashtable input, select and file controls without associated label.
            </summary>
            <param name="controls">ControlCollection with controls to be searched</param>
            <param name="associatedControls">Hashtable where control client ID will be saved</param>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.SetValue(System.Object,System.Boolean)">
            <summary>
            Sets control value.
            </summary>
            <param name="value">Value</param>
            <param name="isMacro">Indicates if the value is macro. Default value is FALSE.</param>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.GetCallbackResult">
            <summary>
            Gets callback result.
            </summary>
        </member>
        <member name="M:CMS.FormControls.EditingFormControl.RaiseCallbackEvent(System.String)">
            <summary>
            Raise callback method.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.Enabled">
            <summary>
            Enabled.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.IsMacro">
            <summary>
            Determines whether the value is macro or not.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.BadWordsResult">
            <summary>
            Result of bad word check.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.BadWordsList">
            <summary>
            List of found bad words.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.AllowMacroEditing">
            <summary>
            Determines whether to display the "Edit macro" button.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.ResolverName">
            <summary>
            Gets or sets macro resolver name.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.ContextResolver">
            <summary>
            Gets or sets macro resolver for given control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.Value">
            <summary>
            Gets or sets the value to the nested control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.ValueForValidation">
            <summary>
            Returns value prepared for validation.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.OriginalValue">
            <summary>
            Original control value
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.NestedControl">
            <summary>
            Gets the nested control.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.MacroEditButton">
            <summary>
            Gets the button control which shows the modal dialog with macro editor.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.RemoveMacroButton">
            <summary>
            Gets the button control for removing macro.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.NestedControlPanel">
            <summary>
            Gets the Panel where the nested control is placed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.MacroTable">
            <summary>
            Macro table.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.Data">
            <summary>
            Data to be edited.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.DataValue">
            <summary>
            Data value.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.IsInsertMode">
            <summary>
            Is insert mode.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.Mode">
            <summary>
            Mode of the form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.FieldType">
            <summary>
            Field type.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.IsLiveSite">
            <summary>
            Indicates if the control is on live site.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.ValueElementID">
            <summary>
            Gets ClientID of the control from which the Value is retrieved or 
            null if such a control can't be specified.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.IsDefaultValueAndMacro">
            <summary>
            Returns true if default value of formfield is macro expression and current value is the default value.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.Field">
            <summary>
            Field name to which the field belongs. This property is only supported in templated form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.FormControlName">
            <summary>
            Form control code name.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.FormControlPath">
            <summary>
            Form control path.
            </summary>
        </member>
        <member name="P:CMS.FormControls.EditingFormControl.ItemName">
            <summary>
            Name of the edited item.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormControlError">
            <summary>
            Control to supplement the form control that failed to load.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlError.CreateChildControls">
            <summary>
            Creates child controls procedure.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlError.IsValid">
            <summary>
            Returns always false.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControlError.ErrorTitle">
            <summary>
            Gets or sets the error title.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControlError.InnerException">
            <summary>
            Inner exception to display.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControlError.Value">
            <summary>
            Gets or sets field value. You need to override this method to make the control work properly with the form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControlError.HasValue">
            <summary>
            Returns true if the control has value, if false, the value from the control should not be used within the form to update the data
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormControlError.FormControlName">
            <summary>
            Gets or sets name of form control that failed to load.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormRequiredValidator">
            <summary>
            Required validator for the form.
            </summary>
        </member>
        <member name="P:CMS.FormControls.FormRequiredValidator.Field">
            <summary>
            Field name for which the validator applies.
            </summary>
        </member>
        <member name="T:CMS.FormControls.ControlRegistrationEventArgs">
            <summary>
            Custom event arguments used for control registration in BasicForm.
            </summary>
        </member>
        <member name="M:CMS.FormControls.ControlRegistrationEventArgs.#ctor(System.Web.UI.Control,System.String)">
            <summary>
            Default constructor for event arguments used in control registration process.
            </summary>
            <param name="childControl">Child control being registered</param>
            <param name="fieldName">Field name for the control</param>
        </member>
        <member name="P:CMS.FormControls.ControlRegistrationEventArgs.ChildControl">
            <summary>
            Control being registered.
            </summary>
        </member>
        <member name="P:CMS.FormControls.ControlRegistrationEventArgs.FieldName">
            <summary>
            Field name for the control.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FieldSetDefaultLayout">
            <summary>
            Panels layout - each category single panel
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldSetDefaultLayout.#ctor(CMS.FormControls.BasicForm,System.Web.UI.WebControls.Panel)">
            <summary>
            Default constructor.
            </summary>
            <param name="basicForm">BasicForm with settings</param>
            <param name="categoryListPanel">Panel where categories will be placed</param>
        </member>
        <member name="M:CMS.FormControls.FieldSetDefaultLayout.Load">
            <summary>
            Loads field sets layout.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldSetDefaultLayout.CreateCategory(System.Collections.Generic.List{CMS.FormEngine.FormFieldInfo},CMS.FormControls.FieldCreationArgs)">
            <summary>
            Renders whole category (iterates through fields and renders them).
            </summary>
            <param name="formFields">List of fields to render</param>
            <param name="args">Parameters needed for rendering</param>
        </member>
        <member name="M:CMS.FormControls.FieldSetDefaultLayout.CreateField(CMS.FormControls.FieldCreationArgs)">
            <summary>
            Creates the field.
            </summary>
            <param name="args">Form field settings</param>
        </member>
        <member name="M:CMS.FormControls.FieldSetDefaultLayout.CreateInvisibleField(CMS.FormControls.FieldCreationArgs)">
            <summary>
            Creates invisible field with default value if field is not public and it is not allowed to be empty.
            </summary>
            <param name="args">Form field settings</param>
        </member>
        <member name="M:CMS.FormControls.FieldSetDefaultLayout.CreateFieldInternal(CMS.FormControls.FieldCreationArgs,System.Boolean)">
            <summary>
            Creates the field based on given parameters.
            </summary>
            <param name="args">Field arguments</param>
            <param name="visible">Indicates if the field should be visible or invisible</param>
        </member>
        <member name="M:CMS.FormControls.FieldSetDefaultLayout.InitImages">
            <summary>
            Inits basicform's collapse/expand images.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FieldSetDefaultLayout.RegisterScripts">
            <summary>
            Registers script for layout.
            </summary>
        </member>
        <member name="T:CMS.FormControls.SingleTableDefaultLayout">
            <summary>
            Standard layout - single table
            </summary>
        </member>
        <member name="M:CMS.FormControls.SingleTableDefaultLayout.#ctor(CMS.FormControls.BasicForm,System.Web.UI.WebControls.Panel)">
            <summary>
            Default constructor.
            </summary>
            <param name="basicForm">BasicForm with settings</param>
            <param name="categoryListPanel">Panel where categories will be placed</param>
        </member>
        <member name="M:CMS.FormControls.SingleTableDefaultLayout.Load">
            <summary>
            Loads standard layout.
            </summary>
        </member>
        <member name="M:CMS.FormControls.SingleTableDefaultLayout.CreateCategory(System.Collections.Generic.List{CMS.FormEngine.FormFieldInfo},CMS.FormControls.FieldCreationArgs)">
            <summary>
            Renders whole category (iterates through fields and renders them).
            </summary>
            <param name="formFields">List of fields to render</param>
            <param name="args">Parameters needed for rendering</param>
        </member>
        <member name="M:CMS.FormControls.SingleTableDefaultLayout.CreateField(CMS.FormControls.FieldCreationArgs)">
            <summary>
            Creates the field.
            </summary>
            <param name="args">Form field settings</param>
        </member>
        <member name="M:CMS.FormControls.SingleTableDefaultLayout.InitImages">
            <summary>
            Inits basicform's collapse/expand images.
            </summary>
        </member>
        <member name="M:CMS.FormControls.SingleTableDefaultLayout.CreateSubmitRow">
            <summary>
            Appends submit row to the end of the table.
            </summary>
        </member>
        <member name="M:CMS.FormControls.SingleTableDefaultLayout.RegisterScripts">
            <summary>
            Register scripts used by layout.
            </summary>
        </member>
        <member name="T:CMS.FormControls.TablePerCategoryDefaultLayout">
            <summary>
            Tables layout - each category single table
            </summary>
        </member>
        <member name="M:CMS.FormControls.TablePerCategoryDefaultLayout.#ctor(CMS.FormControls.BasicForm,System.Web.UI.WebControls.Panel)">
            <summary>
            Default constructor.
            </summary>
            <param name="basicForm">BasicForm with settings</param>
            <param name="categoryListPanel">Panel where categories will be placed</param>
        </member>
        <member name="M:CMS.FormControls.TablePerCategoryDefaultLayout.Load">
            <summary>
            Loads table layout.
            </summary>
        </member>
        <member name="M:CMS.FormControls.TablePerCategoryDefaultLayout.RegisterScripts">
            <summary>
            Registers script on the page.
            </summary>
        </member>
        <member name="M:CMS.FormControls.TablePerCategoryDefaultLayout.CreateCategory(System.Collections.Generic.List{CMS.FormEngine.FormFieldInfo},CMS.FormControls.FieldCreationArgs)">
            <summary>
            Renders whole category (iterates through fields and renders them).
            </summary>
            <param name="formFields">List of fields to render</param>
            <param name="args">Parameters needed for rendering</param>
        </member>
        <member name="M:CMS.FormControls.TablePerCategoryDefaultLayout.CreateSubmitButton">
            <summary>
            Create table for submit button.
            </summary>
        </member>
        <member name="M:CMS.FormControls.TablePerCategoryDefaultLayout.CreateField(CMS.FormControls.FieldCreationArgs)">
            <summary>
            Creates the field.
            </summary>
            <param name="args">Form field settings</param>
        </member>
        <member name="M:CMS.FormControls.TablePerCategoryDefaultLayout.CreateFooterRow(CMS.FormEngine.FormCategoryInfo,System.String,CMS.FormControls.CollapsibleImage)">
            <summary>
            Creates footer row.
            </summary>
        </member>
        <member name="T:CMS.FormControls.LayoutForm">
            <summary>
            Represents custom user layout specified by text with macros.
            </summary>
        </member>
        <member name="F:CMS.FormControls.LayoutForm.mRegExLayoutMacro">
            <summary>
            Regular expression to match layout macros.
            </summary>
        </member>
        <member name="M:CMS.FormControls.LayoutForm.#ctor(CMS.FormControls.BasicForm)">
            <summary>
            Default constructor.
            </summary>
            <param name="basicForm">Basic form</param>
        </member>
        <member name="M:CMS.FormControls.LayoutForm.LoadLayout">
            <summary>
            Loads form layout
            </summary>
        </member>
        <member name="M:CMS.FormControls.LayoutForm.GenerateMacroContent(System.Text.RegularExpressions.Match,System.Int32@)">
            <summary>
            Creates form content according to found macro.
            </summary>
        </member>
        <member name="M:CMS.FormControls.LayoutForm.AddNonMacroContent(System.Int32,System.Int32)">
            <summary>
            Adds other content from form layout into the form.
            </summary>
            <param name="positionStart">Start position in the layout</param>
            <param name="positionEnd">End position in the layout</param>
        </member>
        <member name="M:CMS.FormControls.LayoutForm.AddFormElement(CMS.FormEngine.FormFieldInfo,System.String,System.String)">
            <summary>
            Adds control for the field according to specified type.
            </summary>
        </member>
        <member name="M:CMS.FormControls.LayoutForm.ElementCanBeAdded(CMS.FormEngine.FormFieldInfo,System.String)">
            <summary>
            Indicates if element can be added into layout.
            </summary>
        </member>
        <member name="M:CMS.FormControls.LayoutForm.AddSubmitButton">
            <summary>
            Inserts submit button to form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.LayoutForm.LoadHiddenControls">
            <summary>
            Loads hidden controls from layout.
            </summary>
        </member>
        <member name="T:CMS.FormControls.LayoutTemplate">
            <summary>
            Represents layout based on a template.
            </summary>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.#ctor(CMS.FormControls.BasicForm)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="basicForm">Reference to BasicForm</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.LoadLayout">
            <summary>
            Loads the template layout for the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.CollectFormElements(System.Web.UI.Control,System.String,System.Boolean)">
            <summary>
            Collects form elements from the given container.
            </summary>
            <param name="container">Container to examine</param>
            <param name="fieldName">Field name provided by the parent container</param>
            <param name="useFFI">Indicates if form field information should be used to initialize inner form controls</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.RegisterFormControl(System.Web.UI.Control,System.String,System.Boolean)">
            <summary>
            Registers the given form control within the form.
            </summary>
            <param name="child">Control to register</param>
            <param name="fieldName">Field name</param>
            <param name="useFFI">Indicates if form field information should be used to initialize inner form controls</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.GetFieldName(System.String,System.String)">
            <summary>
            Gets the name for the given field.
            </summary>
            <param name="parent">Parent field name</param>
            <param name="fieldName">Field name</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.EnsureErrorLabels">
            <summary>
            Ensures the existence of the error labels for fields.
            </summary>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.EnsureLayout">
            <summary>
            Ensures the table layout.
            </summary>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.EnsureSubmitButton">
            <summary>
            Ensures submit button in the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.RegisterFormFieldControl(CMS.FormControls.FormField,System.String)">
            <summary>
             Registers FormField into BasicForm controls.
            </summary>
            <param name="child">Control to be registered</param>
            <param name="fieldName">Field name</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.RegisterEditingFormControl(CMS.FormControls.EditingFormControl,System.String,System.Boolean)">
            <summary>
             Registers EditingFormControl into BasicForm controls.
            </summary>
            <param name="child">Control to be registered</param>
            <param name="fieldName">Field name</param>
            <param name="useFFI">Indicates if form field information should be used to initialize inner form controls</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.RegisterFormControlControl(CMS.FormControls.FormControl,System.String)">
            <summary>
             Registers FormControl into BasicForm controls.
            </summary>
            <param name="child">Control to be registered</param>
            <param name="fieldName">Field name</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.RegisterFormEngineUserControl(CMS.FormControls.FormEngineUserControl,System.String,System.Boolean)">
            <summary>
             Registers FormEngineUserControl into BasicForm controls.
            </summary>
            <param name="child">Control to be registered</param>
            <param name="fieldName">Field name</param>
            <param name="useFFI">Indicates if form field information should be used to initialize inner form controls</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.RegisterErrorLabel(CMS.FormControls.FormErrorLabel,System.String)">
            <summary>
            Registers error label for specified field in BasicForm.
            </summary>
            <param name="child">Control to be registered</param>
            <param name="fieldName">Field name</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.RegisterLabel(CMS.FormControls.FormLabel,System.String)">
            <summary>
            Registers info label for specified control.
            </summary>
            <param name="child">Control to be registered</param>
            <param name="fieldName">Field name</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.RegisterFormInfoMessageLabel(CMS.FormControls.FormInfoMessageLabel)">
            <summary>
            Registers message info label for whole form.
            </summary>
            <param name="child">Control to be registered</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.RegisterFormErrorMessageLabel(CMS.FormControls.FormErrorMessageLabel)">
            <summary>
            Registers message error label for whole form.
            </summary>
            <param name="child">Control to be registered</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.RegisterRequiredValidator(CMS.FormControls.FormRequiredValidator,System.String)">
            <summary>
            Registers field's "required" validator into BasicForm.
            </summary>
            <param name="child">Control to be registered</param>
            <param name="fieldName">Field name</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.RegisterSubmitButton(CMS.FormControls.FormSubmitButton,System.String)">
            <summary>
            Registers BasicForm's submit button.
            </summary>
            <param name="child">Control to be registered</param>
            <param name="fieldName">Field name</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.RegisterCategory(CMS.FormControls.FormCategory)">
            <summary>
            Registers BasicForm's form category.
            </summary>
            <param name="child">Category to be registered</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.FindFieldNameInCategory(System.Web.UI.Control)">
            <summary>
            Returns first field name from one of the child controls of specified category control.
            Returns NULL if no field name found.
            </summary>
            <param name="parent">Parent control</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.GetFFI(System.String)">
            <summary>
            Gets FormFieldInfo for given field name.
            </summary>
            <param name="fieldName">Name of the field</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.EnsureFieldVisibility(CMS.FormEngine.FormFieldInfo,System.Web.UI.Control)">
            <summary>
            Checks if given field can be displayed in the form layout based on form settings (may affect private and system fields).
            </summary>
            <param name="fieldInfo">Form field info</param>
            <param name="control">Field control</param>
        </member>
        <member name="M:CMS.FormControls.LayoutTemplate.FieldCanBeAdded(CMS.FormEngine.FormFieldInfo)">
            <summary>
            Returns TRUE if a field can be added into layout.
            </summary>
        </member>
        <member name="E:CMS.FormControls.LayoutTemplate.OnAfterRegisterFormControl">
            <summary>
            Event representing control registration.
            </summary>
        </member>
        <member name="P:CMS.FormControls.LayoutTemplate.SubmitButtonRegistered">
            <summary>
            Indicates if a submit button was registered in ASCX layout.
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormTypeEnum">
            <summary>
            Enum for form type.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormTypeEnum.BasicForm">
            <summary>
            Basic form.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormTypeEnum.BizForm">
            <summary>
            Biz form.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormTypeEnum.CMSForm">
            <summary>
            CMS Form.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormTypeEnum.UIForm">
            <summary>
            UI Form.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormTypeEnum.CustomTableForm">
            <summary>
            Custom table form.
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormTypeEnum.DataForm">
            <summary>
            Data form.
            </summary>
        </member>
        <member name="T:CMS.FormControls.SecurityCheck">
            <summary>
            Security check for the UI form.
            </summary>
        </member>
        <member name="F:CMS.FormControls.SecurityCheck.mIsAllowed">
            <summary>
            Result of the security check.
            </summary>
        </member>
        <member name="M:CMS.FormControls.SecurityCheck.CheckUIElements">
            <summary>
            Checks the security of the UI elements, returns true if the security check succeeded.
            </summary>
        </member>
        <member name="M:CMS.FormControls.SecurityCheck.CheckPermissions">
            <summary>
            Checks the security of the permissions, returns true if the security check succeeded.
            </summary>
        </member>
        <member name="M:CMS.FormControls.SecurityCheck.CheckEditor">
            <summary>
            Checks the security of the editor, returns true if the security check succeeded.
            </summary>
        </member>
        <member name="M:CMS.FormControls.SecurityCheck.CheckGlobalAdministrator">
            <summary>
            Checks the security of the global admin, returns true if the security check succeeded.
            </summary>
        </member>
        <member name="M:CMS.FormControls.SecurityCheck.CheckSecurity">
            <summary>
            Checks the security, returns true if the security check succeeded.
            </summary>
        </member>
        <member name="P:CMS.FormControls.SecurityCheck.GlobalAdministrator">
            <summary>
            If true, the global admin check should be performed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.SecurityCheck.Editor">
            <summary>
            If true, the editor should be checked.
            </summary>
        </member>
        <member name="P:CMS.FormControls.SecurityCheck.Resource">
            <summary>
            Resource name to be checked.
            </summary>
        </member>
        <member name="P:CMS.FormControls.SecurityCheck.Permission">
            <summary>
            Permission name to be checked.
            </summary>
        </member>
        <member name="P:CMS.FormControls.SecurityCheck.UIElements">
            <summary>
            UI elements to be checked.
            </summary>
        </member>
        <member name="P:CMS.FormControls.SecurityCheck.CurrentUser">
            <summary>
            Current user.
            </summary>
        </member>
        <member name="P:CMS.FormControls.SecurityCheck.CurrentSiteName">
            <summary>
            Current site name.
            </summary>
        </member>
        <member name="P:CMS.FormControls.SecurityCheck.IsAllowed">
            <summary>
            Result of the security check.
            </summary>
        </member>
        <member name="P:CMS.FormControls.SecurityCheck.DisableForm">
            <summary>
            If true, the form is disabled if security check does not succeed.
            </summary>
        </member>
        <member name="T:CMS.FormControls.UIForm">
            <summary>
            Form control for the admin UI.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.OnInit(System.EventArgs)">
            <summary>
            OnInit method.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.PageHelper_InitComplete(System.Object,System.EventArgs)">
            <summary>
            Init complete event handler
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.OnLoad(System.EventArgs)">
            <summary>
            Onload method.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.OnPreRender(System.EventArgs)">
            <summary>
            OnPreRender method.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.ObjectManager_OnSaveData(System.Object,CMS.ExtendedControls.SimpleObjectManagerEventArgs)">
            <summary>
            Handles the ObjectManager OnSaveData event.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.ObjectManager_OnBeforeAction(System.Object,CMS.ExtendedControls.SimpleObjectManagerEventArgs)">
            <summary>
            Handles before action events. Validates data before check-in.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.ObjectManager_OnAfterAction(System.Object,CMS.ExtendedControls.SimpleObjectManagerEventArgs)">
            <summary>
            Handles after action events. Reloads the form after Undo checkout action because this action causes changes in the content of the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.EnableByLockState">
            <summary>
            Enables or disables form according to current checkout state with respect to current user.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.InitFormInternal">
            <summary>
            Initializes the form information.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.InitResolver">
            <summary>
            Initializes macro resolver data sources.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.AddControlsAfterInternal">
            <summary>
            Allows to add additional components after the form.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.UIForm_OnCheckPermissions(System.Object,System.EventArgs)">
            <summary>
            Check permissions event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.UIForm_OnItemValidation(System.Object,System.String@)">
            <summary>
            Fired on the item validation.
            </summary>
            <param name="sender">Sender</param>
            <param name="errorMessage">Returning the error message</param>
        </member>
        <member name="M:CMS.FormControls.UIForm.SaveDataInternal">
            <summary>
            Internal method to save data to the database.
            </summary>
        </member>
        <member name="M:CMS.FormControls.UIForm.AfterSaveActionsInternal(System.String,System.Boolean)">
            <summary>
            Executes additional actions after successful save.
            </summary>
            <param name="redirectUrlAfterSave">Target URL for the final redirection</param>
            <param name="showChangesSaved">Indicates if info message should be displayed (redirect URL should be empty)</param>
        </member>
        <member name="M:CMS.FormControls.UIForm.HasParentObject(CMS.DataEngine.GeneralizedInfo)">
            <summary>
            Returns true if edited object has relation to a parent and it exists; if it doesn't exist an exception is thrown.
            Returns false if edited object doesn't have relation to a parent.
            </summary>
            <param name="editedObject">Edited object</param>
        </member>
        <member name="E:CMS.FormControls.UIForm.OnCreate">
            <summary>
            Event for early initialization
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.PerformTabsRefresh">
            <summary>
            Indicates whether the tabs should be refreshed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.RefreshHeader">
            <summary>
            Indicates whether header should be automatically refreshed when display name is changed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.DisplayNameChanged">
            <summary>
            Indicates whether display name of object was changed
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.ObjectManager">
            <summary>
            Gets the object manager control if present on the page.
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.MessagesPlaceHolder">
            <summary>
            Messages placeholder
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.SecurityCheck">
            <summary>
            Security check.
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.ObjectType">
            <summary>
            Object type for editing.
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.EditedObject">
            <summary>
            Edited object.
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.ObjectSiteID">
            <summary>
            Edited object site ID.
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.ParentObject">
            <summary>
            Parent object.
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.RedirectUrlAfterCreate">
            <summary>
            The URL to which the engine should redirect after creation of the new object.
            Set to empty string to disable redirect.
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.EnabledByLockState">
            <summary>
            Gets or sets a value that indicates if the form enabled state is set automatically based on the lock state of the edited object.
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.AlternativeFormName">
            <summary>
            Gets or sets the name of the alternative form to use.
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.NewObjectPosition">
            <summary>
            Gets or sets the position of the newly created object. This applies only to those object which has OrderColumn defined.
            </summary>
        </member>
        <member name="P:CMS.FormControls.UIForm.FormDefaultStyle">
            <summary>
            Default form specific style configuration.
            </summary>
        </member>
        <member name="T:CMS.FormControls.CMSObjectManager">
            <summary>
            Object manager control.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSObjectManager.mVersionManager">
            <summary>
            Object version manager instance.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSObjectManager.mInfoObject">
            <summary>
            Object with which the manager is working.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSObjectManager.hdnComment">
            <summary>
            Hidden field for comment argument.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSObjectManager.btnCommand">
            <summary>
            Button for launching partial postback
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.RaisePostBackEvent(System.String)">
            <summary>
            Raises the post back event.
            </summary>
            <param name="eventArgument">Event argument</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.RenderScripts">
            <summary>
            Renders scripts
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.GetJSFunction(System.String,System.String,System.String)">
            <summary>
            Gets java-script function
            </summary>
            <param name="action">Action name</param>
            <param name="argument">Action argument</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.GetJSFunctionInternal(System.String,System.String,System.String)">
            <summary>
            Gets java-script function
            </summary>
            <param name="action">Action name</param>
            <param name="arg">Argument (optional)</param>
            <param name="comment">Action comment (optional)</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.GetSubmitScript">
            <summary>
            Gets submit script for save changes support
            </summary>
            <returns>Submit script for save changes support</returns>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.SaveObject">
            <summary>
            Saves the object.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.SaveObject(CMS.ExtendedControls.SimpleObjectManagerEventArgs)">
            <summary>
            Saves the object.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.CheckInObject(System.String)">
            <summary>
            Checks the object in.
            </summary>
            <param name="comment">Comment of the check-in</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.CheckInObject(System.String,CMS.DataEngine.BaseInfo)">
            <summary>
            Checks the object in.
            </summary>
            <param name="comment">Comment of the check-in</param>
            <param name="infoObject">Info to checkin</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.CheckInAndSaveObject(System.String)">
            <summary>
            Checks the object in and saves it.
            </summary>
            <param name="comment">Comment of the check-in</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.CheckInAndSaveObject(System.String,CMS.DataEngine.BaseInfo)">
            <summary>
            Checks the object in and saves it.
            </summary>
            <param name="comment">Comment of the check-in</param>
            <param name="infoObject">Info to checkin</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.CheckOutObject">
            <summary>
            Checks the object out.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.CheckOutObject(CMS.DataEngine.BaseInfo)">
            <summary>
            Checks the object out.
            </summary>
            <param name="infoObject">Info to checkout</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.UndoCheckOutObject">
            <summary>
            Cancels the object checkout.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.UndoCheckOutObject(CMS.DataEngine.BaseInfo)">
            <summary>
            Cancels the object checkout.
            </summary>
            <param name="infoObject">Info to undo checkout</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.ClearComment">
            <summary>
            Clears current comment.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.ClearProperties">
            <summary>
            Clears security result.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.GetUndoCheckOutConfirmation(CMS.DataEngine.BaseInfo,System.String)">
            <summary>
            Gets the undo check out confirmation message for the specified info.
            Takes info versioning support into account.
            </summary>
            <param name="info">Info for which to display the message</param>
            <param name="resourceCulture">Resource string culture, optional</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.CheckOutNewObject(System.Web.UI.Page)">
            <summary>
            Finds current object manager and uses it to checkout current object.
            </summary>
            <param name="page">Page object</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.CheckDefaultConsistency(CMS.ExtendedControls.SimpleObjectManagerEventArgs)">
            <summary>
            Checks the default consistency for the editing context.
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.OnInit(System.EventArgs)">
            <summary>
            Init event handler
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.GetCurrent(System.Web.UI.Control)">
            <summary>
            Gets the current instance of the object manager
            </summary>
            <param name="control">Control from which to get the manager</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.CreateChildControls">
            <summary>
            CreateChildControls event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.btnCommand_Click(System.Object,System.EventArgs)">
            <summary>
            Button click event
            </summary>
            <param name="sender">Sender object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.IsObjectChecked">
            <summary>
            Returns true if object is checked out or use checkin/out is not used
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.OnLoad(System.EventArgs)">
            <summary>
            OnLoad event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render action.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.InitializeSecurityProperties(System.String)">
            <summary>
            Initializes security properties
            </summary>
            <param name="storageKey">Storage key for request</param>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.IsActionAllowed(System.String)">
            <summary>
            Checks if given action is allowed.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.GetActionKey(System.String)">
            <summary>
            Returns action request key.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSObjectManager.GetStorageKey">
            <summary>
            Returns storage key for current object.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSObjectManager.KeepNewObjectsCheckedOut">
            <summary>
            Returns true if CMSUseObjectCheckinCheckout and CMSKeepNewCheckedOut are true.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSObjectManager.HiddenComment">
            <summary>
            Hidden comment field.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSObjectManager.ActionComment">
            <summary>
            Action comment (for CheckIn operation).
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSObjectManager.RegisterEvents">
            <summary>
            Indicates if manager should register for common events (save etc.).
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSObjectManager.RenderScript">
            <summary>
            Indicates if java script functions for object management should be rendered.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSObjectManager.VersionManager">
            <summary>
            Object version manager instance.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSObjectManager.ShowPanel">
            <summary>
            Indicates if the object locking panel should be showed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSObjectManager.InfoObject">
            <summary>
            Returns object with which the manager is working. It return the object based on ObjectType nd ObjectID properties, if these properties are not present, checks if the EditedObject is present.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSObjectManager.ObjectType">
            <summary>
            Object type of the object. Taken into account only if EditedObject is null.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSObjectManager.ObjectID">
            <summary>
            ID of the object. Taken into account only if EditedObject is null.
            </summary>
        </member>
        <member name="T:CMS.FormControls.CMSAutomationManager">
            <summary>
            Automation manager.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSAutomationManager.mManager">
            <summary>
            AutomationManager for managing processes.
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSAutomationManager.mNextSteps">
            <summary>
            Next steps
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSAutomationManager.mProcess">
            <summary>
            Process
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSAutomationManager.mObjectID">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSAutomationManager.mObjectType">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSAutomationManager.mRefreshActionContent">
            <summary>
            Indicates if content should be refreshed (action is being processed)
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSAutomationManager.hdnArgs">
            <summary>
            Hidden field for post back arguments
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSAutomationManager.hdnCurrStep">
            <summary>
            Hidden field for current step argument
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSAutomationManager.hdnComment">
            <summary>
            Hidden field for comment argument
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSAutomationManager.plcMess">
            <summary>
            Messages placeholder
            </summary>
        </member>
        <member name="F:CMS.FormControls.CMSAutomationManager.pnlInfo">
            <summary>
            Info panel
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.CreateChildControls">
            <summary>
            CreateChildControls event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.OnLoad(System.EventArgs)">
            <summary>
            Load event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render action.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.RenderScripts">
            <summary>
            Renders scripts
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.GetJSFunction(System.String,System.String,System.String)">
            <summary>
            Gets java-script function
            </summary>
            <param name="action">Action name</param>
            <param name="argument">Action argument</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.GetJSFunctionInternal(System.String,System.String,System.String)">
            <summary>
            Gets java-script function
            </summary>
            <param name="action">Action name</param>
            <param name="arg">Argument (optional)</param>
            <param name="comment">Action comment (optional)</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.OnPreRender(System.EventArgs)">
            <summary>
            PreRender event handler.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.IsActionAllowed(System.String)">
            <summary>
            Checks if given action is allowed
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.GetActionKey(System.String)">
            <summary>
            Gets action request key
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.ClearProperties">
            <summary>
            Clears properties
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.GetDefaultCheckPermissionsError(CMS.ExtendedControls.SimpleObjectManagerEventArgs)">
            <summary>
            Gets the default error message for check permission error
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.CheckDefaultSecurity(CMS.ExtendedControls.SimpleObjectManagerEventArgs)">
            <summary>
            Checks the default security for the editing context
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.InitializeSecurityProperties(System.String)">
            <summary>
            Initializes security properties
            </summary>
            <param name="storageKey">Storage key for request</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.IsAuthorized(System.Boolean)">
            <summary>
            Checks object limitations and permissions
            </summary>
            <param name="showMessage">Indicates if info message should be shown</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.CheckDefaultConsistency(CMS.ExtendedControls.SimpleObjectManagerEventArgs)">
            <summary>
            Checks the default consistency for the editing context
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.RaisePostBackEvent(System.String)">
            <summary>
            Raises the post back event.
            </summary>
            <param name="eventArgument">Event argument</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.MoveToNextStep(System.Int32,System.String)">
            <summary>
            Moves object to next step.
            </summary>
            <param name="stepId">Step ID (optional)</param>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.MoveToSpecificStep(System.Int32,System.String)">
            <summary>
            Moves object to specific step.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.MoveToNextStepInternal(System.Int32,System.String,System.Boolean)">
            <summary>
            Moves object to next step.
            </summary>
            <param name="stepId">Step ID (optional)</param>
            <param name="comment">Comment</param>
            <param name="specific">Indicates if move to specific step</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.MoveToPreviousStep(System.String)">
            <summary>
            Moves object to previous step.
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.MoveToPreviousStep(System.Int32,System.String)">
            <summary>
            Moves object to previous step.
            </summary>
            <param name="historyId">History ID (optional)</param>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.RemoveProcess">
            <summary>
            Removes process.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.StartProcess(System.Int32)">
            <summary>
            Starts process.
            </summary>
            <param name="processId">Process ID</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.ClearObject">
            <summary>
            Clears current object.
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.HasLocalMessagesPlaceHolder">
            <summary>
            Indicates if local messages placeholder is used
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.ShowAutomationInfo">
            <summary>
            Shows default automation information text
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.ShowAutomationInfo(System.String)">
            <summary>
            Shows default automation information text
            </summary>
            <param name="message">Additional message</param>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.GetAutomationInfo">
            <summary>
            Gets default automation information text
            </summary>
        </member>
        <member name="M:CMS.FormControls.CMSAutomationManager.ClearComment">
            <summary>
            Clears current comment
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.RegisterEvents">
            <summary>
            Indicates if manager should register for common events (save etc.).
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.Manager">
            <summary>
            Gets Automation manager instance.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.Process">
            <summary>
            Automation process.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.Step">
            <summary>
            Step.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.NextSteps">
            <summary>
            Next steps
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.AutomationInfoLabel">
            <summary>
            Automation information label.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.AutomationInfo">
            <summary>
            Automation information text.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.StateObjectID">
            <summary>
            State object ID
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.StateObject">
            <summary>
            State object
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.InfoObject">
            <summary>
            Returns currently edited object if it is available in the given context.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.ObjectID">
            <summary>
            Object ID. Together with ObjectType property identifies edited object.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.ObjectType">
            <summary>
            Object type. Together with ObjectID property identifies edited object.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.RenderScript">
            <summary>
            Indicates if java script functions for automation management should be rendered.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.CurrentStepID">
            <summary>
            Current step ID
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.AllowSave">
            <summary>
            Indicates if Save action is allowed.
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.ProcessingAction">
            <summary>
            Indicates if action is being processed
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.RefreshActionContent">
            <summary>
            Indicates if content should be refreshed (action is being processed)
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.ActionComment">
            <summary>
            Action comment
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.MessagesPlaceHolder">
            <summary>
            Messages placeholder
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.LocalMessagesPlaceHolder">
            <summary>
            Local messages placeholder
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.InfoPanel">
            <summary>
            Info panel
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.LocalInfoPanel">
            <summary>
            Local info panel
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.HiddenArguments">
            <summary>
            Hidden argument
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.CurrentStepArg">
            <summary>
            Hidden current step flag
            </summary>
        </member>
        <member name="P:CMS.FormControls.CMSAutomationManager.HiddenComment">
            <summary>
            Hidden comment field
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormControlsModule">
            <summary>
            Module registration.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlsModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlsModule.OnInit">
            <summary>
            Initializes the module
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormControlsModuleMetadata">
            <summary>
            Represents the FormControls module metadata.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlsModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.FormControls.FormControlsResolvers">
            <summary>
            Resolvers used in e-mail templates and other macro visual components.
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlsResolvers.ClearResolvers(System.Boolean)">
            <summary>
            Clears resolvers.
            </summary>
            <param name="logTask">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.FormControls.FormControlsResolvers.GetResolver(System.String)">
            <summary>
            Returns a resolver based on given name.
            </summary>
            <param name="name">Name of the resolver</param>
        </member>
        <member name="M:CMS.FormControls.FormControlsResolvers.GetFormResolver(System.String)">
            <summary>
            Returns new instance of resolver for given class (includes all fields, etc.).
            </summary>
            <param name="className">Name of the class</param>
        </member>
        <member name="M:CMS.FormControls.FormControlsResolvers.GetFormDefinitionResolver(System.String)">
            <summary>
            Returns new instance of resolver based on given form definition.
            </summary>
            <param name="formDefinition">Form definition</param>
        </member>
        <member name="M:CMS.FormControls.FormControlsResolvers.GetFormResolver(CMS.FormEngine.FormInfo)">
            <summary>
            Returns new instance of resolver for given class (includes all fields, etc.).
            </summary>
            <param name="formInfo">FormInfo</param>
        </member>
        <member name="T:CMS.FormControls.FormControlsSynchronization">
            <summary>
            Web farm synchronization for Form controls
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlsSynchronization.Init">
            <summary>
            Initializes the tasks for form resolvers synchronization
            </summary>
        </member>
        <member name="M:CMS.FormControls.FormControlsSynchronization.ClearFormResolvers(System.String,System.String,CMS.Core.BinaryData)">
            <summary>
            Clears the BizForm items
            </summary>
            <param name="target">Task target</param>
            <param name="data">Task data</param>
            <param name="binaryData">Task binary data</param>
        </member>
        <member name="T:CMS.FormControls.FormControlsTaskType">
            <summary>
            Web farm tasks for form controls operations
            </summary>
        </member>
        <member name="F:CMS.FormControls.FormControlsTaskType.ClearFormResolvers">
            <summary>
            Clear form resolvers
            </summary>
        </member>
        <member name="T:CMS.FormControls.VisibilityControl">
            <summary>
            Control to set visibility.
            </summary>
        </member>
        <member name="M:CMS.FormControls.VisibilityControl.#ctor">
            <summary>
            Control to set visibility.
            </summary>
        </member>
        <member name="M:CMS.FormControls.VisibilityControl.OnInit(System.EventArgs)">
            <summary>
            OnInit event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.FormControls.VisibilityControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the control content</param>
        </member>
        <member name="P:CMS.FormControls.VisibilityControl.Value">
            <summary>
            Gets or sets selected item.
            </summary>
        </member>
    </members>
</doc>
