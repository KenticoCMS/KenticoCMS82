<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.Ecommerce</name>
    </assembly>
    <members>
        <member name="T:CMS.Ecommerce.ActivityTrackingHelper">
            <summary>
            Helper methods for logging activities in CMSDesk.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ActivityTrackingHelper.GetContactID(CMS.Ecommerce.CustomerInfo,System.Int32)">
            <summary>
            Returns contact ID for particular customer.
            </summary>
            <param name="cust">Customer</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="T:CMS.Ecommerce.CurrencyConverter">
            <summary>
            Static wrapper for currency conversion service.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyConverter.Convert(System.Decimal,System.String,System.String,System.Int32)">
            <summary>
            Converts given monetary amount expressed in one currency to another currency using site specific conversion.
            </summary>
            <param name="amount">Amount to be converted.</param>
            <param name="inCurrencyCode">Code of the currency in which the amount is expressed (e.g. USD).</param>
            <param name="toCurrencyCode">Code of the currency to convert amount to (e.g. EUR).</param>
            <param name="siteID">ID of the site on which the conversion is done.</param>
            <returns>Amount converted to target currency on specific site.</returns>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyConverter.Convert(System.Decimal,System.Boolean,System.String,System.Int32)">
            <summary>
            Converts given monetary amount expressed main currency to different currency using site specific conversion.
            </summary>
            <param name="amountInMain">Amount in.</param>
            <param name="inGlobalMain">Indicates if amount is expressed in global main currency. Amount is in site main currency when set to false.</param>
            <param name="toCurrencyCode">Code of the currency to convert amount to (e.g. EUR).</param>
            <param name="siteID">ID of the site on which the conversion is done.</param>
            <returns>Amount converted to target currency on specific site.</returns>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyConverter.GetExchangeRate(System.String,System.String,System.Int32)">
            <summary>
            Calculates exchange rate for conversion from one currency to another. 
            Example: if 1 USD = 16 CZK then this method returns 1/16 = 0.0625 for conversion from USD to CZK.
            </summary>
            <param name="fromCurrencyCode">Code of currency in which amount is expressed, e.g. USD, EUR.</param>
            <param name="toCurrencyCode">Code of currency to convert amount to, e.g. USD, EUR.</param>
            <param name="siteID">ID of the site for which the rate is calculated.</param>
            <returns>Exchange rate from one currency to another currency on specific site.</returns>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyConverter.GetExchangeRate(System.Boolean,System.String,System.Int32)">
            <summary>
            Calculates exchange rate for conversion from main currency to different currency. 
            Example: if 1 USD = 16 CZK then this method returns 1/16 = 0.0625 for conversion from USD to CZK.
            </summary>
            <param name="fromGlobalMain">Indicates if conversion is done from global main currency or from site main currency.</param>
            <param name="toCurrencyCode">Code of currency to convert amount to, e.g. USD, EUR.</param>
            <param name="siteID">ID of the site for which the rate is calculated.</param>
            <returns>Exchange rate from one currency to another currency on specific site.</returns>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyConverter.GetConverter(System.Int32)">
            <summary>
            Returns currency converter used on given site.
            </summary>
            <param name="siteID">ID of the site to get currency converter for.</param>
        </member>
        <member name="T:CMS.Ecommerce.ExchangeRates.DefaultCurrencyConverterFactory">
            <summary>
            Default implementation of factory providing site specific currency converters. 
            Created converters uses exchange rates obtained using ExchangeRateInfoProvider and ExchangeTableInfoProvider.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ICurrencyConverterFactory">
            <summary>
            Defines the contract that class factories must implement to create new ICurrencyConverter objects.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ICurrencyConverterFactory.GetCurrencyConverter(System.Int32)">
            <summary>
            Returns currency converter able to convert currencies used on site specified by its ID.
            </summary>
            <param name="siteID">ID of the site to get currency converter for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRates.DefaultCurrencyConverterFactory.GetCurrencyConverter(System.Int32)">
            <summary>
            Returns currency converter able to convert currencies used on site specified by its ID.
            </summary>
            <param name="siteID">ID of the site to get currency converter for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRates.DefaultCurrencyConverterFactory.CreateConverter(System.Int32)">
            <summary>
            Returns new currency converter initialized to convert currencies on site specified by site ID.
            </summary>
            <param name="siteID">ID of the site to create converter for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRates.DefaultCurrencyConverterFactory.GetRate(CMS.Ecommerce.CurrencyInfo,System.Int32)">
            <summary>
            Returns rate from main currency to given currency using exchange table used on given site.
            If looking for rate for global currency, but given site does not use global currencies, global exchange table is used.
            </summary>
            <param name="toCurrency">Target currency.</param>
            <param name="siteID">ID of the site which exchange table should be used.</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRates.DefaultCurrencyConverterFactory.GetCurrency(System.String,System.Int32)">
            <summary>
            Returns CurrencyInfo object with given currency code. Currency is taken primarily from site specified by id (0 for global).
            When site currency is not found, global currencies are searched.
            </summary>
            <param name="currencyCode"></param>
            <param name="siteID"></param>
        </member>
        <member name="T:CMS.Ecommerce.ICurrencyConverter">
            <summary>
            Defines methods that convert money between currencies.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ICurrencyConverter.Convert(System.Decimal,System.String,System.String)">
            <summary>
            Converts monetary value from one currency to other currency.
            </summary>
            <param name="amount">Monetary amount to be converted.</param>
            <param name="inCurrencyCode">Code of currency in which amount is expressed, e.g. USD, EUR.</param>
            <param name="toCurrencyCode">Code of currency to convert amount to, e.g. USD, EUR.</param>
            <returns>Amount converted to currency specified by toCurrencyCode parameter.</returns>
        </member>
        <member name="M:CMS.Ecommerce.ICurrencyConverter.GetExchangeRate(System.String,System.String)">
            <summary>
            Returns exchange rate for conversion from one currency to another. 
            Example: if 1 USD = 16 CZK then this method returns 1/16 = 0.0625 for conversion from USD to CZK.
            </summary>
            <param name="fromCurrencyCode">Code of currency in which amount is expressed, e.g. USD, EUR.</param>
            <param name="toCurrencyCode">Code of currency to convert amount to, e.g. USD, EUR.</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRates.DefaultCurrencyConverter.#ctor(System.Func{System.String,CMS.Ecommerce.CurrencyInfo},System.Func{CMS.Ecommerce.CurrencyInfo,System.Decimal},System.Func{System.Decimal})">
            <summary>
            Creates new instance of DefaultCurrencyConverter.
            </summary>
            <param name="codeToCurrencyConverter">Function returning CurrencyInfo object for currency code (e.g. USD).</param>
            <param name="getRate">Function returning exchange rate from main currency to given currency.</param>
            <param name="getExchangeRateFromGlobal">Function returning exchange rate from global main currency to site main currency.</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRates.DefaultCurrencyConverter.Convert(System.Decimal,System.String,System.String)">
            <summary>
            Converts monetary value from one currency to other currency.
            </summary>
            <param name="amount">Monetary amount to be converted.</param>
            <param name="inCurrencyCode">Code of currency in which amount is expressed.</param>
            <param name="toCurrencyCode">Code of currency to convert amount to.</param>
            <returns>Amount converted to currency specified by toCurrencyCode parameter.</returns>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRates.DefaultCurrencyConverter.GetExchangeRate(System.String,System.String)">
            <summary>
            Returns exchange rate for conversion from one currency to another. 
            Example: if 1 USD = 16 CZK then this method returns 1/16 = 0.0625 for conversion from USD to CZK.
            </summary>
            <param name="fromCurrencyCode">Code of currency in which amount is expressed.</param>
            <param name="toCurrencyCode">Code of currency to convert amount to.</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRates.DefaultCurrencyConverter.GetExchangeRate(CMS.Ecommerce.CurrencyInfo,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns exchange rate for conversion from one currency to another.
            </summary>
            <param name="fromCurrency">Source currency.</param>
            <param name="toCurrency">Target currency.</param>
        </member>
        <member name="T:CMS.Ecommerce.CarrierInfo">
            <summary>
            CarrierInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CarrierInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CarrierInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfo.#ctor">
            <summary>
            Constructor - Creates an empty CarrierInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CarrierInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.Ecommerce.CarrierInfo.CarrierID">
            <summary>
            Carrier ID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CarrierInfo.CarrierDisplayName">
            <summary>
            Carrier display name
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CarrierInfo.CarrierName">
            <summary>
            Carrier name
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CarrierInfo.CarrierSiteID">
            <summary>
            Carrier site ID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CarrierInfo.CarrierGUID">
            <summary>
            Carrier GUID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CarrierInfo.CarrierLastModified">
            <summary>
            Carrier last modified
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CarrierInfo.CarrierAssemblyName">
            <summary>
            Carrier assembly name
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CarrierInfo.CarrierClassName">
            <summary>
            Carrier class name
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CarrierInfoProvider">
            <summary>
            Class providing CarrierInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarriers">
            <summary>
            Returns a query for all the CarrierInfo objects.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarrierInfo(System.Int32)">
            <summary>
            Returns CarrierInfo with specified ID.
            </summary>
            <param name="id">CarrierInfo ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarrierInfo(System.String)">
            <summary>
            Returns CarrierInfo with specified name.
            </summary>
            <param name="name">CarrierInfo name</param>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarrierInfo(System.String,System.String)">
            <summary>
            Returns CarrierInfo with specified name.
            </summary>
            <param name="name">CarrierInfo name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarrierInfo(System.Guid)">
            <summary>
            Returns CarrierInfo with specified GUID.
            </summary>
            <param name="guid">CarrierInfo GUID</param>                
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.SetCarrierInfo(CMS.Ecommerce.CarrierInfo)">
            <summary>
            Sets (updates or inserts) specified CarrierInfo.
            </summary>
            <param name="infoObj">CarrierInfo to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.DeleteCarrierInfo(CMS.Ecommerce.CarrierInfo)">
            <summary>
            Deletes specified CarrierInfo.
            </summary>
            <param name="infoObj">CarrierInfo to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.DeleteCarrierInfo(System.Int32)">
            <summary>
            Deletes CarrierInfo with specified ID.
            </summary>
            <param name="id">CarrierInfo ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarriers(System.Int32)">
            <summary>
            Returns a query for all the CarrierInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarrierProvider(System.Int32)">
            <summary>
            Returns Carrier provider object for given id of carrier info. Returns instance of DefaultCarrierProvider when carrier not found.
            Return null when carrier provider class not found.
            </summary>
            <param name="carrierId">ID of carrier to instantiate carrier provider for.</param>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarriersInternal">
            <summary>
            Returns a query for all the CarrierInfo objects.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarrierInfoInternal(System.Int32)">
            <summary>
            Returns CarrierInfo with specified ID.
            </summary>
            <param name="id">CarrierInfo ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarrierInfoInternal(System.String)">
            <summary>
            Returns CarrierInfo with specified name.
            </summary>
            <param name="name">CarrierInfo name</param>        
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarrierInfoInternal(System.String,System.String)">
            <summary>
            Returns CarrierInfo with specified name.
            </summary>
            <param name="name">CarrierInfo name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarrierInfoInternal(System.Guid)">
            <summary>
            Returns CarrierInfo with specified GUID.
            </summary>
            <param name="guid">CarrierInfo GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.SetCarrierInfoInternal(CMS.Ecommerce.CarrierInfo)">
            <summary>
            Sets (updates or inserts) specified CarrierInfo.
            </summary>
            <param name="infoObj">CarrierInfo to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.DeleteCarrierInfoInternal(CMS.Ecommerce.CarrierInfo)">
            <summary>
            Deletes specified CarrierInfo.
            </summary>
            <param name="infoObj">CarrierInfo to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarriersInternal(System.Int32)">
            <summary>
            Returns a query for all the CarrierInfo objects of a specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CarrierInfoProvider.GetCarrierProviderInternal(System.Int32)">
            <summary>
            Returns Carrier provider object for given id of carrier info. Returns instance of DefaultCarrierProvider when carrier not found.
            Return null when carrier provider class not found.
            </summary>
            <param name="carrierId">ID of carrier to instantiate carrier provider for.</param>
        </member>
        <member name="T:CMS.Ecommerce.DefaultCarrierProvider">
            <summary>
            Default carrier provider encapsulating default shipping cost calculation by weight.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ICarrierProvider">
            <summary>
            Interface providing base methods and properties for carrier providers.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ICarrierProvider.GetServices">
            <summary>
            Returns list of service names and their display names.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ICarrierProvider.GetPrice(CMS.Ecommerce.Delivery,System.String)">
            <summary>
            Calculates shipping costs of delivering given delivery.
            </summary>
            <param name="delivery">Delivery to be checked.</param>
            <param name="currencyCode">Code of currency to return shipping price in (e.g. USD or EUR).</param>
            <returns>Price in currency specified by currencyCode.</returns>
        </member>
        <member name="M:CMS.Ecommerce.ICarrierProvider.CanDeliver(CMS.Ecommerce.Delivery)">
            <summary>
            Carrier can deliver given delivery.
            </summary>
            <param name="delivery">Delivery to be checked.</param>
        </member>
        <member name="M:CMS.Ecommerce.ICarrierProvider.GetConfigurationUIElementGUID">
            <summary>
            Returns Guid of UIElement that is used to configure carrier provider.
            Return Guid.Empty if carrier does not have configuration UI.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ICarrierProvider.GetServiceConfigurationUIElementGUID(System.String)">
            <summary>
            Returns Guid of UIElement that is used to configure service properties.
            Return Guid.Empty if service does not have configuration UI.
            </summary>
            <param name="serviceName">Service name</param>
        </member>
        <member name="P:CMS.Ecommerce.ICarrierProvider.CarrierProviderName">
            <summary>
            Carrier provider name.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DefaultCarrierProvider.GetServices">
            <summary>
            Returns list of service names and their display names.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DefaultCarrierProvider.GetPrice(CMS.Ecommerce.Delivery,System.String)">
            <summary>
            Calculates shipping costs of delivering given delivery.
            </summary>
            <param name="delivery">Delivery to be checked.</param>
            <param name="currencyCode">Code of currency to return shipping price in (e.g. USD or EUR).</param>
            <returns>Price in currency specified by currencyCode.</returns>
        </member>
        <member name="M:CMS.Ecommerce.DefaultCarrierProvider.CanDeliver(CMS.Ecommerce.Delivery)">
            <summary>
            Checks if service is available for specified conditions.
            </summary>
            <param name="delivery">Delivery to be checked.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultCarrierProvider.GetConfigurationUIElementGUID">
            <summary>
            Returns Guid of UIElement that is used to configure carrier provider.
            Return Guid.Empty if carrier does not have configuration UI.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DefaultCarrierProvider.GetServiceConfigurationUIElementGUID(System.String)">
            <summary>
            Returns Guid of UIElement that is used to configure service properties.
            Return Guid.Empty if service does not have configuration UI.
            </summary>
            <param name="serviceName">Service name</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultCarrierProvider.SupportsService(System.String)">
            <summary>
            Returns true carrier provider can handle given service.
            </summary>
            <param name="serviceName">Service name to check.</param>
        </member>
        <member name="P:CMS.Ecommerce.DefaultCarrierProvider.Services">
            <summary>
            Gets dictionary of service names and their display names.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DefaultCarrierProvider.CarrierProviderName">
            <summary>
            Carrier provider name.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.Delivery">
            <summary>
            Class representing a delivery (bunch of items shipped together using a shipping option).
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.Delivery.Clone">
            <summary>
            Returns clone of delivery object
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Delivery.Items">
            <summary>
            Items shipped in this delivery. Only products and accessory product options are present.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Delivery.ShippingDate">
            <summary>
            The date of shipping (package departure from store).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Delivery.Weight">
            <summary>
            Weight of whole package.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Delivery.ShippingOption">
            <summary>
            Shipping option used to deliver this delivery.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Delivery.DeliveryAddress">
            <summary>
            Address where delivery is shipped to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Delivery.CustomData">
            <summary>
            Custom data.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DefaultDeliveryBuilder">
            <summary>
            Default implementation of IDeliveryBuilder. Creates delivery objects base on shopping cart.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.IDeliveryBuilder">
            <summary>
            Interface for classes able to create Delivery objects from shopping cart.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.IDeliveryBuilder.SetFromCart(CMS.Ecommerce.ShoppingCartInfo,System.Func{CMS.Ecommerce.ShoppingCartItemInfo,System.Boolean})">
            <summary>
            Sets currently constructed Delivery according to supplied shopping cart and adds cart items selected by 
            itemSelector predicate.
            </summary>
            <param name="cart">Shopping cart to be packed in delivery.</param>
            <param name="itemSelector">Predicate deciding which items will be placed into delivery. 
            When null, all items are delivered.</param>
        </member>
        <member name="M:CMS.Ecommerce.IDeliveryBuilder.SetDeliveryAddress(CMS.Ecommerce.IAddress)">
            <summary>
            Sets address where the delivery will be delivered to.
            </summary>
            <param name="address">Target address.</param>
        </member>
        <member name="M:CMS.Ecommerce.IDeliveryBuilder.SetShippingOption(CMS.Ecommerce.ShippingOptionInfo)">
            <summary>
            Sets shipping option used for currently constructed delivery.
            </summary>
            <param name="shippingOption">Shipping option to beused.</param>
        </member>
        <member name="M:CMS.Ecommerce.IDeliveryBuilder.SetWeight(System.Decimal)">
            <summary>
            Sets weight of whole delivery (package).
            </summary>
            <param name="weight">Weight.</param>
        </member>
        <member name="M:CMS.Ecommerce.IDeliveryBuilder.AddItem(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Adds a cart item to constructed delivery.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:CMS.Ecommerce.IDeliveryBuilder.SetShippingDate(System.DateTime)">
            <summary>
            Sets date of shipping.
            </summary>
            <param name="shippingDate">Date of shipping.</param>
        </member>
        <member name="M:CMS.Ecommerce.IDeliveryBuilder.SetCustomData(System.String,System.Object)">
            <summary>
            Sets custom data under given key.
            </summary>
            <param name="key">The Key</param>
            <param name="data">Custom data.</param>
        </member>
        <member name="M:CMS.Ecommerce.IDeliveryBuilder.BuildDelivery">
            <summary>
            Creates new delivery based on builder settings.
            </summary>
            <returns>New Delivery object.</returns>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.SetFromCart(CMS.Ecommerce.ShoppingCartInfo,System.Func{CMS.Ecommerce.ShoppingCartItemInfo,System.Boolean})">
            <summary>
            Sets currently constructed Delivery according to supplied shopping cart and adds cart items selected by 
            itemSelector predicate.
            </summary>
            <param name="cart">Shopping cart to be packed in delivery.</param>
            <param name="itemSelector">Predicate deciding which items will be placed into delivery. 
            When null, all products are delivered.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.AddItems(CMS.Ecommerce.ShoppingCartInfo,System.Func{CMS.Ecommerce.ShoppingCartItemInfo,System.Boolean})">
            <summary>
            Adds cart items selected by itemSelector predicate to constructed delivery.
            </summary>
            <param name="cart">Cart to add items from.</param>
            <param name="itemSelector">Predicate deciding which items will be placed into delivery. 
            When null, all items are delivered.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.AddItem(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Adds a cart item to constructed delivery.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.CreateDeliveryItem(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Creates new delivery item for given shopping cart item.
            </summary>
            <param name="cartItem">Cart item to create delivery item for.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.SetDeliveryAddress(CMS.Ecommerce.IAddress)">
            <summary>
            Sets address where the delivery will be delivered to.
            </summary>
            <param name="address">Target address.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.SetShippingOption(CMS.Ecommerce.ShippingOptionInfo)">
            <summary>
            Sets shipping option used for currently constructed delivery.
            </summary>
            <param name="shippingOption">Shipping option to beused.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.SetWeight(System.Decimal)">
            <summary>
            Sets weight of whole delivery (package).
            </summary>
            <param name="weight">Weight.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.SetShippingDate(System.DateTime)">
            <summary>
            Sets date of shipping.
            </summary>
            <param name="shippingDate">Date of shipping.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.InitCustomData(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Adds custom data to constructed delivery.
            Override this method to add some custom data to constructed delivery.
            </summary>
            <param name="cart">Cart to get custom data from.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.SetCustomData(System.String,System.Object)">
            <summary>
            Sets custom data under given key.
            </summary>
            <param name="key">The Key</param>
            <param name="data">Custom data.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.AddContainerToCustomData(CMS.Base.IDataContainer)">
            <summary>
            Adds data container to custom data of constructed delivery.
            </summary>
            <param name="container">Data container to be added.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.InitItemCustomData(CMS.Ecommerce.DeliveryItem,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Adds custom data to constructed delivery item.
            </summary>
            <param name="deliveryItem">Delivery item to set custom data to.</param>
            <param name="cartItem">Cart item from which is delivery item constructed.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.GetItemCustomDataContainers(System.Collections.Generic.List{CMS.Base.IDataContainer},CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Override this method to populate supplied list with custom data containers.
            </summary>
            <param name="containers">List of containers to be populated.</param>
            <param name="cartItem">Cart item to process custom data for.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.BuildDelivery">
            <summary>
            Creates new delivery based on builder settings.
            </summary>
            <returns>New Delivery object.</returns>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.EnsureDefaultValues(CMS.Ecommerce.Delivery)">
            <summary>
            Sets shipping date of delivery to Now when no specific date was set.
            Override this method to ensure default data in constructed delivery. This method is called before new delivery is returned.
            </summary>
            <param name="delivery">Constructed delivery.</param>
        </member>
        <member name="M:CMS.Ecommerce.DefaultDeliveryBuilder.EnsureNewCustomDataInstance">
            <summary>
            Creates new instance of custom data container containing same values ale original.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DeliveryItem">
            <summary>
            Class representing one item in delivery.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DeliveryItem.#ctor(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Creates new delivery item using data from given cart item.
            </summary>
            <param name="cartItem">Cart item to init delivery item with.</param>
        </member>
        <member name="P:CMS.Ecommerce.DeliveryItem.Amount">
            <summary>
            Amount of this item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DeliveryItem.Product">
            <summary>
            Product represented by this item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DeliveryItem.CustomData">
            <summary>
            Custom data of this item.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.IItemTax">
            <summary>
            General interface used for implementing and calculating tax of the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxID">
            <summary>
            Tax class identifier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxDisplayName">
            <summary>
            Tax class display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxValue">
            <summary>
            Tax class value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxIsFlat">
            <summary>
            True - tax class value is flat, False (default) - tax class value is relative.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxIsGlobal">
            <summary>
            True - tax class value is set in global main currency, False (default) - tax class value is set in site main currency. 
            Takes effect only if tax class value is flat.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxZeroIfIDSupplied">
            <summary>
            True - if customer's tax ID is supplied, the tax value for the customer is zero. False (default) - value of the tax is calculated
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemTax.ItemTaxCustomData">
            <summary>
            Tax class custom data.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.BaseObjectSelector">
            <summary>
            Abstract class providing common functionality for ecommerce objects selectors.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.OnInit(System.EventArgs)">
            <summary>
            Initializes of the selector.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.OnLoad(System.EventArgs)">
            <summary>
            Load data for selector.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.OnAfterRetrieveData(System.Data.DataSet)">
            <summary>
            Called after selector data are retrieved.
            </summary>
            <param name="ds">Original selector data.</param>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.OnListItemCreated(System.Web.UI.WebControls.ListItem)">
            <summary>
            Called when item in selector is created.
            </summary>
            <param name="item">Created list item.</param>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.Reload(System.Boolean)">
            <summary>
            Reloads selector.
            </summary>
            <param name="forceReload">Indicates if data should be loaded from DB.</param>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.InitSelector">
            <summary>
            Initializes the selector.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.GetNewItemUrl">
            <summary>
            Returns url of quick add dialog.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.GetCodeName(System.Int32)">
            <summary>
            Converts ID of the object to its codename.
            </summary>
            <param name="id">ID of the object, which code name is to be returned</param>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.GetID(System.String,System.String)">
            <summary>
            Converts object name to ID on the specific site
            </summary>
            <param name="name">Name of the object to find ID for.</param>
            <param name="siteName">Name of the site.</param>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.GetObjectID(System.String,System.String)">
            <summary>
            Converts object name to ID on the specific site. If object is not found on specific site, global object are searched. 
            </summary>
            <param name="name">Name of the object to find ID for.</param>
            <param name="siteName"></param>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.GenerateWhereCondition">
            <summary>
            Generates where condition for uniselector.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.GenerateBaseWhere">
            <summary>
            Returns base where condition. This condition is applied always. 
            Returns empty where condition by default - override this method to generate custom condition.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.AppendExclusiveWhere(System.String)">
            <summary>
            Appends restrictive part of where condition to given where condition.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.AppendInclusiveWhere(System.String)">
            <summary>
            Appends widening part of where condition to given where condition.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.AppendEnabledWhere(System.String)">
            <summary>
            Appends where restricting to enabled items.
            </summary>
            <param name="where">Original where condition to append enabled where to.</param>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.AppendAdditionalItemsWhere(System.String)">
            <summary>
            Appends where adding additional items.
            </summary>
            <param name="where">Original where condition to append additional where to.</param>
        </member>
        <member name="M:CMS.Ecommerce.BaseObjectSelector.AppendSelectedItemWhere(System.String)">
            <summary>
            Appends where condition including selected item.
            </summary>
            <param name="where">Original where condition to append where to.</param>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.ObjectType">
            <summary>
            Object type name of selected objects.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.EmptyObject">
            <summary>
            Empty info object of the same type as selected objects.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.CodeNameColumn">
            <summary>
            Name of the column containing code name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.IDColumn">
            <summary>
            Name of the column containing ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.SiteIDColumn">
            <summary>
            Name of the column containing ID of the site.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.EnabledColumn">
            <summary>
            Name of the column containing enabled flag.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.AllowCombineSiteAndGlobal">
            <summary>
            Indicates if objects can be combined site and global within one site. 
            False means that site can use only global or only site records.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.UniSelector">
            <summary>
            Getter to be overridden. Gets uniselector object used for selecting objects.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.StopProcessing">
            <summary>
            If true, control does not process the data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.Enabled">
            <summary>
            Gets or sets the enabled state of the selector.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.HasData">
            <summary>
            Indicates if selector has data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.ValueElementID">
            <summary>
            Returns ClientID of the dropdown list.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.DisplayOnlyEnabled">
            <summary>
            Allows to display only enabled items. Default value is true.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.AddAllItemsRecord">
            <summary>
            Gets or sets the value which determines, whether to add 'all' item record to the selector.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.AddNoneRecord">
            <summary>
            Determines whether to add 'none' item record to the selector.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.EnsureSelectedItem">
            <summary>
            Indicates whether selected item must be on the list despite of other settings. Default value is false.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.AdditionalItems">
            <summary>
            ID of items which have to be displayed. Use ',' or ';' as separator if more IDs required.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.AllowCreate">
            <summary>
            Indicates whether new button will be visible and creating of new object allowed.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.SiteID">
            <summary>
            Allows to display records only for specified site ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.AutoPostBack">
            <summary>
            Determines whether the AutoPostBack property of dropdown list should be enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.UseNameForSelection">
            <summary>
            Indicates whether code name is to be used for selecting items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.Value">
            <summary>
            Gets or sets the selected value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.SelectedID">
            <summary>
            Gets or sets the ID of selected item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.SelectedName">
            <summary>
            Gets or sets the codename of selected item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BaseObjectSelector.ValueDisplayName">
            <summary>
            Gets the display name of the value item. Returns null if display name is not available.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CheckBoxWithDropDown">
            <summary>
            CheckBoxWithDropDown control, inherited from CMSUserControl.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.pnlLbl">
            <summary>
            Panel for label. Using editing-form-label-cell class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.pnlDrp">
            <summary>
            Panel for dropdown. Using editing-form-value-cell class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.pnlDrpLbl">
            <summary>
            Panel for dropdown and label. Use form-group class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.pnlWrapper">
            <summary>
            Wrapping panel. Using form-horizontal class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.chckbox">
            <summary>
            Checkbox 
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.lblForDropdown">
            <summary>
            Label for dropdown.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.drpList">
            <summary>
            Dropdown list.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.mSelectedDropDownItem">
            <summary>
            Selected dropdown item.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.Value">
            <summary>
            Gets or sets value of control.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.CheckboxText">
            <summary>
            Gets or sets text next to checkbox input.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.CheckboxChecked">
            <summary>
            Gets or sets if checkbox input is checked.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.DropDownLabel">
            <summary>
            Gets or sets text next to dropdownlist.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.DropDownVisible">
            <summary>
            Gets or sets if dropdownlist and text is visible.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.DropDownItems">
            <summary>
            Gets or sets collection of items to be bound to dropdownlist.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.DropDownPrompt">
            <summary>
            Gets or sets default prompt message in dropdownlist.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CheckBoxWithDropDown.Enabled">
            <summary>
            Enables or Disables control.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CheckBoxWithDropDown.OnLoad(System.EventArgs)">
            <summary>
            Overrides OnLoad method. 
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CheckBoxWithDropDown.SetupControls">
            <summary>
            Setups and initializes control.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CheckBoxWithDropDown.InitializePanels">
            <summary>
            Initialize wrapping panels.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CheckBoxWithDropDown.LoadDefaultControlValues">
            <summary>
            Loads default values to control.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CheckBoxWithDropDown.chckbox_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Event fired after checkbox selection changed.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CheckBoxWithDropDown.drpList_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Event fired after dropdownlist selection changed.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CheckBoxWithDropDown.SelectedDropDownItem">
            <summary>
            Gets selected item in dropdownlist.
            </summary>
        </member>
        <member name="E:CMS.Ecommerce.CheckBoxWithDropDown.OnCheckBoxSelectionChanged">
            <summary>
            Event fired after checkbox selection changed.
            </summary>
        </member>
        <member name="E:CMS.Ecommerce.CheckBoxWithDropDown.OnDropDownSelectionChanged">
            <summary>
            Event fired after dropdownlist selection changed.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountStatusTag">
            <summary>
            Control for displaying discount status.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountStatusTag.#ctor(CMS.UIControls.ObjectTransformationDataProvider,CMS.Ecommerce.Discount)">
            <summary>
            Initializes a new instance of the DiscountStatusTag class.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="discount">The discount.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountStatusTag.OnPreRender(System.EventArgs)">
            <summary>
            Require coupons usage info if discount uses coupons.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountStatusTag.GetStatus(CMS.Ecommerce.Discount)">
            <summary>
            Returns discount status. Coupon codes usage info is used to prevent additional queries to coupon codes.
            </summary>
            <param name="discount"></param>
            <returns></returns>
        </member>
        <member name="P:CMS.Ecommerce.DiscountStatusTag.DataProvider">
            <summary>
            Data provider for coupons usage info.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountStatusTag.Discount">
            <summary>
            Discount object.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PriorityInlineEdit">
            <summary>
            Inline edit for discount priority.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PriorityInlineEdit.OnLoad(System.EventArgs)">
            <summary>
            Initialize value of textbox.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PriorityInlineEdit.OnUpdate(System.EventArgs)">
            <summary>
            Sets priority according discount type.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PriorityInlineEdit.ShowError(System.String)">
            <summary>
            Shows error in textbox and unigrid.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PriorityInlineEdit.Unigrid">
            <summary>
            Unigrid to reload after priority changed.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PriorityInlineEdit.PrioritizableObject">
            <summary>
            Edited object.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ProductOptionSelector">
            <summary>
            Base class of the option category sku selector control.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.LoadCategorySelectionControl">
            <summary>
            Reloads selection control according to the option category selection type.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.ReloadData">
            <summary>
            Reloads selection control data according to the option category data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.GetSelectedSKUOptions">
            <summary>
            Gets selected product options from the selection control.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.GetSelectedOptionsParameters">
            <summary>
            Gets selected product options parameters.
            </summary>
            <returns>List of Shopping Cart Item Parameters</returns>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.IsSelectionControlEmpty">
            <summary>
            Returns TRUE when selection control is empty or only '(none)' record is included, otherwise returns FALSE.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.HasSelectableOptions">
            <summary>
            Returns true if there is a choice of values in selection control.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.IsValid">
            <summary>
            Validates selected/entered product option. If it is valid, returns true, otherwise returns false.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.SetEnabledOptions(System.Collections.Generic.List{System.Int32})">
            <summary>
            Sets the specified options as enabled and other as selectable but disabled/grey through CSS style.
            </summary>
            <param name="optionIds">The option ids.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.RemoveDisabledOptions(System.Collections.Generic.List{System.Int32})">
            <summary>
            Removes disabled option from selector.
            </summary>
            <param name="enabledOptionIds">The enabled option ids.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.GetSelectionControl">
            <summary>
            Returns initialized selection control according to the specified selection type.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.GetPrice(System.Data.DataRow)">
            <summary>
            Recalculates and formats price.
            </summary>
            <param name="row">Data row to create price label for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.SetDefaultSKUOptions">
            <summary>
            Sets category default options as 'Selected' in selection control.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.LoadSKUOptions">
            <summary>
            Loads data (SKU options) to the selection control.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.GetProductOptions">
            <summary>
            Returns hash table with product options.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.SetEmptyInfoVisibility(System.Boolean)">
            <summary>
            Override in ascx.cs to handle no product options label in form
            </summary>
            <param name="visible">Is label "no product options" visible</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductOptionSelector.TrimMultipleChoices(System.String)">
            <summary>
            Returns only first option from multiple options set
            </summary>
            <param name="selectedProductOptions">Selected product options</param>
            <returns>Only one option</returns>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.SKUID">
            <summary>
            SKU ID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.SKU">
            <summary>
            Main SKU for options.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.CssClassFade">
            <summary>
            Gets or sets the CSS class to display options in selectors faded.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.CssClassNormal">
            <summary>
            Gets or sets the CSS class to display options in selectors normally.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.OptionCategoryId">
            <summary>
            Option category ID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.ShowOptionCategoryName">
            <summary>
            Indicates whether option category name should be displayed to the user.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.ShowOptionCategoryDescription">
            <summary>
            Indicates whether option category description should be displayed to the user.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.SelectionControl">
            <summary>
            Selection control according to the current option category selection type.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.OptionCategory">
            <summary>
            Option category object. It is loaded from option category datarow by default, if it is not specified it is loaded by option category id.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.LocalShoppingCartObj">
            <summary>
            Shopping cart object required for price formatting. Use this property when in CMSDesk.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.UseDefaultCurrency">
            <summary>
            TRUE - default currency is used for price formatting and no discounts and taxes are applied to price, by default it is set to FALSE.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.ShowPriceIncludingTax">
            <summary>
            TRUE - product option price is displayed including tax, FALSE - product option price is displayed without tax.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.ProductOptions">
            <summary>
            SKU data of all product options of the current option category
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.SelectedProductOptions">
            <summary>
            Selected Product Options to mark in the form
            If its NULL - values from DB record of option category will be marked
            If its String.Empty - no Options will be marked
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.ProductOptionsInDisabledVariants">
            <summary>
            Allows to set IDs of product options which will be ignored during getting options for selector.
            Primary used for ignoring options of disabled variants.
            If its NULL - no action will be done.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.TextOptionSKUID">
            <summary>
            SKUID of Text Option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductOptionSelector.ProductOptionsData">
            <summary>
            Dataset with the product options data which should be loaded to the product options selector.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SelectBundleInventoryType">
            <summary>
            Form control for bundle inventory selection.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SelectBundleInventoryType.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SelectBundleInventoryType.BundleInventoryType">
            <summary>
            Gets or sets the bundle inventory type.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SiteSeparatedObjectSelector">
            <summary>
            Abstract class providing common functionality for selectors offering site-separated objects.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SiteSeparatedObjectSelector.InitSelector">
            <summary>
            Initializes the selector.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SiteSeparatedObjectSelector.AppendExclusiveWhere(System.String)">
            <summary>
            Appends restrictive part of where condition to given where condition.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SiteSeparatedObjectSelector.AppendSiteWhere(System.String)">
            <summary>
            Appends site where to given where condition.
            </summary>
            <param name="where">Original where condition to append site where to.</param>
        </member>
        <member name="P:CMS.Ecommerce.SiteSeparatedObjectSelector.IncludeGlobalItems">
            <summary>
            Indicates whether global objects are to be offered.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SiteSeparatedObjectSelector.DisplaySiteItems">
            <summary>
            Indicates whether site records are to be offered. Default value is based on IncludeGlobalItems property.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SiteSeparatedObjectSelector.DisplayGlobalItems">
            <summary>
            Indicates whether site records are to be offered. Default value is based on IncludeGlobalItems property.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SiteSeparatedObjectSelector.SiteID">
            <summary>
            Allows to display records only for specified site ID. Use 0 for global objects. Default value is current site ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.TextBoxWithLabel">
            <summary>
            TextBoxWithLabel, inherited from CMSTextBox.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TextBoxWithLabel.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders text box and label.
            </summary>
            <param name="writer">HtmlTextWriter</param>
        </member>
        <member name="P:CMS.Ecommerce.TextBoxWithLabel.LabelCssClass">
            <summary>
            CSS class for label.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TextBoxWithLabel.LabelText">
            <summary>
            Label text.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TextBoxWithLabel.LabelFirst">
            <summary>
            Indicates if label has to be placed before text box.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.BaseCouponCodeInfoProvider`2">
            <summary>
            Base provider for MultiBuyCouponCodeInfoProvider and CouponCodeInfoProvider
            </summary>    
        </member>
        <member name="M:CMS.Ecommerce.BaseCouponCodeInfoProvider`2.#ctor(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Initializes a new instance of the BaseCouponCodeInfoProvider{TInfo, TProvider} class.
            </summary>
            <param name="typeInfo">Object type information</param>
        </member>
        <member name="M:CMS.Ecommerce.BaseCouponCodeInfoProvider`2.GetCouponUsageInfoMessage(System.Data.DataSet)">
            <summary>
            Returns formatted message about codes.
            </summary>
            <param name="codes">Coupon codes</param>
        </member>
        <member name="M:CMS.Ecommerce.BaseCouponCodeInfoProvider`2.GetCouponCodeUseCount(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>
            Gets info about how many coupons are available in specific discount and how many of them were already used.
            Returns dataset with one table containing CouponCodeDiscountID, Uses, UnlimitedCodeCount and Limit.
            </summary>
            <param name="discountIDs">IDs of discounts to get coupon counts for. Use null for all relevant discounts.</param>
            <param name="queryName">Name of the query to run.</param>
            <param name="discountIDColumnName">Name of the discount ID column.</param>       
        </member>
        <member name="M:CMS.Ecommerce.BaseCouponCodeInfoProvider`2.TryCheckDiscountPermissions(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean,System.Boolean@)">
            <summary>
            Checks user's read/modify discount permissions. Permission check result is stored in result property.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
            <param name="result">Check permissions result.</param>
            <returns>Returns true if permission type was handled; false otherwise</returns>
        </member>
        <member name="M:CMS.Ecommerce.BaseCouponCodeInfoProvider`2.CheckUniqueCode(System.Int32,System.String)">
            <summary>
            Checks if the code is unique.
            </summary>
            <param name="siteId">The site ID.</param>
            <param name="code">The coupon code.</param>       
        </member>
        <member name="T:CMS.Ecommerce.CouponCodeInfo">
            <summary>
            CouponCodeInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CouponCodeInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CouponCodeInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfo.#ctor">
            <summary>
            Constructor - Creates an empty CouponCodeInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CouponCodeInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfo.CheckUniqueCodeName">
            <summary>
            Checks if the object has unique code name. Returns true if the object has unique code name.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.CouponCodeInfo.CouponCodeID">
            <summary>
            Coupon code ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CouponCodeInfo.CouponCodeCode">
            <summary>
            Unique discount coupon code.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CouponCodeInfo.CouponCodeUseLimit">
            <summary>
            Indicates how many times the coupon code can be applied.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CouponCodeInfo.CouponCodeUseCount">
            <summary>
            Indicates how many times the code was applied.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CouponCodeInfo.CouponCodeDiscountID">
            <summary>
            ID of the coupon code parent discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CouponCodeInfo.CouponCodeLastModified">
            <summary>
            Date and time when coupon code was last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CouponCodeInfo.CouponCodeGUID">
            <summary>
            Coupon code unique identifier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CouponCodeInfo.UseLimitExceeded">
            <summary>
            Indicates that this code has exceeded its use limitation. Returns false for codes with no use limit.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CouponCodeInfoProvider">
            <summary>
            Class providing CouponCodeInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponCodes">
            <summary>
            Returns a query for all the CouponCodeInfo objects.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponCodes(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the CouponCodeInfo objects on specified site.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponCodeInfo(System.Int32)">
            <summary>
            Returns CouponCodeInfo with specified ID.
            </summary>
            <param name="id">CouponCodeInfo ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponCodeInfo(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns CouponCodeInfo with specified name.
            </summary>
            <param name="name">CouponCodeInfo name.</param>
            <param name="siteIdentifier">The site identifier.</param>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponCodeInfo(System.Guid)">
            <summary>
            Returns CouponCodeInfo with specified GUID.
            </summary>
            <param name="guid">CouponCodeInfo GUID.</param>                
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.SetCouponCodeInfo(CMS.Ecommerce.CouponCodeInfo)">
            <summary>
            Sets (updates or inserts) specified CouponCodeInfo.
            </summary>
            <param name="infoObj">CouponCodeInfo to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.DeleteCouponCodeInfo(CMS.Ecommerce.CouponCodeInfo)">
            <summary>
            Deletes specified CouponCodeInfo.
            </summary>
            <param name="infoObj">CouponCodeInfo to be deleted.</param>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.DeleteCouponCodeInfo(System.Int32)">
            <summary>
            Deletes CouponCodeInfo with specified ID.
            </summary>
            <param name="id">CouponCodeInfo ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponCodeUseCount(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets info about how many coupons are available in specific discount and how many of them were already used.
            Returns dataset with one table containing CouponCodeDiscountID, Uses, UnlimitedCodeCount and Limit.
            </summary>
            <param name="discountIDs">IDs of discounts to get coupon counts for. Use null for all relevant discounts.</param>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponUsageInfoMessage(CMS.Ecommerce.DiscountInfo)">
            <summary>
            Returns formatted message about codes.
            </summary>
            <param name="parent">Parent offer discount of coupon codes</param>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.CreateCoupon(CMS.Ecommerce.DiscountInfo,System.String,System.Int32)">
            <summary>
            Creates and saves new coupon for specified discount.
            NOTE: The uniqueness is not checked.
            </summary>
            <param name="discount">The discount.</param>
            <param name="code">The code.</param>
            <param name="numberOfUses">The number of uses.</param>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponCodesInternal">
            <summary>
            Returns a query for all the CouponCodeInfo objects.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponCodesInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the CouponCodeInfo objects on specified site.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponCodeInfoInternal(System.Int32)">
            <summary>
            Returns CouponCodeInfo with specified ID.
            </summary>
            <param name="id">CouponCodeInfo ID.</param>        
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponCodeInfoInternal(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns CouponCodeInfo with specified name on specified site.
            </summary>
            <param name="name">CouponCodeInfo name.</param>
            <param name="siteIdentifier">The site identifier.</param>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponCodeInfoInternal(System.Guid)">
            <summary>
            Returns CouponCodeInfo with specified GUID.
            </summary>
            <param name="guid">CouponCodeInfo GUID.</param>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.SetCouponCodeInfoInternal(CMS.Ecommerce.CouponCodeInfo)">
            <summary>
            Sets (updates or inserts) specified CouponCodeInfo.
            </summary>
            <param name="infoObj">CouponCodeInfo to be set.</param>        
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.DeleteCouponCodeInfoInternal(CMS.Ecommerce.CouponCodeInfo)">
            <summary>
            Deletes specified CouponCodeInfo.
            </summary>
            <param name="infoObj">CouponCodeInfo to be deleted.</param>        
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.GetCouponCodeUseCountInternal(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets info about how many coupons are available in specific discount and how many of them were already used.
            Returns dataset with one table containing CouponCodeDiscountID, Uses, UnlimitedCodeCount and Limit.
            </summary>
            <param name="discountIDs">IDs of discounts to get coupon counts for. Use null for all relevant discounts.</param>
        </member>
        <member name="M:CMS.Ecommerce.CouponCodeInfoProvider.CreateCouponInternal(CMS.Ecommerce.DiscountInfo,System.String,System.Int32)">
            <summary>
            Creates and saves new coupon for specified discount.
            NOTE: The uniqueness is not checked.
            </summary>
            <param name="discount">The discount.</param>
            <param name="code">The code.</param>
            <param name="numberOfUses">The number of uses.</param>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyCouponCodeInfo">
            <summary>
            MultiBuyCouponCodeInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.MultiBuyCouponCodeInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.MultiBuyCouponCodeInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfo.#ctor">
            <summary>
            Constructor - Creates an empty MultiBuyCouponCodeInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MultiBuyCouponCodeInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfo.CheckUniqueCodeName">
            <summary>
            Checks if the object has unique code name. Returns true if the object has unique code name.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyCouponCodeInfo.MultiBuyCouponCodeID">
            <summary>
            Multi buy coupon code ID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyCouponCodeInfo.MultiBuyCouponCodeCode">
            <summary>
            Unique product coupon code.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyCouponCodeInfo.MultiBuyCouponCodeUseLimit">
            <summary>
            Coupon usage is limited by inserted value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyCouponCodeInfo.MultiBuyCouponCodeUseCount">
            <summary>
            Multi buy coupon code use count
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyCouponCodeInfo.MultiBuyCouponCodeMultiBuyDiscountID">
            <summary>
            Multi buy coupon code multi buy discount ID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyCouponCodeInfo.MultiBuyCouponCodeLastModified">
            <summary>
            Multi buy coupon code last modified
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyCouponCodeInfo.MultiBuyCouponCodeGUID">
            <summary>
            Multi buy coupon code GUID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyCouponCodeInfo.UseLimitExceeded">
            <summary>
            Indicates that this code has exceeded its use limitation. Returns false for codes with no use limit.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider">
            <summary>
            Class providing MultiBuyCouponCodeInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetMultiBuyCouponCodes">
            <summary>
            Returns a query for all the MultiBuyCouponCodeInfo objects.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetMultiBuyCouponCodes(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the MultiBuyCouponCodeInfo objects on specified site.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetMultiBuyCouponCodeInfo(System.Int32)">
            <summary>
            Returns MultiBuyCouponCodeInfo with specified ID.
            </summary>
            <param name="id">MultiBuyCouponCodeInfo ID</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetMultiBuyCouponCodeInfo(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns MultiBuyCouponCodeInfo with specified name.
            </summary>
            <param name="name">MultiBuyCouponCodeInfo name.</param>
            <param name="siteIdentifier">The site identifier.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetMultiBuyCouponCodeInfo(System.Guid)">
            <summary>
            Returns MultiBuyCouponCodeInfo with specified GUID.
            </summary>
            <param name="guid">MultiBuyCouponCodeInfo GUID</param>                
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.SetMultiBuyCouponCodeInfo(CMS.Ecommerce.MultiBuyCouponCodeInfo)">
            <summary>
            Sets (updates or inserts) specified MultiBuyCouponCodeInfo.
            </summary>
            <param name="infoObj">MultiBuyCouponCodeInfo to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.DeleteMultiBuyCouponCodeInfo(CMS.Ecommerce.MultiBuyCouponCodeInfo)">
            <summary>
            Deletes specified MultiBuyCouponCodeInfo.
            </summary>
            <param name="infoObj">MultiBuyCouponCodeInfo to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.DeleteMultiBuyCouponCodeInfo(System.Int32)">
            <summary>
            Deletes MultiBuyCouponCodeInfo with specified ID.
            </summary>
            <param name="id">MultiBuyCouponCodeInfo ID</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetCouponCodeUseCount(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets info about how many coupons are available in specific bultibuy discount and how many of them were already used.
            Returns dataset with one table containing MultiBuyCouponCodeMultiBuyDiscountID, Uses, UnlimitedCodeCount and Limit.
            </summary>
            <param name="discountIDs">IDs of discounts to get coupon counts for. Use null for all relevant bultibuy discounts.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetMultiBuyCouponUsageInfoMessage(CMS.Ecommerce.MultiBuyDiscountInfo)">
            <summary>
            Returns formatted message about codes.
            </summary>
            <param name="parent">Parent offer multibuy discount of coupon codes</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.CreateCoupon(CMS.Ecommerce.MultiBuyDiscountInfo,System.String,System.Int32)">
            <summary>
            Creates and saves new coupon for specified discount.
            NOTE: The uniqueness is not checked.
            </summary>
            <param name="discount">The discount.</param>
            <param name="code">The code.</param>
            <param name="numberOfUses">The number of uses.</param>        
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetMultiBuyCouponCodesInternal">
            <summary>
            Returns a query for all the MultiBuyCouponCodeInfo objects.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetMultiBuyCouponCodesInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the MultiBuyCouponCodeInfo objects on specified site.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetMultiBuyCouponCodeInfoInternal(System.Int32)">
            <summary>
            Returns MultiBuyCouponCodeInfo with specified ID.
            </summary>
            <param name="id">MultiBuyCouponCodeInfo ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetMultiBuyCouponCodeInfoInternal(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns MultiBuyCouponCodeInfo with specified name on specified site.
            </summary>
            <param name="name">MultiBuyCouponCodeInfo name.</param>
            <param name="siteIdentifier">The site identifier.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetMultiBuyCouponCodeInfoInternal(System.Guid)">
            <summary>
            Returns MultiBuyCouponCodeInfo with specified GUID.
            </summary>
            <param name="guid">MultiBuyCouponCodeInfo GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.SetMultiBuyCouponCodeInfoInternal(CMS.Ecommerce.MultiBuyCouponCodeInfo)">
            <summary>
            Sets (updates or inserts) specified MultiBuyCouponCodeInfo.
            </summary>
            <param name="infoObj">MultiBuyCouponCodeInfo to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.DeleteMultiBuyCouponCodeInfoInternal(CMS.Ecommerce.MultiBuyCouponCodeInfo)">
            <summary>
            Deletes specified MultiBuyCouponCodeInfo.
            </summary>
            <param name="infoObj">MultiBuyCouponCodeInfo to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.GetMultiBuyCouponCodeUseCountInternal(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets info about how many coupons are available in specific multibuy discount and how many of them were already used.
            Returns dataset with one table containing MultiBuyCouponCodeMultiBuyDiscountID, Uses, UnlimitedCodeCount and Limit.
            </summary>
            <param name="discountIDs">IDs of discounts to get coupon counts for. Use null for all relevant multibuy discounts.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyCouponCodeInfoProvider.CreateCouponInternal(CMS.Ecommerce.MultiBuyDiscountInfo,System.String,System.Int32)">
            <summary>
            Creates and saves new coupon for specified discount.
            NOTE: The uniqueness is not checked.
            </summary>
            <param name="discount">The discount.</param>
            <param name="code">The code.</param>
            <param name="numberOfUses">The number of uses.</param>
        </member>
        <member name="T:CMS.Ecommerce.RandomCodeGenerator">
            <summary>
            Class generating random coupon codes according to specified pattern.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.RandomCodeGenerator.chars">
            <summary>
            Characters A-Z.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.RandomCodeGenerator.digits">
            <summary>
            Digits 0-9.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.RandomCodeGenerator.symbols">
            <summary>
            Symbols A-Z and 0-9.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.RandomCodeGenerator.pattern">
            <summary>
            Pattern of generated codes. It is set via constructor.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.RandomCodeGenerator.prefix">
            <summary>
            Prefix of codes. This string will be added at the beginning of all generated codes.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.RandomCodeGenerator.#ctor(System.String,System.String)">
            <summary>
            Initializes new instance of RandomCodeGenerator generating random codes starting with prefix. Format of codes is specified by codePattern
            parameter.
            </summary>
            <param name="codePattern">Pattern for codes. Hash # stands for random digit, dollar $ stands for random character and asterisk for any alphanumeric symbol.
            Other characters are copied to output.</param>
            <param name="codePrefix">Every generated code will start with this prefix.</param>
        </member>
        <member name="M:CMS.Ecommerce.RandomCodeGenerator.GenerateCode">
            <summary>
            Generates one new unique code. Throws exception when not able to generate unique code within 10 attempts.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.RandomCodeGenerator.TryGenerateCode">
            <summary>
            Generates one random code.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.RandomCodeGenerator.RememberCode(System.String)">
            <summary>
            Remembers given code as already generated.
            </summary>
            <param name="code">Code to be remembered.</param>
        </member>
        <member name="M:CMS.Ecommerce.RandomCodeGenerator.CodeIsUnique(System.String)">
            <summary>
            Checks if given code is unique - not generated yet and accepted by CodeChecker function.
            </summary>
            <param name="code">Code to be checked.</param>
        </member>
        <member name="M:CMS.Ecommerce.RandomCodeGenerator.GetRandomNumber(System.Int32)">
            <summary>
            Returns random number from 0 to max (exclusive).
            </summary>
            <param name="max">Exclusive upper bound of the random number returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.RandomCodeGenerator.GetRandomDigit">
            <summary>
            Returns random digit 0-9.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.RandomCodeGenerator.GetRandomChar">
            <summary>
            Returns random character A-Z.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.RandomCodeGenerator.GetRandomSymbol">
            <summary>
            Returns random symbol 0-9 or A-Z.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.RandomCodeGenerator.GetSymbolForType(System.Char)">
            <summary>
            Returns charType. Override this method to add custom character sets.
            </summary>
            <param name="charType">Character type to generate random character for.</param>
        </member>
        <member name="P:CMS.Ecommerce.RandomCodeGenerator.CodeChecker">
            <summary>
            Function returning true when its parameter represents acceptable code.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.Discount">
            <summary>
            Facade class for MultiBuyDiscountInfo and DiscountInfo
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.Discount.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the facade class.
            </summary>
            <param name="discount">The discount.</param>
            <exception cref="T:System.ArgumentNullException">Thrown in case of parameter discount is null.</exception>
            <exception cref="T:System.InvalidCastException">Thrown in case of unsupported type is passed through discount parameter. Supported types: MultiBuyDiscountInfo, DiscountInfo.</exception>
        </member>
        <member name="M:CMS.Ecommerce.Discount.AcceptsCoupon(System.String,System.Boolean)">
            <summary>
            Indicates if given coupon code is suitable for this discount. Returns false if this discount has no codes assigned.
            </summary>
            <param name="couponCode">Code to be checked</param>
            <param name="ignoreUseLimit">Indicates if use limitation is to be ignored.</param>
        </member>
        <member name="M:CMS.Ecommerce.Discount.CreateCoupon(System.String,System.Int32)">
            <summary>
            Creates and saves new coupon for this discount.
            NOTE: The uniqueness is not checked.
            </summary>        
            <param name="code">The code.</param>
            <param name="numberOfUses">The number of uses.</param>
        </member>
        <member name="M:CMS.Ecommerce.Discount.op_Implicit(CMS.Ecommerce.Discount)~CMS.Ecommerce.MultiBuyDiscountInfo">
            <summary>
            Implicit conversion
            </summary>
            <param name="discount">The discount to convert.</param>        
        </member>
        <member name="M:CMS.Ecommerce.Discount.op_Implicit(CMS.Ecommerce.Discount)~CMS.Ecommerce.DiscountInfo">
            <summary>
            Implicit conversion
            </summary>
            <param name="discount">The discount to convert.</param>      
        </member>
        <member name="M:CMS.Ecommerce.Discount.op_Implicit(CMS.Ecommerce.MultiBuyDiscountInfo)~CMS.Ecommerce.Discount">
            <summary>
            Implicit conversion
            </summary>
            <param name="discount">The discount to convert.</param>        
        </member>
        <member name="M:CMS.Ecommerce.Discount.op_Implicit(CMS.Ecommerce.DiscountInfo)~CMS.Ecommerce.Discount">
            <summary>
            Implicit conversion
            </summary>
            <param name="discount">The discount to convert.</param>      
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountID">
            <summary>
            Discount ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountDisplayName">
            <summary>
            Discount display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountName">
            <summary>
            Discount name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountDescription">
            <summary>
            Discount description.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountEnabled">
            <summary>
            Discount enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountIsFlat">
            <summary>
            True - discount value is flat, False - discount value is relative. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountValue">
            <summary>
            Discount value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountUsesCoupons">
            <summary>
            Indicates if this discount is applicable only with discount coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountValidFrom">
            <summary>
            Discount valid from.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountValidTo">
            <summary>
            Discount valid to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountApplyFurtherDiscounts">
            <summary>
            Indicates that further discounts (in order of DiscountOrder) are to be processed.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountOrder">
            <summary>
            Order of this discount among other discounts.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountCustomerRestriction">
            <summary>
            Type of discount customer restriction.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountRoles">
            <summary>
            Discount roles to apply discount for. Is dependable on DiscountCustomerRestriction configuration.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountGUID">
            <summary>
            Discount GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountLastModified">
            <summary>
            Discount last modified date and time.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountSiteID">
            <summary>
            Discount site ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.IsValid">
            <summary>
            Determines whether discount is valid. Discount must be currently running and have usable coupon codes if discount uses coupons.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.IsRunning">
            <summary>
            Determines whether discount is currently running. ValidFrom and ValidTo properties are compared to current date/time.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.CouponCodes">
            <summary>
            Returns coupon codes associated with this discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.HasOrUsesCoupon">
            <summary>
            Indicates if discount uses coupon or has some coupons defined.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountStatus">
            <summary>
            Discount status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.Discount.DiscountType">
            <summary>
            Gets the type of the discount.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountApplicationEnum">
            <summary>
            Discount application enumeration.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountApplicationEnum.Order">
            <summary>
            Entire order.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountApplicationEnum.Products">
            <summary>
            Products.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountApplicationEnum.Shipping">
            <summary>
            Shipping.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountCustomerEnum">
            <summary>
            Discount customer selection enumeration.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountCustomerEnum.All">
            <summary>
            All customers
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountCustomerEnum.RegisteredUsers">
            <summary>
            Registered customers
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountCustomerEnum.SelectedRoles">
            <summary>
            Selected roles
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountInfo">
            <summary>
            DiscountInfo data container class.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.IConditionalDiscount">
            <summary>
            Represents discount which is applicable only if specific macro condition is met.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.IItemDiscount">
            <summary>
            General interface used for implementing and calculating discount of the shopping cart item.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.IItemDiscount.ApplyTogetherWith(CMS.Ecommerce.IItemDiscount)">
            <summary>
            Returns true if this discount is to be applied on the same base as the given discount.
            False indicates that discounts are to be applied one after another.
            </summary>
            <param name="discount">Examined discount.</param>
        </member>
        <member name="M:CMS.Ecommerce.IItemDiscount.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,System.Double)">
            <summary>
            Calculates discount based on basePrice for given shoppingcart item.
            </summary>
            <param name="item">Item to apply discount to.</param>
            <param name="basePrice">Base price to apply discount to. It is the item price with all previous discounts applied.</param>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountType">
            <summary>
            Discount type.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountID">
            <summary>
            Discount identifier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountDisplayName">
            <summary>
            Discount display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountValue">
            <summary>
            Discount value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountIsFlat">
            <summary>
            True - discount value is flat, False - discount value is relative.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountIsGlobal">
            <summary>
            True - says that discounts value is set in global main currency, False - says that discounts value is set in site main currency. 
            Takes effect only if discount value is flat.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IItemDiscount.ItemDiscountedUnits">
            <summary>
            Number of units the discount should be applied to
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.IConditionalDiscount.LogUseOnce(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Informs this discount that it was applied for given cart in context of specified product.
            </summary>
            <param name="cart">Shopping cart where the discount is used.</param>
            <param name="item">Cart item on which the discount was applied. Use null if discount is not applied to any particular item.</param>
        </member>
        <member name="P:CMS.Ecommerce.IConditionalDiscount.DiscountProductCondition">
            <summary>
            Macro condition regarding products which must be satisfied to be able to use discount
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IConditionalDiscount.DiscountCartCondition">
            <summary>
            Macro condition regarding shopping cart which must be satisfied to be able to use discount
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IConditionalDiscount.ApplyFurtherDiscounts">
            <summary>
            Indicates that further discounts (in order of DiscountOrder) are to be processed.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IConditionalDiscount.DiscountItemOrder">
            <summary>
            Discount order used to define its priority (1 is the highest priority).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IConditionalDiscount.DiscountItemMinOrderAmount">
            <summary>
            Minimum order discount amount.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ICanLogDiscountUsage">
            <summary>
            Interface for discount-like object that is able to log it was used.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ICanLogDiscountUsage.LogUseOnce(System.String)">
            <summary>
            Informs this discount that it was applied.
            </summary>
            <param name="couponCode">The coupon code that was used for discount application.</param>
        </member>
        <member name="T:CMS.Ecommerce.IPrioritizable">
            <summary>
            Interface providing access to priority of object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.IPrioritizable.TryUpdatePriority(System.Double)">
            <summary>
            Updates object priority and returns update result.
            </summary>
            <param name="newPriority">New priority</param>
            <returns>Update result should contain error message or null if update succeeded.</returns>
        </member>
        <member name="P:CMS.Ecommerce.IPrioritizable.Priority">
            <summary>
            Object priority.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ICanUseDiscountCoupons">
            <summary>
            Interface for discount-like object that is able to use coupons.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ICanUseDiscountCoupons.AcceptsCoupon(System.String,System.Boolean)">
            <summary>
            Indicates if given coupon code is suitable for this discount. Returns false if this discount has no codes assigned.
            </summary>
            <param name="couponCode">Code to be checked</param>
            <param name="ignoreUseLimit">Indicates if use limitation is to be ignored.</param>
        </member>
        <member name="P:CMS.Ecommerce.ICanUseDiscountCoupons.DiscountUsesCoupons">
            <summary>
            Indicates if discount is applicable only with discount coupon.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.AcceptsCoupon(System.String,System.Boolean)">
            <summary>
            Indicates if given coupon code is suitable for this discount. Returns false if this discount has no codes assigned.
            </summary>
            <param name="couponCode">Code to be checked</param>
            <param name="ignoreUseLimit">Indicates if use limitation is to be ignored.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.#ctor">
            <summary>
            Constructor - Creates an empty DiscountInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DiscountInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.DeleteObject">
            <summary>
            Deletes the discount using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.SetObject">
            <summary>
            Updates the discount using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.ApplyTogetherWith(CMS.Ecommerce.IItemDiscount)">
            <summary>
            Returns true if this discount is to be applied on the same base as the given discount.
            False indicates that discounts are to be applied one after another. False is returned 
            also when discount parameter is null.
            </summary>
            <param name="discount">Examined discount.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,System.Double)">
            <summary>
            Calculates discount based on basePrice for given shoppingcart item.
            </summary>
            <param name="item">Item to apply discount to.</param>
            <param name="basePrice">Base price to apply discount to. It is the item price with all previous discounts applied.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.LogUseOnce(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Logs the use of this discount. Decrements used coupon code use count.
            </summary>
            <param name="cart">Shopping cart where the discount is used.</param>
            <param name="item">Cart item on which the discount was applied. Use null if discount is not applied to any particular item.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.LogUseOnce(System.String)">
            <summary>
            Informs this discount that it was applied.
            </summary>
            <param name="couponCode">The coupon code that was used for discount application.</param>       
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.TryUpdatePriority(System.Double)">
            <summary>
            Updates discount priority.
            </summary>
            <param name="priority">New priority</param>
            <returns>Error message (null if succeeded)</returns>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountID">
            <summary>
            Discount ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountDisplayName">
            <summary>
            Discount display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountName">
            <summary>
            Discount name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountDescription">
            <summary>
            Discount description.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountEnabled">
            <summary>
            Discount enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountIsFlat">
            <summary>
            True - discount value is flat, False - discount value is relative. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountValue">
            <summary>
            Discount value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountUsesCoupons">
            <summary>
            Indicates if this discount is applicable only with discount coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountValidFrom">
            <summary>
            Discount valid from.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountValidTo">
            <summary>
            Discount valid to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountProductCondition">
            <summary>
            Macro condition to restrict this discount to particular products only.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountCartCondition">
            <summary>
            Macro condition to restrict this discount based on shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountApplyFurtherDiscounts">
            <summary>
            Indicates that further discounts (in order of DiscountOrder) are to be processed.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountOrder">
            <summary>
            Order of this discount among other discounts.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountOrderAmount">
            <summary>
            Order price to limit application of discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountCustomerRestriction">
            <summary>
            Type of discount customer restriction.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountApplyTo">
            <summary>
            Indicates what kind of objects are the discounts applicable to. Discount can be applied to orders or products.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountRoles">
            <summary>
            Discount roles to apply discount for. Is dependable on DiscountCustomerRestriction configuration.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountGUID">
            <summary>
            Discount GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountLastModified">
            <summary>
            Discount last modified date and time.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountSiteID">
            <summary>
            Discount site ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.IsValid">
            <summary>
            Determines whether discount is valid. Discount must be currently running and have usable coupon codes if discount uses coupons.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.IsRunning">
            <summary>
            Determines whether discount is currently running. ValidFrom and ValidTo properties are compared to current date/time.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.CouponsUseLimitExceeded">
            <summary>
            Indicates that all coupon codes has exceeded its use limitation. Returns false for discounts without coupon codes.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.IsApplicableToOrders">
            <summary>
            Indicates whether this discount can be applied to whole orders.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.IsApplicableToShipping">
            <summary>
            Indicates whether this discount can be applied to shipping price.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.IsCatalogDiscount">
            <summary>
            Indicates that this discount is catalog kind of discount. 
            This means that discount does not need shopping cart data to be applied.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.CouponCodes">
            <summary>
            Returns coupon codes associated with this discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.HasOrUsesCoupon">
            <summary>
            Indicates if discount uses coupon or has some coupons defined.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountStatus">
            <summary>
            Discount status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.ItemDiscountType">
            <summary>
            Discount type. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.ItemDiscountID">
            <summary>
            Discount identifier. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.ItemDiscountDisplayName">
            <summary>
            Discount display name. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.ItemDiscountValue">
            <summary>
            Discount value. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.ItemDiscountIsFlat">
            <summary>
            True - discount value is flat, False - discount value is relative. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.ItemDiscountIsGlobal">
            <summary>
            True - says that discounts value is set in global main currency, False - says that discounts value is set in site main currency. 
            Takes effect only if discount value is flat. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.ItemDiscountedUnits">
            <summary>
            Number of units the discount should be applied to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.ApplyFurtherDiscounts">
            <summary>
            Indicates that discounts following this one in order of increasing DiscountOrder value are to be applied.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountItemOrder">
            <summary>
            Discount order used to define its priority (1 is the highest priority). Corresponds to DiscountOrder property.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.DiscountItemMinOrderAmount">
            <summary>
            Order price to limit application of discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountInfo.Priority">
            <summary>
            Discount priority.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountInfoProvider">
            <summary>
            Class providing DiscountInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetDiscountInfo(System.Int32)">
            <summary>
            Returns discount with specified ID.
            </summary>
            <param name="discountId">Discount ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetDiscountInfo(System.String,System.String)">
            <summary>
            Returns discount with specified name.
            </summary>
            <param name="discountName">Discount name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.SetDiscountInfo(CMS.Ecommerce.DiscountInfo)">
            <summary>
            Sets (updates or inserts) specified discount.
            </summary>
            <param name="discountObj">Discount to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.DeleteDiscountInfo(CMS.Ecommerce.DiscountInfo)">
            <summary>
            Deletes specified discount.
            </summary>
            <param name="discountObj">Discount to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.DeleteDiscountInfo(System.Int32)">
            <summary>
            Deletes discount with specified ID.
            </summary>
            <param name="discountId">Discount ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetDiscounts">
            <summary>
            Returns the query for all discounts.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetDiscounts(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all discounts for specified site.
            </summary>
            <param name="siteId">Site ID</param>  
            <param name="onlyEnabled">True - only enable discounts are returned.
            False - both enabled and disabled discounts are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetDiscounts(CMS.Ecommerce.DiscountsParameters)">
            <summary>
            Returns dataset of all discounts for specified conditions.
            </summary>
            <param name="parameters">Parameters to return discounts for.</param>
            <returns>Dataset of discounts</returns>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.ValidateDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountInfo)">
            <summary>
            Returns True if discount is valid and can be applied to the specified shopping cart item, otherwise returns False.
            </summary>
            <param name="item">Shopping cart item to which the discount should be applied</param>
            <param name="discount">Discount data</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountInfo,System.Double)">
            <summary>
            Calculates shopping cart item unit discount after the specified discount is applied.
            </summary>
            <param name="item">Shopping cart item to which the discount should be applied</param>
            <param name="discount">Discount data</param>
            <param name="basePrice">Price to apply discount to.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.RecalculateDiscounts(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates catalog discount values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.IsUserAuthorizedToModifyDiscount(System.String,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to modify discount.
            </summary>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.IsUserAuthorizedToReadDiscount(CMS.DataEngine.SiteInfoIdentifier,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to read discount.
            </summary>
            <param name="site">Site identifier</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetCatalogDiscountsFilter(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns ProductDiscountsFilter for given shopping cart. This filter will be used for displaying product catalog.
            </summary>
            <param name="cart">Shopping cart to return filter for.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetCartDiscountsFilter(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns CartDiscountsFilter for given shopping cart. This filter will be used during shopping cart evaluation.
            </summary>
            <param name="cart">Shopping cart to return filter for.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.LogDiscountUseOnce(CMS.Ecommerce.DiscountInfo,CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Logs the use of given discount in given cart for specified product if present.
            </summary>
            <param name="discount">Used discount.</param>
            <param name="cart">Shopping cart where the discount is used.</param>
            <param name="item">Cart item on which the discount was applied. Use null if discount is not applied to any particular item.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.LogDiscountUseOnce(CMS.Ecommerce.DiscountInfo,System.String)">
            <summary>
            Informs this discount that it was applied.
            </summary>
            <param name="discount">The discount.</param>
            <param name="couponCode">The coupon code that was used for discount application.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetRunningDiscounts(CMS.DataEngine.SiteInfoIdentifier,System.DateTime,System.Nullable{CMS.Ecommerce.DiscountApplicationEnum})">
            <summary>
            Gets running discounts on given sites in defined time. If discount uses coupons, only discounts with usable coupons are returned.
            </summary>
            <param name="site">Site to get active discounts for.</param>
            <param name="date">Time when discount should be active.</param>
            <param name="discountApplicationEnum">Type of discount which will be selected. If null all types are selected.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetDiscountInfoInternal(System.Int32)">
            <summary>
            Returns discount with specified ID.
            </summary>
            <param name="discountId">Discount ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetDiscountInfoInternal(System.String,System.String)">
            <summary>
            Returns discount with specified name. If site discount is not found and global discounts are allowed, tries to search for global discount with the same name.
            </summary>
            <param name="discountName">Discount name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.SetDiscountInfoInternal(CMS.Ecommerce.DiscountInfo)">
            <summary>
            Sets (updates or inserts) specified discount.
            </summary>
            <param name="discountObj">Discount to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.DeleteDiscountInfoInternal(CMS.Ecommerce.DiscountInfo)">
            <summary>
            Deletes specified discount.
            </summary>
            <param name="discountObj">Discount to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetDiscountsInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all discounts for specified site.
            </summary>
            <param name="siteId">Site ID</param>  
            <param name="onlyEnabled">True - only enable discounts are returned.
            False - both enabled and disabled discounts are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetDiscountsInternal(CMS.Ecommerce.DiscountsParameters)">
            <summary>
            Returns dataset of all discounts for specified conditions.
            </summary>
            <param name="parameters">Parameters to return discounts for.</param>
            <returns>Dataset of discounts</returns>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.ValidateDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountInfo)">
            <summary>
            Returns True if discount is valid and can be applied to the specified shopping cart item, otherwise returns False.
            </summary>
            <param name="item">Shopping cart item to which the discount should be applied</param>
            <param name="discount">Discount data</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.CalculateUnitDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountInfo,System.Double)">
            <summary>
            Validates discount and calculates shopping cart item unit discount after the discount is applied.
            </summary>
            <param name="item">Shopping cart item to which the discount should be applied</param>
            <param name="discount">Discount data</param>
            <param name="basePrice">Price to apply discount to.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.RecalculateDiscountsInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates catalog discount values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetCatalogDiscountsFilterInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns ProductDiscountsFilter for given shopping cart. This filter will be used for displaying product catalog.
            </summary>
            <param name="cart">Shopping cart to return filter for.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetCartDiscountsFilterInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns CartDiscountsFilter for given shopping cart. This filter will be used during shopping cart evaluation.
            </summary>
            <param name="cart">Shopping cart to return filter for.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.LogDiscountUseOnceInternal(CMS.Ecommerce.DiscountInfo,CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Logs the use of given discount in given cart for specified product if present.
            </summary>
            <param name="discount">Used discount.</param>
            <param name="cart">Shopping cart where the discount is used.</param>
            <param name="item">Cart item on which the discount was applied. Use null if discount is not applied to any particular item.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.LogDiscountUseOnceInternal(CMS.Ecommerce.DiscountInfo,System.String)">
            <summary>
            Informs this discount that it was applied.
            </summary>
            <param name="discount">The discount.</param>
            <param name="couponCode">The coupon code that was used for discount application.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountInfoProvider.GetRunningDiscountsInternal(CMS.DataEngine.SiteInfoIdentifier,System.DateTime,System.Nullable{CMS.Ecommerce.DiscountApplicationEnum})">
            <summary>
            Gets running discounts on given sites in defined time. If discount uses coupons, only discounts with usable coupons are returned.
            </summary>
            <param name="site">Site to get active discounts for.</param>
            <param name="date">Time when discount should be active.</param>
            <param name="discountApplicationEnum">Type of discount which will be selected. If null all types are selected.</param>
        </member>
        <member name="T:CMS.Ecommerce.DiscountsFilterBase">
            <summary>
            Base class for discount filters.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountsFilterBase.FilterDiscounts(System.Collections.Generic.IEnumerable{CMS.Ecommerce.IConditionalDiscount})">
            <summary>
            Returns discounts for which method DiscountIsUsable returns true. 
            Filtering stops when the first discount without ApplyFurtherDiscounts flag found.
            </summary>
            <param name="discounts">Discounts to be filtered.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountsFilterBase.DiscountIsUsable(CMS.Ecommerce.IConditionalDiscount)">
            <summary>
            Returns true if condition in given discount is satisfied using Resolver object.
            </summary>
            <param name="discount">Discount to be evaluated.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountsFilterBase.GetCondition(CMS.Ecommerce.IConditionalDiscount)">
            <summary>
            Returns condition for given discount. 
            </summary>
            <param name="discount">Discount to get discount for.</param>
        </member>
        <member name="P:CMS.Ecommerce.DiscountsFilterBase.Resolver">
            <summary>
            Macro resolver to be used for resolving discount conditions.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountsParameters">
            <summary>
            Represents set of discounts parameters used e.g. for discounts filtering and querying.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountsParameters.SiteID">
            <summary>
            ID of the site to which discounts belong.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountsParameters.Enabled">
            <summary>
            Specifies if discounts are enabled. DiscountEnabled flag is irrelevant when null.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountsParameters.DueDate">
            <summary>
            Date and time when discounts are to be valid. Date is irrelevant when null.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountsParameters.ForPublicUsers">
            <summary>
            Allows to specify discounts which can be used by public users.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountsParameters.CouponCodes">
            <summary>
            List of coupon codes. Null means that codes are irrelevant. Empty list means that discounts do not need coupons (only discount that doesn't use coupons).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountsParameters.IgnoreUseLimit">
            <summary>
            Indicates if coupon codes use limit will be ignored.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountStatusEnum">
            <summary>
            Discount status enumerator.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountStatusEnum.Disabled">
            <summary>
            Discount is disabled.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountStatusEnum.Active">
            <summary>
            Discount is active.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountStatusEnum.NotStarted">
            <summary>
            Discount has not started yet.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountStatusEnum.Finished">
            <summary>
            Discount is finished.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountStatusEnum.Incomplete">
            <summary>
            Discount is incomplete. (Uses coupons but no coupons created)
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountTypeEnum">
            <summary>
            Discount type.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountTypeEnum.DiscountCoupon">
            <summary>
            Discount coupon
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountTypeEnum.VolumeDiscount">
            <summary>
            Volume discount
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountTypeEnum.CustomDiscount">
            <summary>
            Custom discount
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountTypeEnum.Discount">
            <summary>
            General discount 
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountTypeEnum.CatalogDiscount">
            <summary>
            Catalog discount 
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountTypeEnum.ShippingDiscount">
            <summary>
            Shipping discount 
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountTypeEnum.OrderDiscount">
            <summary>
            Order discount 
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountTypeEnum.MultibuyDiscount">
            <summary>
            Multibuy discount 
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyDiscountsReport">
            <summary>
            Discount report contains useful information about applied discounts
            </summary>    
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsReport.GetCartItemDiscountNames">
            <summary>
            Gets the cart item discounts dictionary where key is cart item ID and value is list of discount names.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsReport.#ctor(System.Collections.Generic.List{CMS.Ecommerce.DiscountSummaryItem},System.Collections.Generic.Dictionary{CMS.Ecommerce.IMultiBuyDiscount,System.Collections.Generic.Dictionary{CMS.Ecommerce.ShoppingCartItemInfo,System.Int32}})">
            <summary>
            Initializes a new instance of the MultiBuyDiscountsReport class.
            </summary>
            <param name="discountsSummary">Discounts summary.</param>
            <param name="discountApplications">Discount applications.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsReport.GetAppliedDiscounts">
            <summary>
            Returns all applied discounts.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountsReport.DiscountsSummary">
            <summary>
            Gets the applied multi buy discounts summary.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ItemDiscount">
            <summary>
            Class representing custom discount which should be applied to the specified shopping cart item. It implements IItemDiscount interface.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ItemDiscount.ApplyTogetherWith(CMS.Ecommerce.IItemDiscount)">
            <summary>
            Returns false. Item discounts are applied on result of previous discounts application.
            </summary>
            <param name="discount">Examined discount.</param>
        </member>
        <member name="M:CMS.Ecommerce.ItemDiscount.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,System.Double)">
            <summary>
            Calculates discount based on basePrice for given shoppingcart item.
            </summary>
            <param name="item">Item to apply discount to.</param>
            <param name="basePrice">Base price to apply discount to. It is the item price with all previous discounts applied.</param>
        </member>
        <member name="M:CMS.Ecommerce.ItemDiscount.#ctor">
            <summary>
            Constructor - Creates an empty ItemDiscount object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ItemDiscount.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Creates a new ItemDiscount object from serialized data.
            </summary>
            <param name="info">Stores all the data needed to serialize or deserialize the object</param>
            <param name="context">Describes the source and destination of a given serialized stream</param>
        </member>
        <member name="M:CMS.Ecommerce.ItemDiscount.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountType">
            <summary>
            Type of the discount. 'Custom discount' type is set by default.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountID">
            <summary>
            Discount unique identifier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountDisplayName">
            <summary>
            Discount display name which is displayed to the customers in shopping cart item price detail dialog.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountValue">
            <summary>
            Discount value. It can be either relative or flat according to the ItemDiscountIsFlat property.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountIsFlat">
            <summary>
            True - discount value is flat, False (default) - discount value is relative.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountIsGlobal">
            <summary>
            True - discount value is set in global main currency, False (default) - discount value is set in site main currency. 
            Takes effect only if discount value is flat.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountedUnits">
            <summary>
            Number of units the discount should be applied to
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemDiscount.ItemDiscountCustomData">
            <summary>
            Discount custom data.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ItemDiscountProvider">
            <summary>
            Class providing calculation of custom discounts.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ItemDiscountProvider.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount,System.Double)">
            <summary>
            Calculates value of the unit discount when it is applied to the given shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="discount">Discount data</param>       
            <param name="basePrice">Price to apply discount to.</param>
        </member>
        <member name="T:CMS.Ecommerce.CartDiscountsFilter">
            <summary>
            Allows to filter list of conditional cart discounts according to its conditions and stop processing flag.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CartDiscountsFilter.#ctor(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="cart">Shopping cart object to be used for resolving cart discounts.</param>
        </member>
        <member name="M:CMS.Ecommerce.CartDiscountsFilter.Filter(System.Collections.Generic.IEnumerable{CMS.Ecommerce.IConditionalDiscount},System.Double)">
            <summary>
            Filters given discounts and leaves only those which conditions and min amounts are met.
            </summary>
            <param name="discounts">Conditional discounts to be filtered.</param>
            <param name="priceLimit">Only discounts with lower minimal amount than priceLimit will be left. Parameter is ignored when set negative.</param>
        </member>
        <member name="M:CMS.Ecommerce.CartDiscountsFilter.ApplyMinOrderAmountFilter(System.Collections.Generic.IEnumerable{CMS.Ecommerce.IConditionalDiscount},System.Double)">
            <summary>
            Filters given discounts and leaves only those which discount minimum order amount is less than total item price with catalog and order discounts applied.
            </summary>
            <param name="discounts">Conditional discounts to be filtered.</param>
            <param name="orderPrice">Total order price.</param>
        </member>
        <member name="M:CMS.Ecommerce.CartDiscountsFilter.GetCondition(CMS.Ecommerce.IConditionalDiscount)">
            <summary>
            Returns DiscountCartCondition from given discount object.
            </summary>
            <param name="discount">Discount to get cart condition from.</param>
        </member>
        <member name="T:CMS.Ecommerce.IMultiBuyDiscount">
            <summary>
            Interface for discounts in form: "Buy N units of these products... and get M unit of these products for free".
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.IMultiBuyDiscount.Init">
            <summary>
            Sets discount to its initial state.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.IMultiBuyDiscount.PrioritizeItems(System.Collections.Generic.List{CMS.Ecommerce.ShoppingCartItemInfo})">
            <summary>
            Sorts cart items according to priority. Places items preferred to be discounted on the beginning of list.
            </summary>
            <param name="items">Cart items to prioritize.</param>
        </member>
        <member name="M:CMS.Ecommerce.IMultiBuyDiscount.IsBasedOn(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Indicates if this discount is based on given cart item, i.e. this method returns true for items needed 
            to be in the cart to be eligible to get this discount.
            </summary>
            <param name="item">Item to check.</param>
        </member>
        <member name="M:CMS.Ecommerce.IMultiBuyDiscount.IsApplicableOn(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Indicates if this discount is affecting the price of given cart item, i.e. this method returns true for items 
            discounted by this discount.
            </summary>
            <param name="item">Item to check.</param>
        </member>
        <member name="M:CMS.Ecommerce.IMultiBuyDiscount.GetMissingProducts">
            <summary>
            Returns IDs of SKUs which could be discounted if present in cart. Most important products go first.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.IMultiBuyDiscount.AcceptApplication(CMS.Ecommerce.ShoppingCartItemInfo,System.Int32)">
            <summary>
            Notifies discount that it was applied on given amount of items.
            </summary>
            <param name="item">Discounted item. Null value means that discount was applied on product missing in cart <see cref="M:CMS.Ecommerce.IMultiBuyDiscount.GetMissingProducts"/>.</param>
            <param name="count">Number of discounted items.</param>
        </member>
        <member name="M:CMS.Ecommerce.IMultiBuyDiscount.AllowsMoreUses">
            <summary>
            Returns true if this discount can be used repeatedly.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IMultiBuyDiscount.DiscountName">
            <summary>
            Name of the multi buy discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IMultiBuyDiscount.Value">
            <summary>
            Discount value. Value is percentage of fix, based on value of <see cref="P:CMS.Ecommerce.IMultiBuyDiscount.IsFlat"/>.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IMultiBuyDiscount.IsFlat">
            <summary>
            True - discount value is fix, False - discount value is relative.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IMultiBuyDiscount.BasedOnUnitsCount">
            <summary>
            The number of products needed to enable this discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IMultiBuyDiscount.ApplyOnUnitsCount">
            <summary>
            The number of discounted units.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IMultiBuyDiscount.ApplyFurtherDiscounts">
            <summary>
            Indicates if further discounts are to be applied if this discount applies.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IMultiBuyDiscount.AutoAddEnabled">
            <summary>
            Indicates if product is added to cart automatically, the system adds product to shopping cart only when the discount is percentage and set 100 % off.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.IMultiBuyDiscountsApplicator">
            <summary>
            Interface implemented by applicators of multibuy discounts.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.IMultiBuyDiscountsApplicator.Reset">
            <summary>
            Resets applicator to its initial state.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.IMultiBuyDiscountsApplicator.ApplyDiscount(CMS.Ecommerce.IMultiBuyDiscount,CMS.Ecommerce.ShoppingCartItemInfo,System.Int32)">
            <summary>
            Applies discount to given number of unit of given item.
            </summary>
            <param name="discount">Discount to be applied.</param>
            <param name="itemToBeDiscounted">Cart item to apply discount on.</param>
            <param name="units">Number of unit to be discounted.</param>
        </member>
        <member name="M:CMS.Ecommerce.IMultiBuyDiscountsApplicator.AcceptsMissedDiscount(CMS.Ecommerce.IMultiBuyDiscount)">
            <summary>
            Notifies the applicator that discount was nearly applied. 
            It could be applied on some products if present in cart.
            </summary>
            <param name="discount">Nearly applied discount.</param>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyDiscount">
            <summary>
            Class implementing multibuy discount from calculation point of view.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.MultiBuyDiscount.discount">
            <summary>
            Inner discount object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscount.#ctor(CMS.Ecommerce.MultiBuyDiscountInfo)">
            <summary>
            Create new instance of MultiBuyDiscount based on given MultiBuyDiscountInfo object.
            </summary>
            <param name="multiBuyDiscountInfo">MultiBuyDiscountInfo object to create instance for.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscount.Init">
            <summary>
            Sets discount to its initial state.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscount.PrioritizeItems(System.Collections.Generic.List{CMS.Ecommerce.ShoppingCartItemInfo})">
            <summary>
            Moves Y items to higher priorities in case of BXGY discount.
            </summary>
            <param name="items">Cart items to prioritize.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscount.IsBasedOn(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Indicates if this discount is based on given cart item, i.e. this method returns true for items needed 
            to be in the cart to be eligible to get this discount.
            </summary>
            <param name="item">Item to check.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscount.IsApplicableOn(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Indicates if this discount is affecting the price of given cart item, i.e. this method returns true for items 
            discounted by this discount.
            </summary>
            <param name="item">Item to check.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscount.GetMissingProducts">
            <summary>
            Returns IDs of SKUs which could be discounted if present in cart. Most important products go first.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscount.AcceptApplication(CMS.Ecommerce.ShoppingCartItemInfo,System.Int32)">
            <summary>
            Notifies discount that it was applied on given amount of items.
            </summary>
            <param name="item">Discounted item.</param>
            <param name="count">Number of discounted items.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscount.AllowsMoreUses">
            <summary>
            Returns true if this discount can be used repeatedly.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscount.AcceptsCoupon(System.String,System.Boolean)">
            <summary>
            Indicates if given coupon code is suitable for this discount. Returns false if this discount has no codes assigned.
            </summary>
            <param name="couponCode">Code to be checked</param>
            <param name="ignoreUseLimit">Indicates if use limitation is to be ignored.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscount.LogUseOnce(System.String)">
            <summary>
            Informs this discount that it was applied.
            </summary>
            <param name="couponCode">The coupon code that was used for discount application.</param>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscount.DiscountName">
            <summary>
            Name of the multi buy discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscount.Value">
            <summary>
            Discount value. Value is percentage of fix, based on value of <see cref="P:CMS.Ecommerce.MultiBuyDiscount.IsFlat"/>.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscount.IsFlat">
            <summary>
            True - discount value is fix, False - discount value is relative.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscount.BasedOnUnitsCount">
            <summary>
            The number of products needed to enable this discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscount.ApplyOnUnitsCount">
            <summary>
            The number of discounted units.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscount.ApplyFurtherDiscounts">
            <summary>
            Indicates if further discounts are to be applied if this discount applies.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscount.AutoAddEnabled">
            <summary>
            Indicates if product is added to cart automatically, the system adds product to shopping cart only when the discount is percentage and set 100 % off.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscount.DiscountUsesCoupons">
            <summary>
            Indicates if discount is applicable only with discount coupon.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyDiscountDepartmentInfo">
            <summary>
            MultiBuyDiscountDepartmentInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.MultiBuyDiscountDepartmentInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.MultiBuyDiscountDepartmentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfo.#ctor">
            <summary>
            Constructor - Creates an empty MultiBuyDiscountDepartmentInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MultiBuyDiscountDepartmentInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountDepartmentInfo.MultiBuyDiscountID">
            <summary>
            Multi buy discount ID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountDepartmentInfo.DepartmentID">
            <summary>
            Department ID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountDepartmentInfo.ObjectFullName">
            <summary>
            Gets the full name in format MultiBuyDiscountID.DepartmentID
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider">
            <summary>
            Class providing MultiBuyDiscountDepartmentInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.GetMultiBuyDiscountDepartments">
            <summary>
            Returns all MultiBuyDiscountDepartmentInfo bindings.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.GetMultiBuyDiscountDepartmentInfo(System.Int32,System.Int32)">
            <summary>
            Returns MultiBuyDiscountDepartmentInfo binding structure.
            </summary>
            <param name="multiBuyDiscountId">Multi buy discount ID</param>
            <param name="departmentId">Department ID</param>  
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.SetMultiBuyDiscountDepartmentInfo(CMS.Ecommerce.MultiBuyDiscountDepartmentInfo)">
            <summary>
            Sets specified MultiBuyDiscountDepartmentInfo.
            </summary>
            <param name="infoObj">MultiBuyDiscountDepartmentInfo to set</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.DeleteMultiBuyDiscountDepartmentInfo(CMS.Ecommerce.MultiBuyDiscountDepartmentInfo)">
            <summary>
            Deletes specified MultiBuyDiscountDepartmentInfo binding.
            </summary>
            <param name="infoObj">MultiBuyDiscountDepartmentInfo object</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.RemoveMultiBuyDiscountFromDepartment(System.Int32,System.Int32)">
            <summary>
            Deletes MultiBuyDiscountDepartmentInfo binding.
            </summary>
            <param name="multiBuyDiscountId">Multi buy discount ID</param>
            <param name="departmentId">Department ID</param>  
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.AddMultiBuyDiscountToDepartment(System.Int32,System.Int32)">
            <summary>
            Creates MultiBuyDiscountDepartmentInfo binding. 
            </summary>
            <param name="multiBuyDiscountId">Multi buy discount ID</param>
            <param name="departmentId">Department ID</param>   
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.RemoveAllDepartments(System.Int32)">
            <summary>
            Removes all Departments from given MultiBuy Discount.
            </summary>
            <param name="multiBuyDiscountId">MultiBuy Discount ID</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.GetFullNameDictionary">
            <summary>
            Creates new dictionary for caching the objects by full name
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.GetFullNameWhereCondition(System.String)">
            <summary>
            Gets the where condition that searches the object based on the given full name
            </summary>
            <param name="fullName">Object full name</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.GetMultiBuyDiscountDepartmentInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the MultiBuyDiscountDepartmentInfo structure.
            Null if binding doesn't exist.
            </summary>
            <param name="multiBuyDiscountId">Multi buy discount ID</param>
            <param name="departmentId">Department ID</param>  
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.SetMultiBuyDiscountDepartmentInfoInternal(CMS.Ecommerce.MultiBuyDiscountDepartmentInfo)">
            <summary>
            Sets specified MultiBuyDiscountDepartmentInfo binding.
            </summary>
            <param name="infoObj">MultiBuyDiscountDepartmentInfo object</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.DeleteMultiBuyDiscountDepartmentInfoInternal(CMS.Ecommerce.MultiBuyDiscountDepartmentInfo)">
            <summary>
            Deletes specified MultiBuyDiscountDepartmentInfo.
            </summary>
            <param name="infoObj">MultiBuyDiscountDepartmentInfo object</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.RemoveMultiBuyDiscountFromDepartmentInternal(System.Int32,System.Int32)">
            <summary>
            Deletes MultiBuyDiscountDepartmentInfo binding.
            </summary>
            <param name="multiBuyDiscountId">Multi buy discount ID</param>
            <param name="departmentId">Department ID</param>  
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.AddMultiBuyDiscountToDepartmentInternal(System.Int32,System.Int32)">
            <summary>
            Creates MultiBuyDiscountDepartmentInfo binding. 
            </summary>
            <param name="multiBuyDiscountId">Multi buy discount ID</param>
            <param name="departmentId">Department ID</param>   
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountDepartmentInfoProvider.RemoveAllDepartmentsInternal(System.Int32)">
            <summary>
            Removes all Departments from given MultiBuy Discount.
            </summary>
            <param name="multiBuyDiscountId">MultiBuy Discount ID</param>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyDiscountsApplicator">
            <summary>
            Class applying discount on given shopping cart items.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsApplicator.Reset">
            <summary>
            Resets applicator to its initial state.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsApplicator.ApplyDiscount(CMS.Ecommerce.IMultiBuyDiscount,CMS.Ecommerce.ShoppingCartItemInfo,System.Int32)">
            <summary>
            Applies discount to given number of unit of given item.
            </summary>
            <param name="discount">Discount to be applied.</param>
            <param name="itemToBeDiscounted">Cart item to apply discount on.</param>
            <param name="units">Number of unit to be discounted.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsApplicator.AcceptsMissedDiscount(CMS.Ecommerce.IMultiBuyDiscount)">
            <summary>
            Notifies the applicator that discount was nearly applied. 
            It could be applied on given products if present in cart.
            </summary>
            <param name="discount">Nearly applied discount.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsApplicator.GetDiscountReport">
            <summary>
            Returns the discount report.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsApplicator.GetDiscountsSummary">
            <summary>
            Returns list of discount applications.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsApplicator.RememberDiscountApplication(CMS.Ecommerce.IMultiBuyDiscount,CMS.Ecommerce.ShoppingCartItemInfo,System.Int32)">
            <summary>
            Stores the information about application of discount on particular item.
            </summary>
            <param name="discount">Discount applied on item.</param>
            <param name="item">Item on which dhe discount was applied.</param>
            <param name="units">Number of discounted units.</param>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyDiscountsAutoAdder">
            <summary>
            Class calculating missed discount opportunities and adding discounted items to the shopping cart automatically.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsAutoAdder.Reset">
            <summary>
            Resets auto adder to its initial state.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsAutoAdder.ApplyDiscount(CMS.Ecommerce.IMultiBuyDiscount,CMS.Ecommerce.ShoppingCartItemInfo,System.Int32)">
            <summary>
            Applies discount to given number of unit of given item.
            </summary>
            <param name="discount">Discount to be applied.</param>
            <param name="itemToBeDiscounted">Cart item to apply discount on.</param>
            <param name="units">Number of unit to be discounted.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsAutoAdder.AcceptsMissedDiscount(CMS.Ecommerce.IMultiBuyDiscount)">
            <summary>
            Notifies the applicator that discount was nearly applied. 
            It could be applied on given products if present in cart.
            </summary>
            <param name="discount">Nearly applied discount.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsAutoAdder.UpdateAutoAddedItemsInShoppingCart(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Inserts/updates shopping cart items which user can get for free, but he did not insert these items to the cart manually.
            </summary>
            <param name="cart">Shopping cart to add free items to.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsAutoAdder.CreateShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,System.Int32,System.Int32)">
            <summary>
            Creates shopping cart item to be auto added.
            </summary>
            <param name="cart">Shopping cart to add auto added item.</param>
            <param name="skuID">SKUID of item which will be auto added.</param>
            <param name="units">Count of auto added units.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsAutoAdder.ClearAutoAddedItemsInShoppingCart(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Removes auto added items which unit count is 0 from shopping cart.
            </summary>
            <param name="cart">Shopping cart to add free items to.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsAutoAdder.ProductCanBeAutoAdded(System.Int32)">
            <summary>
            Checks if product does not have options and is available on stock if stock availability is required.
            </summary>
            <param name="skuID">SKUID to be checked.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsAutoAdder.GetUnitsWhichCanBeAutoAdded(System.Int32)">
            <summary>
            Returns null if auto add candidate SKUID is a product with options otherwise Tuple with SKUSellOnlyAvailable and number of available units.
            </summary>
            <param name="skuID">ID of SKU to check suitability for.</param>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountsAutoAdder.ProductsToBeAutoAdded">
            <summary>
            Dictionary with products which could be added to the shopping cart for free in format [SKUID, number of its units].
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountsAutoAdder.AvailableProducts">
            <summary>
            Auto-add candidates with information about suitability for auto-adding. 
            Key is SKUID and value is a tuple with SKUSellOnlyIfAvailable information and number of available units on stock.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountsAutoAdder.Items">
            <summary>
            Cart items to find auto add triggers.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyDiscountsEvaluator">
            <summary>
            Class handling application of multi buy discounts on set of cart items. Discounts are based on the most expensive products. 
            Discounts are applied to cheapest products.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.#ctor(System.Collections.Generic.IEnumerable{CMS.Ecommerce.ShoppingCartItemInfo})">
            <summary>
            Creates a new instance of applicator for given cart items.
            </summary>
            <param name="cartItems">Cart items to be evaluated.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.Reset">
            <summary>
            Resets evaluator to its initial state.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.EvaluateDiscounts(System.Collections.Generic.IEnumerable{CMS.Ecommerce.IMultiBuyDiscount})">
            <summary>
            Evaluates given discounts and applies matching ones to corresponding cart items.
            </summary>
            <param name="discounts">Discounts to be evaluated.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.PrepareItemsForDiscount(CMS.Ecommerce.IMultiBuyDiscount)">
            <summary>
            Ensures that PrioritizedItems list is ready for application of given discount. 
            </summary>
            <param name="discount">Discount to prepare items for.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.TryApplyDiscount(CMS.Ecommerce.IMultiBuyDiscount)">
            <summary>
            Evaluates given discount against all cart items and applies usable of them. Returns true if discount was applied at least once.
            </summary>
            <param name="discount">Discount to be evaluated.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.FindDiscountApplication(CMS.Ecommerce.IMultiBuyDiscount,System.Collections.Generic.IDictionary{CMS.Ecommerce.ShoppingCartItemInfo,System.Int32},System.Collections.Generic.IDictionary{CMS.Ecommerce.ShoppingCartItemInfo,System.Int32})">
            <summary>
            Finds opportunity to apply given discount. This method adds potential discounting items with unit counts into itemsToBaseDiscountOn dictionary. 
            Potentially discounted items with discounted units counts are added to itemsToBeDiscounted dictionary.
            </summary>
            <param name="discount">Discount to find opportunity for.</param>
            <param name="itemsToBaseDiscountOn">Empty dictionary where key is cart item and value is number of units to base discount on. 
            This method adds found required items here.</param>
            <param name="itemsToBeDiscounted">Empty dictionary where key is cart item and value is number of units to be discounted.
            This method adds found items discounted by given discount here.</param>
            <returns>Returns true when given discount is applicable.</returns>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.FindItemsToBaseDiscountOn(CMS.Ecommerce.IMultiBuyDiscount,System.Collections.Generic.IDictionary{CMS.Ecommerce.ShoppingCartItemInfo,System.Int32})">
            <summary>
            Finds items satisfying given discounts conditions.
            </summary>
            <param name="discount">Discount to find items for.</param>
            <param name="itemsToBaseDiscountOn">Empty dictionary. Found items are placed here with their counts.</param>
            <returns>Returns true if found items fully satisfies discount.</returns>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.FindItemsToBeDiscounted(CMS.Ecommerce.IMultiBuyDiscount,System.Collections.Generic.IDictionary{CMS.Ecommerce.ShoppingCartItemInfo,System.Int32},System.Collections.Generic.IDictionary{CMS.Ecommerce.ShoppingCartItemInfo,System.Int32})">
            <summary>
            Finds items to be discounted with given discount based on given items. Returns true when at least one item was found.
            </summary>
            <param name="discount">Discount to find suitable items for.</param>
            <param name="itemsToBaseDiscountOn">Items used to satisfy discount condition.</param>
            <param name="itemsToBeDiscounted">Items already found to be discounted with this discount.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.CanBeDiscounted(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IMultiBuyDiscount,System.Collections.Generic.IDictionary{CMS.Ecommerce.ShoppingCartItemInfo,System.Int32},System.Collections.Generic.IDictionary{CMS.Ecommerce.ShoppingCartItemInfo,System.Int32})">
            <summary>
            Checks if given item can be discounted using given discount.
            </summary>
            <param name="item">Item to be checked.</param>
            <param name="discount">Discount to be checked.</param>
            <param name="basedOnItems">Units with number of units found as base for given discount.</param>
            <param name="alreadyDiscountedItems">Units with number of units already found as suitable for given discount.</param>
            <returns>Returns true if discount is applicable on given item.</returns>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.CanBaseDiscountOn(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IMultiBuyDiscount,System.Collections.Generic.IDictionary{CMS.Ecommerce.ShoppingCartItemInfo,System.Int32})">
            <summary>
            Checks if given item can be used to fulfill discounts conditions.
            </summary>
            <param name="item">Item to be checked.</param>
            <param name="discount">Discount to be checked.</param>
            <param name="alreadyBasedOnItems">Units with number of units already found as base for given discount.</param>
            <returns>Returns true if item covers (partially) discounts condition.</returns>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.ApplyDiscount(CMS.Ecommerce.IMultiBuyDiscount,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{CMS.Ecommerce.ShoppingCartItemInfo,System.Int32}})">
            <summary>
            Applies discount on given items in given amount.
            </summary>
            <param name="discount">Discount ot be applied.</param>
            <param name="itemsToBeDiscounted">Dictionary containing items as keys and number of discounted units as values.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.ApplyDiscount(CMS.Ecommerce.IMultiBuyDiscount,CMS.Ecommerce.ShoppingCartItemInfo,System.Int32)">
            <summary>
            Applies discount to given number of unit of given item using.
            </summary>
            <param name="discount">Discount to be applied.</param>
            <param name="itemToBeDiscounted">Cart item to apply discount on.</param>
            <param name="units">Number of unit to be discounted.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.RememberUsedItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{CMS.Ecommerce.ShoppingCartItemInfo,System.Int32}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{CMS.Ecommerce.ShoppingCartItemInfo,System.Int32}})">
            <summary>
            Remembers that given items in given number of units were used for given discount.
            </summary>
            <param name="discountingItemsCounts">Items with unit counts to mark as already used as base for discount.</param>
            <param name="discountedItemsCounts">Items with unit counts to mark as already discounted.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsEvaluator.GetUnusedNonFreeUnits(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns the number of unit not used as base for any discount nor discounted.
            </summary>
            <param name="item">Item to get number of units for.</param>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountsEvaluator.PrioritizedItems">
            <summary>
            List of cart items currently processed by this applicator.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountsEvaluator.SortedItems">
            <summary>
            Cart items sorted by price.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountsEvaluator.UsedDiscountItems">
            <summary>
            Dictionary containing the number of uses for each cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountsEvaluator.Applicator">
            <summary>
            MultiBuy discounts applicator to be used for application of items.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyDiscountInfo">
            <summary>
            MultiBuyDiscountInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.MultiBuyDiscountInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.MultiBuyDiscountInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfo.TryUpdatePriority(System.Double)">
            <summary>
            Updates discount priority and checks priority uniqueness.
            </summary>
            <param name="priority">New priority</param>
            <returns>Error message (null if succeeded)</returns>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfo.#ctor">
            <summary>
            Constructor - Creates an empty MultiBuyDiscountInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MultiBuyDiscountInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfo.AcceptsCoupon(System.String,System.Boolean)">
            <summary>
            Indicates if given coupon code is suitable for this discount. Returns false if this discount has no codes assigned.
            </summary>
            <param name="couponCode">Code to be checked</param>
            <param name="ignoreUseLimit">Indicates if use limitation is to be ignored.</param>
            <returns></returns>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountID">
            <summary>
            Multi buy discount ID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountDisplayName">
            <summary>
            Multi buy discount display name
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountName">
            <summary>
            Multi buy discount name
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountDescription">
            <summary>
            Multi buy discount description
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountEnabled">
            <summary>
            Multi buy discount enabled
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountIsFlat">
            <summary>
            True - multi buy discount value is flat, False - multi buy value is relative. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountValue">
            <summary>
            Multi buy discount value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountGUID">
            <summary>
            Multi buy discount GUID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountLastModified">
            <summary>
            Multi buy discount last modified
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountApplyToSKUID">
            <summary>
            Multi buy discount get product sku ID, i.e ID of product which user can get for free.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountUsesCoupons">
            <summary>
            Indicates if this discount is applicable only with discount coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountValidFrom">
            <summary>
            Multi buy discount valid from
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountValidTo">
            <summary>
            Multi buy discount valid to
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountSiteID">
            <summary>
            Multi buy discount site ID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountPriority">
            <summary>
            Multi buy discount priority.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountApplyFurtherDiscounts">
            <summary>
            Indicates that further discounts (in order of MultiBuyDiscountPriority) are to be processed.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountLimitPerOrder">
            <summary>
            Specifies how many times customers can apply the discount in one order.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountMinimumBuyCount">
            <summary>
            Minimum unit quantity condition. Default value is 1.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountCustomerRestriction">
            <summary>
            Multibuy discount customer restriction.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountRoles">
            <summary>
            Discount roles to apply discount for. Is dependable on MultiBuyDiscountCustomerRestriction configuration.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.MultiBuyDiscountAutoAddEnabled">
            <summary>
            Indicates if product is added to cart automatically, the system adds product to shopping cart only when the discount is percentage and set 100 % off.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.IsValid">
            <summary>
            Determines whether multi buy discount is valid. Discount must be currently running and have usable coupon codes if discount uses coupons.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.IsRunning">
            <summary>
            Determines whether multi buy discount is currently running. ValidFrom and ValidTo properties are compared to current date/time.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.CouponsUseLimitExceeded">
            <summary>
            Indicates that all coupon codes has exceeded its use limitation. Returns false for discounts without coupon codes.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.Status">
            <summary>
            Indicates status of multi buy discount. It can be Disabled, Active, NotStarted of Finished.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.UseProducts">
            <summary>
            Determines whether multi buy discount uses set of products for application.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.UseDepartments">
            <summary>
            Determines whether multi buy discount uses set of departments for application.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.CouponCodes">
            <summary>
            Returns coupon codes associated with this multibuy discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.HasOrUsesCoupon">
            <summary>
            Indicates if multibuy discount uses coupon or has some coupons defined.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.Priority">
            <summary>
            Discount priority.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountInfo.DiscountUsesCoupons">
            <summary>
            Indicates if discount is applicable only with discount coupon.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyDiscountInfoProvider">
            <summary>
            Class providing MultiBuyDiscountInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscounts">
            <summary>
            Returns a query for all the MultiBuyDiscountInfo objects.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscountInfo(System.Int32)">
            <summary>
            Returns MultiBuyDiscountInfo with specified ID.
            </summary>
            <param name="id">MultiBuyDiscountInfo ID</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscountInfo(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns MultiBuyDiscountInfo with specified name.
            </summary>
            <param name="name">MultiBuyDiscountInfo name</param>
            <param name="siteIdentifier">Site identifier (site ID or site name)</param>  
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscountInfo(System.Guid)">
            <summary>
            Returns MultiBuyDiscountInfo with specified GUID.
            </summary>
            <param name="guid">MultiBuyDiscountInfo GUID</param>                
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.SetMultiBuyDiscountInfo(CMS.Ecommerce.MultiBuyDiscountInfo)">
            <summary>
            Sets (updates or inserts) specified MultiBuyDiscountInfo.
            </summary>
            <param name="infoObj">MultiBuyDiscountInfo to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.DeleteMultiBuyDiscountInfo(CMS.Ecommerce.MultiBuyDiscountInfo)">
            <summary>
            Deletes specified MultiBuyDiscountInfo.
            </summary>
            <param name="infoObj">MultiBuyDiscountInfo to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.DeleteMultiBuyDiscountInfo(System.Int32)">
            <summary>
            Deletes MultiBuyDiscountInfo with specified ID.
            </summary>
            <param name="id">MultiBuyDiscountInfo ID</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscounts(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the MultiBuyDiscountInfo objects of a specified site.
            </summary>
            <param name="siteIdentifier">Site identifier (site ID or site name)</param>  
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.RecalculateMultiBuyDiscounts(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates multibuy discount values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscounts(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.DiscountsParameters)">
            <summary>
            Returns a query for all MultiBuyDiscountInfo objects applicable for given shopping cart.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="parameters">Discount parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscountsEvaluator(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns an instance of MultiBuyDiscountsEvaluator to be used for given shopping cart.
            </summary>
            <param name="cart">Shopping cart info object to get applicator for.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.AcceptsCoupon(CMS.Ecommerce.MultiBuyDiscountInfo,System.String,System.Boolean)">
            <summary>
            Indicates if given coupon code is suitable for discount. Returns false if discount has no codes assigned.
            </summary>
            <param name="discount">The discount.</param>
            <param name="couponCode">Code to be checked</param>
            <param name="ignoreUseLimit">Indicates if use limitation is to be ignored.</param>        
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetRunningDiscounts(CMS.DataEngine.SiteInfoIdentifier,System.DateTime)">
            <summary>
            Gets running discounts on given sites in defined time. If discount uses coupons, only discounts with usable coupons are returned.
            </summary>
            <param name="site">Site to get active discounts for.</param>
            <param name="date">Time when discount should be active.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscountsInternal">
            <summary>
            Returns a query for all the MultiBuyDiscountInfo objects.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscountInfoInternal(System.Int32)">
            <summary>
            Returns MultiBuyDiscountInfo with specified ID.
            </summary>
            <param name="id">MultiBuyDiscountInfo ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscountInfoInternal(System.String,CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns MultiBuyDiscountInfo with specified name.
            </summary>
            <param name="name">MultiBuyDiscountInfo name</param>                
            <param name="siteIdentifier">Site identifier (site ID or site name)</param>         
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscountInfoInternal(System.Guid)">
            <summary>
            Returns MultiBuyDiscountInfo with specified GUID.
            </summary>
            <param name="guid">MultiBuyDiscountInfo GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.SetMultiBuyDiscountInfoInternal(CMS.Ecommerce.MultiBuyDiscountInfo)">
            <summary>
            Sets (updates or inserts) specified MultiBuyDiscountInfo.
            </summary>
            <param name="infoObj">MultiBuyDiscountInfo to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.DeleteMultiBuyDiscountInfoInternal(CMS.Ecommerce.MultiBuyDiscountInfo)">
            <summary>
            Deletes specified MultiBuyDiscountInfo.
            </summary>
            <param name="infoObj">MultiBuyDiscountInfo to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscountsInternal(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns a query for all the MultiBuyDiscountInfo objects of a specified site.
            </summary>
            <param name="siteIdentifier">Site identifier (site ID or site name)</param>  
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.RecalculateMultiBuyDiscountsInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates multibuy discount values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscountsInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.DiscountsParameters)">
            <summary>
            Returns a query for all MultiBuyDiscountInfo objects applicable for given shopping cart.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="parameters">Discount parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetMultiBuyDiscountsEvaluatorInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns an instance of MultiBuyDiscountsEvaluator to be used for given shopping cart.
            </summary>
            <param name="cart">Shopping cart info object to get applicator for.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.AcceptsCouponInternal(CMS.Ecommerce.MultiBuyDiscountInfo,System.String,System.Boolean)">
            <summary>
            Indicates if given coupon code is suitable for discount. Returns false if discount has no codes assigned.
            </summary>
            <param name="discount">The discount.</param>
            <param name="couponCode">Code to be checked</param>
            <param name="ignoreUseLimit">Indicates if use limitation is to be ignored.</param>        
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountInfoProvider.GetRunningDiscountsInternal(CMS.DataEngine.SiteInfoIdentifier,System.DateTime)">
            <summary>
            Gets running discounts on given sites in defined time. If discount uses coupons, only discounts with usable coupons are returned.
            </summary>
            <param name="site">Site to get active discounts for.</param>
            <param name="date">Time when discount should be active.</param>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyDiscountSKUInfo">
            <summary>
            MultiBuyDiscountSKUInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.MultiBuyDiscountSKUInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.MultiBuyDiscountSKUInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for de-serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfo.#ctor">
            <summary>
            Constructor - Creates an empty MultiBuyDiscountSKUInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MultiBuyDiscountSKUInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountSKUInfo.MultiBuyDiscountID">
            <summary>
            Multi buy discount ID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountSKUInfo.SKUID">
            <summary>
            SKUID
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.MultiBuyDiscountSKUInfo.ObjectFullName">
            <summary>
            Gets the full name in format MultiBuyDiscountID.SKUID
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider">
            <summary>
            Class providing MultiBuyDiscountSKUInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.GetMultiBuyDiscountSKUs">
            <summary>
            Returns all MultiBuyDiscountSKUInfo bindings.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.GetMultiBuyDiscountSKUInfo(System.Int32,System.Int32)">
            <summary>
            Returns MultiBuyDiscountSKUInfo binding structure.
            </summary>
            <param name="multiBuyDiscountId">Multi buy discount ID</param>
            <param name="skuId">Product ID</param>  
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.SetMultiBuyDiscountSKUInfo(CMS.Ecommerce.MultiBuyDiscountSKUInfo)">
            <summary>
            Sets specified MultiBuyDiscountSKUInfo.
            </summary>
            <param name="infoObj">MultiBuyDiscountSKUInfo to set</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.DeleteMultiBuyDiscountSKUInfo(CMS.Ecommerce.MultiBuyDiscountSKUInfo)">
            <summary>
            Deletes specified MultiBuyDiscountSKUInfo binding.
            </summary>
            <param name="infoObj">MultiBuyDiscountSKUInfo object</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.RemoveMultiBuyDiscountFromProduct(System.Int32,System.Int32)">
            <summary>
            Deletes MultiBuyDiscountSKUInfo binding.
            </summary>
            <param name="multiBuyDiscountId">Multi buy discount ID</param>
            <param name="skuId">Product ID</param>  
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.AddMultiBuyDiscountToProduct(System.Int32,System.Int32)">
            <summary>
            Creates MultiBuyDiscountSKUInfo binding. 
            </summary>
            <param name="multiBuyDiscountId">Multi buy discount ID</param>
            <param name="skuId">Product ID</param>   
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.RemoveAllProducts(System.Int32)">
            <summary>
            Removes all Products from given MultiBuy Discount.
            </summary>
            <param name="multiBuyDiscountId">MultiBuy Discount ID</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.GetFullNameDictionary">
            <summary>
            Creates new dictionary for caching the objects by full name
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.GetFullNameWhereCondition(System.String)">
            <summary>
            Gets the where condition that searches the object based on the given full name
            </summary>
            <param name="fullName">Object full name</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.GetMultiBuyDiscountSKUInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the MultiBuyDiscountSKUInfo structure.
            Null if binding doesn't exist.
            </summary>
            <param name="multiBuyDiscountId">Multi buy discount ID</param>
            <param name="skuId">Product ID</param>  
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.SetMultiBuyDiscountSKUInfoInternal(CMS.Ecommerce.MultiBuyDiscountSKUInfo)">
            <summary>
            Sets specified MultiBuyDiscountSKUInfo binding.
            </summary>
            <param name="infoObj">MultiBuyDiscountSKUInfo object</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.DeleteMultiBuyDiscountSKUInfoInternal(CMS.Ecommerce.MultiBuyDiscountSKUInfo)">
            <summary>
            Deletes specified MultiBuyDiscountSKUInfo.
            </summary>
            <param name="infoObj">MultiBuyDiscountSKUInfo object</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.RemoveMultiBuyDiscountFromProductInternal(System.Int32,System.Int32)">
            <summary>
            Deletes MultiBuyDiscountSKUInfo binding.
            </summary>
            <param name="multiBuyDiscountId">Multi buy discount ID</param>
            <param name="skuId">Product ID</param>  
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.AddMultiBuyDiscountToProductInternal(System.Int32,System.Int32)">
            <summary>
            Creates MultiBuyDiscountSKUInfo binding. 
            </summary>
            <param name="multiBuyDiscountId">Multi buy discount ID</param>
            <param name="skuId">Product ID</param>   
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountSKUInfoProvider.RemoveAllProductsInternal(System.Int32)">
            <summary>
            Removes all Products from given MultiBuy Discount.
            </summary>
            <param name="multiBuyDiscountId">MultiBuy Discount ID</param>
        </member>
        <member name="T:CMS.Ecommerce.DiscountSummaryItem">
            <summary>
            Class used for displaying order and multibuy discounts in Invoice, Email template and Shopping cart.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountSummaryItem.GetValue(System.String)">
            <summary>
            Gets the value of column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountSummaryItem.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="M:CMS.Ecommerce.DiscountSummaryItem.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.Ecommerce.DiscountSummaryItem.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.Ecommerce.DiscountSummaryItem.Name">
            <summary>
            Discount item name used for displaying in Invoice, Email template and Shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountSummaryItem.Value">
            <summary>
            Discount item value in shopping cart currency used for displaying in Invoice, Email template and Shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountSummaryItem.ValueInMainCurrency">
            <summary>
            Discount item value in main currency used for calculation.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountSummaryItem.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.Ecommerce.DiscountSummaryItem.ColumnNames">
            <summary>
            DiscountSummaryItem object property names.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ProductDiscountsFilter">
            <summary>
            Allows to filter list of conditional product discounts according to its conditions and stop processing flag.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductDiscountsFilter.Filter(CMS.Ecommerce.SKUInfo,System.Collections.Generic.IEnumerable{CMS.Ecommerce.IConditionalDiscount})">
            <summary>
            Filters given discounts and leaves only those which conditions are met.
            </summary>
            <param name="product">Object to be used for condition evaluation.</param>
            <param name="discounts">Conditional discounts to be filtered.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductDiscountsFilter.GetCondition(CMS.Ecommerce.IConditionalDiscount)">
            <summary>
            Returns DiscountProductCondition from given discount object.
            </summary>
            <param name="discount">Discount to get product condition from.</param>
        </member>
        <member name="T:CMS.Ecommerce.SKUTreeNodeFactory">
            <summary>
            Factory that provides SKUTreeNode for product document types
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNodeFactory.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNodeFactory.CanCreateObject(System.Object)">
            <summary>
            Returns true if the factory is able to create the object based on the given parameter
            </summary>
            <param name="parameter">Object parameter</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNodeFactory.CanCreateObject(System.String)">
            <summary>
            Returns true if the factory is able to create the object of the given type
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="T:CMS.Ecommerce.OrderPaidEventArgs">
            <summary>
            Event arguments for "order paid" event
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderPaidEventArgs.Order">
            <summary>
            Paid order.
            </summary>        
        </member>
        <member name="T:CMS.Ecommerce.OrderPaidHandler">
            <summary>
            Order paid event handler
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderPaidHandler.StartEvent(CMS.Ecommerce.OrderInfo)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="order">The paid order.</param>
        </member>
        <member name="T:CMS.Ecommerce.EcommerceEvents">
            <summary>
            Global e-commerce events
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommerceEvents.NewOrderCreated">
            <summary>
            Fired when new order was created through checkout process.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommerceEvents.OrderPaid">
            <summary>
            Fired when existing order has been paid.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.NewOrderCreatedEventArgs">
            <summary>
            Event arguments for "new order created" event
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.NewOrderCreatedEventArgs.NewOrder">
            <summary>
            Newly created order.
            </summary>        
        </member>
        <member name="T:CMS.Ecommerce.NewOrderCreatedHandler">
            <summary>
            New order created (through checkout process) event handler
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.NewOrderCreatedHandler.StartEvent(CMS.Ecommerce.OrderInfo)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="order">The newly created order.</param>
        </member>
        <member name="T:CMS.Ecommerce.Extenders.CarriersListExtender">
            <summary>
            Carrier list extender.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.Extenders.CarriersListExtender.UnigridOnAction(System.String,System.Object)">
            <summary>
            Handles the UniGrid's OnAction event.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.Extenders.CarriersListExtender.OnExternalDataBound(System.Object,System.String,System.Object)">
            <summary>
            Displays user friendly carrier provider name in listing.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.Extenders.CarrierTabsExtender">
            <summary>
            Extender for Carrier tab in store configuration.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.Extenders.CarrierTabsExtender.OnInitTabs">
            <summary>
            Initializes the extender.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.Extenders.CarrierTabsExtender.Control_OnTabsLoaded(System.Collections.Generic.List{CMS.UIControls.UITabItem})">
            <summary>
            OnTabsLoaded event.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.Extenders.CarrierTabsExtender.AddTab(System.Collections.Generic.List{CMS.UIControls.UITabItem},CMS.Modules.UIElementInfo)">
            <summary>
            Adds tab created from UI element. If tab with the same name already exists, nothing is added.
            </summary>
            <param name="tabs">List of tabs to add tab to.</param>
            <param name="element">UI element to be add tab for.S</param>
        </member>
        <member name="M:CMS.Ecommerce.Extenders.CarrierTabsExtender.UserIsAuthorizedForUIElement(CMS.Modules.UIElementInfo)">
            <summary>
            Checks if current user can see given UI element.
            </summary>
            <param name="element">UI Element to check.</param>
            <returns>True when authorized.</returns>
        </member>
        <member name="M:CMS.Ecommerce.Extenders.CarrierTabsExtender.CreateTab(CMS.Modules.UIElementInfo,System.Int32)">
            <summary>
            Creates the tab
            </summary>
            <param name="uiElem">UI Element</param>
            <param name="tabIndex">Tab index</param>
        </member>
        <member name="T:CMS.Ecommerce.Extenders.ShippingOptionTabsExtender">
            <summary>
            Extender for UITabs control used in detail of shipping option. Adds extra configuration tab if shipping carrier providers any configuration.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.Extenders.ShippingOptionTabsExtender.OnInitTabs">
            <summary>
            Initialization of tabs.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.Extenders.ShippingOptionTabsExtender.AddTab(System.Collections.Generic.List{CMS.UIControls.UITabItem},CMS.Modules.UIElementInfo)">
            <summary>
            Adds tab created from UI element. If tab with the same name already exists, nothing is added.
            </summary>
            <param name="tabs">List of tabs to add tab to.</param>
            <param name="element">UI element to be add tab for.S</param>
        </member>
        <member name="M:CMS.Ecommerce.Extenders.ShippingOptionTabsExtender.UserIsAuthorizedForUIElement(CMS.Modules.UIElementInfo)">
            <summary>
            Checks if current user can see given UI element.
            </summary>
            <param name="element">UI Element to check.</param>
            <returns>True when authorized.</returns>
        </member>
        <member name="M:CMS.Ecommerce.Extenders.ShippingOptionTabsExtender.CreateTab(CMS.Modules.UIElementInfo,System.Int32)">
            <summary>
            Creates the tab
            </summary>
            <param name="uiElem">UI Element</param>
            <param name="tabIndex">Tab index</param>
        </member>
        <member name="T:CMS.Ecommerce.IAddressExtensions">
            <summary>
            Extension methods for IAddress interface. Allows to get codes for countries and states.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.IAddressExtensions.GetCountryTwoLetterCode(CMS.Ecommerce.IAddress)">
            <summary>
            Returns two-letter country code for country specified by AddressCountryID property.
            </summary>
            <param name="address">Object implementing IAddress interface.</param>
            <returns>Two-letter country code or empty string when country not found.</returns>
        </member>
        <member name="M:CMS.Ecommerce.IAddressExtensions.GetCountryThreeLetterCode(CMS.Ecommerce.IAddress)">
            <summary>
            Returns three-letter country code for country specified by AddressCountryID property.
            </summary>
            <param name="address">Object implementing IAddress interface.</param>
            <returns>Three-letter country code or empty string when country not found.</returns>
        </member>
        <member name="M:CMS.Ecommerce.IAddressExtensions.GetStateCode(CMS.Ecommerce.IAddress)">
            <summary>
            Returns state code for state specified by AddressStateID property.
            </summary>
            <param name="address">Object implementing IAddress interface.</param>
            <returns>State code or empty string when state not found.</returns>
        </member>
        <member name="T:CMS.Ecommerce.IAddress">
            <summary>
            Address interface used to encapsulate OrderAddressInfo and Customer's AddressInfo
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.IAddress.DeleteAddress">
            <summary>
            Deletes the address object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.IAddress.SetAddress">
            <summary>
            Updates the address object using appropriate provider.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IAddress.AddressZip">
            <summary>
            Address ZIP code.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IAddress.AddressStateID">
            <summary>
            Address state ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IAddress.AddressPhone">
            <summary>
            Address phone.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IAddress.AddressCountryID">
            <summary>
            Address country ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IAddress.AddressID">
            <summary>
            Address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IAddress.AddressPersonalName">
            <summary>
            Address personal name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IAddress.AddressLine1">
            <summary>
            Address line 1.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IAddress.AddressLine2">
            <summary>
            Address line 2.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IAddress.AddressCity">
            <summary>
            Address city.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IAddress.AddressGUID">
            <summary>
            Address GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.IAddress.AddressLastModified">
            <summary>
            Date and time when the address was last modified.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AbstractCountLiveTileModelProvider.GetModel(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Loads model for the dashboard live tile.
            </summary>
            <param name="liveTileContext">Context of the live tile. Contains information about the user and the site the model is requested for.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="liveTileContext"/> is null</exception>
            <returns>Live tile model</returns>
        </member>
        <member name="M:CMS.Ecommerce.AbstractCountLiveTileModelProvider.GetCount(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Returns count to be shown on live tile.
            </summary>
            <param name="context">Context of the live tile. Contains information about the user and the site the model is for.</param>
        </member>
        <member name="M:CMS.Ecommerce.AbstractCountLiveTileModelProvider.GetDescription(System.Int32)">
            <summary>
            Returns description text to be shown on live tile.
            </summary>
            <param name="count">Number shown on the live tile.</param>
        </member>
        <member name="M:CMS.Ecommerce.AbstractCountLiveTileModelProvider.GetCacheSettings(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Returns cache settings for live tile.
            </summary>
            <param name="context">Context of the live tile. Contains information about the user and the site the model is for.</param>
        </member>
        <member name="M:CMS.Ecommerce.CatalogDiscountsLiveTileModelProvider.GetCount(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Gets total number of catalog discounts running in given time.
            </summary>
            <param name="context">Live tile context.</param>
            <returns>Number of active coupons.</returns>
        </member>
        <member name="M:CMS.Ecommerce.CatalogDiscountsLiveTileModelProvider.GetDescription(System.Int32)">
            <summary>
            Returns description in singular or plural according to given count.
            </summary>
            <param name="count">Number of running catalog discounts.</param>
        </member>
        <member name="M:CMS.Ecommerce.CatalogDiscountsLiveTileModelProvider.GetCacheSettings(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Returns settings used for caching results.
            </summary>
            <param name="context">Live tile context.</param>
        </member>
        <member name="M:CMS.Ecommerce.FreeShippingOffersLiveTileModelProvider.GetCount(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Gets total number of free shipping offers running in given time.
            </summary>
            <param name="context">Live tile context.</param>
            <returns>Number of active coupons.</returns>
        </member>
        <member name="M:CMS.Ecommerce.FreeShippingOffersLiveTileModelProvider.GetDescription(System.Int32)">
            <summary>
            Returns description in singular or plural according to given count.
            </summary>
            <param name="count">Number of running free shipping offers.</param>
        </member>
        <member name="M:CMS.Ecommerce.FreeShippingOffersLiveTileModelProvider.GetCacheSettings(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Returns settings used for caching results.
            </summary>
            <param name="context">Live tile context.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsLiveTileModelProvider.GetCount(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Gets total number of multibuy discounts running in given time.
            </summary>
            <param name="context">Live tile context.</param>
            <returns>Number of active coupons.</returns>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsLiveTileModelProvider.GetDescription(System.Int32)">
            <summary>
            Returns description in singular or plural according to given count.
            </summary>
            <param name="count">Number of running multibuy discounts.</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountsLiveTileModelProvider.GetCacheSettings(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Returns settings used for caching results.
            </summary>
            <param name="context">Live tile context.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderDiscountsLiveTileModelProvider.GetCount(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Gets total number of order discounts running in given time.
            </summary>
            <param name="context">Live tile context.</param>
            <returns>Number of active coupons.</returns>
        </member>
        <member name="M:CMS.Ecommerce.OrderDiscountsLiveTileModelProvider.GetDescription(System.Int32)">
            <summary>
            Returns description in singular or plural according to given count.
            </summary>
            <param name="count">Number of running order discounts.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderDiscountsLiveTileModelProvider.GetCacheSettings(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Returns settings used for caching results.
            </summary>
            <param name="context">Live tile context.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductCouponsLiveTileModelProvider.GetCount(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Gets total number of product coupons usable in given time.
            </summary>
            <param name="context">Live tile context.</param>
            <returns>Number of active coupons.</returns>
        </member>
        <member name="M:CMS.Ecommerce.ProductCouponsLiveTileModelProvider.GetDescription(System.Int32)">
            <summary>
            Returns description in singular or plural according to given count.
            </summary>
            <param name="count">Number of active coupons.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductCouponsLiveTileModelProvider.GetCacheSettings(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Returns settings used for caching results.
            </summary>
            <param name="context">Live tile context.</param>
        </member>
        <member name="T:CMS.Ecommerce.EcommerceTransformationFunctions">
            <summary>
            Summary description for Functions.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetAddToShoppingCartLink(System.Object,System.Object)">
            <summary>
            Returns link to "add to shopping cart".
            </summary>
            <param name="productId">Product ID</param>
            <param name="enabled">Indicates whether product is enabled or not</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetAddToShoppingCartLink(System.Object,System.Object,System.String)">
            <summary>
            Returns link to "add to shopping cart".
            </summary>
            <param name="productId">Product ID</param>
            <param name="enabled">Indicates whether product is enabled or not</param>
            <param name="imageUrl">Image URL</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetAddToShoppingCartLink(System.Object)">
            <summary>
            Returns link to "add to shopping cart".
            </summary>
            <param name="productId">Product ID</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetAddToWishListLink(System.Object)">
            <summary>
            Returns link to add specified product to the user's wish list.
            </summary>
            <param name="productId">Product ID</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetAddToWishListLink(System.Object,System.String)">
            <summary>
            Returns link to add specified product to the user's wish list.
            </summary>
            <param name="productId">Product ID</param>
            <param name="imageUrl">Image URL</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetRemoveFromWishListLink(System.Object)">
            <summary>
            Returns link to remove specified product from the user's wish list.
            </summary>
            <param name="productId">Product ID</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.ShoppingCartURL(System.String)">
            <summary>
            Returns URL to the shopping cart.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.WishlistURL(System.String)">
            <summary>
            Returns URL to the wish list.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetProductUrl(System.Object)">
            <summary>
            Returns product URL.
            </summary>
            <param name="SKUID">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetProductUrl(System.Object,System.Object,System.Object)">
            <summary>
            Returns user friendly URL of the specified SKU and site name.
            </summary>
            <param name="skuGuid">SKU Guid</param>
            <param name="skuName">SKU Name</param>
            <param name="siteNameObj">Site Name</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetProductUrl(System.Object,System.Object)">
            <summary>
            Returns user friendly URL of the specified SKU.
            </summary>
            <param name="skuGuid">SKU Guid</param>
            <param name="skuName">SKU Name</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetEproductUrl(System.Object,System.Object,System.Object)">
            <summary>
            Returns e-product download URL.
            </summary>
            <param name="fileToken">File unique download URL</param>
            <param name="fileName">File name</param>
            <param name="siteId">Site ID of the order in which the e-product is included</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetProductUrlForFeed(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Returns URL of the specified product with feed parameter.
            </summary>
            <param name="feedName">Name of the feed</param>
            <param name="skuGUID">SKU GUID</param>
            <param name="skuName">SKU name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetSKUImageUrl(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Returns SKU image URL including dimension's modifiers (width, height or maxsidesize) and site name parameter if product is from different site than current. If image URL is not specified, SKU default image URL is used.
            </summary>
            <param name="imageUrl">SKU image URL</param>
            <param name="width">Image requested width, has no effect if maxsidesize is specified</param>
            <param name="height">Image requested height, has no effect if maxsidesize is specified</param>
            <param name="maxsidesize">Image requested maximum side size</param>
            <param name="siteId">SKU site ID. If empty, current site ID is used.</param>    
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetManufacturer(System.Object,System.String)">
            <summary>
            Gets object from the specified column of the manufacturer with specific ID.
            </summary>
            <param name="Id">Manufacturer ID</param>
            <param name="column">Column name</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetDepartment(System.Object,System.String)">
            <summary>
            Gets object from the specified column of the department with specific ID.
            </summary>
            <param name="Id">Department ID</param>
            <param name="column">Column name</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetSupplier(System.Object,System.String)">
            <summary>
            Gets object from the specified column of the supplier with specific ID.
            </summary>
            <param name="Id">Supplier ID</param>
            <param name="column">Column name</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetInternalStatus(System.Object,System.String)">
            <summary>
            Gets object from the specified column of the internal status with specific ID.
            </summary>
            <param name="Id">Internal status ID</param>
            <param name="column">Column name</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetPublicStatus(System.Object,System.String)">
            <summary>
            Gets object from the specified column of the public status with specific ID.
            </summary>
            <param name="Id">Public status ID</param>
            <param name="column">Column name</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetColumnValue(CMS.DataEngine.BaseInfo,System.String)">
            <summary>
            Returns value of the given object column.
            </summary>
            <param name="info">Object data</param>
            <param name="columnName">Column name</param>    
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetDocumentName(System.Object)">
            <summary>
            Gets document name of specified node id.
            </summary>
            <param name="nodeIdObj">ID of the node to get name for.</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetSKUIndicatorProperty(CMS.Ecommerce.SKUInfo,System.String)">
            <summary>
            Returns value of the specified product public status column.
            If the product is evaluated as a new product in the store, public status set by 'CMSStoreNewProductStatus' setting is used, otherwise product public status is used.
            </summary>
            <param name="sku">SKU data</param>
            <param name="column">Name of the product public status column the value should be retrieved from</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetSKUPriceSaving(CMS.Ecommerce.SKUInfo,System.Boolean,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Returns amount of saved money based on the difference between product seller price and product retail price or price before discount.
            </summary> 
            <param name="sku">SKU to calculate saving for</param>
            <param name="discounts">Indicates if discounts should be applied to the seller price before the saved amount is calculated</param>
            <param name="taxes">Indicates if taxes should be applied to both retail price and seller price before the saved amount is calculated</param>
            <param name="column1">Name of the column from which the seller price is retrieved, if empty SKUPrice column is used</param>
            <param name="column2">Name of the column from which the retail price is retrieved, if empty SKURetailPrice column is used</param>
            <param name="percentage">True - result is percentage, False - result is in the current currency</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetSKUOriginalPrice(CMS.Ecommerce.SKUInfo,System.Boolean)">
            <summary>
            Returns SKURetailPrice or price before discounts if saving is bigger.
            Returns zero if price saving is zero.
            </summary>
            <param name="sku"></param>
            <param name="taxes"></param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetSKUNodeAlias(CMS.Ecommerce.SKUInfo)">
            <summary>
            Gets the SKU node alias. If there are multiple nodes for this SKU the first occurrence is returned.
            If there is not a single one node for this SKU, empty string is returned.
            </summary>
            <param name="sku">The sku.</param>        
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.GetSKUNode(CMS.Ecommerce.SKUInfo,System.String)">
            <summary>
            Gets the SKU node. If there are multiple nodes for this SKU the first occurrence is returned.
            </summary>
            <param name="sku">The SKU.</param>
            <param name="orderBy">OrderBy columns. Default is NodeAlias column.</param>
            <returns></returns>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.MarkEnabledAndDisabledItems(System.Web.UI.WebControls.DropDownList,System.String,System.String,System.String,System.String)">
            <summary>
            Sets different css styles to enabled and disabled dropdownlist items.
            </summary>
            <param name="drpTemp">Dropdownlist control</param>
            <param name="valueFieldName">Field name with ID value</param>
            <param name="statusFieldName">Field name with status value</param>
            <param name="itemEnabledStyle">Enabled item style</param>
            <param name="itemDisabledStyle">Disabled item style</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceTransformationFunctions.MarkEnabledAndDisabledItems(System.Web.UI.WebControls.DropDownList,System.String,System.String)">
            <summary>
            Sets different css styles to enabled and disabled dropdownlist items.
            </summary>
            <param name="drpTemp">Dropdownlist control</param>
            <param name="valueFieldName">Field name with ID value</param>
            <param name="statusFieldName">Field name with status value</param>
        </member>
        <member name="T:CMS.Ecommerce.EcommerceMethods">
            <summary>
            Ecommerce methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetAddToShoppingCartLink(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns link to "add to shopping cart".
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetAddToWishListLink(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns link to add specified product to the user's wishlist.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetRemoveFromWishListLink(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns link to remove specified product from the user's wishlist.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetPublicStatusName(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns the public SKU status display name.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetSKUPriceSaving(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns amount of saved money based on the difference between product seller price and product list price or price before discount.
            Catalog discounts and/or taxes are included based on the site settings.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetSKUOriginalPrice(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns SKURetailPrice or price before discounts if saving is bigger.
            Returns zero if price saving is zero.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.ShoppingCartURL(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns URL to the shopping cart.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.WishlistURL(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns URL to the wish list.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetPrice(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Get SKU price in given currency. Its basic SKU price without adjustments like taxes, discounts, options.
            </summary>
            <param name="context">Evaluation context</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetProductUrl(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns user friendly URL of the specified SKU and site name.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetProductUrlForFeed(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns URL of the specified product with feed parameter.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetEproductUrl(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns e-product download URL.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetProductUrlByGUID(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns user friendly URL of the specified SKU and site name.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetManufacturer(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Gets object from the specified column of the manufacturer with specific ID.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetDepartment(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Gets object from the specified column of the department with specific ID.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetSupplier(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Gets object from the specified column of the supplier with specific ID.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetInternalStatus(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Gets object from the specified column of the internal status with specific ID.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetPublicStatus(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Gets object from the specified column of the public status with specific ID.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetProductImage(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns complete HTML code of the specified resized product image, if not such image exists, default image is returned.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.FormatPrice(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns price rounded and formatted according to the current currency properties.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetMainSiteCurrency(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns main currency for a given site.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetShoppingCartItemsCount(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns number of products in current shopping cart.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.IsOptionUsedInVariants(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if option is used in variant.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetCouponsMessage(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns info message about coupon usage.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetMultiBuyCouponsMessage(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns info message about coupon usage.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.CheckCustomerSiteID(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if customer is anonymous on current site or has login on current site.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetMassUnit(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns mass unit (e.g. lb or kg) used for expressing masses.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.EcommerceMethods.GetFormattedPrice(System.Object,System.Object)">
            <summary>
            Returns price rounded and formatted according to the current currency properties.
            </summary>
            <param name="priceObj">Price to be formatted</param>
            <param name="roundObj">True - price is rounded according to the current currency settings before formatting</param>
        </member>
        <member name="T:CMS.Ecommerce.MultiBuyDiscountMethods">
            <summary>
            MultiBuy discount methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountMethods.GetMultiBuyProductSelectorWhereCondition(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns where condition to remove products which can not be used in MultiBuy discount.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountMethods.GenerateSiteCondition">
            <summary>
            Generates where condition to select only products usable on current site, current site products and global products if they are allowed on current site.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.MultiBuyDiscountMethods.GetMultiBuyDepartmentSelectorWhereCondition(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Generates where condition to select only departments used in current site 
            and global departments depending on allow global departments setting,
            and departments which can by managed by current user.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.Ecommerce.OptionCategoryMethods">
            <summary>
            Option category methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryMethods.IsProductGlobal(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if product is global.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartMethods">
            <summary>
            Shopping cart methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartMethods.IsProductInShoppingCart(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if shopping cart contains product with defined GUID.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartMethods.ShoppingCartContainsAnyOfProducts(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if shopping cart contains at least one product defined by product GUIDs.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartMethods.ShoppingCartContainsAllOfProducts(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if shopping cart contains all products defined by product GUIDs.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartMethods.ShoppingCartContainsProducts(System.Object[],System.Boolean)">
            <summary>
            Evaluate if Shopping cart contains products (all by default).
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="containsAny">if set to true, check if contains any of products; all otherwise</param>
        </member>
        <member name="T:CMS.Ecommerce.SKUMethods">
            <summary>
            Methods for selecting SKUs - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUMethods.GetBundleSelectorWhereCondition(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns where condition to select bundle items.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.ModuleUsageTracking.EcommerceUsageDataSource.GetData">
            <summary>
            Get Ecommerce module statistical data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ModuleUsageTracking.EcommerceUsageDataSource.GetParentProductsCount">
            <summary>
            Returns the number of products (variants and product options excluded).
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ModuleUsageTracking.EcommerceUsageDataSource.GetVariantsCount">
            <summary>
            Returns the number of variants (options excluded).
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ModuleUsageTracking.EcommerceUsageDataSource.GetSitesWithOrdersCount">
            <summary>
            Returns the number of sites having at least one order.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ModuleUsageTracking.EcommerceUsageDataSource.GetProductDocumentsCount">
            <summary>
            Returns the number of product documents (nodes bound to SKU).
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ModuleUsageTracking.EcommerceUsageDataSource.GetUserDepartmentBindingsCount">
            <summary>
            Returns the number of user-department bindings
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ModuleUsageTracking.EcommerceUsageDataSource.GetExRateFromGlobalMainCurrencyCount">
            <summary>
            Returns the number of exchange tables with exchange rate from global main currency filled.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CMS.Ecommerce.ModuleUsageTracking.EcommerceUsageDataSource.Name">
            <summary>
            Get the data source name.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ECommerceActionContext">
            <summary>
            Ecommerce Action context. Ensures context for the actions block.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceActionContext.mSetLowestPriceToParent">
            <summary>
            Indicates if system automatically sets the parent product price of the cheapest product variant.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceActionContext.mAssignDefaultTaxesToProducts">
            <summary>
            Indicates if system automatically assigns default tax classes to new products based on department configuration.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceActionContext.RestoreOriginalValues">
            <summary>
            Restores the original values to the context
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceActionContext.SetLowestPriceToParent">
            <summary>
            Indicates if system automatically set the parent product price of the cheapest product variant.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceActionContext.AssignDefaultTaxesToProducts">
            <summary>
            Indicates if system automatically assigns default tax classes to new products based on department configuration.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceActionContext.CurrentSetLowestPriceToParent">
            <summary>
            Indicates if system automatically set the parent product price of the cheapest product variant within the context.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceActionContext.CurrentAssignDefaultTaxesToProducts">
            <summary>
            Indicates if system automatically assigns default tax classes to new products based on department configuration.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ECommerceModuleMetadata">
            <summary>
            Represents the E-commerce module metadata.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.EcommerceResolvers">
            <summary>
            Resolvers used in e-mail templates and other macro visual components.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.EcommerceResolvers.SKUResolver">
            <summary>
            Returns SKU resolver.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.EcommerceResolvers.CartResolver">
            <summary>
            Simplified shopping cart resolver.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.EcommerceResolvers.ShoppingCartResolver">
            <summary>
            Shopping cart resolver.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.EcommerceResolvers.EcommerceResolver">
            <summary>
            E-commerce e-mail template macro resolver.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.EcommerceResolvers.EcommerceEproductExpirationResolver">
            <summary>
            E-commerce expiring e-product e-mail template macro resolver.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ECommerceContext">
            <summary>
            E-commerce context.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedForPermission(System.String)">
            <summary>
            Checks the specified ecommerce permission for current user.
            </summary>
            <param name="permissionName">Permission name to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedForDepartment(System.Int32)">
            <summary>
            Checks whether current user is authorized to access products from the specified department.
            </summary>
            <param name="departmentId">ID of the department</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyCustomer">
            <summary>
            Indicates if user is authorized to modify specific customer. 
            'EcommerceModify' OR 'ModifyCustomers' permission is checked.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyDiscount">
            <summary>
            Indicates if user is authorized to modify discounts. 
            </summary>       
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyDiscountCoupon(CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Indicates if user is authorized to modify specific discount coupon. 
            For global discount coupon: 'EcommerceGlobalModify' permission is checked. 
            For site-specific discount coupon: 'EcommerceModify' OR 'ModifyDiscounts' permission is checked.
            </summary>
            <param name="couponObj">Discount coupon to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyDiscountCoupon(System.Boolean)">
            <summary>
            Indicates if user is authorized to modify discount coupons.
            </summary>
            <param name="global">For global discount coupons (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific discount coupons (global = False): 'EcommerceModify' OR 'ModifyDiscounts' permission is checked.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyManufacturer(CMS.Ecommerce.ManufacturerInfo)">
            <summary>
            Indicates if current user is authorized to modify specific manufacturer. 
            For global manufacturer: 'EcommerceGlobalModify' permission is checked. 
            For site-specific manufacturer: 'EcommerceModify' OR 'ModifyManufacturers' permission is checked.
            </summary>
            <param name="manufacturerObj">Manufacturer to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyManufacturer(System.Boolean)">
            <summary>
            Indicates if user is authorized to modify manufacturers.
            </summary>
            <param name="global">For global manufacturers (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific manufacturers (global = False): 'EcommerceModify' OR 'ModifyManufacturers' permission is checked.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyOptionCategory(CMS.Ecommerce.OptionCategoryInfo)">
            <summary>
            Indicates if user is authorized to modify specific option category. 
            For global option category: 'EcommerceGlobalModify' permission is checked. 
            For site-specific manufacturer: 'EcommerceModify' OR 'ModifyProducts' permission is checked.
            </summary>
            <param name="categoryObj">Option category to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifyOptionCategory(System.Boolean)">
            <summary>
            Indicates if user is authorized to modify option categories.
            </summary>
            <param name="global">For global option categories (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific option categories (global = False): 'EcommerceModify' OR 'ModifyProducts' permission is checked.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifySKU(CMS.Ecommerce.SKUInfo)">
            <summary>
            Indicates if user is authorized to modify specific SKU. 
            For global SKU: 'EcommerceGlobalModify' permission is checked. 
            For site-specific SKU: 'EcommerceModify' OR 'ModifyProducts' permission is checked.
            </summary>
            <param name="skuObj">SKU to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifySKU(System.Boolean)">
            <summary>
            Indicates if user is authorized to modify SKUs.
            </summary>
            <param name="global">For global SKUs (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific SKUs (global = False): 'EcommerceModify' OR 'ModifyProducts' permission is checked.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifySupplier(CMS.Ecommerce.SupplierInfo)">
            <summary>
            Indicates if user is authorized to modify specific supplier. 
            For global supplier: 'EcommerceGlobalModify' permission is checked. 
            For site-specific supplier: 'EcommerceModify' OR 'ModifySuppliers' permission is checked.
            </summary>
            <param name="supplierObj">Supplier to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.IsUserAuthorizedToModifySupplier(System.Boolean)">
            <summary>
            Indicates if user is authorized to modify suppliers.
            </summary>
            <param name="global">For global suppliers (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific suppliers (global = False): 'EcommerceModify' OR 'ModifySuppliers' permission is checked.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.CheckCustomerSiteID(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Returns true if customer is anonymous on current site or has login on current site. 
            Returns true also for anonymous customers with no CustomerSiteID set when current user has global admin privilege level.
            </summary>
            <param name="customer">Customer object</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.SetCurrentShoppingCart(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sets cookie, context values according to given shopping cart.
            </summary>
            <param name="cart">Shopping cart info object.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceContext.GetPreferredCurrencyID(CMS.Membership.UserInfo,CMS.Ecommerce.CustomerInfo)">
            <summary>
            Returns preferred currency of customer.
            </summary>
            <param name="currentUser">Current user.</param>
            <param name="customer">Current customer.</param>
            <returns></returns>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.MoreCurrenciesUsedOnSite">
            <summary>
            Returns true, if more than one currency is used and enabled on current site, otherwise false.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.IsExchangeRateFromGlobalMainCurrencyMissing">
            /// <summary>
            Indicates if exchange rate from global main currency is missing in the last valid exchange table. Returns false if site uses
            global currencies or global exchange rates or code of site main currency is the same as code of global main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentCustomer">
            <summary>
            Current customer.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentCustomerCountry">
            <summary>
            Current customer country.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentCustomerState">
            <summary>
            Current customer state.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentShoppingCart">
            <summary>
            Returns the current Shopping cart info.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentCurrency">
            <summary>
            Current currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentExchangeRate">
            <summary>
            Exchange Rate.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentManufacturer">
            <summary>
            Current manufacturer object according the URL parameter of the current request. 
            It is available when the request contains parameters "manufacturerId" or "manufacturerName" with valid value of the manufacturer.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentProduct">
            <summary>
            Current product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentProductDepartment">
            <summary>
            Current product department.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentProductSupplier">
            <summary>
            Current product supplier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentProductInternalStatus">
            <summary>
            Current product internal status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceContext.CurrentProductPublicStatus">
            <summary>
            Current product public status.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ECommerceModule">
            <summary>
            Represents the E-commerce module.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.OnInit">
            <summary>
            Initializes the module
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.CheckPermissions_Before(System.Object,CMS.DataEngine.ObjectSecurityEventArgs)">
            <summary>
            Checks permissions for e-commerce macro rules.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.SynchronizeTask_After(System.Object,CMS.Synchronization.StagingTaskEventArgs)">
            <summary>
             Fires after the staging processes task.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.ProcessTask_Before(System.Object,CMS.Synchronization.StagingSynchronizationEventArgs)">
            <summary>
            Fires before the staging processes task.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.Import_Before(System.Object,CMS.CMSImportExport.ImportBaseEventArgs)">
            <summary>
            Ensures that global shipping options are imported to 8.2 and higher version.
            Since 8.2 only site shipping options are allowed.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.ClearHashtables(System.Boolean)">
            <summary>
            Clears the module hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceModule.CheckLicense(System.String,CMS.DataEngine.FeatureEnum,CMS.DataEngine.ObjectActionEnum)">
            <summary>
            Checks the license.
            </summary>
            <param name="domain">Domain name</param>
            <param name="feature">Feature</param>
            <param name="action">Action</param>
        </member>
        <member name="T:CMS.Ecommerce.EcommercePermissions">
            <summary>
            Class containing string constants of all e-commerce module permissions.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.ECOMMERCE_READ">
            <summary>
            Constant representing 'EcommerceRead' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.ECOMMERCE_MODIFY">
            <summary>
            Constant representing 'EcommerceModify' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.ECOMMERCE_MODIFYGLOBAL">
            <summary>
            Constant representing 'EcommerceGlobalModify' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.ECOMMERCE_DESTROY">
            <summary>
            Constant representing 'Destroy' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.CONFIGURATION_READ">
            <summary>
            Constant representing 'ConfigurationRead' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.CONFIGURATION_MODIFY">
            <summary>
            Constant representing 'ConfigurationModify' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.CONFIGURATION_MODIFYGLOBAL">
            <summary>
            Constant representing 'ConfigurationGlobalModify' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.ORDERS_READ">
            <summary>
            Constant representing 'ReadOrders' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.ORDERS_MODIFY">
            <summary>
            Constant representing 'ModifyOrders' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.REPORTS_READ">
            <summary>
            Constant representing 'ReadReports' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.CUSTOMERS_READ">
            <summary>
            Constant representing 'ReadCustomers' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.CUSTOMERS_MODIFY">
            <summary>
            Constant representing 'ModifyCustomers' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.PRODUCTS_READ">
            <summary>
            Constant representing 'ReadProducts' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.PRODUCTS_MODIFY">
            <summary>
            Constant representing 'ModifyProducts' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.PRODUCTS_ACCESSALLDEPARTMENTS">
            <summary>
            Constant representing 'AccessAllDepartments' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.DISCOUNTS_READ">
            <summary>
            Constant representing 'ReadDiscounts' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.DISCOUNTS_MODIFY">
            <summary>
            Constant representing 'ModifyDiscounts' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.MANUFACTURERS_READ">
            <summary>
            Constant representing 'ReadManufacturers' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.MANUFACTURERS_MODIFY">
            <summary>
            Constant representing 'ModifyManufacturers' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.SUPPLIERS_READ">
            <summary>
            Constant representing 'ReadSuppliers' permission
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.EcommercePermissions.SUPPLIERS_MODIFY">
            <summary>
            Constant representing 'ModifySuppliers' permission
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ECommerceSettings">
            <summary>
            Class providing access to E-commerce related settings.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_ANONYMOUS_CUSTOMERS">
            <summary>
            Represents CMSStoreAllowAnonymousCustomers e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SHOPPINGCART_URL">
            <summary>
            Represents CMSShoppingCartURL e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.WISHLIST_URL">
            <summary>
            Represents CMSWishlistURL e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.DEFAULT_PRODUCT_IMAGE_URL">
            <summary>
            Represents CMSDefaultProductImageURL e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.REDIRECT_TO_SHOPPINGCART">
            <summary>
            Represents CMSStoreRedirectToShoppingCart e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.INVOICE_TEMPLATE">
            <summary>
            Represents CMSStoreInvoiceTemplate e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.DEFAULT_COUNTRY_NAME">
            <summary>
            Represents CMSStoreDefaultCountryName e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SHOW_TAX_REGISTRATION_ID">
            <summary>
            Represents CMSStoreShowTaxRegistrationID e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SHOW_ORGANIZATION_ID">
            <summary>
            Represents CMSStoreShowOrganizationID e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SEND_EMAILS_FROM">
            <summary>
            Represents CMSStoreSendEmailsFrom e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SEND_EMAILS_TO">
            <summary>
            Represents CMSStoreSendEmailsTo e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_EXTRA_COMPANYADDRESS">
            <summary>
            Represents CMSStoreUseExtraCompanyAddress e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SEND_ORDER_NOTIFICATION">
            <summary>
            Represents CMSStoreSendOrderNotification e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.SEND_PAYMENT_NOTIFICATION">
            <summary>
            Represents CMSStoreSendPaymentNotification e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.CHECKOUT_PROCESS">
            <summary>
            Represents CMSStoreCheckoutProcess e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.REQUIRE_COMPANYINFO">
            <summary>
            Represents CMSStoreRequireCompanyInfo e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.APPLY_TAXES_BASED_ON">
            <summary>
            Represents CMSStoreApplyTaxBasedOn e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.WEIGHT_FORMATTING_STRING">
            <summary>
            Represents CMSStoreWeightFormattingString e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.MASS_UNIT">
            <summary>
            Represents CMSStoreMassUnit e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_CUSTOMER_CULTURE_FOR_EMAILS">
            <summary>
            Represents CMSStoreUseCustomerCultureForEmails e-commerce settings key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_PRODUCTS">
            <summary>
            Represents CMSStoreAllowGlobalProducts e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_PRODUCT_OPTIONS">
            <summary>
            Represents CMSStoreAllowGlobalProductOptions e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_MANUFACTURERS">
            <summary>
            Represents CMSStoreAllowGlobalManufacturers e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_SUPPLIERS">
            <summary>
            Represents CMSStoreAllowGlobalSuppliers e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_DISCOUNT_COUPONS">
            <summary>
            Represents CMSStoreAllowGlobalDiscountCoupons e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_DEPARTMENTS">
            <summary>
            Represents CMSStoreAllowGlobalDepartments e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_SHIPPING_OPTIONS">
            <summary>
            Represents CMSStoreAllowGlobalShippingOptions e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_GLOBAL_PAYMENT_METHODS">
            <summary>
            Represents CMSStoreAllowGlobalPaymentMethods e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_TAX_CLASSES">
            <summary>
            Represents CMSStoreUseGlobalTaxClasses e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_CURRENCIES">
            <summary>
            Represents CMSStoreUseGlobalCurrencies e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_EXCHANGE_RATES">
            <summary>
            Represents CMSStoreUseGlobalExchangeRates e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_CREDIT">
            <summary>
            Represents CMSStoreUseGlobalCredit e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_ORDER_STATUS">
            <summary>
            Represents CMSStoreUseGlobalOrderStatus e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_PUBLIC_STATUS">
            <summary>
            Represents CMSStoreUseGlobalPublicStatus e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_INTERNAL_STATUS">
            <summary>
            Represents CMSStoreUseGlobalInternalStatus e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.USE_GLOBAL_INVOICE">
            <summary>
            Represents CMSStoreUseGlobalInvoice e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.INVOICE_NUMBER_PATTERN">
            <summary>
            Pattern (macro expression) used to generate an invoice number.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.EPRODUCTS_REMINDER">
            <summary>
            Represents CMSStoreEProductsReminder e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.REGISTRATION_CONVERSION_NAME">
            <summary>
            Represents CMSStoreRegistrationConversionName e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.REGISTRATION_CONVERSION_VALUE">
            <summary>
            Represents CMSStoreRegistrationConversionValue e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ORDER_CONVERSION_NAME">
            <summary>
            Represents CMSStoreOrderConversionName e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ORDER_CONVERSION_VALUE">
            <summary>
            Represents CMSStoreOrderConversionValue e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ADD_TO_CART_CONVERSION_NAME">
            <summary>
            Represents CMSStoreAddToShoppingCartConversionName e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ADD_TO_CART_CONVERSION_VALUE">
            <summary>
            Represents CMSStoreAddToShoppingCartConversionValue e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.PRODUCTS_STARTING_PATH">
            <summary>
            Represents CMSStoreProductsStartingPath e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.ALLOW_PRODUCTS_WITHOUT_DOCUMENTS">
            <summary>
            Represents CMSStoreAllowProductsWithoutDocuments e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.PRODUCTS_TREE">
            <summary>
            Represents CMSStoreProductsTree e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.PRODUCTS_ARE_NEW_FOR">
            <summary>
            Represents CMSStoreProductsAreNewFor e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.DISPLAY_PRICE_INCLUDING_DISCOUNTS">
            <summary>
            Represents CMSStoreDisplayPriceIncludingDiscounts e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.DISPLAY_PRICE_INCLUDING_TAXES">
            <summary>
            Represents CMSStoreDisplayPriceIncludingTaxes e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.RELATED_PRODUCTS_RELATIONSHIP_NAME">
            <summary>
            Represents CMSStoreRelatedProductsRelationshipName e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.NEW_PRODUCT_STATUS">
            <summary>
            Represents CMSStoreNewProductStatus e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.DISPLAY_PRODUCTS_IN_SECTIONS_TREE">
            <summary>
            Represents CMSStoreDisplayProductsInSectionsTree e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.CHEAPEST_VARIANT_ADVERTISING">
            <summary>
            Represents CMSCheapestVariantAdvertising e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.AUTOMATIC_REGISTRATION_CUSTOMER">
            <summary>
            Represents CMSStoreAutoRegisterCustomer e-commerce setting key name.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceSettings.AUTOMATIC_REGISTRATION_EMAIL_TEMPLATE">
            <summary>
            Represents CMSStoreAutoRegistrationEmailTemplate e-commerce setting key name.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowAnonymousCustomers(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if customers need to register in your site so that they can make the purchase.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.ShoppingCartURL(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the URL of the shopping cart page.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.WishListURL(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the URL of the wish list page.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.DefaultProductImageURL(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the URL of the default product image which is used when image of the product is not specified.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.RedirectToShoppingCart(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if user will be redirected to shopping cart after adding product to cart.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.InvoiceTemplate(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets HTML template used to generate an invoice (or receipt) after an order is finished and saved.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.DefaultCountryName(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets default country, choose your country or country where you sell the most. All taxes are applied based on their values in the default country unless the customer specifies their country or state during the checkout process.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.ShowTaxRegistrationID(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if organization ID field (e.g. VAT registration ID) should be displayed.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.ShowOrganizationID(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if organization ID field should be displayed.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.SendEmailsFrom(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets an e-mail address the e-commerce notification e-mails are sent from.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.SendEmailsTo(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets site-related e-mail address (e.g. merchant's e-mail address) the e-commerce notification e-mails are sent to.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseExtraCompanyAddress(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if the option of providing company address is available in the check out process.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.SendOrderNotification(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if e-mail notifications are sent after an order is finished and saved.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.SendPaymentNotification(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if e-mail notifications are sent after an order payment is completed.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.CheckoutProcess(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the checkout process used in the store shopping cart.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.RequireCompanyInfo(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if it is compulsory to provide company account information in the check out process.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.ApplyTaxesBasedOn(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates whether the tax is applied based on shipping or billing address.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.WeightFormattingString(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets the format used to display product weight. Use {0} expression to insert the weight into the formatting string.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.MassUnit">
            <summary>
            Gets the mass unit code used by the system to represent weights.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseCustomerCultureForEmails(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if emails to customer will be sent in shopping cart culture. 
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalProducts(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global products are allowed.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalProductOptions(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global product options are allowed.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalManufacturers(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global manufacturers are allowed.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalSuppliers(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global suppliers are allowed.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalDiscountCoupons(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global discount coupons are allowed.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalDepartments(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global departments are allowed.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalShippingOptions(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global shipping options are allowed.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalPaymentMethods(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global payment methods are allowed.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalTaxClasses(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global tax classes are used.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalCurrencies(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global currencies are used.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalExchangeRates(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global exchange rates are used.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalCredit(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global credit is used.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalOrderStatus(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global order statuses are used.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalPublicStatus(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global public statuses are used.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalInternalStatus(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global internal statuses are used.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.UseGlobalInvoice(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if global invoice is used.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.InvoiceNumberPattern(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Pattern (macro expression) for generating of invoice number.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.EProductsReminder(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Gets number of days before e-product expiration when reminder is to be sent.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.ProductsStartingPath(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Path within the content tree where sub-tree of product sections starts.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowProductsWithoutDocuments(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates whether it is possible to create products without document data.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.ProductsTree(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns the mode of displaying tree in the products administration UI.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.ProductsAreNewFor(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Number of days for which created products are marked as 'new products' in the store. 
            Days are counted from the product 'In store from' property.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.DisplayPriceIncludingDiscounts(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if product prices on the live site are displayed including discounts. 
            This takes effect only to prices which are displayed using GetSKUFormattedPrice() method.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.DisplayPriceIncludingTaxes(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if product prices on the live site are displayed including taxes. 
            This takes effect only to prices which are displayed using GetSKUFormattedPrice() method.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.RelatedProductsRelationshipName(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Relationship name to be used for related products.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.NewProductStatus(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Product public status which represents the status of the product which is evaluated as a new product 
            (according to the 'Products are new for' setting and 'In store from' product property).        
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.DisplayProductsInSectionsTree(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if products will be displayed in products sections tree. This setting has no effect when not using sections tree.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowGlobalObjects(CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Indicates if global objects of given type are allowed/used on the site specified by site name.
            </summary>
            <param name="siteIdentifier">Name or ID of the site.</param>
            <param name="objectType">Type of object to get settings value for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AllowCombineSiteAndGlobal(System.String)">
            <summary>
            Indicates if ecommerce object of given type can be combined site and global within one site. 
            False means that site can use only global or only site records.
            </summary>
            <param name="objectType">Type of ecommerce object to get settings value for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.CheapestVariantAdvertising(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if the system updates the product price, visible in the product listing, automatically with the price of the cheapest product variant.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AutomaticCustomerRegistration(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Indicates if customer is automatically registered after checkout process and email is send.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AutomaticRegistrationEmailTemplateCodeName(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns email template code name for automatic customer registration email notification.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.GetGlobalKeyForType(System.String)">
            <summary>
            Returns settings key name allowing global object of given object type.
            </summary>
            <param name="objectType">Object type name</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.RegistrationConversionName(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Name of the conversion that will be logged when a user successfully registers on the website through the checkout process.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.RegistrationConversionValue(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Number that will be recorded along with the Registration conversion when it is logged. 
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.OrderConversionName(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Name of the conversion that will be logged when a user completes an order.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.OrderConversionValue(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Number that will be recorded along with the Order conversion when it is logged. 
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AddToCartConversionName(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Name of the conversion that will be logged when a user adds a product to the shopping cart.
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.AddToCartConversionValue(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Number that will be recorded along with the specified conversion when a product is added to the shopping cart. 
            </summary>
            <param name="siteIdentifier">Code name or ID of the site. Use null or empty string for global setting</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.GetApplyTaxesBasedOnString(CMS.Ecommerce.ApplyTaxBasedOnEnum)">
            <summary>
            Converts ApplyTaxBasedOnEnum to string value.
            </summary>
            <param name="taxBasedOn">TaxBased on option.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSettings.GetProductsTreeModeString(CMS.Ecommerce.ProductsTreeModeEnum)">
            <summary>
            Converts ProductsTreeModeEnum to string value. Default value is None.
            </summary>
            <param name="treeMode">Product tree mode option.</param>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceSettings.EnableOrderItemEditing">
            <summary>
            If true, order item parameters, such as order item name and order item unit price, can be modified when editing an existing order.
            Value is taken from webconfig key CMSEnableOrderItemEditing. Default value is false.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceSettings.UseMetaFileForProductImage">
            <summary>
            Indicates if meta file should be used for product image. Value is taken from webconfig key CMSUseMetaFileForProductImage.
            Default value is true.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceSettings.ShoppingCartExpirationPeriod">
            <summary>
            Number of days before the shopping cart is expired. Value is taken from webconfig key CMSShoppingCartExpirationPeriod.
            Default value is 30 days.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ECommerceSettings.ProvidersCacheMinutes">
            <summary>
            Time (minutes) used for caches used in ecommerce providers. Default value is 10 minutes.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.AddressInfo">
            <summary>
            AddressInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.AddressInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.AddressInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.DeleteAddress">
            <summary>
            Deletes the address object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.SetAddress">
            <summary>
            Updates the address object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns value of property (additional support for Country and State properties).
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.ToMacroString">
            <summary>
            Returns formatted address text.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.#ctor">
            <summary>
            Constructor - Creates an empty AddressInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AddressInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressCustomerID">
            <summary>
            Address customer ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressZip">
            <summary>
            Address ZIP code.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressStateID">
            <summary>
            Address state ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressPhone">
            <summary>
            Address phone.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressCountryID">
            <summary>
            Address country ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressID">
            <summary>
            Address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressName">
            <summary>
            Address name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressPersonalName">
            <summary>
            Address personal name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressLine1">
            <summary>
            Address line 1.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressEnabled">
            <summary>
            Indicates if the address is enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressLine2">
            <summary>
            Address line 2.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressCity">
            <summary>
            Address city.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressIsShipping">
            <summary>
            Indicates if the address is supposed to be used as shipping address.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressIsBilling">
            <summary>
            Indicates if the address is supposed to be used as billing address.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressIsCompany">
            <summary>
            Indicates if the address is supposed to be used as company address.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressGUID">
            <summary>
            Address GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AddressInfo.AddressLastModified">
            <summary>
            Date and time when the address was last modified.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.AddressInfoProvider">
            <summary>
            Class providing AddressInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddresses">
            <summary>
            Returns the query for all addresses.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressInfo(System.Int32)">
            <summary>
            Returns address with specified ID.
            </summary>
            <param name="addressId">Address ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressInfo(System.Guid)">
            <summary>
            Returns address with specified GUID.
            </summary>
            <param name="addressGuid">Address GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.SetAddressInfo(CMS.Ecommerce.AddressInfo)">
            <summary>
            Sets (updates or inserts) specified address.
            </summary>
            <param name="addressObj">Address to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.DeleteAddressInfo(CMS.Ecommerce.AddressInfo)">
            <summary>
            Deletes specified address.
            </summary>
            <param name="addressObj">Address to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.DeleteAddressInfo(System.Int32)">
            <summary>
            Deletes address with specified ID.
            </summary>
            <param name="addressId">Address ID</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddresses(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns query for all addresses matching the specified parameters.
            </summary>
            <param name="customerId">ID of the customer the address belongs to</param>
            <param name="billing">Indicates if only addresses suitable for billing address are to be included. </param>
            <param name="shipping">Indicates if only addresses suitable for shipping address are to be included.</param>
            <param name="company">Indicates if only addresses suitable for company address are to be included.</param>
            <param name="onlyEnabled">Indicates if only customer's enabled addresses should be returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressName(CMS.Ecommerce.AddressInfo)">
            <summary>
            Returns address name created from the address parameters. The format of the address name is [personal or company name], [address line 1], [address line 2], [city].
            </summary>
            <param name="addressObj">Address data</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressInfoInternal(System.Int32)">
            <summary>
            Returns address with specified ID.
            </summary>
            <param name="addressId">Address ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressInfoInternal(System.Guid)">
            <summary>
            Gets the address with specified GUID.
            </summary>
            <param name="addressGuid">Address GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.SetAddressInfoInternal(CMS.Ecommerce.AddressInfo)">
            <summary>
            Sets (updates or inserts) specified address.
            </summary>
            <param name="addressObj">Address to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.DeleteAddressInfoInternal(CMS.Ecommerce.AddressInfo)">
            <summary>
            Deletes specified address.
            </summary>
            <param name="addressObj">Address to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressesInternal(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns query for all addresses matching the specified parameters.
            </summary>
            <param name="customerId">ID of the customer the address belongs to</param>
            <param name="billing">Indicates if only addresses suitable for billing address are to be included. </param>
            <param name="shipping">Indicates if only addresses suitable for shipping address are to be included.</param>
            <param name="company">Indicates if only addresses suitable for company address are to be included.</param>
            <param name="onlyEnabled">Indicates if only customer's enabled addresses should be returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.AddressInfoProvider.GetAddressNameInternal(CMS.Ecommerce.AddressInfo)">
            <summary>
            Returns address name created from the address parameters. The format of the address name is [personal or company name], [address line 1], [address line 2], [city].
            </summary>
            <param name="addressObj">Address data</param>
        </member>
        <member name="T:CMS.Ecommerce.ApplyTaxBasedOnEnum">
            <summary>
            Options saying what the taxes are to be based on.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ApplyTaxBasedOnEnum.BillingAddress">
            <summary>
            Taxes are based on billing address.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ApplyTaxBasedOnEnum.ShippingAddress">
            <summary>
            Taxes are based on shipping address.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUImport">
            <summary>
            Handles special actions during the SKU import process.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUImport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUExport">
            <summary>
            Handles special actions during the SKU export process.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUExport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUExport.RegisterTranslationRecords(System.Data.DataSet,System.String,CMS.DataEngine.TranslationHelper,System.String[])">
            <summary>
            Ensure translation records registration.
            </summary>
            <param name="data">Source dataset</param>
            <param name="objectType">Type of the object</param>
            <param name="th">Translation helper</param>
            <param name="excludedNames">Excluded object names</param>
        </member>
        <member name="T:CMS.Ecommerce.ExportSpecialActions">
            <summary>
            Handles special actions during the export process.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ImportSpecialActions">
            <summary>
            Handles special actions during the import process.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ImportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderAddressInfo">
            <summary>
            OrderAddressInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderAddressInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderAddressInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfo.DeleteAddress">
            <summary>
            Deletes the address object using appropriate provider.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfo.SetAddress">
            <summary>
            Updates the address object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfo.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns value of property (additional support for Country and State properties).
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfo.#ctor">
            <summary>
            Constructor - Creates an empty OrderAddressInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OrderAddressInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.OrderAddressInfo.AddressZip">
            <summary>
            Address ZIP code.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderAddressInfo.AddressStateID">
            <summary>
            Address state ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderAddressInfo.AddressPhone">
            <summary>
            Address phone.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderAddressInfo.AddressCountryID">
            <summary>
            Address country ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderAddressInfo.AddressID">
            <summary>
            Address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderAddressInfo.AddressPersonalName">
            <summary>
            Address personal name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderAddressInfo.AddressLine1">
            <summary>
            Address line 1.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderAddressInfo.AddressLine2">
            <summary>
            Address line 2.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderAddressInfo.AddressCity">
            <summary>
            Address city.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderAddressInfo.AddressGUID">
            <summary>
            Address GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderAddressInfo.AddressLastModified">
            <summary>
            Date and time when the address was last modified.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderAddressInfoProvider">
            <summary>
            Class providing AddressInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfoProvider.GetAddresses">
            <summary>
            Returns the query for all addresses.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfoProvider.SetAddressInfo(CMS.Ecommerce.OrderAddressInfo)">
            <summary>
            Sets (updates or inserts) specified address.
            </summary>
            <param name="addressObj">Address to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfoProvider.DeleteAddressInfo(CMS.Ecommerce.OrderAddressInfo)">
            <summary>
            Deletes specified address.
            </summary>
            <param name="addressObj">Address to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfoProvider.GetAddressInfo(System.Int32)">
            <summary>
            Gets the address information.
            </summary>
            <param name="addressId">The address unique identifier.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfoProvider.DeleteAddressInfo(System.Int32)">
            <summary>
            Deletes address with specified ID.
            </summary>
            <param name="addressId">Address ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfoProvider.CreateOrderAddressInfo(CMS.Ecommerce.IAddress)">
            <summary>
            Creates new order address with data from specified IAddress object.
            </summary>
            <param name="address">The address to copy data from.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfoProvider.SetAddressInfoInternal(CMS.Ecommerce.OrderAddressInfo)">
            <summary>
            Sets (updates or inserts) specified address.
            </summary>
            <param name="addressObj">Address to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfoProvider.DeleteAddressInfoInternal(CMS.Ecommerce.OrderAddressInfo)">
            <summary>
            Deletes specified address.
            </summary>
            <param name="addressObj">Address to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderAddressInfoProvider.CreateOrderAddressInfoInternal(CMS.Ecommerce.IAddress)">
            <summary>
            Creates new order address with data from specified IAddress object.
            </summary>
            <param name="address">The address to copy data from.</param>
        </member>
        <member name="T:CMS.Ecommerce.ProductUIHelper">
            <summary>
            Helper methods for product UI
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductUIHelper.GetNewCultureVersionPageUrl(System.Boolean)">
            <summary>
            Gets URL for new document language version page.
            </summary>
            <param name="appendCurrentQuery">If true, current query string is appended</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductUIHelper.GetProductActionPageUrl(CMS.UIControls.UIPageURLSettings)">
            <summary>
            Gets UI page URL for document action.
            </summary>
            <param name="settings">URL configuration object</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductUIHelper.GetProductEditUrl">
            <summary>
            Gets the product edit URL
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductUIHelper.GetProductPageUrl(CMS.UIControls.UIPageURLSettings)">
            <summary>
            Gets UI page URL for URL configuration object.
            </summary>
            <param name="settings">URL configuration object</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductUIHelper.GetProductDialogConfig(System.String,System.String)">
            <summary>
            Creates DialogConfiguration object for specified product document action.
            </summary>
            <param name="action">Action to create configuration for.</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductUIHelper.EnsureProductBreadcrumbs(CMS.UIControls.Breadcrumbs,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates product breadcrumbs.
            </summary>
            <param name="breadcrumbs">Breadcrumbs control.</param>
            <param name="productText">New object text which is displayed in breadcrumbs.</param>
            <param name="isSection"> Object is section.</param>
            <param name="targetParent">Add Target _parent to parent breadcrumb</param>
            <param name="displaySuffix"> Display breadcrumbs suffix.</param>
        </member>
        <member name="T:CMS.Ecommerce.SKUListInfo">
            <summary>
            SKUListInfo virtual object.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUListInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUListInfo object.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ProductAttributeSet">
            <summary>
            Product attributes set with enhanced functionality
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.#ctor(CMS.Ecommerce.SKUInfo[])">
            <summary>
            Initializes a new instance of the ProductAttributeSet class.
            </summary>
            <param name="productAttributes">The product options.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.#ctor(System.Int32[])">
            <summary>
            Initializes a new instance of the ProductAttributeSet class.
            </summary>
            <param name="productAttributeIds">The product option IDs.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Initializes a new instance of the ProductAttributeSet class.
            </summary>
            <param name="productAttributeIds">The product option IDs.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.#ctor">
            <summary>
            Initializes a new instance of the ProductAttributeSet class.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.Add(CMS.Ecommerce.SKUInfo)">
            <summary>
            Adds the specified attribute product option.
            </summary>
            <param name="productAttribute">The product option.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.Add(System.Int32)">
            <summary>
            Adds the specified (via ID) product option.
            </summary>
            <param name="productAttributeId">The product option ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.FillProductAttributes">
            <summary>
            Fills the product options.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.IsProductAttributeAttribute(CMS.Ecommerce.SKUInfo)">
            <summary>
            Determines whether is specified product option an attribute.
            </summary>
            <param name="productAttribute">The product option.</param>
            <returns>
            True if specified product option is an attribute; otherwise, false.
            </returns>
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.Contains(CMS.Ecommerce.SKUInfo)">
            <summary>
            Determines whether this ProductAttributeSet [contains] [the specified product option].
            </summary>
            <param name="productAttribute">The product option.</param>
            <returns>
              True if this ProductAttributeSet [contains] [the specified product option]; otherwise, false.
            </returns>
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.Contains(System.Int32)">
            <summary>
            Determines whether this ProductAttributeSet [contains] [the specified product option].
            </summary>
            <param name="productAttributeId">The product option ID.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.Contains(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Determines whether this ProductAttributeSet [contains] [the specified product options].
            </summary>
            <param name="productAttributeIds">The product option IDs.</param>       
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductAttributeSet.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.ProductAttributeSet.ProductAttributes">
            <summary>
            Gets or sets the product options.
            </summary>
            <value>
            The product options.
            </value>
        </member>
        <member name="P:CMS.Ecommerce.ProductAttributeSet.ProductAttributeIDs">
            <summary>
            Gets the product option IDs.
            </summary>
            <value>
            The product option IDs.
            </value>
        </member>
        <member name="P:CMS.Ecommerce.ProductAttributeSet.GetCompareCode">
            <summary>
            Gets the unique compare code.
            </summary>
            <value>
            The compare code.
            </value>
        </member>
        <member name="P:CMS.Ecommerce.ProductAttributeSet.Item(System.Int32)">
            <summary>
            Gets the SKUInfo with the specified position.
            </summary>
            <value>
            The SKUInfo.
            </value>
            <param name="index">The position.</param>
            <returns>SKUInfo with the specified position.</returns>
        </member>
        <member name="P:CMS.Ecommerce.ProductAttributeSet.Count">
            <summary>
            Gets the count of product options in set.
            </summary>
            <value>
            The count of product options in set.
            </value>
        </member>
        <member name="P:CMS.Ecommerce.ProductAttributeSet.CategoryIDs">
            <summary>
            Gets the category IDs for specified product options.
            </summary>
            <value>
            The category IDs.
            </value>
        </member>
        <member name="T:CMS.Ecommerce.ProductVariant">
            <summary>
            Envelope form variant-type SKU object, that provides advanced methods a features.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductVariant.#ctor(System.Int32,CMS.Ecommerce.ProductAttributeSet)">
            <summary>
            Initializes a new instance of the ProductVariant class.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">The product options.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductVariant.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ProductVariant class.
            </summary>
            <param name="variantId">The variant ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductVariant.Set">
            <summary>
            Saves this instance of product variant with specified product options to database.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductVariant.CreateVariant(System.Int32)">
            <summary>
            Creates the variant.
            </summary>
            <param name="productId">The product ID.</param>
            <exception cref="T:System.Exception">[ProductVariant.CreateVariant]: Specified product (by ID) does not exist in database.</exception>
        </member>
        <member name="P:CMS.Ecommerce.ProductVariant.Existing">
            <summary>
            Gets a value indicating whether this ProductVariant is already saved (exists) in database.
            </summary>
            <value>
              True if already saved (exists) in database; otherwise, false.
            </value>
        </member>
        <member name="P:CMS.Ecommerce.ProductVariant.Variant">
            <summary>
            Gets the product variant object.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductVariant.ParentProductID">
            <summary>
            Gets the parent product ID of variant.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.ProductVariant.ProductAttributes">
            <summary>
            Gets the product options of this variant.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.VariantHelper">
            <summary>
            Provides advanced manipulation with product variants.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.SetProductVariant(CMS.Ecommerce.ProductVariant)">
            <summary>
            Saves this instance of product variant with specified product options to database.
            </summary>
            <param name="productVariant">The product variant.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetProductVariant(System.Int32,CMS.Ecommerce.ProductAttributeSet)">
            <summary>
            Gets SKU object of product variant from parent product and options.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">The product options.</param>
            <returns>SKU object.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.CreateVariant(System.Int32,CMS.Ecommerce.ProductAttributeSet)">
            <summary>
            Creates new variant object (from product and options) without saving it.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">The product options.</param>
            <returns>New variant object.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.AddNewCategoriesToVariantsOfProduct(System.Int32,CMS.Ecommerce.ProductAttributeSet)">
            <summary>
            Returns existing variants of specified product with added new categories specified with default options. Categories which are already included are ignored.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">Default product options (and their categories) to add.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.DeleteVariant(CMS.Ecommerce.ProductVariant)">
            <summary>
            Deletes the specified variant.
            </summary>
            <param name="variant">The variant.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.DeleteVariant(System.Int32)">
            <summary>
            Deletes the specified variant.
            </summary>
            <param name="productVariantId">The product variant ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.DeleteAllVariants(System.Int32,System.Action{System.Int32})">
            <summary>
            Deletes all variants one by one. If delete operation is successful for processing variant removeSucceededAction with variant ID as a parameter is launched.
            </summary>
            <param name="productId">The product ID with variants to delete.</param>
            <param name="removeSucceededAction">The remove succeeded action with variant ID as a parameter.</param>        
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetVariants(System.Int32)">
            <summary>
            Gets the variants of specified product.
            </summary>
            <param name="productId">The product ID.</param>
            <returns>The variants of specified product.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetProductVariantsCategories(System.Int32,System.Boolean)">
            <summary>
            Gets the product variants categories for specified product.
            </summary>
            <param name="productId">Product ID.</param>
            <param name="onlyEnabled">True - only enabled option categories are included, False - all option categories are included</param>   
            <returns>Product option categories, that are used in specified product variants.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetAllPossibleVariants(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets all possible variants for specified product and all combinations (including existing variants) of options from categories.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="optionCategoriesIds">The option categories ids.</param>
            <remarks>
            Please note, that some of returned objects are already stored in database (existing variants) and some not (all non-existing variants). To ensure that variant is already stored use Variant property CMS.Ecommerce.ProductVariant.Saved.
            </remarks>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetAllPossibleVariants(System.Collections.Generic.List{CMS.Ecommerce.ProductVariant})">
            <summary>
            Gets all possible variants for specified set (Returns provided variants plus remaining combinations).
            </summary>
            <param name="productVariants">The product variants.</param>        
            <exception cref="T:System.Exception">[VariantHelper.GetAllPossibleVariants]: Specified variants must be of the same product.</exception>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetAllPossibleVariantsCount(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets number of all variants, which can be generated including existing variants of options from categories.
            </summary>
            <param name="skuId">The product ID.</param>
            <param name="categoryIds">The option categories ids.</param>
            <returns>Number of all possible variants.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.CheckAvailableProductAttributes(System.Int32,CMS.Ecommerce.ProductAttributeSet)">
            <summary>
            Checks if specified product options are assigned to product and are allowed in it.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">The product options.</param>
            <returns>True if specified product options are assigned to product and are allowed in product; false otherwise.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.CheckVariantCategoriesConsistency(System.Int32,CMS.Ecommerce.ProductAttributeSet)">
            <summary>
            Checks if specified product options contains all and only categories from existing variants of specified product.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">The product options to check.</param>
            <returns>True if product options contains all and only categories from existing variants; False otherwise.</returns>     
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.CheckVariantCategoriesConsistency(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Checks if specified categories are used all and only in variants of specified product.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="categoryIds">The category IDs.</param>
            <returns>True if specified categories are used all and only in variants of specified product; False otherwise.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.CheckVariantOptions(CMS.Ecommerce.ProductVariant)">
            <summary>
            Checks if the variant options in specified variant corresponds with options determined in parent product.
            </summary>
            <param name="variant">The variant.</param>
            <returns>True if variant options in specified variant corresponds with options determined in parent product and false otherwise</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.VariantExists(System.Int32,CMS.Ecommerce.ProductAttributeSet,System.Boolean)">
            <summary>
            Determines that variant for specified product with specified options exists.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">The product options.</param>
            <param name="onlyEnabled">If set to true [process only enabled variants].</param>
            <returns>
            True if variant for specified product with specified options exists and false otherwise.
            </returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.AreCategoriesUsedInVariants(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Checks if the specified categories are used in variants of specified product.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="optionCategoryIds">The option category IDs.</param>
            <returns>
            True if the specified categories are used in variants of specified product and false otherwise.
            </returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.RegenerateSKUNameAndNumber(CMS.Ecommerce.ProductVariant)">
            <summary>
            Regenerates the SKU name and number.
            </summary>
            <param name="productVariant">The product variant.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetUsedProductOptionCategories(System.Int32,System.Nullable{CMS.Ecommerce.OptionCategoryTypeEnum})">
            <summary>
            Gets enabled product option categories included disabled option categories used in product variants.
            </summary>
            <param name="productId">ID of product from which are option categories selected</param>
            <param name="categoryType">Type of option category which are selected</param>
            <returns>
            DataSet with enabled option categories used in product plus disabled categories already used in variants.
            </returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetEnabledOptionsWithVariantOptions(System.Int32,System.Int32)">
            <summary>
            Gets options from option category assigned to sku which are enabled or already used in variants. 
            </summary>
            <param name="skuID">ID of SKU with assigned categories</param>
            <param name="categoryId">Option category from which are options selected</param>
            <returns>Data set with enabled options plus disabled options used in variants</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.SetProductVariantInternal(CMS.Ecommerce.ProductVariant)">
            <summary>
            Saves this instance of product variant with specified product options to database.
            </summary>
            <param name="productVariant">The product variant.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetProductVariantInternal(System.Int32,CMS.Ecommerce.ProductAttributeSet,System.Boolean)">
            <summary>
            Gets SKU object of product variant from parent product and options.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">The product options.</param>
            <param name="onlyEnabled">if set to true [process only enabled variants].</param>
            <returns>SKU object.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetVariantsInternal(System.Int32)">
            <summary>
            Gets the variants of specified product.
            </summary>
            <param name="productId">The product ID.</param>
            <returns>The variants of specified product.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetProductVariantsCategoriesInternal(System.Int32,System.Boolean)">
            <summary>
            Gets the product variants categories for specified product.
            </summary>
            <param name="productId">Product ID.</param>
            <param name="onlyEnabled">True - only enabled option categories are included, False - all option categories are included</param>  
            <returns>Product option categories, that are used in specified product variants.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.CreateVariantInternal(System.Int32,CMS.Ecommerce.ProductAttributeSet)">
            <summary>
            Creates new variant object (from product and options) without saving it.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">The product options.</param>
            <returns>New variant object.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.DeleteVariantInternal(System.Int32)">
            <summary>
            Deletes the specified variant.
            </summary>
            <param name="productVariantId">The product variant ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.CheckAvailableProductAttributesInternal(System.Int32,CMS.Ecommerce.ProductAttributeSet)">
            <summary>
            Checks if specified product options are assigned to product and are allowed in it.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">The product options.</param>
            <returns>True if specified product options are assigned to product and are allowed in product; false otherwise.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.CheckVariantCategoriesConsistencyInternal(System.Int32,CMS.Ecommerce.ProductAttributeSet)">
            <summary>
            Checks if specified product options contains all and only categories from existing variants of specified product.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">The product options to check.</param>
            <returns>True if product options contains all and only categories from existing variants; False otherwise.</returns>       
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.CheckVariantCategoriesConsistencyInternal(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Checks if specified categories are used all and only in variants of specified product.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="categoryIds">The category IDs.</param>
            <returns>True if specified categories are used all and only in variants of specified product; False otherwise.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.CheckVariantOptionsInternal(CMS.Ecommerce.ProductVariant)">
            <summary>
            Checks if the variant options in specified variant corresponds with options determined in parent product.
            </summary>
            <param name="variant">The variant.</param>
            <returns>True if variant options in specified variant corresponds with options determined in parent product and false otherwise</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.VariantExistsInternal(System.Int32,CMS.Ecommerce.ProductAttributeSet,System.Boolean)">
            <summary>
            Determines that variant for specified product with specified options exists.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">The product options.</param>
            <param name="onlyEnabled">if set to true [process only enabled variants].</param>
            <returns>
            True if variant for specified product with specified options exists and false otherwise.
            </returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.AddNewCategoriesToVariantsOfProductInternal(System.Int32,CMS.Ecommerce.ProductAttributeSet)">
            <summary>
            Returns existing variants of specified product with added new categories specified with default options. Categories which are already included are ignored.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="productAttributes">Default product options (and their categories) to add.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.DeleteAllVariantsInternal(System.Int32,System.Action{System.Int32})">
            <summary>
            Deletes all variants one by one. If delete operation is successful for processing variant removeSucceededAction with variant ID as a parameter is launched.
            </summary>
            <param name="productId">The product ID with variants to delete.</param>
            <param name="removeSucceededAction">The remove succeeded action with variant ID as a parameter.</param>        
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetAllPossibleVariantsInternal(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets all possible variants for specified product and all combinations (including existing variants) of options from categories.
            </summary>
            <remarks> 
            Please note, that some of returned objects are already stored in database (existing variants) and some not (all non-existing variants). To ensure that variant is already stored use Variant property CMS.Ecommerce.ProductVariant.Saved.
            </remarks> 
            <param name="productId">The product ID.</param>
            <param name="optionCategoriesIds">The option categories IDs</param>        
            <returns>All possible variants for specified product and all combinations of options from categories</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetAllPossibleVariantsCountInternal(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets number of all variants, which can be generated including existing variants of options from categories.
            </summary>
            <param name="skuId">The product ID.</param>
            <param name="categoryIds">The option categories ids.</param>
            <returns>Number of all possible variants.</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GenerateRemainingVariants(System.Int32,System.Collections.Generic.List{CMS.Ecommerce.ProductVariant},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns list of product variants with newly generated remaining combinations for specified product but with specified variants (listOfVariants) that doesn't need to be saved yet. 
            </summary>
            <param name="productId">The product id.</param>
            <param name="listOfVariants">The list of variants that are already created, but doesn't need to be saved yet.</param>
            <param name="optionCategoryIds">The option category ids. Must correspond with listOfVariants if specified.</param>         
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetAllPossibleVariantsInternal(System.Collections.Generic.List{CMS.Ecommerce.ProductVariant})">
            <summary>
            Gets all possible variants for specified set (Returns provided variants plus remaining combinations).
            </summary>
            <param name="productVariants">The product variants.</param>        
            <exception cref="T:System.Exception">[VariantHelper.GetAllPossibleVariants]: Specified variants must be of the same product.</exception>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.AreCategoriesUsedInVariantsInternal(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Checks if the specified categories are used in variants of specified product.
            </summary>
            <param name="productId">The product ID.</param>
            <param name="optionCategoryIds">The option category IDs.</param>
            <returns>
            True if the specified categories are used in variants of specified product and false otherwise.
            </returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.RegenerateSKUNameAndNumberInternal(CMS.Ecommerce.ProductVariant)">
            <summary>
            Regenerates the SKU name and number.
            </summary>
            <param name="productVariant">The product variant.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetUsedProductOptionCategoriesInternal(System.Int32,System.Nullable{CMS.Ecommerce.OptionCategoryTypeEnum})">
            <summary>
            Gets enabled product option categories included disabled option categories used in product variants.
            </summary>
            <param name="productId">ID of product from which are option categories selected</param>
            <param name="categoryType">Type of option category which are selected</param>
            <returns>
            DataSet with enabled option categories used in product included disabled categories already used in variants.
            </returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.GetEnabledOptionsWithVariantOptionsInternal(System.Int32,System.Int32)">
            <summary>
            Gets options from option category assigned to sku which are enabled or already used in variants. 
            </summary>
            <param name="skuID">ID of SKU with assigned categories</param>
            <param name="categoryId">Option category from which are options selected</param>
            <returns>Data set with enabled options plus disabled options used in variants</returns>
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.Cartesian(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Cartesian product of two lists.
            </summary>
            <param name="first">The first list.</param>
            <param name="second">The second list.</param>      
        </member>
        <member name="M:CMS.Ecommerce.VariantHelper.ScrambledEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Compares two scrambled IEnumerables.
            </summary>        
            <param name="list1">The list1.</param>
            <param name="list2">The list2.</param>        
        </member>
        <member name="T:CMS.Ecommerce.VariantOptionInfo">
            <summary>
            VariantOptionInfo data container class. Represents binding between variant of product and product option which the respective variant contains.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.VariantOptionInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.VariantOptionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.VariantOptionInfo.NewOption">
            <summary>
            Constant for newly added option in variant.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.VariantOptionInfo.ExistingSelectedOption">
            <summary>
            Constant for selected and existing option in variant.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.VariantOptionInfo.ExistingUnselectedOption">
            <summary>
            Constant for unselected option in variant.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfo.#ctor">
            <summary>
            Constructor - Creates an empty VariantOptionInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new VariantOptionInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.VariantOptionInfo.VariantSKUID">
            <summary>
            SKUID of the variant.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VariantOptionInfo.OptionSKUID">
            <summary>
            SKUID of the product option.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.VariantOptionInfoProvider">
            <summary>
            Class providing VariantOptionInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfoProvider.GetVariantOptions">
            <summary>
            Returns the query for all relationships between product variants and options.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfoProvider.GetVariantOptionInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified product variant and option.
            </summary>
            <param name="variantId">Product variant ID (SKUID).</param>
            <param name="optionId">Product option ID (SKUID).</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfoProvider.SetVariantOptionInfo(CMS.Ecommerce.VariantOptionInfo)">
            <summary>
            Sets relationship between specified product variant and option.
            </summary>
            <param name="infoObj">Product-option relationship to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfoProvider.DeleteVariantOptionInfo(CMS.Ecommerce.VariantOptionInfo)">
            <summary>
            Deletes relationship between specified product variant and option.
            </summary>
            <param name="infoObj">Product-option relationship to be deleted.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfoProvider.AddOptionToVariant(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified product variant and option.
            </summary>	
            <param name="variantId">Product variant ID (SKUID).</param>
            <param name="optionId">Product option ID (SKUID).</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfoProvider.RemoveOptionFromVariant(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified product variant and option.
            </summary>
            <param name="variantId">Product variant ID (SKUID).</param>
            <param name="optionId">Product option ID (SKUID).</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfoProvider.GetVariantOptionInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified product variant and option.
            </summary>
            <param name="variantId">Product variant ID (SKUID).</param>
            <param name="optionId">Product option ID (SKUID).</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfoProvider.SetVariantOptionInfoInternal(CMS.Ecommerce.VariantOptionInfo)">
            <summary>
            Sets relationship between specified product variant and option.
            </summary>
            <param name="infoObj">Product-option relationship to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.VariantOptionInfoProvider.DeleteVariantOptionInfoInternal(CMS.Ecommerce.VariantOptionInfo)">
            <summary>
            Deletes relationship between specified product variant and option.
            </summary>
            <param name="infoObj">Product-option relationship to be deleted.</param>
        </member>
        <member name="T:CMS.Ecommerce.ProductListInfo">
            <summary>
            ProductListInfo virtual object.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ProductListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ProductListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductListInfo.#ctor">
            <summary>
            Constructor - Creates an empty ProductListInfo object.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.TrackInventoryTypeEnum">
            <summary>
            Track Inventory Methods
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.TrackInventoryTypeEnum.Disabled">
            <summary>
            Inventory is disabled
            </summary>        
        </member>
        <member name="F:CMS.Ecommerce.TrackInventoryTypeEnum.ByProduct">
            <summary>
            Track by product
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.TrackInventoryTypeEnum.ByVariants">
            <summary>
            Track by variants
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.BundleInventoryTypeEnum">
            <summary>
            Inventory removal options for bundle products.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.BundleInventoryTypeEnum.RemoveBundle">
            <summary>
            Remove only bundle itself from inventory.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.BundleInventoryTypeEnum.RemoveProducts">
            <summary>
            Remove only bundle items from inventory.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.BundleInventoryTypeEnum.RemoveBundleAndProducts">
            <summary>
            Remove both bundle and bundle items from inventory.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OptionCategoryTypeEnum">
            <summary>
            Type of the product option category.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategoryTypeEnum.Products">
            <summary>
            Category of this type represents specific optional accessories of the product which is selected by the customer from the predefined list of products.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategoryTypeEnum.Attribute">
            <summary>
            Category of this type represents specific attribute of the product which is configured by the customer from the predefined list of values, e.g. color.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategoryTypeEnum.Text">
            <summary>
            Category of this type represents text attribute of the product which is entered by the customer, e.g.: label for the T-shirt
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ProductsTreeModeEnum">
            <summary>
            Options specifying how will the products be organized in product management UI.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ProductsTreeModeEnum.None">
            <summary>
            No products tree.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ProductsTreeModeEnum.Sections">
            <summary>
            Products tree based on documents.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUProductTypeEnum">
            <summary>
            SKU product type options.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUProductTypeEnum.Product">
            <summary>
            Standard product type.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUProductTypeEnum.Membership">
            <summary>
            Membership product type.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUProductTypeEnum.EProduct">
            <summary>
            E-product product type.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUProductTypeEnum.Donation">
            <summary>
            Donation product type.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUProductTypeEnum.Bundle">
            <summary>
            Bundle product type.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUProductTypeEnum.Text">
            <summary>
            Text product type. Used for product options to which customer is able to define his custom text, e.g. custom label for a T-shirt.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ItemTax">
            <summary>
            Class representing tax which should be applied to the specified shopping cart item. It implements IItemTax interface.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ItemTax.#ctor">
            <summary>
            Constructor - Creates an empty ItemTax object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ItemTax.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Creates a new ItemTax object from serialized data.
            </summary>
            <param name="info">Stores all the data needed to serialize or deserialize the object</param>
            <param name="context">Describes the source and destination of a given serialized stream</param>
        </member>
        <member name="M:CMS.Ecommerce.ItemTax.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxID">
            <summary>
            Tax class unique identifier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxDisplayName">
            <summary>
            Tax class display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxValue">
            <summary>
            Tax class value. It can be either relative or flat according to the ItemTaxClassIsFlat property.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxIsFlat">
            <summary>
            True - tax class value is flat, False (default) - tax class is relative.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxIsGlobal">
            <summary>
            True - tax class value is set in global main currency, False (default) - tax class value is set in site main currency. 
            Takes effect only if tax class is flat.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxZeroIfIDSupplied">
            <summary>
            True - if customer's tax ID is supplied, the tax value for the customer is zero. False (default) - value of the tax is calculated
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ItemTax.ItemTaxCustomData">
            <summary>
            Tax class custom data.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ECommerceSynchronization">
            <summary>
            Web farm synchronization for the E-commerce module
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSynchronization.Init">
            <summary>
            Initializes the tasks for media files synchronization
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceSynchronization.RecalculateValuesCleanup(System.String,System.String,CMS.Core.BinaryData)">
            <summary>
            Memory cleanup after currency change recalculation
            </summary>
            <param name="target">Task target</param>
            <param name="data">Task data</param>
            <param name="binaryData">Task binary data</param>
        </member>
        <member name="T:CMS.Ecommerce.ECommerceTaskType">
            <summary>
            Web farm task types for E-commerce module
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceTaskType.RecalculateValuesCleanup">
            <summary>
            Memory cleanup after currency change recalculation
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrdersCollection">
            <summary>
            Collection of customer orders represented by OrderInfo objects
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrdersCollection.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor - creates collection of orders for the given customer
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">ID of the site from which the customer orders should be loaded. Use 0 to fill collection with customer orders from all sites.</param>
        </member>
        <member name="P:CMS.Ecommerce.OrdersCollection.TotalVolume">
            <summary>
            Total volume of all customer orders. Value is expressed in site main currency for site orders. 
            Result is in global main currency when collection contains orders from all sites.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderItemSKUFileInfo">
            <summary>
            OrderItemSKUFileInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderItemSKUFileInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderItemSKUFileInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfo.#ctor">
            <summary>
            Constructor - Creates an empty OrderItemSKUFileInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OrderItemSKUFileInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemSKUFileInfo.Token">
            <summary>
            Unique download identifier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemSKUFileInfo.OrderItemID">
            <summary>
            Parent order item ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemSKUFileInfo.FileDownloads">
            <summary>
            Number of times the file was downloaded.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemSKUFileInfo.OrderItemSKUFileID">
            <summary>
            Order item SKU file ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemSKUFileInfo.FileID">
            <summary>
            Associated SKU file ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderItemSKUFileInfoProvider">
            <summary>
            Class providing OrderItemSKUFileInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFiles">
            <summary>
            Returns the query for all order item SKU files.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFileInfo(System.Int32)">
            <summary>
            Returns order item SKU file with specified ID.
            </summary>
            <param name="fileId">Order item SKU file ID.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFileInfo(System.Guid)">
            <summary>
            Returns order item SKU file with specified unique token.
            </summary>
            <param name="token">Order item SKU file unique token.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.SetOrderItemSKUFileInfo(CMS.Ecommerce.OrderItemSKUFileInfo)">
            <summary>
            Sets (updates or inserts) specified order item SKU file.
            </summary>
            <param name="fileObj">Order item SKU file to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.DeleteOrderItemSKUFileInfo(CMS.Ecommerce.OrderItemSKUFileInfo)">
            <summary>
            Deletes specified order item SKU file.
            </summary>
            <param name="fileObj">Order item SKU file to be deleted.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.DeleteOrderItemSKUFileInfo(System.Int32)">
            <summary>
            Deletes order item SKU file with specified ID.
            </summary>
            <param name="fileId">Order item SKU file ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFiles(System.Int32)">
            <summary>
            Returns dataset of all order item SKU files matching the specified parameters with additional details.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFileUrl(System.Guid,System.String,System.Int32)">
            <summary>
            Returns e-product download URL.
            </summary>
            <param name="token">File unique download token</param>
            <param name="fileName">File name</param>
            <param name="siteId">Site ID of the order in which the e-product is included</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFileInfoInternal(System.Int32)">
            <summary>
            Returns order item SKU file with specified ID.
            </summary>
            <param name="fileId">Order item SKU file ID.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFileInfoInternal(System.Guid)">
            <summary>
            Returns order item SKU file with specified unique token.
            </summary>
            <param name="token">Order item SKU file unique token.</param>      
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.SetOrderItemSKUFileInfoInternal(CMS.Ecommerce.OrderItemSKUFileInfo)">
            <summary>
            Sets (updates or inserts) specified order item SKU file.
            </summary>
            <param name="fileObj">Order item SKU file to be set.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.DeleteOrderItemSKUFileInfoInternal(CMS.Ecommerce.OrderItemSKUFileInfo)">
            <summary>
            Deletes specified order item SKU file.
            </summary>
            <param name="fileObj">Order item SKU file to be deleted.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemSKUFileInfoProvider.GetOrderItemSKUFilesInternal(System.Int32)">
            <summary>
            Returns dataset of all order item SKU files matching the specified parameters with additional details.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="T:CMS.Ecommerce.ShippingCostInfo">
            <summary>
            ShippingCostInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShippingCostInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShippingCostInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfo.#ctor">
            <summary>
            Constructor - Creates an empty ShippingCostInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ShippingCostInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.ShippingCostInfo.ShippingCostGUID">
            <summary>
            Shipping cost unique identifier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingCostInfo.ShippingCostLastModified">
            <summary>
            Date and time when the shipping cost was last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingCostInfo.ShippingCostMinWeight">
            <summary>
            Order minimal weight the shipping cost is applied for.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingCostInfo.ShippingCostShippingOptionID">
            <summary>
            ID of the shipping option the shipping cost belongs to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingCostInfo.ShippingCostValue">
            <summary>
            Shipping cost value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingCostInfo.ShippingCostID">
            <summary>
            Shipping cost ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShippingCostInfoProvider">
            <summary>
            Class providing ShippingCostInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCosts">
            <summary>
            Returns the query for all shipping costs.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCosts(System.Int32)">
            <summary>
            Returns dataset of shipping costs for all weight categories in given shipping option. Result is ordered by min weight.
            </summary>
            <param name="shippingOptionId">Id of the shipping option</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCostInfo(System.Int32)">
            <summary>
            Returns shipping cost with specified ID.
            </summary>
            <param name="shippingCostId">Shipping cost ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCostInfo(System.Int32,System.Double)">
            <summary>
            Returns appropriate shipping cost for given shipping option and weight.
            </summary>
            <param name="shippingId">Id of the shipping option</param>
            <param name="weight">Weight of delivery</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.SetShippingCostInfo(CMS.Ecommerce.ShippingCostInfo)">
            <summary>
            Sets (updates or inserts) specified shipping cost.
            </summary>
            <param name="shippingCostObj">Shipping cost to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.DeleteShippingCostInfo(CMS.Ecommerce.ShippingCostInfo)">
            <summary>
            Deletes specified shipping cost.
            </summary>
            <param name="shippingCostObj">Shipping cost to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.DeleteShippingCostInfo(System.Int32)">
            <summary>
            Deletes shipping cost with specified ID.
            </summary>
            <param name="shippingCostId">Shipping cost ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.RecalculateShippingCosts(System.Single,System.Int32,System.String)">
            <summary>
            Recalculates costs values using the given coefficient. Shipping option charge of parent shipping option record will NOT be changed.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional where condition</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCostsInternal(System.Int32)">
            <summary>
            Returns dataset of shipping costs for all weight categories in given shipping option. Result is ordered by min weight descending (from heaviest).
            </summary>
            <param name="shippingOptionId">Id of the shipping option</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCostInfoInternal(System.Int32)">
            <summary>
            Returns shipping cost with specified ID.
            </summary>
            <param name="shippingCostId">Shipping cost ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.GetShippingCostInfoInternal(System.Int32,System.Double)">
            <summary>
            Returns appropriate shipping cost for given shipping option and weight of delivery.
            </summary>
            <param name="shippingId">Id of the shipping option</param>
            <param name="weight">Weight of delivery</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.SetShippingCostInfoInternal(CMS.Ecommerce.ShippingCostInfo)">
            <summary>
            Sets (updates or inserts) specified shipping cost.
            </summary>
            <param name="shippingCostObj">Shipping cost to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.DeleteShippingCostInfoInternal(CMS.Ecommerce.ShippingCostInfo)">
            <summary>
            Deletes specified shipping cost.
            </summary>
            <param name="shippingCostObj">Shipping cost to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingCostInfoProvider.RecalculateShippingCostsInternal(System.Single,System.Int32,System.String)">
            <summary>
            Recalculates costs values using the given coefficient. Shipping option charge of parent shipping option record will NOT be changed.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional where condition</param>
        </member>
        <member name="T:CMS.Ecommerce.ShippingOptionTaxClassInfo">
            <summary>
            ShippingOptionTaxClassInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShippingOptionTaxClassInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShippingOptionTaxClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty ShippingOptionTaxClassInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ShippingOptionTaxClassInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionTaxClassInfo.TaxClassID">
            <summary>
            Tax class ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionTaxClassInfo.ShippingOptionID">
            <summary>
            Shipping option ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider">
            <summary>
            Class providing ShippingOptionTaxClassInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.GetShippingOptionTaxClasses">
            <summary>
            Returns the query for all relationships between shipping options and tax classes.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.GetShippingOptionTaxClassInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified shipping option and tax class.
            </summary>
            <param name="shippingOptionId">Shipping option ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.SetShippingOptionTaxClassInfo(CMS.Ecommerce.ShippingOptionTaxClassInfo)">
            <summary>
            Sets relationship between specified shipping option and tax class.
            </summary>
            <param name="infoObj">Shipping option-tax class relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.DeleteShippingOptionTaxClassInfo(CMS.Ecommerce.ShippingOptionTaxClassInfo)">
            <summary>
            Deletes relationship between specified shipping option and tax class.
            </summary>
            <param name="infoObj">Shipping option-tax class relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.AddTaxClassToShippingOption(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified shipping option and tax class.
            </summary>  
            <param name="shippingOptionId">Shipping option ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.RemoveTaxClassFromShippingOption(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified shipping option and tax class.
            </summary>
            <param name="shippingOptionId">Shipping option ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.GetShippingOptionTaxClasses(System.Int32)">
            <summary>
            Returns dataset of all relationships between specified shipping option and tax classes.
            </summary>
            <param name="shippingOptionId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.GetShippingOptionTaxClassInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified shipping option and tax class.
            </summary>
            <param name="shippingOptionId">Shipping option ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.SetShippingOptionTaxClassInfoInternal(CMS.Ecommerce.ShippingOptionTaxClassInfo)">
            <summary>
            Sets relationship between specified shipping option and tax class.
            </summary>
            <param name="infoObj">Shipping option-tax class relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.DeleteShippingOptionTaxClassInfoInternal(CMS.Ecommerce.ShippingOptionTaxClassInfo)">
            <summary>
            Deletes relationship between specified shipping option and tax class.
            </summary>
            <param name="infoObj">Shipping option-tax class relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionTaxClassInfoProvider.GetShippingOptionTaxClassesInternal(System.Int32)">
            <summary>
            Returns dataset of all relationships between specified shipping option and tax classes.
            </summary>
            <param name="shippingOptionId">Shipping option ID</param>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartCheckResult">
            <summary>
            Container for results of cart item checks.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartCheckResult.mItemResultsBySKUID">
            <summary>
            Dictionary of ShoppingCartItem check results indexed by the ID of SKU.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartCheckResult.mItemResults">
            <summary>
            List of ShoppingCartItem check results.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartCheckResult.AddCartItemResult(CMS.Ecommerce.ShoppingCartItemCheckResult)">
            <summary>
            Adds specified item check result to this cart check result object.
            </summary>
            <param name="itemResult">Item check result to be added.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartCheckResult.GetMessage(System.String,System.String)">
            <summary>
            Returns check result formatted as string. Message consists of common error message followed by individual item
            error messages separated using specified separators. Empty string is returned when no errors found.
            </summary>
            <param name="itemSeparator">String to be used as a separator between messages from individual items.</param>
            <param name="errorSeparator">String to be used as a separator between messages from one item.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartCheckResult.GetHTMLFormattedMessage">
            <summary>
            Returns HTML formatted error message when check has failed, meaning that errors from each item are on its own line using [br /] HTML tag. 
            Returns empty string if check passed.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartCheckResult.GetFormattedMessage">
            <summary>
            Returns formatted error message when check has failed, meaning that errors from each item are on its own line using end-of-line char. 
            Returns empty string if check passed.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartCheckResult.ItemResults">
            <summary>
            Results for all products which have failed during check.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartCheckResult.ItemResultsBySKUID">
            <summary>
            Dictionary of ShoppingCartItem check results indexed by the ID of SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartCheckResult.ShippingOptionNotAvailable">
            <summary>
            Indicates that shipping option is not available for shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartCheckResult.CheckFailed">
            <summary>
            Indicates whether check has failed (whole cart check has failed or at least one cart item check has failed).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartCheckResult.ItemsCheckFailed">
            <summary>
            Indicates whether check has failed (at least one cart item check has failed).
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartItemCheckResult">
            <summary>
            Class encapsulating the results of cart item check.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemCheckResult.CombineWithResult(CMS.Ecommerce.ShoppingCartItemCheckResult)">
            <summary>
            Includes specified check result into this object in order to find the most restrictive values.
            No action is taken when results belong to different SKUs.
            </summary>
            <param name="result">Result to be included.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemCheckResult.GetMessage(System.String)">
            <summary>
            Returns check result formatted as string. Message contains individual 
            error messages separated with specified separator. Empty string is returned when no errors found.
            </summary>
            <param name="separator">String to be used as a separator between messages.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemCheckResult.GetFormattedMessage">
            <summary>
            Returns formatted result message when check has failed. Message is HTML-formatted: each error on its own line. 
            Returns empty string if check passed.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemCheckResult.MarkMinUnitsFailed(System.Int32)">
            <summary>
            Marks this result as "Minimum unit count not reached".
            </summary>
            <param name="minUnits">Minimum unit count in one order which was not satisfied.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemCheckResult.MarkMaxUnitsFailed(System.Int32)">
            <summary>
            Marks this result as "Maximum unit count not reached".
            </summary>
            <param name="maxUnits">Maximum unit count in one order which was not satisfied.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemCheckResult.MarkNotEnoughUnits(System.Int32)">
            <summary>
            Marks this result as "Not enough units available".
            </summary>
            <param name="maxUnits">Maximum available unit count.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemCheckResult.MarkOtherError(System.String)">
            <summary>
            Marks this result with error message. Use this method to report custom errors. Duplicate entries are removed.
            </summary>
            <param name="errorMessage">Error message to add.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemCheckResult.GetMin(System.Int32,System.Int32)">
            <summary>
            Returns smaller value from params. Values below 0 are considered to be "not specified".
            </summary>
            <param name="val1">First value</param>
            <param name="val2">Second value</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemCheckResult.GetMax(System.Int32,System.Int32)">
            <summary>
            Returns larger value from params. Values below 0 are considered to be "not specified".
            </summary>
            <param name="val1">First value</param>
            <param name="val2">Second value</param>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.CartItem">
            <summary>
            Affected shopping cart item object.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.OtherErrors">
            <summary>
            List of other (custom) error messages.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.HasOtherErrors">
            <summary>
            Indicates whether result has any other (custom) errors.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.InventoryUnits">
            <summary>
            Number of available units when not enough. Value is set to -1 when all requested units are available.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.MinUnits">
            <summary>
            Minimum unit count in one order. Value is set to -1 when minimum units in order condition is met.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.MaxUnits">
            <summary>
            Maximum unit count in one order. Value is set to -1 when maximum units in order condition is met.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.MinUnitsNotReached">
            <summary>
            Indicates that minimum unit count in one order condition is not met.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.MaxUnitsExceeded">
            <summary>
            Indicates that maximum unit count in one order condition is not met.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.NotEnoughUnits">
            <summary>
            Indicates that requested unit count is not available.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.ProductDisabled">
            <summary>
            Indicates that product is disabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.ProductValidityExpired">
            <summary>
            Indicates that product has expired.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.RegisteredCustomerRequired">
            <summary>
            Indicates that product can not be purchased, because it requires registered customer.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemCheckResult.CheckFailed">
            <summary>
            Indicates whether the check has failed.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartItemParameters">
            <summary>
            Data container of the parameters which represent configuration of the shopping cart item to be added/updated in the shopping cart object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemParameters.GetShoppingCartItemParameters">
            <summary>
            Returns initialized shopping cart item parameters container from the current URL parameters.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemParameters.#ctor">
            <summary>
            Constructor - creates empty shopping cart item parameters container. 
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemParameters.#ctor(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Constructor - creates initialized shopping cart item parameters container.
            </summary>
            <param name="item">Shopping cart item.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemParameters.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor - creates initialized shopping cart item parameters container.
            </summary>
            <param name="skuId">Product SKU ID.</param>
            <param name="quantity">Number of product units.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemParameters.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Constructor - creates initialized shopping cart item parameters container.
            </summary>
            <param name="skuId">Product SKU ID.</param>
            <param name="quantity">Number of product units.</param>
            <param name="options">SKU IDs of product options.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemParameters.#ctor(System.Int32,System.Int32,System.Collections.Generic.List{CMS.Ecommerce.ShoppingCartItemParameters})">
            <summary>
            Constructor - creates initialized shopping cart item parameters container.
            </summary>
            <param name="skuId">Product SKU ID.</param>
            <param name="quantity">Number of product units.</param>
            <param name="options">List of product options parameters.</param>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.SKUID">
            <summary>
            Product SKU ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.Quantity">
            <summary>
            Number of product units.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.Price">
            <summary>
            Product custom price, e.g. amount of donation. It is in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.Text">
            <summary>
            Product custom text defined by the customer, e.g. custom label for a T-shirt. Makes sense only for the text product option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.IsPrivate">
            <summary>
            Indicates if product is added to the shopping cart as private. Makes sense only for the private Donation. It is false by default.
            </summary> 
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.ProductOptions">
            <summary>
            Collection of the product options.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemParameters.CustomParameters">
            <summary>
            Collection (name - value pairs) of the shopping cart item custom parameters.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.BundleInfo">
            <summary>
            BundleInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.BundleInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.BundleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfo.#ctor">
            <summary>
            Constructor - Creates an empty BundleInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BundleInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.BundleInfo.BundleID">
            <summary>
            Bundle ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.BundleInfo.SKUID">
            <summary>
            SKU ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.BundleInfoProvider">
            <summary>
            Class providing BundleInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.GetBundles">
            <summary>
            Returns the query for all relationships between bundles and SKUs.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.GetBundleInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified bundle and SKU.
            </summary>
            <param name="bundleId">Bundle ID.</param>
            <param name="skuId">SKU ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.SetBundleInfo(CMS.Ecommerce.BundleInfo)">
            <summary>
            Sets relationship between specified bundle and SKU.
            </summary>
            <param name="infoObj">Bundle-SKU relationship to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.DeleteBundleInfo(CMS.Ecommerce.BundleInfo)">
            <summary>
            Deletes relationship between specified bundle and SKU.
            </summary>
            <param name="infoObj">Bundle-SKU relationship to be deleted.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.AddSKUToBundle(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified bundle and SKU.
            </summary>	
            <param name="bundleId">Bundle ID.</param>
            <param name="skuId">SKU ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.RemoveSKUFromBundle(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified bundle and SKU.
            </summary>
            <param name="bundleId">Bundle ID.</param>
            <param name="skuId">SKU ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.GetBundleInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified bundle and SKU.
            </summary>
            <param name="bundleId">Bundle ID.</param>
            <param name="skuId">SKU ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.SetBundleInfoInternal(CMS.Ecommerce.BundleInfo)">
            <summary>
            Sets relationship between specified bundle and SKU.
            </summary>
            <param name="infoObj">Bundle-SKU relationship to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.BundleInfoProvider.DeleteBundleInfoInternal(CMS.Ecommerce.BundleInfo)">
            <summary>
            Deletes relationship between specified bundle and SKU.
            </summary>
            <param name="infoObj">Bundle-SKU relationship to be deleted.</param>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategoryListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategoryListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryListInfo.#ctor">
            <summary>
            Constructor - Creates an empty OptionCategoryListInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OptionCategoryListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ProductHelper">
            <summary>
            Provides advanced manipulation with products and product options.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductHelper.AllowAllOptions(System.Int32,System.Int32)">
            <summary>
            Makes all options from option category specified by optionCategoryId parameter allowed 
            for product given by skuId parameter.
            </summary>
            <param name="skuId">ID of the product to which options are to be allowed.</param>
            <param name="optionCategoryId">ID of the product option category which options are to be allowed.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductHelper.AllowOptions(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Allows product options from option category to product. 
            Individual options are checked whether they belong to given category.
            </summary>
            <param name="skuId">ID of the product to allow options for.</param>
            <param name="optionCategoryId">ID of the option category to allow options from. Set to 0 to skip options checking.</param>
            <param name="optionIds">SKUIDs of product options from option category to be allowed.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductHelper.RemoveOptions(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Remove product options from option category from product. 
            Individual options are checked whether they belong to given category.
            </summary>
            <param name="skuId">ID of the product to remove options for.</param>
            <param name="optionCategoryId">ID of the option category to remove options from. Set to 0 to skip options checking.</param>
            <param name="optionIds">SKUIDs of product options from option category to be removed.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductHelper.RemoveOptionCategory(System.Int32,System.Int32)">
            <summary>
            Removes option category from product. Allowed options are removed too.
            </summary>
            <param name="skuId">ID of the product to remove option category from.</param>
            <param name="optionCategoryId">ID of the option category to be removed.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductHelper.IsOptionAllowed(System.Int32,System.Int32)">
            <summary>
            Returns true if option specified by optionId is allowed for given product.
            </summary>
            <param name="productId">SKUID of product to check option for.</param>
            <param name="optionId">SKUID of option to check.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductHelper.AllowAllOptionsInternal(System.Int32,System.Int32)">
            <summary>
            Makes all options from option category specified by optionCategoryId parameter allowed 
            for product given by skuId parameter.
            </summary>
            <param name="skuId">ID of the product to which options are to be allowed.</param>
            <param name="optionCategoryId">ID of the product option category which options are to be allowed.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductHelper.AllowOptionsInternal(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Allows product options from option category to product. 
            Individual options are checked whether they belong to given category.
            </summary>
            <param name="skuId">ID of the product to allow options for.</param>
            <param name="optionCategoryId">ID of the option category to allow options from.</param>
            <param name="optionIds">SKUIDs of product options from option category to be allowed.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductHelper.RemoveOptionsInternal(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Remove product options from option category from product. 
            Individual options are checked whether they belong to given category.
            </summary>
            <param name="skuId">ID of the product to allow options for.</param>
            <param name="optionCategoryId">ID of the option category to allow options from.</param>
            <param name="optionIds">SKUIDs of product options from option category to be allowed.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductHelper.RemoveAllowedOptionsInternal(System.Int32,System.Int32)">
            <summary>
            Removes all allowed options from given option category from given product.
            </summary>
            <param name="skuId">ID of the product to remove options from.</param>
            <param name="optionCategoryId">ID of the option category which options are to be removed from product.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductHelper.RemoveOptionCategoryInternal(System.Int32,System.Int32)">
            <summary>
            Removes option category from product. Allowed options are removed too.
            </summary>
            <param name="skuId">ID of the product to remove option category from.</param>
            <param name="optionCategoryId">ID of the option category to be removed.</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductHelper.IsOptionAllowedInternal(System.Int32,System.Int32)">
            <summary>
            Returns true if option specified by optionId is allowed for given product.
            </summary>
            <param name="productId">SKUID of product to check option for.</param>
            <param name="optionId">SKUID of option to check.</param>
        </member>
        <member name="T:CMS.Ecommerce.SKUFileInfo">
            <summary>
            SKUFileInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUFileInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUFileInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUFileInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SKUFileInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileType">
            <summary>
            File type.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileName">
            <summary>
            File name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FilePath">
            <summary>
            Application root relative path to the file.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileLastModified">
            <summary>
            Date and time when the file object was last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileGUID">
            <summary>
            File GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileID">
            <summary>
            File ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileSKUID">
            <summary>
            Parent SKU ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUFileInfo.FileMetaFileGUID">
            <summary>
            Associated meta file GUID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUFileInfoProvider">
            <summary>
            Class providing SKUFileInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.GetSKUFiles">
            <summary>
            Returns the query for all SKU files.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.GetSKUFileInfo(System.Int32)">
            <summary>
            Returns SKU file with specified ID.
            </summary>
            <param name="fileId">Sku file ID.</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.SetSKUFileInfo(CMS.Ecommerce.SKUFileInfo)">
            <summary>
            Sets (updates or inserts) specified SKU file.
            </summary>
            <param name="fileObj">Sku file to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.DeleteSKUFileInfo(CMS.Ecommerce.SKUFileInfo)">
            <summary>
            Deletes specified SKU file.
            </summary>
            <param name="fileObj">Sku file to be deleted.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.DeleteSKUFileInfo(System.Int32)">
            <summary>
            Deletes SKU file with specified ID.
            </summary>
            <param name="fileId">Sku file ID.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.GetSKUFileInfoInternal(System.Int32)">
            <summary>
            Returns SKU file with specified ID.
            </summary>
            <param name="fileId">Sku file ID.</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.SetSKUFileInfoInternal(CMS.Ecommerce.SKUFileInfo)">
            <summary>
            Sets (updates or inserts) specified SKU file.
            </summary>
            <param name="fileObj">Sku file to be set.</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUFileInfoProvider.DeleteSKUFileInfoInternal(CMS.Ecommerce.SKUFileInfo)">
            <summary>
            Deletes specified SKU file.
            </summary>
            <param name="fileObj">Sku file to be deleted.</param>        
        </member>
        <member name="T:CMS.Ecommerce.SKUAllowedOptionInfo">
            <summary>
            SKUAllowedOptionInfo data container class. Represents binding between product and product option which is suitable for given product.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUAllowedOptionInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUAllowedOptionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUAllowedOptionInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SKUAllowedOptionInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.SKUAllowedOptionInfo.OptionSKUID">
            <summary>
            SKUID of the product option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUAllowedOptionInfo.SKUID">
            <summary>
            SKUID of the product.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUAllowedOptionInfoProvider">
            <summary>
            Class providing SKUAllowedOptionInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfoProvider.GetSKUOptions">
            <summary>
            Returns the query for all relationships between products and options.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfoProvider.GetSKUOptionInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified product and option.
            </summary>
            <param name="productId">Product ID (SKUID).</param>
            <param name="optionId">Product option ID (SKUID).</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfoProvider.SetSKUOptionInfo(CMS.Ecommerce.SKUAllowedOptionInfo)">
            <summary>
            Sets relationship between specified product and option.
            </summary>
            <param name="infoObj">Product-option relationship to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfoProvider.DeleteSKUOptionInfo(CMS.Ecommerce.SKUAllowedOptionInfo)">
            <summary>
            Deletes relationship between specified product and option.
            </summary>
            <param name="infoObj">Product-option relationship to be deleted.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfoProvider.AddOptionToProduct(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified product and option.
            </summary>	
            <param name="productId">Product ID (SKUID).</param>
            <param name="optionId">Product option ID (SKUID).</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfoProvider.RemoveOptionFromProduct(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified product and option.
            </summary>
            <param name="productId">Product ID (SKUID).</param>
            <param name="optionId">Product option ID (SKUID).</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfoProvider.GetSKUOptionInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified product and option.
            </summary>
            <param name="productId">Product ID (SKUID).</param>
            <param name="optionId">Product option ID (SKUID).</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfoProvider.SetSKUOptionInfoInternal(CMS.Ecommerce.SKUAllowedOptionInfo)">
            <summary>
            Sets relationship between specified product and option.
            </summary>
            <param name="infoObj">Product-option relationship to be set.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUAllowedOptionInfoProvider.DeleteSKUOptionInfoInternal(CMS.Ecommerce.SKUAllowedOptionInfo)">
            <summary>
            Deletes relationship between specified product and option.
            </summary>
            <param name="infoObj">Product-option relationship to be deleted.</param>
        </member>
        <member name="T:CMS.Ecommerce.WishlistItemInfo">
            <summary>
            WishlistItemInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.WishlistItemInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.WishlistItemInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfo.#ctor">
            <summary>
            Constructor - Creates an empty WishlistItemInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WishlistItemInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.Ecommerce.WishlistItemInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.WishlistItemInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.WishlistItemInfo.SKUID">
            <summary>
            SKU ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.WishlistItemInfoProvider">
            <summary>
            Class providing WishlistItemInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.GetWishlistItems">
            <summary>
            Returns the query for all wishlist items.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.GetWishlistItemInfo(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns specified wishlist item. 
            </summary>
            <param name="userId">User ID</param>
            <param name="skuId">Product ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.SetWishlistItemInfo(CMS.Ecommerce.WishlistItemInfo)">
            <summary>
            Sets specified wishlist item.
            </summary>
            <param name="infoObj">Wishlist item to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.DeleteWishlistItemInfo(CMS.Ecommerce.WishlistItemInfo)">
            <summary>
            Deletes specified wishlist item.
            </summary>
            <param name="infoObj">Wishlist item to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.AddSKUToWishlist(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds product to specified wishlist.
            </summary>  
            <param name="userId">User ID</param>
            <param name="skuId">Product ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.RemoveSKUFromWishlist(System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes specified wishlist item.
            </summary>
            <param name="userId">User ID</param>
            <param name="skuId">Product ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.GetWishlistItemInfoInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns specified wishlist item. 
            </summary>
            <param name="userId">User ID</param>
            <param name="skuId">Product ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.SetWishlistItemInfoInternal(CMS.Ecommerce.WishlistItemInfo)">
            <summary>
            Sets specified wishlist item.
            </summary>
            <param name="infoObj">Wishlist item to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.WishlistItemInfoProvider.DeleteWishlistItemInfoInternal(CMS.Ecommerce.WishlistItemInfo)">
            <summary>
            Deletes specified wishlist item.
            </summary>
            <param name="infoObj">Wishlist item to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommerceModalPage">
            <summary>
            Base page for the CMS Ecommerce modal pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceModalPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommercePage">
            <summary>
            Base page for the E-commerce pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommercePage.OnPreInit(System.EventArgs)">
            <summary>
            Page PreInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommercePage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommercePage.CheckMainCurrency(System.Int32)">
            <summary>
            Checks if the site specified by the site ID has a main currency defined.
            Returns true if the main currency is defined, otherwise returns false and shows warning on the page.
            </summary>
            <param name="siteId">ID of site to check</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommercePage.CheckProductModifyAndRedirect(CMS.Ecommerce.SKUInfo)">
            <summary>
            Checks permissions to modify given product and redirect to access denied page when not passed.
            Returns true if current user is authorized to modify given product;
            </summary>
            <param name="product">Product to be checked.</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommercePage.CheckEditedObjectSiteID(System.Int32)">
            <summary>
            Checks whether supplied siteId corresponds to current site ID and sets EditedObject to null if not.
            Check applies to non-globaladmin users only.
            </summary>
            <param name="objectSiteId">SiteID of the object to be checked.</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommercePage.HandleGridsSiteIDColumn(CMS.UIControls.UniGrid)">
            <summary>
            Shows/hides column with SiteID in given unigrid according allow global XXX setting accessible via AllowGlobalObjects property.
            </summary>
            <param name="grid">Grid to hide/show site id column in.</param>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommercePage.IsGlobalStoreAdmin">
            <summary>
            Indicates if current user is allowed to access global (multistore) configuration.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommercePage.SiteID">
            <summary>
            Id of the site. Value taken from query string parameter "siteId", or from SiteContext.CurrentSiteID when no SiteId 
            supplied or not a global admin. Special values (non-positive) are passed without change.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommercePage.IsProductsUI">
            <summary>
            Identifies if the page is used for products UI
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommercePage.ShowSiteInGrids">
            <summary>
            Indicates if information that object belongs to specific site or is global will be shown in listings.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSCurrenciesPage">
            <summary>
            Base page for the E-commerce currencies to apply global settings to the pages.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommerceConfigurationPage">
            <summary>
            Base page for the E-commerce configuration pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceConfigurationPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceConfigurationPage.CheckConfigurationModification">
            <summary>
            Checks ecommerce ConfigurationModify and ConfigurationGlobalModify permissions. Redirects to access denied page if check fails.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceConfigurationPage.CheckConfigurationModification(System.Int32)">
            <summary>
            Checks ecommerce ConfigurationModify and ConfigurationGlobalModify permissions. Redirects to access denied page if check fails.
            </summary>
            <param name="siteId">Site id of the configured object</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceConfigurationPage.CheckEditedObjectSiteID(System.Int32)">
            <summary>
            Checks if site id of edited object corresponds to configured site. If it does not, 
            user is redirected to 'Object doesn't exist' page. Check is skipped for global objects when allowed by setting 
            or when edited under multistore configuration.
            </summary>
            <param name="editedObjSiteId">ID of the site which edited object belongs to.</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceConfigurationPage.HandleGlobalObjectInformation(System.String)">
            <summary>
            Checks and displays info message stating that current site uses global objects of given type if used.
            </summary>
            <param name="objectType">Object type name to be used in info message.</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceConfigurationPage.InitSiteWhereCondition(System.String)">
            <summary>
            Creates where condition for UniGrid according object site separability settings.
            </summary>
            <param name="siteIDColumnName">Name of siteID column</param>
            <returns></returns>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceConfigurationPage.SiteOrGlobalObjectType">
            <summary>
            Name of ecommerce object type configured on this page.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceConfigurationPage.GlobalObjectsKeyName">
            <summary>
            Settings key name configuring usage of global/site objects.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceConfigurationPage.UseGlobalObjects">
            <summary>
            Indicates if current site uses global objects. Type of objects depends on settings key name 
            set in GlobalObjectsKeyName property.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceConfigurationPage.AllowCombineSiteAndGlobal">
            <summary>
            Indicates if ecommerce object type specified by SiteOrGlobalObjectType property allows using global and site objects on the same site.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceConfigurationPage.IsMultiStoreConfiguration">
            <summary>
            Indicates if this configuration page is opened under multistore configuration (i.e. Global Admin requesting global configuration).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceConfigurationPage.ConfiguredSiteID">
            <summary>
            Returns id of the configured site. For global admin with site manager enabled allows to configure global objects on demand (siteId in querystring == 0).
            In other cases returns 0 (when using global objects) or current site ID (when using site specific configuration).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceConfigurationPage.ShowSiteInGrids">
            <summary>
            Indicates if information that object belongs to specific site or is global will be shown in listings.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSCurrenciesPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSDepartmentsPage">
            <summary>
            Base page for the E-commerce departments to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSDepartmentsPage.CreateChildControls">
            <summary>
            Creates child controls and sets global objects key name.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommerceObjectsPage">
            <summary>
            Base page for E-commerce pages working with site specific records with option to include global records. 
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceObjectsPage.CheckEditedObjectSiteID(System.Int32)">
            <summary>
            Checks if site id of edited object corresponds to configured site ID and site settings. If it does not, 
            user is redirected to 'Object doesn't exist' page.
            </summary>
            <param name="editedObjSiteId">ID of the site which edited object belongs to</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceObjectsPage.FormatBreadcrumbObjectName(System.String,System.Int32)">
            <summary>
            Appends site mark to given object name according to current ui culture. 
            </summary>
            <param name="name">Name of the object.</param>
            <param name="siteId">Site id of named object.</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceObjectsPage.InitSiteWhereCondition(System.String)">
            <summary>
            Creates where condition for UniGrid according object site separability settings.
            </summary>
            <param name="siteIDColumnName">Name of siteID column</param>
            <returns></returns>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceObjectsPage.GlobalObjectsKeyName">
            <summary>
            Settings key name allowing usage of global objects.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceObjectsPage.AllowGlobalObjects">
            <summary>
            Indicates global objects are allowed on current site besides site-specific ones. Type of the objects depends on settings key name 
            set in GlobalObjectsKeyName property.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceObjectsPage.ConfiguredSiteID">
            <summary>
            Returns id of the configured site. For global admin allows to configure global objects on demand (siteId in querystring == 0).
            In other cases returns 0 (when global objects allowed and asked for global objects) or current site ID (when using site specific configuration only).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSEcommerceObjectsPage.ShowSiteInGrids">
            <summary>
            Indicates if information that object belongs to specific site or is global will be shown in listings.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSExchangeRatesPage">
            <summary>
            Base page for the E-commerce exchange rates to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSExchangeRatesPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSInternalStatusesPage">
            <summary>
            Base page for the E-commerce internal statuses to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSInternalStatusesPage.CreateChildControls">
            <summary>
            Creates child controls and sets global objects key name.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSManufacturersPage">
            <summary>
            Base page for the E-commerce manufacturers pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSManufacturersPage.CreateChildControls">
            <summary>
            Creates child controls and sets global objects key name.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSOrderStatusesPage">
            <summary>
            Base page for the E-commerce order statuses to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSOrderStatusesPage.CreateChildControls">
            <summary>
            Creates child controls and sets global objects key name.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSPaymentMethodsPage">
            <summary>
            Base page for the E-commerce payment methods to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSPaymentMethodsPage.CreateChildControls">
            <summary>
            Creates child controls and sets global objects key name.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSPublicStatusesPage">
            <summary>
            Base page for the E-commerce pubic statuses to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSPublicStatusesPage.CreateChildControls">
            <summary>
            Creates child controls and sets global objects key name.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSShippingOptionsPage">
            <summary>
            Base page for the E-commerce shipping options.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSShippingOptionsPage.CheckConfigurationModification">
            <summary>
            Checks ecommerce ConfigurationModify permissions. Redirects to access denied page if check fails.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSEcommerceStoreSettingsPage">
            <summary>
            Base page for the E-commerce store settings pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceStoreSettingsPage.CheckPermissionsAndSave">
            <summary>
            Check whether the user is authorized to modify configuration and returns true if so. 
            This method needs to be overridden to save store settings.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceStoreSettingsPage.SaveChanges">
            <summary>
            Override this method to handle saving of store settings.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceStoreSettingsPage.StoreSettingsActions_ActionPerformed(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Handles default actions performed on the master header (Save changes action).
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSEcommerceStoreSettingsPage.RaisePostBackEvent(System.String)">
            <summary>
            Handles postback event with argument "save". Permissions are checked and method SaveChanges() 
            is called as reaction.
            </summary>
            <param name="eventArgument">Postback argument</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSSuppliersPage">
            <summary>
            Base page for the E-commerce suppliers pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSSuppliersPage.CreateChildControls">
            <summary>
            Creates child controls and sets global objects key name.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSTaxClassesPage">
            <summary>
            Base page for the E-commerce tax classes to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSTaxClassesPage.CreateChildControls">
            <summary>
            Creates child controls and sets global objects key name.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CMSCustomersPage">
            <summary>
            Base page for the E-commerce customers pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSCustomersPage.CheckCustomerSiteID(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Returns true if customer is anonymous on current site or has login on current site.
            </summary>
            <param name="customer">Customer object</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSDiscountCouponsPage">
            <summary>
            Base page for the E-commerce discount coupons pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSDiscountCouponsPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSProductOptionCategoriesPage">
            <summary>
            Base page for the E-commerce product options pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductOptionCategoriesPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="T:CMS.Ecommerce.CMSProductsPage">
            <summary>
            Base page for the E-commerce products pages to apply global settings to the pages.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductsPage.OnPreInit(System.EventArgs)">
            <summary>
            Page OnPreInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductsPage.OnInit(System.EventArgs)">
            <summary>
            Page OnInit event.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductsPage.AddNodeIDParameterToUrl(System.String)">
            <summary>
            Appends nodeId parameters to given URL.
            </summary>
            <param name="url">URL to append parameters to</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductsPage.AddProductParametersToUrl(System.String)">
            <summary>
            Appends nodeId and siteId parameters to given URL.
            </summary>
            <param name="url">URL to append parameters to</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductsPage.CheckEditedObjectSiteID(System.Int32)">
            <summary>
            Checks if site id of edited object corresponds to current site ID and site settings. If it does not, 
            user is redirected to 'Object doesn't exist' page.
            </summary>
            <param name="editedProductSiteId">ID of the site which edited product belongs to</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductsPage.RequestSectionNewCultureVersion">
            <summary>
            Called when requested language version of product section does not exist in split mode.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductsPage.RequestNewCultureVersion(System.String)">
            <summary>
            Called when requested language version of document does not exist in split mode.
            </summary>
            <param name="mode">Parameter to be supplied in query under 'mode' key.</param>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductsPage.RedirectToNewCultureVersionPage">
            <summary>
            Redirects to new culture page
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductsPage.CheckExploreTreePermission">
            <summary>
            Checks if user has permission explore tree which is needed to create product when products are displayed in tree mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.Ecommerce.CMSProductsPage.EnsureProductBreadcrumbs(CMS.UIControls.Breadcrumbs,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates product breadcrumbs.
            </summary>
            <param name="breadcrumbs">Breadcrumbs control.</param>
            <param name="productText">New object text which is displayed in breadcrumbs.</param>
            <param name="isSection"> Object is section.</param>
            <param name="targetParent">Add Target _parent to parent breadcrumb</param>
            <param name="displaySuffix"> Display breadcrumbs suffix.</param>
        </member>
        <member name="P:CMS.Ecommerce.CMSProductsPage.IsProductOption">
            <summary>
            Indicates whether the page is for normal product or for product option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSProductsPage.DisplayTreeInProducts">
            <summary>
            Indicates if content tree is displayed in product management UI. Value is based on setting for current site.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSProductsPage.ProductsStartingPath">
            <summary>
            Starting path indicating where the product sub tree starts. Reflects also UserStartingAliasPath property of current user.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CMSProductsPage.ProductID">
            <summary>
            ID of the product taken from query parameter 'productId' or from node specified by query parameter 'nodeId'.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.AuthorizeNetPaymentResultInfo">
            <summary>
            Authorize.NET payment result.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PaymentResultInfo">
            <summary>
            Class representing payment result.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.GetPaymentResultItemInfo(System.String)">
            <summary>
            Returns payment result item object.
            </summary>
            <param name="itemName">Item name</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.SetPaymentResultItemInfo(CMS.Ecommerce.PaymentResultItemInfo)">
            <summary>
            Updates/Inserts payment result item data in/into payment result.
            </summary>
            <param name="itemObj">Payment result item data object</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.GetPaymentResultXml">
            <summary>
            Returns payment result XML string.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.GetFormattedPaymentResultString">
            <summary>
            Returns formatted payment result string which is visible to the user.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.LoadPaymentResultXml(System.String)">
            <summary>
            Loads payment result xml.
            </summary>
            <param name="xml">Payment result XML to load</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.EnsurePaymentResultItemInfo(System.String,System.String)">
            <summary>
            Tries to find specified payment result item (if it is not found it is created and initialized with item name and item header) and returns it.
            </summary>
            <param name="itemName">Payment result item name to get</param>
            <param name="itemHeader">Payment result item header text which is set to the new item when requested item is not found</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Creates a new PaymentResultInfo object from serialized data.
            </summary>        
            <param name="info">Serialization data</param>
            <param name="context">Context</param> 
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.#ctor(System.String)">
            <summary>
            Creates PaymentResultInfo object.
            </summary>
            <param name="xml">Payment result in XML format</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultInfo.#ctor">
            <summary>
            Creates base PaymentResultInfo object - following fields are created in payment result XML definition, they are not initialized: date, payment method, payment is completed, payment status, transaction id, description.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.RootNode">
            <summary>
            Root node of the payment result xml definition.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentDate">
            <summary>
            Payment date.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentIsCompleted">
            <summary>
            TRUE - payment was completed successfully, FALSE - payment wasn't already completed.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentDescription">
            <summary>
            Payment result description.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentTransactionID">
            <summary>
            Payment result transaction ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentMethodName">
            <summary>
            Payment method name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentMethodID">
            <summary>
            Payment method ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentStatusValue">
            <summary>
            Payment status value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultInfo.PaymentStatusName">
            <summary>
            Payment status display name.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.AuthorizeNetPaymentResultInfo.#ctor">
            <summary>
            Creates base payment result info object + add Authorize.NET payment result properties.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.AuthorizeNetPaymentResultInfo.AuthorizationCode">
            <summary>
            Authorization code.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CreditEventInfo">
            <summary>
            CreditEventInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CreditEventInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CreditEventInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfo.#ctor">
            <summary>
            Constructor - Creates an empty CreditEventInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CreditEventInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventName">
            <summary>
            Event name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventCustomerID">
            <summary>
            ID of the customer the event belongs to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventID">
            <summary>
            Event ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventDescription">
            <summary>
            Event description.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventDate">
            <summary>
            Event date.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventCreditChange">
            <summary>
            Event credit change.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventCreditGUID">
            <summary>
            Event credit GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventCreditLastModified">
            <summary>
            Date and time when the credit event was last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CreditEventInfo.EventSiteID">
            <summary>
            Credit event site ID. Set to 0 for global credit event.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CreditEventInfoProvider">
            <summary>
            Class providing CreditEventInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEvents">
            <summary>
            Returns the query for all credit events.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventInfo(System.Int32)">
            <summary>
            Returns credit event with specified ID.
            </summary>
            <param name="eventId">Credit event ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.SetCreditEventInfo(CMS.Ecommerce.CreditEventInfo)">
            <summary>
            Sets (updates or inserts) specified credit event.
            </summary>
            <param name="eventObj">Credit event to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.DeleteCreditEventInfo(CMS.Ecommerce.CreditEventInfo)">
            <summary>
            Deletes specified credit event.
            </summary>
            <param name="eventObj">Credit event to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.DeleteCreditEventInfo(System.Int32)">
            <summary>
            Deletes credit event with specified ID.
            </summary>
            <param name="eventId">Credit event ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEvents(System.Int32)">
            <summary>
            Returns the query for all credit events for given site. Reflects use global credit setting.
            </summary>
            <param name="siteId">Id of the site to get credit events for.</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEvents(System.Int32,System.Int32)">
            <summary>
            Returns query for all customers' credit events on given site.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.DeleteCreditEvents(System.Int32,System.Int32)">
            <summary>
            Deletes all customers' credit events.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetTotalCredit(System.Int32,System.Int32)">
            <summary>
            Returns customer's total credit.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventName(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns credit event name built from order data.
            </summary>
            <param name="orderObj">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventDescription(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns credit event description built from order data.
            </summary>
            <param name="orderObj">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.RecalculateCreditEvents(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates credit event values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventInfoInternal(System.Int32)">
            <summary>
            Returns credit event with specified ID.
            </summary>
            <param name="eventId">Credit event ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.SetCreditEventInfoInternal(CMS.Ecommerce.CreditEventInfo)">
            <summary>
            Sets (updates or inserts) specified credit event.
            </summary>
            <param name="eventObj">Credit event to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.DeleteCreditEventInfoInternal(CMS.Ecommerce.CreditEventInfo)">
            <summary>
            Deletes specified credit event.
            </summary>
            <param name="eventObj">Credit event to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventsInternal(System.Int32)">
            <summary>
            Returns dataset of all credit events for specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventsInternal(System.Int32,System.Int32)">
            <summary>
            Returns dataset of all customers' credit events for specified site.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.DeleteCreditEventsInternal(System.Int32,System.Int32)">
            <summary>
            Deletes all customer's credit events.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetTotalCreditInternal(System.Int32,System.Int32)">
            <summary>
            Returns customer's total credit.
            </summary>
            <param name="customerId">Customer ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventNameInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns credit event name built from order data.
            </summary>
            <param name="orderObj">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.GetCreditEventDescriptionInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns credit event description built from order data.
            </summary>
            <param name="orderObj">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.CreditEventInfoProvider.RecalculateCreditEventsInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates credit event values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Where condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="T:CMS.Ecommerce.CurrencyInfo">
            <summary>
            CurrencyInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CurrencyInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CurrencyInfo.TYPEINFO">
            <summary>
            Type information
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.FormatPrice(System.Double)">
            <summary>
            Returns price formatted according to settings in this currency.
            </summary>
            <param name="price">Price to be formatted.</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.CopyDataFrom(CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Fills data properties with values from given template.
            </summary>
            <param name="currency">Template to copy data from</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.#ctor">
            <summary>
            Constructor - Creates an empty CurrencyInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CurrencyInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.LoadDefaultData">
            <summary>
            Loads the default object data
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyDisplayName">
            <summary>
            Currency display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyName">
            <summary>
            Currency code name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyCode">
            <summary>
            Currency code.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyID">
            <summary>
            Currency ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyEnabled">
            <summary>
            Indicates if currency is enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyIsMain">
            <summary>
            Indicates if currency is main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyFormatString">
            <summary>
            Currency formatting string.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyRoundTo">
            <summary>
            Number of digits the price in this currency is rounded to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyGUID">
            <summary>
            Currency GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencyLastModified">
            <summary>
            Date and time when the currency was last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfo.CurrencySiteID">
            <summary>
            Currency site ID. Set to 0 for global currency.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CurrencyInfoProvider">
            <summary>
            Class providing CurrencyInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CurrencyInfoProvider.mMainCurrencies">
            <summary>
            Main currencies indexed by the site ID
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CurrencyInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencies">
            <summary>
            Returns the query for all currencies.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencyInfo(System.Int32)">
            <summary>
            Returns currency with specified ID.
            </summary>
            <param name="currencyId">Currency ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencyInfo(System.String,System.String)">
            <summary>
            Returns currency with specified name.
            </summary>
            <param name="currencyName">Currency name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.SetCurrencyInfo(CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Sets (updates or inserts) specified currency.
            </summary>
            <param name="currencyObj">Currency to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.DeleteCurrencyInfo(CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Deletes specified currency.
            </summary>
            <param name="currencyObj">Currency to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.DeleteCurrencyInfo(System.Int32)">
            <summary>
            Deletes currency with specified ID.
            </summary>
            <param name="currencyId">Currency ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencies(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all currencies matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the currencies should be retrieved from. If set to 0, global currencies are retrieved</param>
            <param name="onlyEnabled">If true, only enabled currencies are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrenciesWithExchangeRate(System.Int32)">
            <summary>
            Returns data query with the enabled currencies which have the exchange rate set.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.IsCurrencyWithExchangeRate(System.Int32,System.Int32)">
            <summary>
            Returns true if site specified by its ID has defined exchange rate to given currency. Only enabled currencies are searched.
            </summary>
            <param name="currencyId">ID of currency to be looked for</param>
            <param name="siteId">ID of the site to get exchange table for</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetMainCurrency(System.Int32)">
            <summary>
            Returns main currency of the specified site.
            </summary>
            <param name="siteId">Site ID for site main currency or 0 for global main currency</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetMainCurrencyCode(System.Int32)">
            <summary>
            Returns code of main currency for given site. Returns empty string when not found.
            </summary>
            <param name="siteId">Site ID for site main currency or 0 for global main currency</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrenciesByCode(System.Int32)">
            <summary>
            Returns CurrencyInfo objects present on given site in form of dictionary mapping currency code to CurrencyInfo object.
            </summary>
            <param name="siteId">ID of the site to get currencies for. 'Use global currencies' setting is considered.</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.RoundTo(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns rounded price according to the specified currency.
            </summary>
            <param name="price">Price to be rounded</param>
            <param name="currencyObj">Currency which supplies 'round to' parameter - number of digits the price is rounded to</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.RoundTo(System.Double,System.Int32)">
            <summary>
            Returns rounded price according to the specified currency.
            </summary>
            <param name="price">Price to be rounded</param>
            <param name="currencyId">ID of the currency which supplies 'round to' parameter - number of digits the price is rounded to</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetRelativelyFormattedPrice(System.Double,CMS.Ecommerce.CurrencyInfo,System.Boolean)">
            <summary>
            Returns relatively formatted price according to formatting string of the specified currency.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="currencyObj">Currency which supplies formatting string</param>
            <param name="encode">Encode output</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetRelativelyFormattedPrice(System.Double,System.Int32,System.Boolean)">
            <summary>
            Returns relatively formatted price according to formatting string of the specified site main currency.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="siteId">ID of the site which main currency has to be used for formatting</param>
            <param name="encode">Encode output</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedPrice(System.Double,CMS.Ecommerce.CurrencyInfo,System.Boolean)">
            <summary>
            Returns formatted price according to formatting string of the specified currency.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="currencyObj">Currency which supplies formatting string</param>
            <param name="encode">Encode output</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedPrice(System.Double,System.Int32,System.Boolean)">
            <summary>
            Returns formatted price according to formatting string of the specified site main currency.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="siteId">ID of the site which main currency has to be used for formatting</param>
            <param name="encode">Encode output</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedValue(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns formatted price, by default formatting string "{0:0.00}" is used.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="currencyObj">Currency which can supply formatting string or 'round to' parameter - number of digits the price should be rounded to. 
            Be default currency has no effect to the result and formatting string "{0:0.00}" is used.</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.CopyFromGlobal(System.Int32)">
            <summary>
            Copies global currencies to the specified site.
            </summary>
            <param name="siteId">ID of the target site</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.ChangeMainCurrency(System.Int32,System.Int32,System.Double,System.Int32,CMS.Ecommerce.RecalculationSettings)">
            <summary>
            Changes main currency and recalculates specified "money" values.
            </summary>
            <param name="siteId">ID of the site, which main currency is to be changed</param>
            <param name="newCurrencyId">ID of the new main currency</param>
            <param name="coefficient">Exchange rate which will be used wen recalculating</param>
            <param name="roundTo">Number of decimal digits to which the result will be rounded</param>
            <param name="settings">Determines which objects are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.ClearHashtablesAfterRecalculation(CMS.Ecommerce.RecalculationSettings)">
            <summary>
            Clears specified hashtables for the values to be actual. This method is called after changing main currency.
            </summary>
            <param name="settings">Setting for value recalculation process</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencyInfoInternal(System.Int32)">
            <summary>
            Returns currency with specified ID.
            </summary>
            <param name="currencyId">Currency ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrencyInfoInternal(System.String,System.String)">
            <summary>
            Returns currency with specified name from specified site.
            </summary>
            <param name="currencyName">Currency name</param>                
            <param name="siteName">Site name. Use null for global currency</param>         
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.SetCurrencyInfoInternal(CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Sets (updates or inserts) specified currency.
            </summary>
            <param name="currencyObj">Currency to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.DeleteCurrencyInfoInternal(CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Deletes specified currency.
            </summary>
            <param name="currencyObj">Currency to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrenciesInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all currencies matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the currencies should be retrieved from. If set to 0, global currencies are retrieved</param>
            <param name="onlyEnabled">True - only enabled currencies from the specified site are returned. False - all site currencies are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrenciesWithExchangeRateInternal(System.Int32)">
            <summary>
            Returns data query with the enabled currencies which have the exchange rate set.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.IsCurrencyWithExchangeRateInternal(System.Int32,System.Int32)">
            <summary>
            Returns true if site specified by its ID has defined exchange rate to given currency. Only enabled currencies are searched.
            </summary>
            <param name="currencyId">ID of currency to be looked for</param>
            <param name="siteId">ID of the site to get exchange table for</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetMainCurrencyInternal(System.Int32)">
            <summary>
            Returns main currency of specified site.
            </summary>
            <param name="siteId">Site ID for site main currency or 0 for global main currency</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetMainCurrencyCodeInternal(System.Int32)">
            <summary>
            Returns main currency code for given site or empty string when not found.
            </summary>
            <param name="siteId">Site ID for site main currency or 0 for global main currency code</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetCurrenciesByCodeInternal(System.Int32)">
            <summary>
            Returns CurrencyInfo objects present on given site in form of dictionary mapping currency code to CurrencyInfo object.
            </summary>
            <param name="siteId">ID of the site to get currencies for. 'Use global currencies' setting is considered.</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.RoundToInternal(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns rounded price.
            </summary>
            <param name="price">Price to be rounded</param>
            <param name="currencyObj">Currency which supplies 'round to' parameter - number of digits the price is rounded to</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetRelativelyFormattedPriceInternal(System.Double,System.Int32,System.Boolean)">
            <summary>
            Returns relatively formatted price according to formatting string of the specified site main currency.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="siteId">Id of the site which main currency has to be used for formatting</param>
            <param name="encode">Encode output</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetRelativelyFormattedPriceInternal(System.Double,CMS.Ecommerce.CurrencyInfo,System.Boolean)">
            <summary>
            Returns relatively formatted price according to formatting string of the specified currency.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="currencyObj">Currency which supplies formatting string</param>
            <param name="encode">Encode output</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedPriceInternal(System.Double,System.Int32,System.Boolean)">
            <summary>
            Returns formatted price according to formatting string of the specified site main currency.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="siteId">Id of the site which main currency has to be used for formatting</param>
            <param name="encode">Encode output</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedPriceInternal(System.Double,CMS.Ecommerce.CurrencyInfo,System.Boolean)">
            <summary>
            Returns formatted price according to formatting string of the specified currency.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="currencyObj">Currency which supplies formatting string</param>
            <param name="encode">Encode output</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.GetFormattedValueInternal(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns formatted price, by default formatting string "{0:0.00}" is used.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="currencyObj">Currency which can supply formatting string or 'round to' parameter - number of digits the price should be rounded to. 
            Be default currency has no effect to the result and formatting string "{0:0.00}" is used.</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.CopyFromGlobalInternal(System.Int32)">
            <summary>
            Copies global currencies to the specified site.
            </summary>
            <param name="siteId">ID of the target site</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.ChangeMainCurrencyInternal(System.Int32,System.Int32,System.Double,System.Int32,CMS.Ecommerce.RecalculationSettings)">
            <summary>
            Changes main currency and recalculates specified "money" values.
            </summary>
            <param name="siteId">ID of the site, which main currency is to be changed</param>
            <param name="newCurrencyId">ID of the new main currency</param>
            <param name="rate">Exchange rate which will be used wen recalculating</param>
            <param name="round">Number of decimal digits to which the result will be rounded</param>
            <param name="settings">Determines which objects are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.RecalculateValuesInternal(System.Int32,System.Int32,System.Int32,System.Single,System.Int32,CMS.Ecommerce.RecalculationSettings)">
            <summary>
             Recalculates specified values with given exchange rate.
            </summary>
            <param name="oldCurrencyId">ID of the old main currency</param>
            <param name="newCurrencyId">ID of the new main currency</param>
            <param name="siteId">ID of the site to be recalculated</param>
            <param name="rate">Exchange rate which will be used when recalculating</param>
            <param name="round">Number of decimal digits to which the result will be rounded</param>
            <param name="settings">Determines which objects are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.ClearHashtablesAfterRecalculationInternal(CMS.Ecommerce.RecalculationSettings)">
            <summary>
            Clears specified hashtables for the values to be actual. This method is called after changing main currency.
            </summary>
            <param name="settings">Setting for value recalculation process</param>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.LoadMainCurrencies">
            <summary>
            Loads all main currencies to hashtable.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CurrencyInfoProvider.CreateParameters(System.Boolean[])">
            <summary>
            Builds parameter string for web-farm task.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CurrencyInfoProvider.MainCurrencies">
            <summary>
            Main currencies indexed by the site ID
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CustomerInfo">
            <summary>
            CustomerInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CustomerInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.CustomerInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.#ctor">
            <summary>
            Constructor - Creates an empty CustomerInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CustomerInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.RegisterProperties">
            <summary>
            Registers properties of the object
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.RemoveObjectDependencies(System.Boolean,System.Boolean)">
            <summary>
            Removes object dependencies.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.ToMacroString">
            <summary>
            Returns customer informative name taken from CustomerInfoName property.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfo.CustomerIsOnSite(System.Int32)">
            <summary>
            Returns true if customer is anonymous on current site or has login on current site.
            </summary>
            <param name="siteID"></param>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerEmail">
            <summary>
            Customer e-mail.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerFax">
            <summary>
            Customer fax.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerEnabled">
            <summary>
            Indicates whether the customer is enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerCountryID">
            <summary>
            ID of the customer's country.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerStateID">
            <summary>
            ID of the customer's state.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerUserID">
            <summary>
            ID of the customer's user account. If set, it says that the customer is registered.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerUser">
            <summary>
            Registered user information. It is null for anonymous customer.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerID">
            <summary>
            Customer ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerLastName">
            <summary>
            Customer last name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerPhone">
            <summary>
            Customer phone.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerFirstName">
            <summary>
            Customer first name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerCompany">
            <summary>
            Customer company name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerGUID">
            <summary>
            Customer GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerTaxRegistrationID">
            <summary>
            Customer tax registration ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerOrganizationID">
            <summary>
            Customer organization ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerCreated">
            <summary>
            Date and time when the customer was created.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerLastModified">
            <summary>
            Date and time when the customer was last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerSiteID">
            <summary>
            Customer site ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerPreferredCurrencyID">
            <summary>
            ID of the customer's preferred currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerPreferredPaymentOptionID">
            <summary>
            ID of the customer's preferred payment option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerPreferredShippingOptionID">
            <summary>
            ID of the customer's preferred shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerIsRegistered">
            <summary>
            Indicates if customer has login (meaning CustomerUserID is set).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerInfoName">
            <summary>
            Returns customer first name followed by last name and by company name when available. Format is "John Doe (My company)".
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.CustomerHasCompanyInfo">
            <summary>
            Indicates if customer has company information (company name, org id or tax id) filled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.Orders">
            <summary>
            Collection of customer orders made on current site.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.AllOrders">
            <summary>
            Collection of all customer orders.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.PurchasedProducts">
            <summary>
            Collection of all customer purchased products from all sites.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.CustomerInfo.Wishlist">
            <summary>
            Collection of all customer wishlist items from all sites. It is empty, if customer is not registered.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.CustomerInfoProvider">
            <summary>
            Class providing CustomerInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomers">
            <summary>
            Returns the query for all customers.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomerInfo(System.Int32)">
            <summary>
            Returns customer with specified ID.
            </summary>
            <param name="customerId">Customer ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.SetCustomerInfo(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Sets (updates or inserts) specified customer.
            </summary>
            <param name="customerObj">Customer to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.DeleteCustomerInfo(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Deletes specified customer.
            </summary>
            <param name="customerObj">Customer to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.DeleteCustomerInfo(System.Int32)">
            <summary>
            Deletes customer with specified ID.
            </summary>
            <param name="customerId">Customer ID</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomers(System.Int32)">
            <summary>
            Returns query  of all customers for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomerInfoByUserID(System.Int32)">
            <summary>
            Returns customer with specified user ID.
            </summary>
            <param name="userId">User ID of the required customer</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomerUserSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns UserSiteInfo object for specified customer on given site.
            </summary>
            <param name="customerId">ID of the customer to get UserSite info for</param>
            <param name="siteId">ID of the site</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.IsUserAuthorizedToModifyCustomer(System.String,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to modify customers. 'EcommerceModify' OR 'ModifyCustomers' permission is checked.
            </summary>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.SetCustomerPreferredSettings(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Updates shopping carts customers preference by those selected in shopping cart. Updated fields are
            preferred currency, shipping and payment option. Registered customers preferences will be updated in UserSite 
            binding table for shopping carts site.
            Anonymous customer's preferences are updated directly in customer record.
            </summary>
            <param name="cart">Shopping cart info object</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.InvalidateCustomer(System.Int32)">
            <summary>
            Invalidates customer (and user when registered) who made given order.
            </summary>
            <param name="customerId">ID of the customer to be invalidated.</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.RegisterAndNotify(CMS.Ecommerce.CustomerInfo,System.String,System.String,System.String)">
            <summary>
            Register new user and notify him with invitation email.
            If username parameter is not given email is used.
            If password is not given system will generate new one. 
            Returns true on success. 
            </summary>
            <param name="ci">Customer object</param>
            <param name="emailTemplateCodeName">Template code Name</param>
            <param name="userName">User name</param>
            <param name="pass">New password</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.RegisterCustomer(CMS.Ecommerce.CustomerInfo,System.String,System.String)">
            <summary>
            Register customer with given password and return new user.
            If username parameter is not given email is used.
            </summary>
            <param name="ci">Customer object</param>
            <param name="password">New password</param>
            <param name="userName">New username</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.SendLoginDetailsNotificationEmail(CMS.Membership.UserInfo,System.String,System.String,System.Int32)">
            <summary>
            Send login details notification email based on given template. Resolves macros "UserName", "Password", "UserFullName", "AccountUrl".
            Returns true on success. 
            </summary>
            <param name="user">New user</param>
            <param name="password">New password</param>
            <param name="emailTemplateCodeName">Template</param>
            <param name="siteId">Site Id</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomerInfoInternal(System.Int32)">
            <summary>
            Returns customer with specified ID.
            </summary>
            <param name="customerId">Customer ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.SetCustomerInfoInternal(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Sets (updates or inserts) specified customer.
            </summary>
            <param name="customerObj">Customer to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.DeleteCustomerInfoInternal(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Deletes specified customer.
            </summary>
            <param name="customerObj">Customer to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomersInternal(System.Int32)">
            <summary>
            Returns query of all customers for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomerInfoByUserIDInternal(System.Int32)">
            <summary>
            Returns customer with specified user ID.
            </summary>
            <param name="userId">User ID of the required customer</param>   
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.GetCustomerUserSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns UserSiteInfo object for specified customer on given site.
            </summary>
            <param name="customerId">ID of the customer to get UserSite info for</param>
            <param name="siteId">ID of the site</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.SetCustomerPreferredSettingsInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Updates preferences of the registered customer by those selected in the shopping cart. Updated fields are
            preferred currency, shipping and payment option. It has no effect if customer is anonymous.
            </summary>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.InvalidateCustomerInternal(System.Int32)">
            <summary>
            Invalidates customer (and user when registered) who made given order.
            </summary>
            <param name="customerId">ID of the customer to be invalidated.</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.RegisterAndNotifyInternal(CMS.Ecommerce.CustomerInfo,System.String,System.String,System.String)">
            <summary>
            Register new user and notify him with invitation email.
            If password is null system will generate new one. 
            If username parameter is null email is used.
            Returns true on success. 
            </summary>
            <param name="ci">Customer object</param>
            <param name="emailTemplateCodeName">Template code name</param>
            <param name="userName">User name</param>
            <param name="pass">New password</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.RegisterCustomerInternal(CMS.Ecommerce.CustomerInfo,System.String,System.String)">
            <summary>
            Register customer with given password and return new user.
            If username parameter is null customer email is used.
            </summary>
            <param name="ci">Customer object</param>
            <param name="password">New password</param>
            <param name="username">New username</param>
        </member>
        <member name="M:CMS.Ecommerce.CustomerInfoProvider.SendLoginDetailsNotificationEmailInternal(CMS.Membership.UserInfo,System.String,System.String,System.Int32)">
            <summary>
            Send login details notification email based on given template. Resolves macros "UserName", "Password", "UserFullName", "AccountUrl".
            Returns true on success. 
            </summary>
             <param name="user">New user</param>
            <param name="password">New password</param>
            <param name="emailTemplateCodeName">Template</param>
            <param name="siteId">Site Id</param>
        </member>
        <member name="T:CMS.Ecommerce.DepartmentInfo">
            <summary>
            DepartmentInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DepartmentInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DepartmentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfo.#ctor">
            <summary>
            Constructor - Creates an empty DepartmentInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DepartmentInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentName">
            <summary>
            Code name of the department.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentID">
            <summary>
            ID of the department.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentDisplayName">
            <summary>
            Display name of the department.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentDefaultTaxClassID">
            <summary>
            Department default tax class ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentGUID">
            <summary>
            Department GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentInfo.DepartmentSiteID">
            <summary>
            Department site ID. Set to 0 for global department.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DepartmentInfoProvider">
            <summary>
            Class providing DepartmentInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartments">
            <summary>
            Returns the query for all departments.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartmentInfo(System.Int32)">
            <summary>
            Returns department with specified ID.
            </summary>
            <param name="departmentId">Department ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartmentInfo(System.String,System.String)">
            <summary>
            Returns department with specified name.
            </summary>
            <param name="departmentName">Department name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.SetDepartmentInfo(CMS.Ecommerce.DepartmentInfo)">
            <summary>
            Sets (updates or inserts) specified department.
            </summary>
            <param name="departmentObj">Department to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.DeleteDepartmentInfo(CMS.Ecommerce.DepartmentInfo)">
            <summary>
            Deletes specified department.
            </summary>
            <param name="departmentObj">Department to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.DeleteDepartmentInfo(System.Int32)">
            <summary>
            Deletes department with specified ID.
            </summary>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartments(System.Int32)">
            <summary>
            Returns dataset of all departments for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetUserDepartments(System.Int32)">
            <summary>
            Returns dataset of all departments for specified user.
            </summary>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartmentInfoInternal(System.Int32)">
            <summary>
            Returns department with specified ID.
            </summary>
            <param name="departmentId">Department ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartmentInfoInternal(System.String,System.String)">
            <summary>
            Returns department with specified name.
            </summary>
            <param name="departmentName">Department name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.SetDepartmentInfoInternal(CMS.Ecommerce.DepartmentInfo)">
            <summary>
            Sets (updates or inserts) specified department.
            </summary>
            <param name="departmentObj">Department to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.DeleteDepartmentInfoInternal(CMS.Ecommerce.DepartmentInfo)">
            <summary>
            Deletes specified department.
            </summary>
            <param name="departmentObj">Department to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetDepartmentsInternal(System.Int32)">
            <summary>
            Returns dataset of all departments for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DepartmentInfoProvider.GetUserDepartmentsInternal(System.Int32)">
            <summary>
            Returns dataset of all departments for specified user.
            </summary>
            <param name="userId">User ID</param>
        </member>
        <member name="T:CMS.Ecommerce.DepartmentTaxClassInfo">
            <summary>
            DepartmentTaxClassInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DepartmentTaxClassInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DepartmentTaxClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty DepartmentTaxClassInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DepartmentTaxClassInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentTaxClassInfo.DepartmentID">
            <summary>
            Department ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DepartmentTaxClassInfo.TaxClassID">
            <summary>
            TaxClass ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DepartmentTaxClassInfoProvider">
            <summary>
            Class providing DepartmentTaxClassInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.GetDepartmentTaxClasses">
            <summary>
            Returns the query for all department tax classes.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.GetDepartmentTaxClassInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified department and tax class.
            </summary>
            <param name="departmentId">Department ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.SetDepartmentTaxClassInfo(CMS.Ecommerce.DepartmentTaxClassInfo)">
            <summary>
            Sets relationship between specified department and tax class.
            </summary>
            <param name="infoObj">Department-tax class relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.DeleteDepartmentTaxClassInfo(CMS.Ecommerce.DepartmentTaxClassInfo)">
            <summary>
            Deletes relationship between specified department and tax class.
            </summary>
            <param name="infoObj">Department-tax class relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.AddTaxClassToDepartment(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified department and tax class.
            </summary>  
            <param name="taxClassId">Tax class ID</param>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.RemoveTaxClassFromDepartment(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified department and tax class.
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.GetDepartmentTaxClassInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified department and tax class.
            </summary>
            <param name="departmentId">Department ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.SetDepartmentTaxClassInfoInternal(CMS.Ecommerce.DepartmentTaxClassInfo)">
            <summary>
            Sets relationship between specified department and tax class.
            </summary>
            <param name="infoObj">Department-tax class relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.DepartmentTaxClassInfoProvider.DeleteDepartmentTaxClassInfoInternal(CMS.Ecommerce.DepartmentTaxClassInfo)">
            <summary>
            Deletes relationship between specified department and tax class.
            </summary>
            <param name="infoObj">Department-tax class relationship to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.DiscountCouponInfo">
            <summary>
            DiscountCouponInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountCouponInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.DiscountCouponInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.ApplyTogetherWith(CMS.Ecommerce.IItemDiscount)">
            <summary>
            Returns false. Discounts coupons are applied on result of previous discounts application.
            </summary>
            <param name="discount">Examined discount.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,System.Double)">
            <summary>
            Calculates discount based on basePrice for given shoppingcart item.
            </summary>
            <param name="item">Item to apply discount to.</param>
            <param name="basePrice">Base price to apply discount to. It is the item price with all previous discounts applied.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.#ctor">
            <summary>
            Constructor - Creates an empty DiscountCouponInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DiscountCouponInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponIsExcluded">
            <summary>
            Indicates whether the discount coupon is excluded or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponID">
            <summary>
            ID of the discount coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponValue">
            <summary>
            Value of the discount coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponValidTo">
            <summary>
            Date until the coupon is valid.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponCode">
            <summary>
            Code of the coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponIsFlatValue">
            <summary>
            Indicates whether the value is flat or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponDisplayName">
            <summary>
            Display name of the coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponValidFrom">
            <summary>
            Date the coupon is valid from.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.IsValid">
            <summary>
            Determines whether discount coupon is valid or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponGUID">
            <summary>
            DiscountCoupon GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.DiscountCouponSiteID">
            <summary>
            Discount coupon site ID. Set to 0 for global discount coupon.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountType">
            <summary>
            Discount type. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountID">
            <summary>
            Discount identifier. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountDisplayName">
            <summary>
            Discount display name. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountValue">
            <summary>
            Discount value. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountIsFlat">
            <summary>
            True - discount value is flat, False - discount value is relative. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountIsGlobal">
            <summary>
            True - says that discounts value is set in global main currency, False - says that discounts value is set in site main currency. 
            Takes effect only if discount value is flat. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.DiscountCouponInfo.ItemDiscountedUnits">
            <summary>
            Number of units the discount should be applied to
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.DiscountCouponInfoProvider">
            <summary>
            Class providing DiscountCouponInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCoupons">
            <summary>
            Returns the query for all products and product option.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCouponInfo(System.Int32)">
            <summary>
            Returns discount coupon with specified ID.
            </summary>
            <param name="couponId">Discount coupon ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCouponInfo(System.String,System.String)">
            <summary>
            Returns discount coupon with specified code. If site coupon is not found and global coupons are allowed, tries to search for global coupon with the same code.
            </summary>
            <param name="couponCode">Discount coupon code</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.SetDiscountCouponInfo(CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Sets (updates or inserts) specified discount coupon.
            </summary>
            <param name="couponObj">Discount coupon to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.DeleteDiscountCouponInfo(CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Deletes specified discount coupon.
            </summary>
            <param name="couponObj">Discount coupon to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.DeleteDiscountCouponInfo(System.Int32)">
            <summary>
            Deletes discount coupon with specified ID.
            </summary>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCoupons(System.Int32)">
            <summary>
            Returns dataset of all discount coupons for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.RecalculateDiscountCoupons(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates coupons values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.ValidateDiscountCoupon(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Returns True if discount coupon is valid and can be applied to the specified shopping cart item, otherwise returns False.
            </summary>
            <param name="item">Shopping cart item to which the discount coupon should be applied</param>
            <param name="discount">Discount coupon data</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountCouponInfo,System.Double)">
            <summary>
            Validates discount coupon and calculates shopping cart item unit discount after the discount coupon is applied.
            </summary>
            <param name="item">Shopping cart item to which the discount coupon should be applied</param>
            <param name="discount">Discount coupon data</param>
            <param name="basePrice">Price to apply discount to.</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.IsUserAuthorizedToModifyDiscountCoupon(CMS.Ecommerce.DiscountCouponInfo,System.String,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to modify specific discount coupon. 
            For global discount coupon: 'EcommerceGlobalModify' permission is checked. 
            For site-specific discount coupon: 'EcommerceModify' OR 'ModifyDiscounts' permission is checked.
            </summary>
            <param name="coupon">Discount coupon to be checked</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.IsUserAuthorizedToModifyDiscountCoupon(System.Boolean,System.String,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to modify discount coupons.
            </summary>
            <param name="global">For global discount coupons (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific discount coupons (global = False): 'EcommerceModify' OR 'ModifyDiscounts' permission is checked.</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCouponInfoInternal(System.Int32)">
            <summary>
            Returns discount coupon with specified ID.
            </summary>
            <param name="couponId">Discount coupon ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCouponInfoInternal(System.String,System.String)">
            <summary>
            Returns discount coupon with specified code. If site coupon is not found and global coupons are allowed, tries to search for global coupon with the same code.
            </summary>
            <param name="couponCode">Discount coupon code</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.SetDiscountCouponInfoInternal(CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Sets (updates or inserts) specified discount coupon.
            </summary>
            <param name="couponObj">Discount coupon to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.DeleteDiscountCouponInfoInternal(CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Deletes specified discount coupon.
            </summary>
            <param name="couponObj">Discount coupon to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.GetDiscountCouponsInternal(System.Int32)">
            <summary>
            Returns dataset of all discount coupons for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.RecalculateDiscountCouponsInternal(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates coupons values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.ValidateDiscountCouponInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Returns True if discount coupon is valid and can be applied to the specified shopping cart item, otherwise returns False.
            </summary>
            <param name="item">Shopping cart item to which the discount coupon should be applied</param>
            <param name="discount">Discount coupon data</param>        
        </member>
        <member name="M:CMS.Ecommerce.DiscountCouponInfoProvider.CalculateUnitDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.DiscountCouponInfo,System.Double)">
            <summary>
            Validates discount coupon and calculates shopping cart item unit discount after the discount coupon is applied.
            </summary>
            <param name="item">Shopping cart item to which the discount coupon should be applied</param>        
            <param name="discount">Discount coupon data</param>
            <param name="basePrice">Price to apply discount to.</param>
        </member>
        <member name="T:CMS.Ecommerce.ECommerceHelper">
            <summary>
            Custom E-commerce helper.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ECommerceHelper.ECOMMERCE_RESOURCE_NAME">
            <summary>
            Resource name for Ecommerce.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.IsUserAuthorizedToModifyConfiguration(System.Boolean,System.String,CMS.Base.IUserInfo)">
            <summary>
            Checks whether the user is authorized to modify site/global e-commerce configuration.
            </summary>
            <param name="global">True - permission 'ConfigurationGlobalModify' is checked, False - permission 'ConfigurationGlobalModify' is checked</param>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.IsUserAuthorizedToModifyConfiguration(System.Boolean,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks whether the user is authorized to modify site/global e-commerce configuration.
            </summary>
            <param name="global">True - permission 'ConfigurationGlobalModify' is checked, False - permission 'ConfigurationGlobalModify' is checked</param>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.IsUserAuthorizedForPermission(System.String,System.String,CMS.Base.IUserInfo)">
            <summary>
            Checks the specified ecommerce permission for the given user.
            </summary>
            <param name="permissionName">Permission name to be checked</param>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.IsUserAuthorizedForPermission(System.String,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the specified ecommerce permission for the given user.
            </summary>
            <param name="permissionName">Permission name to be checked</param>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>        
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.IsUserAuthorizedForDepartment(System.Int32,System.String,CMS.Base.IUserInfo)">
            <summary>
            Checks whether the user is authorized to access products from the specified department. 
            Returns true if user is global admin or is granted with 'AccessAllDepartments' e-commerce module permission or he is administrator of the given department.
            </summary>
            <param name="departmentId">ID of the department</param>
            <param name="user">User to be checked</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetDependencyMessage(CMS.DataEngine.BaseInfo)">
            <summary>
            Gets the message containing list of dependencies for specified ecommerce info object.
            </summary>
            <param name="infoObj">Info object.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.FormatDependencyMessage(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            Formats the message containing list of dependencies.
            </summary>
            <param name="dependencies">List of object dependencies.</param>
            <param name="message">Main message.</param>
            <param name="separator">Dependencies separator.</param>
            <returns></returns>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetSiteID(CMS.DataEngine.SiteInfoIdentifier,System.String)">
            <summary>
            Returns 0 if specified site uses global objects based on the specified e-commerce setting, otherwise returns site ID of the specified site.
            </summary>
            <param name="siteIdentifier">Site identifier (site ID or site name)</param>
            <param name="keyName">One of the e-commerce settings keys which determine if specific global objects are used</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetTableColumnSum(System.Data.DataTable,System.String)">
            <summary>
            Returns sum of all values from the specified table column.
            </summary>
            <param name="table">Table</param>
            <param name="column">Column name</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetDiscountValue(System.Double,System.Double,System.Boolean)">
            <summary>
            Returns discount calculated from the specified price.
            </summary>
            <param name="price">Price from which the discount should be calculated</param>
            <param name="value">Discount value</param>
            <param name="isFlat">True - discount value is flat, False - discount value is relative</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetDiscountValue(System.Double,CMS.Ecommerce.IItemDiscount,System.Func{System.Double,System.Double})">
            <summary>
            Returns discount calculated from given price. Exchange rate applicator function will be applied if discount is global and flat.
            </summary>
            <param name="price">Price to calculate discount from.</param>
            <param name="discount">Discount to apply</param>
            <param name="exchangeRateApplicator">Converts flat discount in global main currency to currency in which the price is expressed.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.ApplyDiscounts(System.Double,System.Collections.Generic.IEnumerable{CMS.Ecommerce.IItemDiscount},System.Func{System.Double,CMS.Ecommerce.IItemDiscount,System.Double})">
            <summary>
            Applies given discounts to specified price. Reflects discounts ordering. Discount value is calculated using discountCalculator function.
            </summary>
            <param name="price">Price to calculate discount from.</param>
            <param name="discounts">Discounts to apply.</param>
            <param name="discountCalculator">Function getting discount base price and discount object. Calculates resulting discount value.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.SignChanged(System.Double,System.Double)">
            <summary>
            Returns true if signs of two doubles are different.
            </summary>
            <param name="firstNumber">First number.</param>
            <param name="secondNumber">Second number.</param>        
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.CheckMainCurrency(System.Int32)">
            <summary>
            Checks if the site specified by the site ID has a main currency defined.
            Returns null if the main currency is defined, otherwise returns a warning message.
            </summary>
            <param name="siteId">ID of site to check</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.CopyData(CMS.DataEngine.BaseInfo,CMS.DataEngine.BaseInfo,System.String[])">
            <summary>
            Copies column values form one info object to another. ID, GUID and Timestamp columns are skipped.
            Objects types of both object must match.
            </summary>
            <param name="from">Info object to copy data from.</param>
            <param name="to">Info object to copy data to.</param>
            <param name="excludedColumns">These columns will not be updated.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.CopyFromGlobal``1(CMS.DataEngine.ObjectQuery{``0},System.Int32,System.String[])">
            <summary>
            Copies info objects of type TObject from global to site. Objects are obtained using query query. Allows to exclude some columns (will not be updated). 
            Existing unused site objects without global representation are deleted. 
            Used site objects without global representation are disabled (if disabling is supported).
            Returns site objects which left on site after operation.
            </summary>
            <typeparam name="TObject">Type of copied objects.</typeparam>
            <param name="query">Object query to get site and global objects.</param>
            <param name="siteId">Site to copy global objects to.</param>
            <param name="excludedColumns">Columns to be excluded. These columns will not be updated</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.DeleteOrDisable(CMS.DataEngine.BaseInfo)">
            <summary>
            Checks dependencies of given object and deletes it when nothing depends. Disables object otherwise.
            Needs EnabledColumn to be filled in TypeInfo of given object.
            </summary>
            <param name="info">Info object to be deleted / disabled.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetAllCouponCodesQuery(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Returns data query with codes in CouponCodeCode column from MultiBuyCouponCodes and CouponCodes on specified site.
            </summary>
            <param name="site">Site identifier.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetDiscountsTypeEnum(System.String)">
            <summary>
            Converts discount type string value to DiscountTypeEnum. Default value is DiscountTypeEnum.CustomDiscount.
            </summary>
            <param name="type">Discounts type.
            'VolumeDiscount' for volume discount, 'CustomDiscount' for custom discount.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.GetDiscountTypeString(CMS.Ecommerce.DiscountTypeEnum)">
            <summary>
            Converts DiscountTypeEnum to discount type string value.
            </summary>
            <param name="type">Discount type.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackOrderConversion(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Tracks order conversion.
            </summary>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackOrderConversion(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Tracks order conversion.
            </summary>
            <param name="cart">Shopping cart data</param>
            <param name="name">Order conversion name. If it is set, it is used instead of the 'Order' conversion name from the settings.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackRegistrationConversion(System.String)">
            <summary>
            Tracks registration conversion.
            </summary>
            <param name="siteName">Name of the site the registration should be tracked for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackRegistrationConversion(System.String,System.String)">
            <summary>
            Tracks registration conversion.
            </summary>
            <param name="siteName">Name of the site the registration should be tracked for.</param>
            <param name="name">Registration conversion name. If it is set, it is used instead of the 'Registration' conversion name from the settings.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackAddToShoppingCartConversion(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Tracks add to shopping cart conversion.
            </summary>
            <param name="product">Product for which the adding to the shopping cart should be tracked.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackAddToShoppingCartConversion(CMS.Ecommerce.ShoppingCartItemInfo,System.String)">
            <summary>
            Tracks add to shopping cart conversion.
            </summary>
            <param name="product">Product for which the adding to the shopping cart should be tracked.</param>
            <param name="name">Add to shopping cart conversion name. If it is set, it is used instead of the 'Add to shopping cart' conversion name from the settings.</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackOrderItemsConversions(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Tracks conversions of all order items
            </summary>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.IsUserAuthorizedPerEcommerce(System.String,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks whether the user is authorized for given permission, returns true if so.
            </summary>
            <param name="permissionName">Permission name to check</param>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>        
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackConversion(System.String,System.Double,System.Int32,System.String)">
            <summary>
            Logs conversion with the given name and value.
            </summary>
            <param name="objectName">Conversion name</param>
            <param name="value">Conversion value</param>
            <param name="count">Count of conversions to log</param>
            <param name="siteName">Name of the site the conversion should be logged for</param>
        </member>
        <member name="M:CMS.Ecommerce.ECommerceHelper.TrackVariantParentConversion(CMS.Ecommerce.ShoppingCartItemInfo,System.String,System.String,System.String,CMS.MacroEngine.MacroResolver)">
            <summary>
            Tracks conversion of variant parent.
            </summary>
            <param name="item">Shopping cart item for which parent conversion should be tracked</param>
            <param name="itemConversionName">Conversion name of shopping cart item</param>
            <param name="variantParentConversionName">Conversion name of variants product</param>
            <param name="siteName">Shopping cart site name</param>
            <param name="mr">Macro resolver</param>
        </member>
        <member name="T:CMS.Ecommerce.ExchangeRateInfo">
            <summary>
            ExchangeRateInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ExchangeRateInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ExchangeRateInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfo.#ctor">
            <summary>
            Constructor - Creates an empty ExchangeRateInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ExchangeRateInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeRateInfo.ExchangeTableID">
            <summary>
            ID of the exchange table.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeRateInfo.ExchagneRateID">
            <summary>
            ID of the exchange rate.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeRateInfo.ExchangeRateToCurrencyID">
            <summary>
            ID of the target currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeRateInfo.ExchangeRateValue">
            <summary>
            Value of the rate.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeRateInfo.ExchangeRateGUID">
            <summary>
            Exchange rate GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeRateInfo.ExchangeRateLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ExchangeRateInfoProvider">
            <summary>
            Class providing ExchangeRateInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRates">
            <summary>
            Returns the query for all exchange rates between currencies.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRateInfo(System.Int32)">
            <summary>
            Returns exchange rate with specified ID.
            </summary>
            <param name="rateId">Exchange rate ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.SetExchangeRateInfo(CMS.Ecommerce.ExchangeRateInfo)">
            <summary>
            Sets (updates or inserts) specified exchange rate.
            </summary>
            <param name="rateObj">Exchange rate to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.DeleteExchangeRateInfo(CMS.Ecommerce.ExchangeRateInfo)">
            <summary>
            Deletes specified exchange rate.
            </summary>
            <param name="rateObj">Exchange rate to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.DeleteExchangeRateInfo(System.Int32)">
            <summary>
            Deletes exchange rate with specified ID.
            </summary>
            <param name="rateId">Exchange rate ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRates(System.Int32)">
            <summary>
            Returns query with all exchange rates of the specified exchange table.
            </summary>
            <param name="tableId">Exchange table ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRateInfo(System.Int32,System.Int32)">
            <summary>
            Returns exchange rate from specified exchange table which is applied to specified currency.
            </summary>
            <param name="currencyId">Currency ID</param>        
            <param name="tableId">Exchange table ID</param>  
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetLastExchangeRate(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns valid exchange rate between main currency of the specified site and currency specified by currencyID
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found.
            </summary>
            <param name="currencyId">ID of the currency to which we want exchange</param>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>
            <param name="fromGlobal">If set to true, exchange rate between global main currency and specified site currency is calculated and returned. Has effect only when converting to site currency</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.ApplyExchangeRate(System.Double,System.Double)">
            <summary>
            Returns the value modified using the given exchange rate.
            </summary>
            <param name="value">Value the exchange rate should be applied to</param>
            <param name="rate">Exchange rate value</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.CopyExchangeRates(System.Int32,System.Int32)">
            <summary>
            Copies exchange rates from source table to target table. Updates only rates with same currency code. Rates in target table which does not
            have corresponding rate in source table will not be updated.
            </summary>
            <param name="sourceTableId">Id of the source exchange table</param>
            <param name="targetTableId">Id of the target exchange table</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.RecalculateExchangeRates(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates exchange rates values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">Id of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRateInfoInternal(System.Int32)">
            <summary>
            Returns exchange rate with specified ID.
            </summary>
            <param name="rateId">Exchange rate ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.SetExchangeRateInfoInternal(CMS.Ecommerce.ExchangeRateInfo)">
            <summary>
            Sets (updates or inserts) specified exchange rate.
            </summary>
            <param name="rateObj">Exchange rate to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.DeleteExchangeRateInfoInternal(CMS.Ecommerce.ExchangeRateInfo)">
            <summary>
            Deletes specified exchange rate.
            </summary>
            <param name="rateObj">Exchange rate to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRatesInternal(System.Int32)">
            <summary>
            Returns query containing all exchange rates of the specified exchange table.
            </summary>
            <param name="tableId">Exchange table ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetExchangeRateInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns exchange rate from specified exchange table which is applied to specified currency.
            </summary>
            <param name="currencyId">Currency ID</param>        
            <param name="tableId">Exchange table ID</param>  
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetLastExchangeRateInternal(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns valid exchange rate between main currency of the specified site and currency specified by currencyID
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found.
            </summary>
            <param name="currencyId">ID of the currency to which we want exchange</param>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>
            <param name="fromGlobal">If set to true, exchange rate between global main currency and specified site currency is calculated and returned. Has effect only when converting to site currency</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.ApplyExchangeRateInternal(System.Double,System.Double)">
            <summary>
            Returns the value modified using the given exchange rate.
            </summary>
            <param name="value">Value the exchange rate should be applied to</param>
            <param name="rate">Exchange rate value</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.CopyExchangeRatesInternal(System.Int32,System.Int32)">
            <summary>
            Copies exchange rates from source table to target table. Updates only rates with same currency code. Rates in target table which does not
            have corresponding rate in source table will not be updated.
            </summary>
            <param name="sourceTableId">Id of the source exchange table</param>
            <param name="targetTableId">Id of the target exchange table</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.RecalculateExchangeRatesInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates exchange rates values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are multiplied</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetLastExchangeRateForSite(System.Int32,System.Int32)">
            <summary>
            Returns cached valid exchange rate between main currency of the specified site and currency specified by ID
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found.
            </summary>
            <param name="currencyId">ID of the currency to which we want exchange</param>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeRateInfoProvider.GetLastExchangeRateFromDB(System.Int32,System.Int32)">
            <summary>
            Returns valid exchange rate between main currency of the specified site and currency specified by ID
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found. Takes data from database.
            </summary>
            <param name="currencyId">ID of the currency to which we want exchange</param>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>
        </member>
        <member name="T:CMS.Ecommerce.ExchangeTableInfo">
            <summary>
            ExchangeTableInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ExchangeTableInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ExchangeTableInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfo.#ctor">
            <summary>
            Constructor - Creates an empty ExchangeTableInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ExchangeTableInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableValidFrom">
            <summary>
            Valid from.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableID">
            <summary>
            ID of the exchange table.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableDisplayName">
            <summary>
            Table display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableValidTo">
            <summary>
            Valid to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableGUID">
            <summary>
            Exchange table GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableSiteID">
            <summary>
            Exchange table site ID. Set to 0 for global exchange table.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ExchangeTableInfo.ExchangeTableRateFromGlobalCurrency">
            <summary>
            Rate from global main currency to site main currency.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ExchangeTableInfoProvider">
            <summary>
            Class providing ExchangeTableInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTables">
            <summary>
            Returns the query for all exchange tables.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTableInfo(System.Int32)">
            <summary>
            Returns exchange table with specified ID.
            </summary>
            <param name="tableId">Exchange table ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.SetExchangeTableInfo(CMS.Ecommerce.ExchangeTableInfo)">
            <summary>
            Sets (updates or inserts) specified exchange table.
            </summary>
            <param name="tableObj">Exchange table to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.DeleteExchangeTableInfo(CMS.Ecommerce.ExchangeTableInfo)">
            <summary>
            Deletes specified exchange table.
            </summary>
            <param name="tableObj">Exchange table to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.DeleteExchangeTableInfo(System.Int32)">
            <summary>
            Deletes exchange table with specified ID.
            </summary>
            <param name="tableId">Exchange table ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTables(System.Int32)">
            <summary>
            Returns dataset of all exchange tables for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTableInfo(System.String,System.String)">
            <summary>
            Returns exchange table with specified display name.
            </summary>
            <param name="tableName">Exchange table display name</param>        
            <param name="siteName">Exchange table site name</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetLastExchangeTableInfo(System.Int32)">
            <summary>
            For specified site returns last valid exchange table or last invalid exchange table if no valid table found or 
            null if no exchange table found.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetLastValidExchangeTableInfo(System.Int32)">
            <summary>
            For specified site returns last valid exchange table or null if no valid exchange table found.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.IsExchangeRateFromGlobalMainCurrencyMissing(System.Int32)">
            <summary>
            Indicates if exchange rate from global main currency is missing in the last valid exchange table. Returns false if site uses
            global currencies or global exchange rates or code of site main currency is the same as code of global main currency.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.RecalculateExchangeRateFromGlobalMainCurrency(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates exchange rates from global main currency using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">Id of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetLastExchangeRateFromGlobalMainCurrency(System.Int32)">
            <summary>
            Returns valid exchange rate from global main currency to the currency of the specified site
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found.
            If site uses global currencies or global currency code equals site currency code, 1 is returned automatically.
            </summary>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>  
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTableInfoInternal(System.Int32)">
            <summary>
            Returns exchange table with specified ID.
            </summary>
            <param name="tableId">Exchange table ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.SetExchangeTableInfoInternal(CMS.Ecommerce.ExchangeTableInfo)">
            <summary>
            Sets (updates or inserts) specified exchange table.
            </summary>
            <param name="tableObj">Exchange table to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.DeleteExchangeTableInfoInternal(CMS.Ecommerce.ExchangeTableInfo)">
            <summary>
            Deletes specified exchange table.
            </summary>
            <param name="tableObj">Exchange table to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTablesInternal(System.Int32)">
            <summary>
            Returns dataset of all exchange tables for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetExchangeTableInfoInternal(System.String,System.String)">
            <summary>
            Returns exchange table with specified display name.
            </summary>
            <param name="tableName">Exchange table display name</param>        
            <param name="siteName">Exchange table site name</param>        
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetLastExchangeTableInfoInternal(System.Int32)">
            <summary>
            For specified site returns last valid exchange table or last invalid exchange table if no valid table found or 
            null if no exchange table found.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetLastValidExchangeTableInfoInternal(System.Int32)">
            <summary>
            For specified site returns last valid exchange table or null if no valid exchange table found.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.IsExchangeRateFromGlobalMainCurrencyMissingInternal(System.Int32)">
            <summary>
            Indicates if exchange rate from global main currency is missing in the last valid exchange table. Returns false if site uses
            global currencies or global exchange rates or code of site main currency is the same as code of global main currency.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.RecalculateExchangeRateFromGlobalMainCurrencyInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates exchange rates from global main currency using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetLastExchangeRateFromGlobalMainCurrencyInternal(System.Int32)">
            <summary>
            Returns valid exchange rate from global main currency to the currency of the specified site
            or last invalid exchange rate if no valid rate found or 1 if no exchange rate found.
            If site uses global currencies or global currency code equals site currency code, 1 is returned automatically.
            </summary>
            <param name="siteId">ID of the site for which the exchange rate should be returned</param>      
        </member>
        <member name="M:CMS.Ecommerce.ExchangeTableInfoProvider.GetLastValidTableInfo(System.Int32,CMS.Helpers.CacheSettings)">
            <summary>
            Returns last valid exchange table from database.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="cacheSettings">Cache settings</param>
        </member>
        <member name="T:CMS.Ecommerce.InternalStatusInfo">
            <summary>
            InternalStatusInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.InternalStatusInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.InternalStatusInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfo.CopyDataFrom(CMS.Ecommerce.InternalStatusInfo)">
            <summary>
            Fills data properties with values from given template.
            </summary>
            <param name="status">Template to copy data from</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfo.#ctor">
            <summary>
            Constructor - Creates an empty InternalStatusInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new InternalStatusInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusEnabled">
            <summary>
            Indicates whether the status is enabled or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusID">
            <summary>
            ID of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusName">
            <summary>
            Code name of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusDisplayName">
            <summary>
            Display name of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusGUID">
            <summary>
            InternalStatus GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.InternalStatusInfo.InternalStatusSiteID">
            <summary>
            Internal status site ID. Set to 0 for global internal status.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.InternalStatusInfoProvider">
            <summary>
            Class providing InternalStatusInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatuses">
            <summary>
            Returns the query for all internal statuses.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusInfo(System.Int32)">
            <summary>
            Returns internal status with specified ID.
            </summary>
            <param name="statusId">Internal status ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusInfo(System.String,System.String)">
            <summary>
            Returns internal status with specified name.
            </summary>
            <param name="statusName">Internal status name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.SetInternalStatusInfo(CMS.Ecommerce.InternalStatusInfo)">
            <summary>
            Sets (updates or inserts) specified internal status.
            </summary>
            <param name="statusObj">Internal status to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.DeleteInternalStatusInfo(CMS.Ecommerce.InternalStatusInfo)">
            <summary>
            Deletes specified internal status.
            </summary>
            <param name="statusObj">Internal status to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.DeleteInternalStatusInfo(System.Int32)">
            <summary>
            Deletes internal status with specified ID.
            </summary>
            <param name="statusId">Internal status ID</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatuses(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all internal statuses for specified site.
            </summary>
            <param name="siteId">Site ID</param> 
            <param name="onlyEnabled">True - only enable internal statuses are returned.
            False - both enabled and disabled internal statuses are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.CopyFromGlobal(System.Int32)">
            <summary>
            Copies global internal statuses to the specified site.
            </summary>
            <param name="siteId">ID of the target site</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all internal statuses matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusInfoInternal(System.Int32)">
            <summary>
            Returns internal status with specified ID.
            </summary>
            <param name="statusId">Internal status ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusInfoInternal(System.String,System.String)">
            <summary>
            Returns internal status with specified name.
            </summary>
            <param name="statusName">Internal status name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.SetInternalStatusInfoInternal(CMS.Ecommerce.InternalStatusInfo)">
            <summary>
            Sets (updates or inserts) specified internal status.
            </summary>
            <param name="statusObj">Internal status to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.DeleteInternalStatusInfoInternal(CMS.Ecommerce.InternalStatusInfo)">
            <summary>
            Deletes specified internal status.
            </summary>
            <param name="statusObj">Internal status to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.GetInternalStatusesInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all internal statuses for specified site.
            </summary>
            <param name="siteId">Site ID</param> 
            <param name="onlyEnabled">True - only enable internal statuses are returned.
            False - both enabled and disabled internal statuses are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.InternalStatusInfoProvider.CopyFromGlobalInternal(System.Int32)">
            <summary>
            Copies site-specific status options from global status list.
            </summary>
            <param name="siteId">Id of the site for which new statuses are to be created</param>
        </member>
        <member name="T:CMS.Ecommerce.ManufacturerInfo">
            <summary>
            ManufacturerInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ManufacturerInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ManufacturerInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfo.#ctor">
            <summary>
            Constructor - Creates an empty ManufacturerInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ManufacturerInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerEnabled">
            <summary>
            Manufacturer enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerIsImportant">
            <summary>
            Indicates if manufacturer is important. This flag is mostly used for filter purposes.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerID">
            <summary>
            Manufacturer ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerDisplayName">
            <summary>
            Manufacturer display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerName">
            <summary>
            Manufacturer code name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerDescription">
            <summary>
            Manufacturer description.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerHomepage">
            <summary>
            Manufacture homepage.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerGUID">
            <summary>
            Manufacturer GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerSiteID">
            <summary>
            Manufacturer site ID. Set to 0 for global manufacturer.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ManufacturerInfo.ManufacturerThumbnailGUID">
            <summary>
            Manufacturer thumbnail metafile GUID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ManufacturerInfoProvider">
            <summary>
            Class providing ManufacturerInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturers">
            <summary>
            Returns the query for all manufacturers.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturerInfo(System.Int32)">
            <summary>
            Returns manufacturer with specified ID.
            </summary>
            <param name="manufacturerId">Manufacturer ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.SetManufacturerInfo(CMS.Ecommerce.ManufacturerInfo)">
            <summary>
            Sets (updates or inserts) specified manufacturer.
            </summary>
            <param name="manufacturerObj">Manufacturer to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.DeleteManufacturerInfo(CMS.Ecommerce.ManufacturerInfo)">
            <summary>
            Deletes specified manufacturer.
            </summary>
            <param name="manufacturerObj">Manufacturer to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.DeleteManufacturerInfo(System.Int32)">
            <summary>
            Deletes manufacturer with specified ID.
            </summary>
            <param name="manufacturerId">Manufacturer ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturers(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all manufacturers for specified site.
            </summary>
            <param name="siteId">Site ID</param>   
            <param name="onlyEnabled">True - only enable manufacturers are returned.
            False - both enabled and disabled manufacturers are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturerInfo(System.String,System.String)">
            <summary>
            Returns manufacturer with specified code name.
            </summary>
            <param name="manufacturerName">Manufacturer code name</param>        
            <param name="siteName">Manufacturer site name</param>        
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.IsUserAuthorizedToModifyManufacturer(CMS.Ecommerce.ManufacturerInfo,System.String,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to modify specific manufacturer. 
            For global manufacturer: 'EcommerceGlobalModify' permission is checked. 
            For site-specific manufacturer: 'EcommerceModify' OR 'ModifyManufacturers' permission is checked.
            </summary>
            <param name="manufacturer">Manufacturer to be checked</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.IsUserAuthorizedToModifyManufacturer(System.Boolean,System.String,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to modify manufacturers.
            </summary>
            <param name="global">For global manufacturers (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific manufacturers (global = False): 'EcommerceModify' OR 'ModifyManufacturers' permission is checked.</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturerInfoInternal(System.Int32)">
            <summary>
            Returns manufacturer with specified ID.
            </summary>
            <param name="manufacturerId">Manufacturer ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.SetManufacturerInfoInternal(CMS.Ecommerce.ManufacturerInfo)">
            <summary>
            Sets (updates or inserts) specified manufacturer.
            </summary>
            <param name="manufacturerObj">Manufacturer to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.DeleteManufacturerInfoInternal(CMS.Ecommerce.ManufacturerInfo)">
            <summary>
            Deletes specified manufacturer.
            </summary>
            <param name="manufacturerObj">Manufacturer to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturersInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all manufacturers for specified site.
            </summary>
            <param name="siteId">Site ID</param>   
            <param name="onlyEnabled">True - only enable manufacturers are returned.
            False - both enabled and disabled manufacturers are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.ManufacturerInfoProvider.GetManufacturerInfoInternal(System.String,System.String)">
            <summary>
            Returns manufacturer with specified code name.
            </summary>
            <param name="manufacturerName">Manufacturer code name</param>        
            <param name="siteName">Manufacturer site name</param>        
        </member>
        <member name="T:CMS.Ecommerce.OptionCategoryInfo">
            <summary>
            OptionCategoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategoryInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.CheckDependencies(System.Boolean)">
            <summary>
            Checks the object dependencies. Returns true if there is at least one dependency.
            </summary>
            <param name="reportAll">If false, only required dependencies (without default value) are checked, if true required ObjectDependency constraint is ignored</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.#ctor(CMS.Ecommerce.OptionCategoryInfo,System.Boolean)">
            <summary>
            Constructor - Creates a new OptionCategoryInfo object from the given DataClass.
            </summary>
            <param name="oci">Source category info</param>
            <param name="keepSourceData">If true, source data are kept in the object</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty OptionCategoryInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OptionCategoryInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryDisplayName">
            <summary>
            Category Display Name (simple text or localizable string).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryName">
            <summary>
            Category Code Name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryLiveSiteDisplayName">
            <summary>
            Category Display Name for live site (simple text or localizable string).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryTitle">
            <summary>
            Gets category live site display name when specified. Returns value of CategoryDisplayName otherwise.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryFullName">
            <summary>
            Gets informative category name consisting of category display name and category live site display name when available.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryID">
            <summary>
            Category ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategorySiteID">
            <summary>
            Category site ID. Set to 0 for global category.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryFormControlName">
            <summary>
            Code name of form control used for selecting product options.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryIsGlobal">
            <summary>        
            Indicates if category is global or site-specific.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryType">
            <summary>
            Type of the category
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategorySelectionType">
            <summary>
            Type of the control which is used for configuring product options of the category
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryDefaultOptions">
            <summary>
            Category default options.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryDescription">
            <summary>
            Category description (simple text or localizable string).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryDefaultRecord">
            <summary>
            Default record text (simple text or localizable string).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryEnabled">
            <summary>
            Indicates whether option category is enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryGUID">
            <summary>
            CategoryOption GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryDisplayPrice">
            <summary>
            Indicates whether the option price should be displayed with option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryTextMaxLength">
            <summary>
            Maximum length of the text product option text. It has no effect, if the category has no text product option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryTextMinLength">
            <summary>
            Minimum length of the text product option text. It has no effect, if the category has no text product option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OptionCategoryInfo.CategoryOptionHasDependencies">
            <summary>
            Indicates whether option category type can be changed.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OptionCategoryInfoProvider">
            <summary>
            Class providing OptionCategoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategories">
            <summary>
            Returns the query for all option categories.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategoryInfo(System.Int32)">
            <summary>
            Returns option category with specified ID.
            </summary>
            <param name="categoryId">Option category ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategoryInfo(System.String,System.String)">
            <summary>
            Returns option category with specified name.
            </summary>
            <param name="categoryName">Option category name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.SetOptionCategoryInfo(CMS.Ecommerce.OptionCategoryInfo)">
            <summary>
            Sets (updates or inserts) specified option category.
            </summary>
            <param name="categoryObj">Option category to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.DeleteOptionCategoryInfo(CMS.Ecommerce.OptionCategoryInfo)">
            <summary>
            Deletes specified option category.
            </summary>
            <param name="categoryObj">Option category to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.DeleteOptionCategoryInfo(System.Int32)">
            <summary>
            Deletes option category with specified ID.
            </summary>
            <param name="categoryId">Option category ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategories(System.Int32)">
            <summary>
            Returns query for all option categories for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetProductOptionCategories(System.Int32,System.Boolean,System.Nullable{CMS.Ecommerce.OptionCategoryTypeEnum})">
            <summary>
            Returns DataSet with all option categories which are assigned to the specified product.
            </summary>
            <param name="skuId">Product ID</param>
            <param name="onlyEnabled">True - only enabled option categories are included, False - all option categories are included</param>
            <param name="categoryType">Type of option category. Allows to filter only categories of specific type.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetVariantOptionCategories(System.Int32,System.Boolean)">
            <summary>
            Returns DataSet with all option categories which are assigned to the specified variant.
            </summary>
            <param name="skuId">Variant ID</param>
            <param name="onlyEnabled">True - only enabled option categories are included, False - all option categories are included</param>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.IsUserAuthorizedToModifyOptionCategory(CMS.Ecommerce.OptionCategoryInfo,System.String,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to modify specific option category. 
            For global option category: 'EcommerceGlobalModify' permission is checked. 
            For site-specific manufacturer: 'EcommerceModify' OR 'ModifyProducts' permission is checked.
            </summary>
            <param name="categoryObj">Option category to be checked</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.IsUserAuthorizedToModifyOptionCategory(System.Boolean,System.String,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to modify option categories.
            </summary>
            <param name="global">For global option categories (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific option categories (global = False): 'EcommerceModify' OR 'ModifyProducts' permission is checked.</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetAllowedOptionsCount(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets info about how many options are available in specific option categories for given product.
            Returns dataset with one table containing OptionCategoryID, AllowAllOptions flag, SelectedOptions count and AllOptions count.
            </summary>
            <param name="skuId">Product ID to return counts for.</param>
            <param name="categoryIds">IDs of categories to get counts for. Use null for all relevant categories.</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategoryInfoInternal(System.Int32)">
            <summary>
            Returns option category with specified ID.
            </summary>
            <param name="categoryId">Option category ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategoryInfoInternal(System.String,System.String)">
            <summary>
            Returns option category with specified name.
            </summary>
            <param name="categoryName">Option category name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.SetOptionCategoryInfoInternal(CMS.Ecommerce.OptionCategoryInfo)">
            <summary>
            Sets (updates or inserts) specified option category.
            </summary>
            <param name="categoryObj">Option category to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.DeleteOptionCategoryInfoInternal(CMS.Ecommerce.OptionCategoryInfo)">
            <summary>
            Deletes specified option category.
            </summary>
            <param name="categoryObj">Option category to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetOptionCategoriesInternal(System.Int32)">
            <summary>
            Returns query for all option categories for specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetProductOptionCategoriesInternal(System.Int32,System.Boolean,System.Nullable{CMS.Ecommerce.OptionCategoryTypeEnum})">
            <summary>
            Returns DataSet with all option categories which are assigned to the specified product.
            </summary>
            <param name="skuId">Product ID</param>
            <param name="onlyEnabled">True - only enabled option categories are included, False - all option categories are included</param>
            <param name="categoryType">Type of option category. Allows to filter only categories of specific type.</param>
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetVariantOptionCategoriesInternal(System.Int32,System.Boolean)">
            <summary>
            Returns DataSet with all option categories which are assigned to the specified variant.
            </summary>
            <param name="skuId">Variant ID</param>
            <param name="onlyEnabled">True - only enabled option categories are included, False - all option categories are included</param>       
        </member>
        <member name="M:CMS.Ecommerce.OptionCategoryInfoProvider.GetAllowedOptionsCountInternal(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets info about how many options are available in specific option categories for given product.
            Returns dataset with one table containing OptionCategoryID, AllowAllOptions flag, SelectedOptions count and AllOptions count.
            </summary>
            <param name="skuId">Product ID to return counts for.</param>
            <param name="categoryIds">IDs of categories to get counts for. Use null for all relevant categories.</param>
        </member>
        <member name="T:CMS.Ecommerce.OptionCategorySelectionTypeEnum">
            <summary>
            Type of control to select product options.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.Dropdownlist">
            <summary>
            DropDownList.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.RadioButtonsVertical">
            <summary>
            RadioButtons in vertical layout.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.RadioButtonsHorizontal">
            <summary>
            RadioButtons in horizontal layout.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.CheckBoxesVertical">
            <summary>
            Checkboxes in vertical layout.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.CheckBoxesHorizontal">
            <summary>
            Checkboxes in horizontal layout.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.TextBox">
            <summary>
            Text box.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.TextArea">
            <summary>
            Text area.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OptionCategorySelectionTypeEnum.FormControl">
            <summary>
            Form control
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderInfo">
            <summary>
            OrderInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderInfo.mOrderCustomData">
            <summary>
            Order custom data.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderInfo.mOrderPaymentResult">
            <summary>
            Payment result.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.#ctor">
            <summary>
            Constructor - Creates an empty OrderInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OrderInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Creates a new OrderInfo object from serialized data.
            </summary>        
            <param name="info">Serialization data</param>
            <param name="context">Context</param> 
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfo.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderID">
            <summary>
            Order ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderExchangeRate">
            <summary>
            Exchange rate from site main currency to shopping cart currency. 
            This exchange rate is applied to all site items (products, discounts, taxes, shipping option) which are present in the shopping cart to express their price in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderPaymentOptionID">
            <summary>
            Order payment option ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderSiteID">
            <summary>
            Order site ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderShippingTaxes">
            <summary>
            Xml content with the summary of the taxes which were applied to the selected shipping option. 
            Contains tags "TaxClassID", "TaxClassDisplayName", "TaxClassZeroIfIDSupplied", "TaxValue", "TaxIsFlat". The root tag is ShippingTaxes.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderContentTaxes">
            <summary>
            Xml content with the summary of the taxes which were applied shopping cart item.
            Contains tags "SKUID", "TaxClassID", "TaxClassDisplayName", "TaxClassZeroIfIDSupplied", "TaxValue", "TaxIsFlat". The root tag is ContentTaxes.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTotalTax">
            <summary>
            Order total tax in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTotalTaxInMainCurrency">
            <summary>
            Order total tax in main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTotalDiscountInMainCurrency">
            <summary>
            Order total discount in main currency. Only order/cart discounts are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderShippingAddressID">
            <summary>
            Order shipping address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderInvoiceNumber">
            <summary>
            Order invoice number.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCurrencyID">
            <summary>
            Order currency ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderShippingOptionID">
            <summary>
            Order shipping option ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderInvoice">
            <summary>
            Order invoice.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderNote">
            <summary>
            Order note.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCompletedByUserID">
            <summary>
            Order created by user ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderBillingAddressID">
            <summary>
            Order billing address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCountryID">
            <summary>
            Country ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCustomerID">
            <summary>
            Order customer ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderStatusID">
            <summary>
            Order status ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTotalPrice">
            <summary>
            Order total price.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTotalPriceInMainCurrency">
            <summary>
            Order total price in main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTotalShipping">
            <summary>
            Order total shipping in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTotalShippingInMainCurrency">
            <summary>
            Order total shipping in main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderDate">
            <summary>
            Order date.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderPaymentResult">
            <summary>
            Order payment result.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderDiscountCouponID">
            <summary>
            Order discount coupon ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCouponCode">
            <summary>
            Code of the discount coupon used in this order.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCompanyAddressID">
            <summary>
            Order company address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderTrackingNumber">
            <summary>
            Order tracking number.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderGUID">
            <summary>
            Order GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderIsPaid">
            <summary>
            Order is paid.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCulture">
            <summary>
            Culture of the order.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCustomData">
            <summary>
            Order custom data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderPaymentFormattedResult">
            <summary>
            Returns formatted payment result.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderBillingAddress">
            <summary>
            Gets or sets the current billing address.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderShippingAddress">
            <summary>
            Gets or sets the current shipping address.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderCompanyAddress">
            <summary>
            Gets or sets the current company address.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderInfo.OrderDiscounts">
            <summary>
            Xml content with the summary of the order and multibuy discounts which were applied to the shopping cart item. 
            Contains discount name, price and price in main currency.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderInfoProvider">
            <summary>
            Class providing OrderInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrders">
            <summary>
            Returns the query for all orders.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderInfo(System.Int32)">
            <summary>
            Returns order with specified ID.
            </summary>
            <param name="orderId">Order ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SetOrderInfo(CMS.Ecommerce.OrderInfo)">
            <summary>
            Sets (updates or inserts) specified order.
            </summary>
            <param name="orderObj">Order to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.DeleteOrderInfo(CMS.Ecommerce.OrderInfo)">
            <summary>
            Deletes specified order.
            </summary>
            <param name="orderObj">Order to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.DeleteOrderInfo(System.Int32)">
            <summary>
            Deletes order with specified ID.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GenerateData">
            <summary>
            Generate sample data
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.DeleteData">
            <summary>
            Delete sample data
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrders(System.Int32)">
            <summary>
            Returns query for all orders for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetCustomersOrders(System.Int32)">
            <summary>
            Returns query for all orders for specified customer.
            </summary>
            <param name="customerId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GenerateInvoiceNumber(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns invoice number generated from given shopping cart data.
            </summary>
            <param name="cart">Shopping cart info object to generate invoice number for</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetInvoice(System.Int32)">
            <summary>
            Returns html code that represents invoice of order specified by ID.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetInvoice(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns html code that represents invoice of order loaded in the given shopping cart.
            </summary>
            <param name="cart">Shopping cart with order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetAddress(CMS.Ecommerce.IAddress)">
            <summary>
            Returns html code that represents address. Used for generating of invoice.
            </summary>
            <param name="address">Address</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetPaymentOption(System.Int32)">
            <summary>
            Returns html code that represents payment option. Used for generating of invoice.
            </summary>
            <param name="paymentId">Payment option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetShippingOption(System.Int32)">
            <summary>
            Returns html code that represents shipping option. Used for generating of invoice.
            </summary>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetInvoiceNumber(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns html code that represents invoice number. Used for generating of invoice.
            </summary>
            <param name="order">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderDate(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns html code that represents date of order. Used for generating of invoice.
            </summary>
            <param name="order">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderNote(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns html code that represents note of order. Used for generating of invoice.
            </summary>
            <param name="order">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetProductList(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns html code that represents product list. Used for generating of invoice.
            </summary>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTotalPrice(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns html code that represents total price of order. Used for generating of invoice.
            </summary>
            <param name="value">Price value</param>
            <param name="currency">Currency to use</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTaxRecapitulation(System.Data.DataTable,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns html code that represents info about used taxes. Used for generating of invoice.
            </summary>
            <param name="taxes">Table with the tax summary</param>
            <param name="currency">Currency data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTaxRegistrationID(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Returns html code that represents info about customer tax registration ID. Used for generating of invoice.
            </summary>
            <param name="customerObj">Customer data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrganizationID(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Returns html code that represents info about customer tax registration ID. Used for generating of invoice.
            </summary>
            <param name="customerObj">Customer data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTotalShipping(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns html code that represents total shipping of order. Used for generating of invoice.
            </summary>
            <param name="value">Price value</param>
            <param name="currency">Currency to use</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.CreateEmailMacroResolver(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Creates the macro resolver for the given shopping cart.
            </summary>
            <param name="cartObj">Shopping data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderNotificationToCustomer(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sends order notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderNotificationToCustomer(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderNotificationToCustomer' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderNotificationToAdministrator(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sends order notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderNotificationToAdministrator(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderNotificationToAdmin' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderPaymentNotificationToCustomer(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sends order payment notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderPaymentNotificationToCustomer(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order payment notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderPaymentNotificationToCustomer' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderPaymentNotificationToAdministrator(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sends order payment notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderPaymentNotificationToAdministrator(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order payment notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderPaymentNotificationToAdmin' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderStatusNotificationToCustomer(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sends order status notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderStatusNotificationToCustomer(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order status notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderStatusNotificationToCustomer' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderStatusNotificationToAdministrator(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sends order status notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderStatusNotificationToAdministrator(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order status notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderStatusNotificationToAdmin' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.RecalculateOrders(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates order prices expressed in main currency using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderInfoInternal(System.Int32)">
            <summary>
            Returns order with specified ID.
            </summary>
            <param name="orderId">Order ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SetOrderInfoInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Sets (updates or inserts) specified order.
            </summary>
            <param name="orderObj">Order to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.EnsureAddress(CMS.Ecommerce.IAddress)">
            <summary>
            Save address if necessary and return id. 
            </summary>
            <param name="address">The address.</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.DeleteOrderInfoInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Deletes specified order.
            </summary>
            <param name="orderObj">Order to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrdersInternal(System.Int32)">
            <summary>
            Returns  query for all orders for specified site.
            </summary>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetCustomersOrdersInternal(System.Int32)">
            <summary>
            Returns query for all orders for specified customer.
            </summary>
            <param name="customerId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.RecalculateOrdersInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates order prices expressed in main currency using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Where condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GenerateInvoiceNumberInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns invoice number generated from given shopping cart data.
            </summary>
            <param name="cart">Shopping cart info object</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.UpdateOrderStatusHistoryInternal(CMS.Ecommerce.OrderInfo,System.Int32,System.Boolean)">
            <summary>
            Updates order status history and sends notification emails about order status change.
            </summary>
            <param name="orderObj">Order data</param>
            <param name="originalStatusId">ID of the status before change. Don't care if newOrder == true</param>
            <param name="newOrder">True - it is a new order, False - it is an existing order</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.ProcessOrderIsPaidChangeInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Process order items of given order according to order is paid change.
            </summary>
            <param name="oi">Order</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.ProcessMembershipInternal(CMS.Ecommerce.OrderInfo,CMS.Ecommerce.OrderItemInfo,CMS.Ecommerce.SKUInfo,CMS.Membership.UserInfo,System.DateTime)">
            <summary>
            Process user's membership according to given parameters.
            </summary>
            <param name="oi">Order</param>
            <param name="oii">Order item</param>
            <param name="skui">SKU</param>
            <param name="ui">User</param>
            <param name="now">Date and time to use as current date and time value</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.ProcessEProductInternal(CMS.Ecommerce.OrderInfo,CMS.Ecommerce.OrderItemInfo,CMS.Ecommerce.SKUInfo,System.DateTime)">
            <summary>
            Process e-product according to given parameters.
            </summary>
            <param name="order">Order</param>
            <param name="item">Order item</param>
            <param name="skui">SKU</param>
            <param name="now">Date and time to use as current date and time value</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetInvoiceInternal(System.Int32)">
            <summary>
            Returns html code that represents invoice of order specified by ID.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetInvoiceInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns html code that represents invoice of order loaded in the given shopping cart.
            </summary>
            <param name="cart">Shopping cart with order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetAddressInternal(CMS.Ecommerce.IAddress)">
            <summary>
            Returns html code that represents address. Used for generating of invoice.
            </summary>
            <param name="address">Address ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetPaymentOptionInternal(System.Int32)">
            <summary>
            Returns html code that represents payment option. Used for generating of invoice.
            </summary>
            <param name="paymentId">Payment option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetShippingOptionInternal(System.Int32)">
            <summary>
            Returns html code that represents shipping option. Used for generating of invoice.
            </summary>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetInvoiceNumberInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns html code that represents invoice number. Used for generating of invoice.
            </summary>
            <param name="order">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderDateInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns html code that represents date of order. Used for generating of invoice.
            </summary>
            <param name="order">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrderNoteInternal(CMS.Ecommerce.OrderInfo)">
            <summary>
            Returns html code that represents note of order. Used for generating of invoice.
            </summary>
            <param name="order">Order data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetProductListInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns html code that represents product list. Used for generating of invoice.
            </summary>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTotalPriceInternal(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns html code that represents total price of order. Used for generating of invoice.
            </summary>
            <param name="value">Price value</param>
            <param name="currency">Currency to use</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTaxRecapitulationInternal(System.Data.DataTable,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns html code that represents info about used taxes. Used for generating of invoice.
            </summary>
            <param name="taxes">Table with the tax summary</param>
            <param name="currency">Currency data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTaxRegistrationIDInternal(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Returns html code that represents info about customer tax registration ID. Used for generating of invoice.
            </summary>
            <param name="customerObj">Customer data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetOrganizationIDInternal(CMS.Ecommerce.CustomerInfo)">
            <summary>
            Returns html code that represents info about customer tax registration ID. Used for generating of invoice.
            </summary>
            <param name="customerObj">Customer data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GetTotalShippingInternal(System.Double,CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Returns html code that represents total shipping of order. Used for generating of invoice.
            </summary>
            <param name="value">Price value</param>
            <param name="currency">Currency to use</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.CreateEmailMacroResolverInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Creates the macro resolver for the given shopping cart.
            </summary>
            <param name="cartObj">Shopping data</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderNotificationToCustomerInternal(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderNotificationToCustomer' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderNotificationToAdministratorInternal(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderNotificationToAdmin' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderPaymentNotificationToCustomerInternal(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order payment notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderPaymentNotificationToCustomer' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderPaymentNotificationToAdministratorInternal(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order payment notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderPaymentNotificationToAdmin' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderStatusNotificationToCustomerInternal(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order status notification to customer.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderStatusNotificationToCustomer' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendOrderStatusNotificationToAdministratorInternal(CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Sends order status notification to administrator.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="templateName">Name of the template which is used for e-mail. If null or empty, 'Ecommerce.OrderStatusNotificationToAdmin' template is used</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.SendEmailNotificationInternal(CMS.Ecommerce.ShoppingCartInfo,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Sends order notification to customer.
            </summary>
            <param name="cartObj">Shopping cart info object</param>
            <param name="templateName">Name of the e-mail template which should be used for creating an e-mail</param>
            <param name="defaultTemplate">Name of the e-mail template which is used if primary template is not specified</param>
            <param name="defaultSubject">E-mail default subject. It is used if template subject is not specified</param>
            <param name="toCustomer">True - it is a notification to customer. False - it is a notification to administrator</param>
            <param name="eventSource">Source of the event which is logged when sending fails</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.GenerateDataInternal">
            <summary>
            Generate sample data internal
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderInfoProvider.DeleteDataInternal">
            <summary>
            Delete sample data internal
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderItemInfo">
            <summary>
            OrderItemInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderItemInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderItemInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderItemInfo.mOrderItemCustomData">
            <summary>
            Order item custom data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.#ctor">
            <summary>
            Constructor - Creates an empty OrderItemInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OrderItemInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Creates a new OrderItemInfo object from serialized data.
            </summary>        
            <param name="info">Serialization data</param>
            <param name="context">Context</param> 
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfo.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemUnitPrice">
            <summary>
            Price of the item per unit, corresponds to the price of the related SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemUnitTotalTaxInMainCurrency">
            <summary>
            Unit item tax in main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemUnitTotalDiscountInMainCurrency">
            <summary>
            Total catalog and volume discount per one order item unit in shopping main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemPrice">
            <summary>
            If set, it is used instead of the OrderItemUnitPrice in price calculation process. 
            It is set only when order item represents donation. Then it is amount of donation. 
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemTotalPriceInMainCurrency">
            <summary>
            Total order item price in main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemOrderID">
            <summary>
            ID of the order.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemID">
            <summary>
            ID of the order item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemSKUName">
            <summary>
            Name of the order item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemSKUID">
            <summary>
            ID of the SKU for this order item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemUnitCount">
            <summary>
            Number of units within the order.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemGUID">
            <summary>
            Order item unique identifier. Order item means collection of the product and its selected product options.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemParentGUID">
            <summary>
            Unique identifier of the parent order item. When set current product is a product option, otherwise it is a product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemBundleGUID">
            <summary>
            Unique identifier of parent bundle product. If set, this product is a bundle item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemCustomData">
            <summary>
            Order item custom data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemIsPrivate">
            <summary>
            Order item is private.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemValidTo">
            <summary>
            Order item valid to date and time.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemSendNotification">
            <summary>
            Indicates if customer is to be notified in advance about expiration of his order item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemSKU">
            <summary>
            Associated SKU object.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemText">
            <summary>
            Text assigned to the order item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderItemInfo.OrderItemProductDiscounts">
            <summary>
            Xml content with the summary of the discounts which were applied to the shopping cart item. 
            Contains whole DiscountsTable from shopping cart item.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderItemInfoProvider">
            <summary>
            Class providing OrderItemInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItems">
            <summary>
            Returns the query for all order items.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItemInfo(System.Int32)">
            <summary>
            Returns order item with specified ID.
            </summary>
            <param name="itemId">Order item ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.SetOrderItemInfo(CMS.Ecommerce.OrderItemInfo)">
            <summary>
            Sets (updates or inserts) specified order item.
            </summary>
            <param name="itemObj">Order item to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.DeleteOrderItemInfo(CMS.Ecommerce.OrderItemInfo)">
            <summary>
            Deletes specified order item.
            </summary>
            <param name="itemObj">Order item to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.DeleteOrderItemInfo(CMS.Ecommerce.OrderItemInfo,System.Boolean)">
            <summary>
            Deletes specified order item. Allows to return ordered items back to inventory.
            </summary>
            <param name="itemObj">Order item to be deleted</param>
            <param name="updateInventory">When true, items are returned back to inventory.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.DeleteOrderItemInfo(System.Int32)">
            <summary>
            Deletes order item with specified ID.
            </summary>
            <param name="itemId">Order item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItemInfo(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns order item created form shopping cart item data.
            </summary>
            <param name="item">Shopping cart item.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItems(System.Int32)">
            <summary>
            Returns query for all order items in specified order.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetExpiringOrderItems(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns dataset of all expiring order items matching given parameters along with additional relevant information.
            </summary>
            <param name="days">Number of days before order item expiration</param>
            <param name="siteId">Site ID. Set to 0 to get expiring order items on all sites.</param>
            <param name="where">Additional where condition</param>
            <param name="onlyWithSendNotification">Get only records with send notification flag set to true.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetDonations(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of order items representing donation products matching given where condition along with related order, customer and SKU information.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N</param>
            <param name="columns">Columns</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.RecalculateOrderItems(System.Single,System.Int32,System.String)">
            <summary>
            Recalculates order items using given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.DeleteOrderItems(System.Int32)">
            <summary>
            Delete all order items for specified order.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItemInfoInternal(System.Int32)">
            <summary>
            Returns order item with specified ID.
            </summary>
            <param name="itemId">Order item ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.SetOrderItemInfoInternal(CMS.Ecommerce.OrderItemInfo)">
            <summary>
            Sets (updates or inserts) specified order item.
            </summary>
            <param name="itemObj">Order item to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.DeleteOrderItemInfoInternal(CMS.Ecommerce.OrderItemInfo)">
            <summary>
            Deletes specified order item.
            </summary>
            <param name="itemObj">Order item to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.DeleteOrderItemInfoInternal(CMS.Ecommerce.OrderItemInfo,System.Boolean)">
            <summary>
            Deletes specified order item. Allows to return ordered items back to inventory.
            </summary>
            <param name="itemObj">Order item to be deleted.</param>
            <param name="updateInventory">When true, items are returned back to inventory.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItemInfoInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns order item created form shopping cart item data.
            </summary>
            <param name="item">Shopping cart item.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetOrderItemsInternal(System.Int32)">
            <summary>
            Returns query for all order items in specified order.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetExpiringOrderItemsInternal(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns dataset of all expiring order items matching given parameters along with additional relevant information.
            </summary>
            <param name="days">Number of days before order item expiration</param>
            <param name="siteId">Site ID. Set to 0 to get expiring order items on all sites.</param>
            <param name="where">Additional where condition</param>
            <param name="onlyWithSendNotification">Get only records with send notification flag set to true.</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.GetDonationsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of order items representing donation products matching given where condition along with related order, customer and SKU information.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N</param>
            <param name="columns">Columns</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.RecalculateOrderItemsInternal(System.Single,System.Int32,System.String)">
            <summary>
            Recalculates order items using given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderItemInfoProvider.DeleteOrderItemsInternal(System.Int32)">
            <summary>
            Delete all order items for specified order.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="T:CMS.Ecommerce.OrderStatusInfo">
            <summary>
            OrderStatusInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderStatusInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderStatusInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned status to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.CopyDataFrom(CMS.Ecommerce.OrderStatusInfo)">
            <summary>
            Fills data properties with values from given template.
            </summary>
            <param name="status">Template to copy data from</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.#ctor">
            <summary>
            Constructor - Creates an empty OrderStatusInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OrderStatusInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusOrder">
            <summary>
            Order of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusID">
            <summary>
            ID of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusEnabled">
            <summary>
            Indicates whether the status is enabled or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusDisplayName">
            <summary>
            Display name of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusName">
            <summary>
            Code name of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusColor">
            <summary>
            Status color in hex format (#xxxxxx).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusGUID">
            <summary>
            Order status GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusLastModified">
            <summary>
            Order status last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusSendNotification">
            <summary>
            Indicates if notification should be send to the customer and administrator when order status is changed to this status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusSiteID">
            <summary>
            Order status site ID. Set to 0 for global order status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusInfo.StatusOrderIsPaid">
            <summary>
            Order status is paid.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderStatusInfoProvider">
            <summary>
            Class providing OrderStatusInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatuses">
            <summary>
            Returns the query for all order statuses.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatusInfo(System.Int32)">
            <summary>
            Returns order status with specified ID.
            </summary>
            <param name="statusId">Order status ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatusInfo(System.String,System.String)">
            <summary>
            Returns order status with specified name.
            </summary>
            <param name="statusName">Order status name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.SetOrderStatusInfo(CMS.Ecommerce.OrderStatusInfo)">
            <summary>
            Sets (updates or inserts) specified order status.
            </summary>
            <param name="statusObj">Order status to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.DeleteOrderStatusInfo(CMS.Ecommerce.OrderStatusInfo)">
            <summary>
            Deletes specified order status.
            </summary>
            <param name="statusObj">Order status to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.DeleteOrderStatusInfo(System.Int32)">
            <summary>
            Deletes order status with specified ID.
            </summary>
            <param name="statusId">Order status ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatuses(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all order statuses matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the order statuses should be retrieved from. If set to 0, global order statuses are retrieved</param>
            <param name="onlyEnabled">True - only enabled order statuses from the specified site are returned. False - all site order statuses are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.MoveStatusUp(System.Int32)">
            <summary>
            Moves status up (decreases its order).
            </summary>
            <param name="statusId">ID of status to move</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.MoveStatusDown(System.Int32)">
            <summary>
            Moves status down (increases its order).
            </summary>
            <param name="statusId">ID of status to move</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetLastStatusOrder(System.Int32)">
            <summary>
            Returns order of last status item for given site.
            </summary>
            <param name="siteId">Id of the site (0 for global)</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetFirstEnabledStatus(System.Int32)">
            <summary>
            Returns first enabled order status in order progress for given site.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetNextEnabledStatus(System.Int32)">
            <summary>
            Returns next enabled order status in order progress.
            </summary>
            <param name="statusId">Current order status id</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetPreviousEnabledStatus(System.Int32)">
            <summary>
            Returns previous enabled order status in order progress.
            </summary>
            <param name="statusId">Current order status id</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.CopyFromGlobal(System.Int32)">
            <summary>
            Copies site-specific status options from global status list.
            </summary>
            <param name="siteId">Id of the site for which new statuses are to be created</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatusInfoInternal(System.Int32)">
            <summary>
            Returns order status with specified ID.
            </summary>
            <param name="statusId">Order status ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatusInfoInternal(System.String,System.String)">
            <summary>
            Returns order status with specified name.
            </summary>
            <param name="statusName">Order status name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.SetOrderStatusInfoInternal(CMS.Ecommerce.OrderStatusInfo)">
            <summary>
            Sets (updates or inserts) specified order status.
            </summary>
            <param name="statusObj">Order status to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.DeleteOrderStatusInfoInternal(CMS.Ecommerce.OrderStatusInfo)">
            <summary>
            Deletes specified order status.
            </summary>
            <param name="statusObj">Order status to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetOrderStatusesInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all order statuses matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the statuses should be retrieved from. If set to 0, global order statuses are retrieved</param>
            <param name="onlyEnabled">True - only enabled statuses from the specified site are returned. False - all site statuses are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.MoveStatusUpInternal(System.Int32)">
            <summary>
            Moves status up (decreases its order).
            </summary>
            <param name="statusId">ID of status to move</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.MoveStatusDownInternal(System.Int32)">
            <summary>
            Moves status down (increases its order).
            </summary>
            <param name="statusId">ID of status to move</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetLastStatusOrderInternal(System.Int32)">
            <summary>
            Returns order of last status item for given site.
            </summary>
            <param name="siteId">Id of the site (or 0 for global)</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetFirstEnabledStatusInternal(System.Int32)">
            <summary>
            Returns first enabled order status in order progress.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetNextEnabledStatusInternal(System.Int32)">
            <summary>
            Returns next enabled status in order progress.
            </summary>
            <param name="statusId">Current order status id</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.GetPreviousEnabledStatusInternal(System.Int32)">
            <summary>
            Returns previous enabled status in order progress.
            </summary>
            <param name="statusId">Current order status id</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusInfoProvider.CopyFromGlobalInternal(System.Int32)">
            <summary>
            Copies site-specific status options from global status list.
            </summary>
            <param name="siteId">Id of the site for which new statuses are to be created</param>
        </member>
        <member name="T:CMS.Ecommerce.OrderStatusUserInfo">
            <summary>
            OrderStatusUserInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderStatusUserInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.OrderStatusUserInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfo.#ctor">
            <summary>
            Constructor - Creates an empty OrderStatusUserInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OrderStatusUserInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.OrderID">
            <summary>
            ID of the order.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.ToStatusID">
            <summary>
            To status ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.ChangedByUserID">
            <summary>
            Changed by user ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.Note">
            <summary>
            Note of the order status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.Date">
            <summary>
            Date of the change.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.OrderStatusUserID">
            <summary>
            Order status user ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.OrderStatusUserInfo.FromStatusID">
            <summary>
            From status ID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.OrderStatusUserInfoProvider">
            <summary>
            Class providing OrderStatusUserInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusHistory">
            <summary>
            Returns the query for all order status history items.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusUserInfo(System.Int32)">
            <summary>
            Returns order status history item with specified ID.
            </summary>
            <param name="itemId">Order status history item ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.SetOrderStatusUserInfo(CMS.Ecommerce.OrderStatusUserInfo)">
            <summary>
            Sets (updates or inserts) specified order status history item.
            </summary>
            <param name="itemObj">Order status history item to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.DeleteOrderStatusUserInfo(CMS.Ecommerce.OrderStatusUserInfo)">
            <summary>
            Deletes specified order status history item.
            </summary>
            <param name="itemObj">Order status history item to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.DeleteOrderStatusUserInfo(System.Int32)">
            <summary>
            Deletes order status history item with specified ID.
            </summary>
            <param name="itemId">Order status history item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusHistory(System.Int32)">
            <summary>
            Returns the query containing order status history for specified order.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusUserInfoInternal(System.Int32)">
            <summary>
            Returns order status history item with specified ID.
            </summary>
            <param name="itemId">Order status history item ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.SetOrderStatusUserInfoInternal(CMS.Ecommerce.OrderStatusUserInfo)">
            <summary>
            Sets (updates or inserts) specified order status history item.
            </summary>
            <param name="itemObj">Order status history item to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.DeleteOrderStatusUserInfoInternal(CMS.Ecommerce.OrderStatusUserInfo)">
            <summary>
            Deletes specified order status history item.
            </summary>
            <param name="itemObj">Order status history item to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.OrderStatusUserInfoProvider.GetOrderStatusHistoryInternal(System.Int32)">
            <summary>
            Returns the query containing order status history for given orderId.
            </summary>
            <param name="orderId">ID of the order to get history for</param>
        </member>
        <member name="T:CMS.Ecommerce.PaymentOptionInfo">
            <summary>
            PaymentOptionInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PaymentOptionInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PaymentOptionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.#ctor">
            <summary>
            Constructor - Creates an empty PaymentOptionInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new PaymentOptionInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.IsInShipping(System.Int32)">
            <summary>
            Returns true, if the payment option is  in the specified shipping option.
            </summary>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionID">
            <summary>
            ID of the payment option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionName">
            <summary>
            Code name of the payment option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionSiteID">
            <summary>
            Payment option site ID. Set to 0 for global payment option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionEnabled">
            <summary>
            Indicates whether the payment option is enabled or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionPaymentGateUrl">
            <summary>
            Payment option - Payment gate url.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionDisplayName">
            <summary>
            Code name of the payment option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionDescription">
            <summary>
            Payment option description.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionAssemblyName">
            <summary>
            Payment gateway assembly name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionClassName">
            <summary>
            Payment gateway class name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionSucceededOrderStatusID">
            <summary>
            ID of the status which is considered to be "payment successful" status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionFailedOrderStatusID">
            <summary>
            ID of the status which is considered to be "payment failed" status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionGUID">
            <summary>
            Payment option GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionAllowIfNoShipping">
            <summary>
            Allow payment option to be selected if order does not need shipping.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentOptionInfo.PaymentOptionThumbnailGUID">
            <summary>
            Payment option thumbnail metafile GUID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PaymentOptionInfoProvider">
            <summary>
            Class providing PaymentOptionInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptions">
            <summary>
            Returns the query for all payment options.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionInfo(System.Int32)">
            <summary>
            Returns payment option with specified ID.
            </summary>
            <param name="optionId">Payment option ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionInfo(System.String,System.String)">
            <summary>
            Returns payment option with specified name.
            </summary>
            <param name="optionName">Payment option name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.SetPaymentOptionInfo(CMS.Ecommerce.PaymentOptionInfo)">
            <summary>
            Sets (updates or inserts) specified payment option.
            </summary>
            <param name="optionObj">Payment option to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.DeletePaymentOptionInfo(CMS.Ecommerce.PaymentOptionInfo)">
            <summary>
            Deletes specified payment option.
            </summary>
            <param name="optionObj">Payment option to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.DeletePaymentOptionInfo(System.Int32)">
            <summary>
            Deletes payment option with specified ID.
            </summary>
            <param name="optionId">Payment option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptions(System.Int32,System.Boolean)">
            <summary>
            Returns query for of all payment options matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the options should be retrieved from. If set to 0, global payment options are retrieved</param>
            <param name="onlyEnabled">True - only enabled payment options from the specified site are returned. False - all site options are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionsForShipping(System.Int32,System.Boolean)">
            <summary>
            Returns query for payment options bound to specified shipping option.
            </summary>
            <param name="shippingId">Id of the sipping option</param>
            <param name="onlyEnabled">True - only enabled payment options from the specified shipping option are returned. False - all options bound to shipping are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentURL(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns URL to payment gateway.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.ResolveUrlMacros(System.String,CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Resolves macros of payment gateway URL.
            </summary>
            <param name="url">URL to resolve</param>
            <param name="cartObj">Cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionInfoInternal(System.Int32)">
            <summary>
            Returns payment option with specified ID.
            </summary>
            <param name="optionId">Payment option ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionInfoInternal(System.String,System.String)">
            <summary>
            Returns payment option with specified name.
            </summary>
            <param name="optionName">Payment option name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.SetPaymentOptionInfoInternal(CMS.Ecommerce.PaymentOptionInfo)">
            <summary>
            Sets (updates or inserts) specified payment option.
            </summary>
            <param name="optionObj">Payment option to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.DeletePaymentOptionInfoInternal(CMS.Ecommerce.PaymentOptionInfo)">
            <summary>
            Deletes specified payment option.
            </summary>
            <param name="optionObj">Payment option to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionsInternal(System.Int32,System.Boolean)">
            <summary>
            Returns query for all payment options matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the options should be retrieved from. If set to 0, global payment options are retrieved</param>
            <param name="onlyEnabled">True - only enabled payment options from the specified site are returned. False - all site options are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentOptionsForShippingInternal(System.Int32,System.Boolean)">
            <summary>
            Returns query for payment options bound to specified shipping option.
            </summary>
            <param name="shippingId">Id of the sipping option</param>
            <param name="onlyEnabled">True - only enabled payment options from the specified shipping option are returned. False - all options bound to shipping are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.GetPaymentURLInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns URL to payment gateway.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentOptionInfoProvider.ResolveUrlMacrosInternal(System.String,CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Resolves macros of payment gateway URL.
            </summary>
            <param name="url">URL to resolve</param>
            <param name="cartObj">Cart object</param>
        </member>
        <member name="T:CMS.Ecommerce.PaymentResultItemInfo">
            <summary>
            Class representing payment result item (= one payment result xml node).
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultItemInfo.#ctor(System.Xml.XmlNode)">
            <summary>
            Creates payment result item from Xml node.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentResultItemInfo.#ctor">
            <summary>
            Creates empty payment result item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultItemInfo.Header">
            <summary>
            Payment result item header text.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultItemInfo.Name">
            <summary>
            Payment result item code name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultItemInfo.Value">
            <summary>
            Payment result item value - inner interpretation.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentResultItemInfo.Text">
            <summary>
            Payment result item value text interpretation - it is visible to user.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PaymentShippingInfo">
            <summary>
            PaymentShippingInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PaymentShippingInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PaymentShippingInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfo.#ctor">
            <summary>
            Constructor - Creates an empty PaymentShippingInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new PaymentShippingInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.PaymentShippingInfo.PaymentOptionID">
            <summary>
            ID of the payment option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PaymentShippingInfo.ShippingOptionID">
            <summary>
            ID of the shipping option.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PaymentShippingInfoProvider">
            <summary>
            Class providing PaymentShippingInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.GetPaymentShippings">
            <summary>
            Returns the query for all relationships between payment options and shipping options.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.GetPaymentShippingInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified payment option and shipping option.
            </summary>
            <param name="paymentId">Payment option ID</param>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.SetPaymentShippingInfo(CMS.Ecommerce.PaymentShippingInfo)">
            <summary>
            Sets relationship between specified payment option and shipping option.
            </summary>
            <param name="infoObj">Payment option-shipping option relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.DeletePaymentShippingInfo(CMS.Ecommerce.PaymentShippingInfo)">
            <summary>
            Deletes relationship between specified payment option and shipping option.
            </summary>
            <param name="infoObj">Payment option-shipping option relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.AddPaymentToShipping(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified payment option and shipping option.
            </summary>  
            <param name="paymentId">Payment option ID</param>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.RemovePaymentFromShipping(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified payment option and shipping option.
            </summary>
            <param name="paymentId">Payment option ID</param>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.GetPaymentShippingInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified payment option and shipping option.
            </summary>
            <param name="paymentId">Payment option ID</param>
            <param name="shippingId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.SetPaymentShippingInfoInternal(CMS.Ecommerce.PaymentShippingInfo)">
            <summary>
            Sets relationship between specified payment option and shipping option.
            </summary>
            <param name="infoObj">Payment option-shipping option relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.PaymentShippingInfoProvider.DeletePaymentShippingInfoInternal(CMS.Ecommerce.PaymentShippingInfo)">
            <summary>
            Deletes relationship between specified payment option and shipping option.
            </summary>
            <param name="infoObj">Payment option-shipping option relationship to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.PayPalPaymentResultInfo">
            <summary>
            PayPal payment result.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PayPalPaymentResultInfo.GetPayPalPaymentStatus(System.String)">
            <summary>
            Returns paypal payment status according to the returned status string from the PayPal payment gateway.
            </summary>        
            <param name="status">Payment status string returned from the PayPal payment gateway</param>
        </member>
        <member name="M:CMS.Ecommerce.PayPalPaymentResultInfo.SetPayPalPaymentStatus(CMS.Ecommerce.PayPalPaymentStatusEnum)">
            <summary>
            Sets paypal payment status according to the returned status from the paypal payment gateway.
            </summary>        
            <param name="status">Payment status string returned from the paypal payment gateway</param>
        </member>
        <member name="M:CMS.Ecommerce.PayPalPaymentResultInfo.GetPayPalPaymentStatusEnum">
            <summary>
            Returns paypal payment status enumeration from payment result status string.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.PayPalPaymentResultInfo.#ctor">
            <summary>
            Creates base payment result info object + add PayPal payment result properties.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PayPalPaymentResultInfo.PayPalPaymentStatus">
            <summary>
            PayPal payment status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PayPalPaymentResultInfo.PayPalPaymentVerified">
            <summary>
            TRUE - payment was verified by IPN (Instant payment notification) successfully, payment is VALID.
            FALSE - payment verification by IPN failed, payment is INVALID.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PayPalPaymentStatusEnum">
            <summary>
            PayPal payment status.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Unknown">
            <summary>
            Payment status is not known.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Completed">
            <summary>
            Payment has been completed, and the funds have been added successfully to merchant's account balance.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.CanceledReversal">
            <summary>
            A reversal has been canceled. For example, merchant won a dispute with the customer, and the funds for the transaction that was reversed have been returned to merchant.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Denied">
            <summary>
            When merchant denied the payment. This happens only if the payment was previously pending.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Expired">
            <summary>
            This authorization has expired and cannot be captured.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Failed">
            <summary>
            The payment has failed. This happens only if the payment was made from merchant customer's bank account.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.InProgress">
            <summary>
            The transaction is in process of authorization and capture.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Pending">
            <summary>
            The payment is pending.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Processed">
            <summary>
             The payment has been accepted.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Refunded">
            <summary>
            The payment was refunded.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Reversed">
            <summary>
            The payment was reversed due to a chargeback or other type of reversal. The funds have been removed from merchant's account balance and returned to the buyer. 
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PayPalPaymentStatusEnum.Voided">
            <summary>
            This authorization has been voided.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ProductsDataSource">
            <summary>
            Products data source server control.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductsDataSource.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductsDataSource.PropagateProperties(CMS.Controls.ICMSDataProperties)">
            <summary>
            Propagates given settings
            </summary>
            <param name="properties">Settings</param>
        </member>
        <member name="M:CMS.Ecommerce.ProductsDataSource.GetDataSourceFromDB">
            <summary>
            Gets datasource from DB.
            </summary>
            <returns>Dataset as object</returns>
        </member>
        <member name="M:CMS.Ecommerce.ProductsDataSource.GetDefaultCacheDependencies">
            <summary>
            Gets the default cache dependencies for the data source.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ProductsDataSource.GetDefaultCacheKey">
            <summary>
            Gets the default cache item name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.Properties">
            <summary>
            Data properties
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.UseDocumentFilter">
            <summary>
            Indicates if the comments should be retrieved according to document filter settings.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.Path">
            <summary>
            Path of the documents to be displayed. /% selects all documents.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.CultureCode">
            <summary>
            Culture code, such as en-us.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.CombineWithDefaultCulture">
            <summary>
            Indicates if the documents from the default culture version should be alternatively used.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.SelectOnlyPublished">
            <summary>
            Indicates if only published documents should be displayed.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.MaxRelativeLevel">
            <summary>
            Relative level of child documents that should be selected. -1 selects all child documents.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ProductsDataSource.DocumentsWhereCondition">
            <summary>
            Gets or sets the where condition for product documents.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PublicStatusInfo">
            <summary>
            PublicStatusInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PublicStatusInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.PublicStatusInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfo.CopyDataFrom(CMS.Ecommerce.PublicStatusInfo)">
            <summary>
            Fills data properties with values from given template.
            </summary>
            <param name="status">Template to copy data from</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfo.#ctor">
            <summary>
            Constructor - Creates an empty PublicStatusInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new PublicStatusInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusName">
            <summary>
            Code name of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusID">
            <summary>
            ID of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusEnabled">
            <summary>
            Indicates whether the status is enabled or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusDisplayName">
            <summary>
            Display name of the status.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusGUID">
            <summary>
            PublicStatus GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.PublicStatusInfo.PublicStatusSiteID">
            <summary>
            Public status site ID. Set to 0 for global public status.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.PublicStatusInfoProvider">
            <summary>
            Class providing PublicStatusInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatuses">
            <summary>
            Returns the query for all public statuses.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatusInfo(System.Int32)">
            <summary>
            Returns public status with specified ID.
            </summary>
            <param name="statusId">Public status ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatusInfo(System.String,System.String)">
            <summary>
            Returns public status with specified name.
            </summary>
            <param name="statusName">Public status name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.SetPublicStatusInfo(CMS.Ecommerce.PublicStatusInfo)">
            <summary>
            Sets (updates or inserts) specified public status.
            </summary>
            <param name="statusObj">Public status to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.DeletePublicStatusInfo(CMS.Ecommerce.PublicStatusInfo)">
            <summary>
            Deletes specified public status.
            </summary>
            <param name="statusObj">Public status to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.DeletePublicStatusInfo(System.Int32)">
            <summary>
            Deletes public status with specified ID.
            </summary>
            <param name="statusId">Public status ID</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatuses(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all public statuses matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the public statuses should be retrieved from. If set to 0, global public statuses are retrieved</param>
            <param name="onlyEnabled">True - only enabled public statuses from the specified site are returned. False - all site public statuses are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.CopyFromGlobal(System.Int32)">
            <summary>
            Copies site-specific status options from global status list.
            </summary>
            <param name="siteId">Id of the site for which new statuses are to be created</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatusInfoInternal(System.Int32)">
            <summary>
            Returns public status with specified ID.
            </summary>
            <param name="statusId">Public status ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatusInfoInternal(System.String,System.String)">
            <summary>
            Returns public status with specified name.
            </summary>
            <param name="statusName">Public status name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.SetPublicStatusInfoInternal(CMS.Ecommerce.PublicStatusInfo)">
            <summary>
            Sets (updates or inserts) specified public status.
            </summary>
            <param name="statusObj">Public status to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.DeletePublicStatusInfoInternal(CMS.Ecommerce.PublicStatusInfo)">
            <summary>
            Deletes specified public status.
            </summary>
            <param name="statusObj">Public status to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.GetPublicStatusesInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all public statuses matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the statuses should be retrieved from. If set to 0, global public statuses are retrieved</param>
            <param name="onlyEnabled">True - only enabled statuses from the specified site are returned. False - all site statuses are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.PublicStatusInfoProvider.CopyFromGlobalInternal(System.Int32)">
            <summary>
            Copies site-specific status options from global status list.
            </summary>
            <param name="siteId">Id of the site for which new statuses are to be created</param>
        </member>
        <member name="T:CMS.Ecommerce.ShippingOptionInfo">
            <summary>
            ShippingOptionInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShippingOptionInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShippingOptionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfo.#ctor">
            <summary>
            Constructor - Creates an empty ShippingOptionInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ShippingOptionInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionSiteID">
            <summary>
            Shipping option site ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionCarrierID">
            <summary>
            ID of shipping carrier used by this shipping option for shipping price calculation.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionCarrierServiceName">
            <summary>
            Name (code) of shipping carrier service used by shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionDisplayName">
            <summary>
            Shipping option display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionDescription">
            <summary>
            Shipping option description.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionCharge">
            <summary>
            Shipping option charge.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionID">
            <summary>
            ID of the shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionName">
            <summary>
            Code name of the shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionEnabled">
            <summary>
            Indicates whether the shipping option is enabled or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionGUID">
            <summary>
            ShippingOption GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionThumbnailGUID">
            <summary>
            Shipping option thumbnail metafile GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShippingOptionInfo.ShippingOptionServiceDisplayName">
            <summary>
            Shipping option carrier service display name.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShippingOptionInfoProvider">
            <summary>
            Class providing ShippingOptionInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptions">
            <summary>
            Returns the query for all shipping options.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionInfo(System.Int32)">
            <summary>
            Returns shipping option with specified ID.
            </summary>
            <param name="optionId">Shipping option ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionInfo(System.String,System.String)">
            <summary>
            Returns shipping option with specified name.
            </summary>
            <param name="optionName">Shipping option name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.SetShippingOptionInfo(CMS.Ecommerce.ShippingOptionInfo)">
            <summary>
            Sets (updates or inserts) specified shipping option.
            </summary>
            <param name="optionObj">Shipping option to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.DeleteShippingOptionInfo(CMS.Ecommerce.ShippingOptionInfo)">
            <summary>
            Deletes specified shipping option.
            </summary>
            <param name="optionObj">Shipping option to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.DeleteShippingOptionInfo(System.Int32)">
            <summary>
            Deletes shipping option with specified ID.
            </summary>
            <param name="optionId">Shipping option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptions(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all shipping options matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the options should be retrieved from. If set to 0, global shipping options are retrieved</param>
            <param name="onlyEnabled">True - only enabled shipping options from the specified site are returned. False - all site options are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetFormattedWeight(System.Double,System.String,System.Boolean)">
            <summary>
            Returns weight formatted according site specific weight format string. If no format string specified, uses x.xx format instead.
            </summary>
            <param name="weight">Weight</param>
            <param name="siteName">Name of the site for obtaining format string</param>
            <param name="encode">Encode output</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateShipping(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates shipping cost for the given shopping cart. Shipping free limit is applied. Shipping taxes are not included. Result is in site main currency. 
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateShippingDiscount(CMS.Ecommerce.ShoppingCartInfo,System.Double)">
            <summary>
            Calculates shipping discount for supplied shopping cart. Uses ShippingDiscounts collection of cart. 
            Resulting discount will not be higher that shipping.
            </summary>
            <param name="cart">Shopping cart to calculate shipping discount for.</param>
            <param name="shipping">Base price of shipping to apply discounts to.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateShippingTax(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates tax value of the shipping option for the given shopping cart. Result is in site main currency.
            </summary>
            <param name="cartObj">Shopping cart object.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateTotalShipping(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total shipping for the given shopping cart. Shipping taxes are included. Result is site main currency.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.RecalculateShippingOptions(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates options charges and their shipping costs using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.IsShippingNeeded(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Check if shopping cart needs shipping, return true if it does.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.IsShippingOptionApplicable(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShippingOptionInfo)">
            <summary>
            Checks if shipping option is applicable in given shopping cart.
            </summary>
            <param name="cart">Shopping cart in which shipping option should be used.</param>
            <param name="shippingOption">Shipping option to check if it is applicable.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionInfoInternal(System.Int32)">
            <summary>
            Returns shipping option with specified ID.
            </summary>
            <param name="optionId">Shipping option ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionInfoInternal(System.String,System.String)">
            <summary>
            Returns shipping option with specified name.
            </summary>
            <param name="optionName">Shipping option name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.SetShippingOptionInfoInternal(CMS.Ecommerce.ShippingOptionInfo)">
            <summary>
            Sets (updates or inserts) specified shipping option.
            </summary>
            <param name="optionObj">Shipping option to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.DeleteShippingOptionInfoInternal(CMS.Ecommerce.ShippingOptionInfo)">
            <summary>
            Deletes specified shipping option.
            </summary>
            <param name="optionObj">Shipping option to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetShippingOptionsInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all shipping options matching the specified parameters.
            </summary>
            <param name="siteId">ID of the site the options should be retrieved from. If set to 0, global shipping options are retrieved</param>
            <param name="onlyEnabled">True - only enabled shipping options from the specified site are returned. False - all site options are returned</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.GetFormattedWeightInternal(System.Double,System.String,System.Boolean)">
            <summary>
            Returns weight formatted according site specific weight format string. If no format string specified, uses x.xx format instead.
            </summary>
            <param name="weight">Weight</param>
            <param name="siteName">Name of the site for obtaining format string</param>
            <param name="encode">Encode output</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateShippingInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates shipping cost for the given shopping cart. Shipping free limit is applied. Shipping taxes are not included. Result is in site main currency. 
            </summary>
            <param name="cart">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateShippingDiscountInternal(CMS.Ecommerce.ShoppingCartInfo,System.Double)">
            <summary>
            Calculates shipping discount for supplied shopping cart. Uses ShippingDiscounts collection of cart. 
            Resulting discount will not be higher that shipping.
            </summary>
            <param name="cart">Shopping cart to calculate shipping discount for.</param>
            <param name="shipping">Base price of shipping to apply discounts to.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateShippingTaxInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates tax value of the shipping option for the given shopping cart. Result is in site main currency.
            </summary>
            <param name="cart">Shopping cart object.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.CalculateTotalShippingInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total shipping for the given shopping cart. Shipping taxes are included. Result is site main currency.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.RecalculateShippingOptionsInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates options charges and their shipping costs using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.IsShippingNeededInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Check if shopping cart needs shipping, return true if it does.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.ShippingOptionInfoProvider.IsShippingOptionApplicableInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShippingOptionInfo)">
            <summary>
            Checks if shipping option is applicable for given shopping cart.
            </summary>
            <param name="cart">Shopping cart in which shipping option should be used.</param>
            <param name="shippingOption">Shipping option to check if it is applicable.</param>
        </member>
        <member name="T:CMS.Ecommerce.RecalculationSettings">
            <summary>
            Class providing settings for prices recalculations.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.ExchangeRates">
            <summary>
            Indicates whether exchange rates will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.FromGlobalCurrencyRates">
            <summary>
            Indicates whether exchange rates from global main currency to site-specific main currency will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.Products">
            <summary>
            Indicates whether product prices will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.Taxes">
            <summary>
            Indicates whether flat taxes will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.Discounts">
            <summary>
            Indicates whether discounts will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.CreditEvents">
            <summary>
            Indicates whether customer credit and its history will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.ShippingOptions">
            <summary>
            Indicates whether shipping options charges and costs will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.Documents">
            <summary>
            Indicates whether prices in used in products will be recalculated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.RecalculationSettings.Orders">
            <summary>
            Indicates whether order total price and order items' prices in main currency will be recalculated.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.EProductReminder">
            <summary>
            Provides an ITask interface to send notifications to users about their expiring e-product downloads.
            If started as global scheduled task, it sends notifications about expiring e-products on all sites.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.EProductReminder.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the task.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="M:CMS.Ecommerce.EProductReminder.GetNotificationEmail(CMS.Ecommerce.EProductReminder.NotificationData)">
            <summary>
            Returns notification email message according to given notification data.
            </summary>
            <param name="notificationData">Notification data</param>
        </member>
        <member name="M:CMS.Ecommerce.EProductReminder.GetNotificationEmailMacroResolver(CMS.Ecommerce.EProductReminder.NotificationData)">
            <summary>
            Get macro resolver for expiring e-products notification email.
            </summary>
            <param name="notificationData">Notification data</param>
        </member>
        <member name="T:CMS.Ecommerce.EProductReminder.NotificationData">
            <summary>
            Represents e-product expiration notification data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.EProductReminder.NotificationData.CustomerEmail">
            <summary>
            Customer e-mail where the notification is sent
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.EProductReminder.NotificationData.EproductsTable">
            <summary>
            Table with customer expiring e-products
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartCleaner">
            <summary>
            Provides an ITask interface to delete old shopping carts.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartCleaner.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the publish action.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartInfo">
            <summary>
            ShoppingCartInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartInfo.NOT_KNOWN">
            <summary>
            Not known double constant.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartInfo.NOT_KNOWN_INT">
            <summary>
            Not known integer constant.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartInfo.DUMMY_CART">
            <summary>
            Dummy shopping cart object for macro resolver intellisense
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartInfo.mShoppingCartCustomData">
            <summary>
            Shopping cart custom data object
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.#ctor">
            <summary>
            Constructor - Creates an empty ShoppingCartInfo object. Use ShoppingCartInfo.CreateShoppingCartInfo(int siteId) instead!
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.#ctor(System.Int32)">
            <summary>
            Constructor - Creates an empty ShoppingCartInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ShoppingCartInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.CreateShoppingCartInfo(System.Int32)">
            <summary>
            Returns new empty ShoppingCartInfo object.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.CreateShoppingCartInfo(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns new ShoppingCartInfo object created from deserialized data.
            </summary>
            <param name="info">Data for deserialization the ShoppingCartInfo object should be created from</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Serialization context</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.RegisterProperties">
            <summary>
            Register the custom properties
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetApplicableOrderDiscounts">
            <summary>
            Returns subset of OrderDiscounts which are to be applied to this shopping cart.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetApplicableShippingDiscounts">
            <summary>
            Returns subset of ShippingDiscounts which are to be applied to shipping of this shopping cart.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetApplicableCatalogDiscounts(CMS.Ecommerce.SKUInfo)">
            <summary>
            Returns subset of CatalogDiscounts which are to be applied to given product.
            </summary>
            <param name="sku">SKU to get discounts for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.LogDiscountsUse">
            <summary>
            Logs the use of all discounts used in this shopping cart.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.SetShoppingCartItem(CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Adds product (and its product options) to the shopping cart object. 
            If such product configuration already exists in the shopping cart, only  its quantity is updated.
            Added/updated shopping cart item is returned.
            </summary>        
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the adding or updating.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetShoppingCartItem(System.Int32)">
            <summary>
            Returns shopping cart item from the shopping cart object.
            </summary>
            <param name="cartItemId">Shopping cart item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetShoppingCartItem(System.Guid)">
            <summary>
            Returns shopping cart item from the shopping cart object.
            </summary>        
            <param name="cartItemGuid">Shopping cart item GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.RemoveShoppingCartItem(System.Int32)">
            <summary>
            Removes shopping cart item and its product options from the shopping cart object.
            </summary>
            <param name="cartItemId">Shopping cart item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.RemoveShoppingCartItem(System.Guid)">
            <summary>
            Removes shopping cart item and its product options from the shopping cart object.
            </summary>
            <param name="cartItemGuid">Shopping cart item GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.InvalidateCalculations">
            <summary>
            Invalidates all shopping cart calculations.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.InvalidateExchangeRate">
            <summary>
            Invalidates shopping cart exchange rates.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.ApplyExchangeRate(System.Double)">
            <summary>
            Returns price in shopping cart currency.
            </summary>
            <param name="price">Price in site main currency to which the exchange rate should be applied</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.ApplyExchangeRate(System.Double,System.Boolean)">
            <summary>
            Returns price in shopping cart currency.
            </summary>
            <param name="price">Price to which the exchange rate should be applied</param>
            <param name="forGlobalItems">
            True - exchange rate for global items is used (price is expected in global main currency), 
            False - exchange rate for site items is used (price is expected in site main currency).</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.ApplyExchangeRateFromGlobalMainCurrency(System.Double)">
            <summary>
            Returns price in main currency of the site the shopping cart belongs to.
            </summary>
            <param name="price">Price in global main currency to which the exchange rate should be applied</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.RoundTo(System.Double)">
            <summary>
            Returns rounded price using the shopping cart currency settings.
            </summary>
            <param name="price">Price to be rounded</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetFormattedPrice(System.Double)">
            <summary>
            Returns formatted price using the shopping cart currency formatting string.
            </summary>
            <param name="price">Price to be formatted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.GetFormattedPrice(System.Double,System.Boolean)">
            <summary>
            Returns formatted price using the shopping cart currency formatting string.
            </summary>
            <param name="price">Price to be formatted</param>
            <param name="rounded">True - price is rounded using the shopping cart currency settings before formatting</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.InvalidateDiscountFilter">
            <summary>
            Invalidates product discount filter.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.InvalidateCalculations(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Invalidates specific calculations.
            </summary>
            <param name="content">True - Shopping cart content table is cleared, shopping cart items and discounts indicators are invalidated</param>
            <param name="contentTaxesTable">True - Shopping cart content taxes table is cleared</param>
            <param name="shippingTaxesTable">True - Shopping cart shipping taxes table is cleared</param>
            <param name="totals">True - Shopping cart totals (discounts, taxes, prices and shipping) are cleared</param>
            <param name="contentTaxes">True - Shopping cart content taxes are cleared</param>
            <param name="shippingTaxes">True - Shopping cart shipping taxes are cleared</param>
            <param name="totalUnits">True - sum of all shopping cart items' units is set to zero</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.DiscountMetCustomerRestriction(CMS.Ecommerce.DiscountInfo)">
            <summary>
            Returns true if shopping cart user meets discount customer restriction.
            </summary>
            <param name="discount">Discount to check customer restriction for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.MultiBuyDiscountMetCustomerRestriction(CMS.Ecommerce.MultiBuyDiscountInfo)">
            <summary>
            Returns true if shopping cart user meets multibuy discount customer restriction.
            </summary>
            <param name="multiBuydiscount">Multibuy discount to check customer restriction for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfo.DiscountMetCustomerRestriction(CMS.Ecommerce.DiscountCustomerEnum,System.String)">
            <summary>
            Returns true if shopping cart user meets customer restriction.
            </summary>
            <param name="customerRestriction">Type of restriction</param>
            <param name="discountRoles">Roles to check</param>
            <returns></returns>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartID">
            <summary>
            Shopping cart ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartSiteID">
            <summary>
            Shopping cart site ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartShippingOptionID">
            <summary>
            Shopping cart shipping option ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartPaymentOptionID">
            <summary>
            Shopping cart payment option ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartCustomerID">
            <summary>
            Shopping cart customer ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartUserID">
            <summary>
            ID of the registered user the shopping cart belongs to.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartBillingAddressID">
            <summary>
            Shopping cart billing address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartShippingAddressID">
            <summary>
            Shopping cart shipping address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartCompanyAddressID">
            <summary>
            Shopping cart company address ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartDiscountCouponID">
            <summary>
            Shopping cart discount coupon ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartCouponCode">
            <summary>
            Code of coupon used during shopping.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartCurrencyID">
            <summary>
            Shopping cart currency ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartNote">
            <summary>
            Shopping cart note.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartGUID">
            <summary>
            Shopping cart GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartLastUpdate">
            <summary>
            Date and time when the shopping cart was last updated.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartCustomData">
            <summary>
            Shopping cart custom data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.Order">
            <summary>
            Order data. Loaded when the shopping cart is created from an existing order, otherwise it is null.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.Customer">
            <summary>
            Customer information.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartBillingAddress">
            <summary>
            Gets or sets the current billing address.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartShippingAddress">
            <summary>
            Gets or sets the current shipping address.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartCompanyAddress">
            <summary>
            Gets or sets the current company address.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.User">
            <summary>
            Owner of the shopping cart. It is null if customer is anonymous or public.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.DiscountCoupon">
            <summary>
            Discount coupon information. It is null if no discount coupon is used.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.HasUsableCoupon">
            <summary>
            Indicates if shopping cart has relevant coupon code.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShippingOption">
            <summary>
            Selected shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.Currency">
            <summary>
            Selected currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.PaymentOption">
            <summary>
            Selected payment method.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.InvalidationEnabled">
            <summary>
            By default is invalidation enabled. If FALSE, invalidation of shopping cart item is disabled
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.PriceCalculatedOnTheFly">
            <summary>
            Indicates if shopping cart item data calculated on the fly, default value is TRUE.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ContentTaxes">
            <summary>
            Taxes which should be applied to the shopping cart items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.Discounts">
            <summary>
            Returns list of all general discounts which may affect this shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.OrderDiscounts">
            <summary>
            Returns list of all discounts which may affect total price of this shopping cart and not price of individual items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShippingDiscounts">
            <summary>
            Returns list of all discounts which may affect total shipping price of this shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CatalogDiscounts">
            <summary>
            Returns list of all catalog discounts which may affect this shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShippingTaxes">
            <summary>
            Taxes which should be applied to the selected shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ContentTable">
            <summary>
            Table with the shopping cart items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ContentTaxesTable">
            <summary>
            Table with the summary of the taxes which were applied to the shopping cart items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TaxSummary">
            <summary>
            DataRowCollection with the summary of the taxes, used as property for MacroDataSource.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShippingTaxesTable">
            <summary>
            Table with the summary of the taxes which were applied to the selected shipping option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalPrice">
            <summary>
            Total price of the shopping cart in shopping cart currency. All discounts, taxes and shipping are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalPriceInMainCurrency">
            <summary>
            Total price of the shopping cart in site main currency. All discounts, taxes and shipping are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalItemsPrice">
            <summary>
            Total price of all shopping cart items in shopping cart currency. Items discounts and taxes are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalItemsTax">
            <summary>
            Total tax of all shopping cart items in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalItemsPriceInMainCurrency">
            <summary>
            Total price of all shopping cart items in site main currency. Items discounts and taxes are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalItemsTaxInMainCurrency">
            <summary>
            Total tax of all shopping cart items in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.OrderDiscount">
            <summary>
            Discount which is applied to the items total price. It is in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.OrderDiscountInMainCurrency">
            <summary>
            Discount which is applied to the items total price. It is in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ItemsDiscount">
            <summary>
            Catalog discount which is applied to the items total price. It is in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ItemsDiscountInMainCurrency">
            <summary>
            Catalog discount which is applied to the items total price. It is in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShippingDiscount">
            <summary>
            Shipping discount which is applied to the items total price. It is in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShippingDiscountInMainCurrency">
            <summary>
            Shipping discount which is applied to the items total price. It is in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalTax">
            <summary>
            Total tax which is applied to all shopping cart items altogether. It is in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalTaxInMainCurrency">
            <summary>
            Total tax which is applied to all shopping cart items altogether. It is in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.Shipping">
            <summary>
            Shipping cost without taxes. Shipping free limit is applied. Value is in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShippingInMainCurrency">
            <summary>
            Shipping cost without taxes. Shipping free limit is applied. Value is in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalShipping">
            <summary>
            Total shipping in shopping cart currency. Shipping taxes are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalShippingInMainCurrency">
            <summary>
            Total shipping in site main currency. Shipping taxes are included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.RoundedTotalPrice">
            <summary>
            Rounded total price in shopping cart currency. It is rounded according to the shopping cart currency rules.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.RoundedTotalPriceInMainCurrency">
            <summary>
            Rounded total price in site main currency. It is rounded according to the site main currency rules.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ExchangeRate">
            <summary>
            Exchange rate from site main currency to shopping cart currency. 
            This exchange rate is applied to all site items (products, discounts, taxes, shipping option) which are present in the shopping cart to express their price in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ExchangeRateForGlobalItems">
            <summary>
            Exchange rate from global main currency to shopping cart currency. 
            This exchange rate is applied to all global items (products, discounts, taxes, shipping option) which are present in the shopping cart to express their price in shopping curt currency.
            If site uses global currencies, it is equal to exchange rate from site main currency to shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ExchangeRateToMainCurrency">
            <summary>
            Exchange rate from global main currency to site main currency. 
            This exchange rate is applied to all global items (products, discounts, taxes, shipping option) which are present in the shopping cart to express their price in site main currency.
            If site uses global currencies, it is equal to 1.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CartItems">
            <summary>
            List of shopping cart items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CartProducts">
            <summary>
            Subset of CartItem collection. Bundle items and product options are excluded.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CartContentItems">
            <summary>
            Subset of CartItem collection. Bundle items are excluded.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.RegisterAfterCheckout">
            <summary>
            Indicates that customer will be registered after checkout.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.RegisterAfterCheckoutTemplate">
            <summary>
            E-mail template code name used for registration after checkout.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.IsEmpty">
            <summary>
            Indicates that shopping cart has no items (CartItems collection is empty).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalUnits">
            <summary>
            Sum of all shopping cart items' units, bundle items and product options are not included.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.PaymentGatewayCustomData">
            <summary>
            Payment gateway custom data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.TotalItemsWeight">
            <summary>
            Total weight of shopping cart items.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.SiteName">
            <summary>
            Name of the site to which the shopping cart belongs.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.IsCreatedFromOrder">
            <summary>
            Indicates if shopping cart object is created from order. 
            It is set automatically when shopping cart object is created by GetShoppingCartInfoFromOrder method.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.OrderId">
            <summary>
            ID of the order to which the shopping cart belongs or from which the shopping cart was created.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.IsItemDiscountApplied">
            <summary>
            TRUE - some discount is applied at least to one shopping cart item, FALSE - no discount is applied to shopping cart items.
            Discount data are calculated on the fly in case order item discount is not stored in the database.  
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.IsDiscountApplied">
            <summary>
            Gets a value indicating whether is some discount applied to cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ApplicableMultiBuyDiscount">
            <summary>
            All MultiBuyDiscounts applicable on some of items in this cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.DiscountsToLog">
            <summary>
            List of all used discounts in shopping cart calculation that need to increase "used count".
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.MultiBuyDiscountsReport">
            <summary>
            Gets or sets the multi buy discounts report
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.OrderRelatedDiscountSummaryItems">
            <summary>
            List of order and multibuy discounts presentation data related to current shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CartItemsMultiBuyDiscountNames">
            <summary>
            Dictionary with cart item id as key and list of his multi buy discount as value.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.IsDiscountCouponApplied">
            <summary>
            TRUE - discount coupon is applied at least to one shopping cart item, otherwise FALSE.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.IsShippingNeeded">
            <summary>
            Indicates if shipping is needed for a shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.PrivateDataCleared">
            <summary>
            Indicates if private data were cleared from this shopping cart object. 
            It is set automatically when shopping cart private data are cleared by ClearShoppingCartPrivateData method.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ShoppingCartCulture">
            <summary>
            Shopping cart order culture (or culture of the order user created using the shopping cart).
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.UseShippingAddressForTaxes">
            <summary>
            Gets a value indicating whether use shipping address for taxes.
            Shipping address is used when it is set by settings and needed by shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CountryID">
            <summary>
            Country ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.StateID">
            <summary>
            State ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CheckAvailableItems">
            <summary>
            Indicates whether shopping cart items should be checked for availability.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.ItemsNotAvailable">
            <summary>
            Indicates whether some shopping cart product items are not available.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CatalogDiscountsFilter">
            <summary>
            Filter to be used for filtering discounts
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartInfo.CartDiscountsFilter">
            <summary>
            Filter to be used for filtering order discounts
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartInfoProvider">
            <summary>
            Class providing ShoppingCartInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCarts">
            <summary>
            Returns the query for all shopping carts.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfo(System.Int32)">
            <summary>
            Returns shopping cart with specified ID.
            </summary>
            <param name="cartId">Shopping cart ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfo(System.Guid)">
            <summary>
            Returns shopping cart with specified GUID.
            </summary>
            <param name="cartGuid">Shopping cart GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetShoppingCartInfo(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sets (updates or inserts) specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartInfo(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Deletes specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartInfo(System.Int32)">
            <summary>
            Deletes shopping cart with specified ID.
            </summary>
            <param name="cartId">Shopping cart ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCarts(System.Int32)">
            <summary>
            Returns dataset of all shopping carts for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetExpiredShoppingCarts(System.Int32)">
            <summary>
            Returns shopping carts that are expired (by default older than 30 days).
            </summary>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfo(System.Int32,System.String)">
            <summary>
            Returns shopping cart of the specified user.
            </summary>
            <param name="userId">ID of the user who is the owner of the shopping cart</param>  
            <param name="siteName">Name of the site to which the shopping cart belongs</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfoFromOrder(System.Int32)">
            <summary>
            Returns ShoppingCartInfo object created from the order data.
            </summary>
            <param name="orderId">ID of the order from which the shopping cart should be created</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartInfo(System.Guid)">
            <summary>
            Deletes shopping cart with specified GUID.
            </summary>
            <param name="cartGuid">Shopping cart GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartInfo(System.Int32,System.String)">
            <summary>
            Deletes shopping cart of the specified user.
            </summary>
            <param name="userId">ID of the user who is the owner of the shopping cart</param>  
            <param name="siteName">Name of the site to which the shopping cart belongs</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartItems(System.Int32)">
            <summary>
            Deletes all items of the specified shopping cart.
            </summary>
            <param name="cartId">Shopping cart ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.ClearShoppingCartPrivateData(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Clears customer's private data from shopping cart object.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EmptyShoppingCart(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Removes all items from specified shopping cart object.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetOrder(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Creates or updates order based on the data of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetOrder(CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Creates or updates order based on the data of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="generateInvoice">Indicates if new invoice should be generated from the new order data. It is True by default.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetOrderItems(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Creates or updates order items based on the items of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CheckShoppingCart(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Checks shopping cart items.
            The following conditions must be met to pass the check:
            1)All shopping cart items are enabled 2)Max units in one order are not exceeded 
            3)There is enough units in the inventory 4) Customer is registered, if there is a membership type product in the cart
            5)Product validity is valid, if there is a membership or e-product type product in the cart
            </summary>
            <param name="cart">Shopping cart to check</param>       
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetMultiBuyDiscounts(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.DiscountsParameters)">
            <summary>
            Returns multibuy discounts potentially applicable to given shopping cart. Discounts are ordered by priority.
            </summary>
            <param name="cart">Shopping cart to get discounts for.</param>
            <param name="parameters">Discount parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.LogDiscountsUse(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Logs the use of all discounts used in this shopping cart.
            </summary>
            <param name="cart">The shopping cart.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.AutoAddItemsToShoppingCart(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Evaluates active discounts and auto add items which can be for free to the shopping cart.
            </summary>
            <param name="cart">Shopping cart where items will be automatically added in case they could be given for free. </param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShoppingCartInfo(System.Int32)">
            <summary>
            Returns new empty shopping cart object.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShoppingCartInfo(System.Data.DataRow)">
            <summary>
            Returns new empty shopping cart object created from the given data row.
            </summary>
            <param name="dr">Data row with shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShoppingCartInfo(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns new empty shopping cart object created from deserialized input data.
            </summary>
            <param name="info">Data for deserialization from which the shopping cart object should be created</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateShoppingCart(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates the whole shopping cart (discounts and taxes of all shopping cart items, content table, content taxes table, shipping and shipping taxes table).
            </summary>
            <param name="cart">Shopping cart</param>       
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateShoppingCartItems(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates discounts and taxes of all shopping cart items.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateContent(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates shopping cart content table.
            </summary>
            <param name="cart">Shopping cart</param>       
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateContentTaxes(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates content taxes table (table with summary of all taxes which were applied to the shopping cart items).
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateShippingTaxes(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates shipping taxes table (table with summary of all taxes which were applied to the selected shipping option).
            </summary>
            <param name="cart">Shopping cart</param>    
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentTable">
            <summary>
            Creates an empty shopping cart content table.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.FilterContentTable(System.Data.DataTable)">
            <summary>
            Filters shopping cart content table.
            </summary>
            <param name="table">Shopping cart content table</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentRow(CMS.Ecommerce.ShoppingCartItemInfo,System.Data.DataTable)">
            <summary>
            Creates one row of the content table with the data which are retrieved from the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="table">Table from which the content row is created</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentTaxesTable">
            <summary>
            Creates an empty content taxes table.
            </summary>         
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentTaxRow(CMS.Ecommerce.ShoppingCartItemInfo,System.Data.DataTable,System.Data.DataRow)">
            <summary>
            Creates one row of the content taxes table with the data which are retrieved from the specified shopping cart item tax.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="taxes">Table from which the tax row is created</param>
            <param name="tax">Shopping cart item tax which is used for initialization of the tax row</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetContentTaxRow(CMS.Ecommerce.ShoppingCartItemInfo,System.Data.DataTable)">
            <summary>
            Appends or updates taxes records in table specified by contentTaxesTable parameter according to given item taxes.
            </summary>
            <param name="item">Item which tax classes are to be included to contentTaxesTable</param>
            <param name="contentTaxesTable">Shopping cart content taxes table</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.UpdateContentTaxRow(System.Data.DataRow,System.Data.DataRow)">
            <summary>
            Updates tax record specified by contentTaxRow parameter according to given item tax.
            </summary>
            <param name="contentTaxRow">Content tax row to be be updated.</param>
            <param name="itemTaxRow">Item tax row used as source of data.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShippingTaxesTable">
            <summary>
            Creates an empty table where taxes summary of the selected shipping option will be stored.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShippingTaxRow(CMS.Ecommerce.ShoppingCartInfo,System.Data.DataTable,System.Data.DataRow)">
            <summary>
            Creates one row of the shipping taxes table with the data which are retrieved from the specified shipping option tax.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="taxes">Table from which the tax row is created</param>
            <param name="shippingTax">Shipping tax which is used for initialization of the tax row</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalPrice(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total price of the shopping cart. All discounts, taxes and shipping are included.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalItemsPrice(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total price of all shopping cart items in main currency. Discounts and taxes of the shopping cart items are included.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalItemsTax(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total tax of all shopping cart items in main currency.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalItemsWeight(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total weight of all shopping cart items.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateOrderDiscount(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates discount which should be applied to the total items price. Returns total sum of order discount value and multibuy discount value in main currency. 
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateOrderRelatedDiscounts(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Creates collection with order and multibuy discounts applied on current shopping cart.
            </summary>
            <param name="cart">Shopping cart to calculate discounts for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateItemsDiscount(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates catalog discount which should be applied to the total items price.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateShippingDiscount(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates shipping discount which should be applied to the shipping price.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalTax(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total tax which is applied to all shopping cart items altogether. Result is in site main currency.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Adds product (and its product options) to the specified shopping cart object. 
            If such product configuration already exists in the shopping cart, only  its quantity is updated.
            Added/updated shopping cart item is returned.
            </summary>
            <param name="cart">Shopping cart</param>        
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the adding or updating.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CheckNewShoppingCartItems(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Check new shopping cart items (product-site binding, product option - product binding and needed product options. 
            Returns true on success. 
            </summary>
            <param name="cart">Shopping cart object to check SKUs for.</param>
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the check.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,System.Int32)">
            <summary>
            Returns shopping cart item from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItemId">Shopping cart item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,System.Guid)">
            <summary>
            Returns shopping cart item from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItemGuid">Shopping cart item GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.RemoveShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,System.Int32)">
            <summary>
            Removes shopping cart item and its product options from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItemId">Shopping cart item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.RemoveShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,System.Guid)">
            <summary>
            Removes shopping cart item and its product options from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItemGuid">Shopping cart item GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.RemoveShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Removes shopping cart item, related bundle items and its product options from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.AddShoppingCartItem(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Adds new initialized item to the shopping cart items collection.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.IsProductTypeInShoppingCart(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.SKUProductTypeEnum)">
            <summary>
            Returns true, if there is at least one product of the specified type in the shopping cart.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="type">Product type to search for</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetTotalUnits(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns sum of all shopping cart items' units, bundle items and product options are not included.
            </summary>
            <param name="cart">Shopping cart data</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.UpdateShoppingCartFromOrder(CMS.Ecommerce.ShoppingCartInfo,System.Int32)">
            <summary>
            Updates shopping cart with shopping cart from order. If such product configuration already exists in the shopping cart, only  its quantity is updated.
            Returns true if all ordered items were successfully added to cart.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="orderID">ID of order which should be added to shopping cart.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartResolver(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns initialized shopping cart resolver.
            </summary>
            <param name="cart">Shopping cart data</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartResolver(CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Returns initialized shopping cart resolver.
            </summary>
            <param name="cart">Shopping cart data to be used for resolver initialization</param>
            <param name="specialMacros">If true, special macros are added to the resolver (due to the backward compatibility).</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetOrderInvoice(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns the HTML code for the order invoice.
            </summary>
            <param name="cart">Shopping cart data used for generating invoice</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfoInternal(System.Int32)">
            <summary>
            Returns shopping cart with specified ID.
            </summary>
            <param name="cartId">Shopping cart ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfoInternal(System.Guid)">
            <summary>
            Returns shopping cart with specified GUID.
            </summary>
            <param name="cartGuid">Shopping cart GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetShoppingCartInfoInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sets (updates or inserts) specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartInfoInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Deletes specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartsInternal(System.Int32)">
            <summary>
            Returns dataset of all shopping carts for specified site matching the specified parameters.
            </summary>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetExpiredShoppingCartsInternal(System.Int32)">
            <summary>
            Returns shopping carts that are expired (by default older than 30 days).
            </summary>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfoInternal(System.Int32,System.String)">
            <summary>
            Returns shopping cart of the specified user.
            </summary>
            <param name="userId">ID of the user who is the owner of the shopping cart</param>  
            <param name="siteName">Name of the site to which the shopping cart belongs</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartInfoFromOrderInternal(System.Int32)">
            <summary>
            Returns ShoppingCartInfo object created from the order data.
            </summary>
            <param name="orderId">ID of the order from which the shopping cart should be created</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.DeleteShoppingCartItemsInternal(System.Int32)">
            <summary>
            Deletes items of the specified shopping cart.
            </summary>
            <param name="cartId">Shopping cart ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.ClearShoppingCartPrivateDataInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Clears customer's private data from shopping cart.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EmptyShoppingCartInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Removes all items from specified shopping cart object and from the shopping cart in database.
            </summary>
            <param name="cartObj">Shopping cart object</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetOrderInternal(CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Creates or updates order based on the data of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart data</param>
            <param name="generateInvoice">Indicates if new invoice should be generated from the new order data. It is True by default.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetOrderItemsInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Creates or updates order items based on the items of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CheckShoppingCartInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Checks shopping cart items.
            The following conditions must be met to pass the check:
            1)All shopping cart items are enabled 2)Max units in one order are not exceeded 
            3)There is enough units in the inventory 4) Customer is registered, if there is a membership type product in the cart
            5)Product validity is valid, if there is a membership or e-product type product in the cart
            </summary>
            <param name="cart">Shopping cart to check</param>  
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetMultiBuyDiscountsInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.DiscountsParameters)">
            <summary>
            Returns multibuy discounts potentially applicable to given shopping cart. Discounts are ordered by priority.
            </summary>
            <param name="cart">Shopping cart to get discounts for.</param>
            <param name="parameters">Discount parameters</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetMultiBuyDiscount(CMS.Ecommerce.MultiBuyDiscountInfo)">
            <summary>
            Converts MultiBuyDiscountInfo object to object applicable within shopping cart calculation.
            </summary>
            <param name="discount">Discount to be converted.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.LogDiscountsUseInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Logs the use of all discounts used in this shopping cart.
            Fills shopping cart DiscountsToLog collection with applicable catalog, order, shipping, multi buy discounts.
            </summary>
            <param name="cart">The shopping cart.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.AutoAddItemsToShoppingCartInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Evaluates active discounts and auto add items which can be for free to the shopping cart.
            </summary>
            <param name="cart">Shopping cart where items will be automatically added in case they could be given for free. </param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShoppingCartInfoInternal(System.Int32)">
            <summary>
            Returns new empty shopping cart object.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShoppingCartInfoInternal(System.Data.DataRow)">
            <summary>
            Returns new empty shopping cart object created from the given data row.
            </summary>
            <param name="dr">Data row with shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShoppingCartInfoInternal(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns new empty shopping cart object created from deserialized input data.
            </summary>
            <param name="info">Data for deserialization from which the shopping cart object should be created</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateShoppingCartInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates the whole shopping cart (discounts and taxes of all shopping cart items, content table, content taxes table, shipping and shipping taxes table).
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateShoppingCartItemsInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates discounts and taxes of all shopping cart items.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateContentInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates shopping cart content table.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateContentTaxesInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates content taxes table (table with summary of all taxes which were applied to the shopping cart items).
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateShippingTaxesInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Recalculates shipping taxes table (table with summary of all taxes which were applied to the selected shipping option).
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentTableInternal">
            <summary>
            Creates an empty shopping cart content table.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.FilterContentTableInternal(System.Data.DataTable)">
            <summary>
            Filters shopping cart content table.
            </summary>
            <param name="table">Shopping cart content table</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentRowInternal(CMS.Ecommerce.ShoppingCartItemInfo,System.Data.DataTable)">
            <summary>
            Creates one row of the content table with the data which are retrieved from the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="table">Table from which the content row is created</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentTaxesTableInternal">
            <summary>
            Creates an empty content taxes table.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateContentTaxRowInternal(CMS.Ecommerce.ShoppingCartItemInfo,System.Data.DataTable,System.Data.DataRow)">
            <summary>
            Creates one row of the content taxes table with the data which are retrieved from the specified shopping cart item tax.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="taxes">Table from which the tax row is created</param>
            <param name="tax">Shopping cart item tax which is used for initialization of the tax row</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetContentTaxRowInternal(CMS.Ecommerce.ShoppingCartItemInfo,System.Data.DataTable)">
            <summary>
            Appends or updates taxes records in table specified by contentTaxesTable parameter according to given item taxes.
            </summary>
            <param name="item">Item which tax classes are to be included to content taxes table</param>
            <param name="contentTaxesTable">Shopping cart content taxes table</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.UpdateContentTaxRowInternal(System.Data.DataRow,System.Data.DataRow)">
            <summary>
            Updates tax record specified by contentTaxRow parameter according to given item tax.
            </summary>
            <param name="contentTaxRow">Content tax row to be be updated.</param>
            <param name="itemTaxRow">Item tax row used as source of data.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetContentTaxRowInternal(System.Data.DataTable,System.Int32)">
            <summary>
            Returns row with specified tax class ID from given taxes table. Null is returned when tax not found.
            </summary>
            <param name="contentTaxesTable">Table with shopping cart content taxes</param>
            <param name="taxClassId">ID of the tax class to look for</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShippingTaxesTableInternal">
            <summary>
            Creates an empty shipping taxes table (table where taxes summary of the selected shipping option will be stored).
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CreateShippingTaxRowInternal(CMS.Ecommerce.ShoppingCartInfo,System.Data.DataTable,System.Data.DataRow)">
            <summary>
            Creates one row of the shipping taxes table with the data which are retrieved from the specified shipping option tax.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="taxes">Table from which the tax row is created</param>
            <param name="tax">Shipping tax which is used for initialization of the tax row</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateShippingTaxInternal(CMS.Ecommerce.ShoppingCartInfo,System.Data.DataTable,System.Data.DataRow)">
            <summary>
            Calculates single tax which is applied to shipping option. Result is in site main currency.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="taxes">Table with taxes which were already calculated</param>
            <param name="tax">Data of the tax which is used for tax calculation</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalPriceInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total price of the shopping cart. All discounts, taxes and shipping are included.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalItemsPriceInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total price of all shopping cart items in main currency. Discounts and taxes of the shopping cart items are included.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalItemsTaxInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total tax of all shopping cart items in main currency.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalItemsWeightInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total weight of all shopping cart items.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateOrderDiscountInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates discount which should be applied to the total items price. If discount is higher than total items price, total items price is returned.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EvaluateOrderRelatedDiscountsInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Creates collection with order and multibuy discounts applied on current shopping cart.
            </summary>
            <param name="cart">Shopping cart to calculate discounts for.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateItemsDiscountInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates catalog discount which should be applied to the total items price.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateShippingDiscountInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates shipping discount which should be applied to the shipping price.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CalculateTotalTaxInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Calculates total tax which is applied to all shopping cart items altogether. Result is in site main currency.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.SetShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Adds product (and its product options) to the specified shopping cart object. If such product configuration already exists in the shopping cart, only  its quantity is updated.
            Added/updated shopping cart item is returned.
            </summary>
            <param name="cart">Shopping cart</param>        
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the adding or updating.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.CheckNewShoppingCartItemsInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Check new shopping cart items (product-site binding, product option - product binding and needed product options. 
            Returns true on success. 
            </summary>
            <param name="cart">Shopping cart object to check SKUs for.</param>
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the check.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,System.Int32)">
            <summary>
            Returns shopping cart item from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItemId">Shopping cart item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,System.Guid)">
            <summary>
            Returns shopping cart item from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItemGuid">Shopping cart item GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.RemoveShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Removes shopping cart item, related bundle items and its product options from the specified shopping cart object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="cartItem">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.AddShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Adds new initialized item to the shopping cart items collection.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="item">Shopping cart item</param> 
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.AddShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Adds new item to the shopping cart object and returns its object.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="itemParams">Parameters from which the new shopping cart item is initialized.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.UpdateShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Updates shopping cart item in the specified shopping cart object. By default only units of the specified shopping cart item and units of its product options are updated.
            </summary>
            <param name="item">Shopping cart item to be updated.</param>
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the update. 
            By default only Quantity parameter is used.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.ShoppingCartItemParameters)">
            <summary>
            Returns specified shopping cart item from the given shopping cart object. If such item is not found, null is returned. 
            By default shopping cart item is searched according to the product SKUID and SKUIDs of its product options.
            </summary>
            <param name="cart">Shopping cart</param>        
            <param name="itemParams">Parameters of the shopping cart item which should be used to perform the search.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.IsProductTypeInShoppingCartInternal(CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.SKUProductTypeEnum)">
            <summary>
            Returns true, if there is at least one product of the specified type in the shopping cart.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="type">Product type to search for</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetTotalUnitsInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns sum of all shopping cart items' units, bundle items and product options are not included.
            </summary>
            <param name="cart">Shopping cart data</param>    
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.UpdateShoppingCartFromOrderInternal(CMS.Ecommerce.ShoppingCartInfo,System.Int32)">
            <summary>
            Updates shopping cart with shopping cart from order. If such product configuration already exists in the shopping cart, only  its quantity is updated.
            Returns true if all ordered items were successfully added to cart.
            </summary>
            <param name="cart">Shopping cart</param>
            <param name="orderID">ID of order which should be added to shopping cart.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartResolverInternal(CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Returns initialized shopping cart resolver
            </summary>
            <param name="cart">Shopping cart data to be used for resolver initialization</param>
            <param name="specialMacros">If true, special macros are added to the resolver (due to the backward compatibility).</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetOrderInvoiceInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns the HTML code for the order invoice.
            </summary>
            <param name="cart">Shopping cart data used for generating invoice</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.ApplyMultiBuyDiscounts(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Applies multibuy discounts to given shopping cart object. Returns DiscountsReport with informations about applied discounts.
            </summary>
            <param name="cart">Shopping cart to evaluate multibuy discounts on.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.AutoAddItems(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Auto adds item which could be given for free but not currently available in the shopping cart.
            </summary>
            <param name="cart">Shopping cart for which discount opportunities should be found.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetListFromXML(System.String)">
            <summary>
            Creates an object list from given xml content. In case xml is empty, returns empty collection.
            </summary>
            <param name="xmlContent">XML content to create object list from</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetDataSetFromXml(System.String)">
            <summary>
            Creates a dataset from given xml content.
            </summary>
            <param name="xmlContent">XML content to create data set from</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetXMLFromDataSet(System.Data.DataSet)">
            <summary>
            Converts data set to xml and removes "TaxIsGlobal" column. 
            </summary>
            <param name="ds">Data set to create xml from</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.EnsureValidData(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Ensures that shopping cart contains valid data
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.IsInfoMissing(CMS.DataEngine.BaseInfo,System.Int32)">
            <summary>
            Returns True, if the given info object is null and the given ID is equal or greater than zero, otherwise returns False.
            </summary>
            <param name="info">Info object to check</param>
            <param name="infoId">Value of the info object ID column</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartResolverData(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Gets the data for the shopping cart resolver. (selector -> data object) of the shopping cart objects
            </summary>
            <param name="cart">Shopping cart from which the data are loaded</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartInfoProvider.GetShoppingCartResolverSpecialMacros(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Gets the array of old macros, couples (macro, replacement) for the shopping cart resolver (Due to the backward compatibility).
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartItemInfo">
            <summary>
            Shopping cart item data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartItemInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.ShoppingCartItemInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.#ctor">
            <summary>
            Constructor - Creates an empty ShoppingCartItemInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ShoppingCartItemInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.LoadDefaultData">
            <summary>
            Loads the default object data
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor - Creates a new ShoppingCartItemInfo object from serialized data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.InvalidateCalculations">
            <summary>
            Invalidates all calculations of the shopping cart item.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.InvalidateCalculations(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Invalidates calculated discounts, taxes and prices.
            </summary>
            <param name="discounts">True - Both shopping cart item table with calculated discounts and all discounts totals are cleared.</param>
            <param name="taxes">True - Both shopping cart item table with calculated taxes and all taxes totals are cleared.</param>
            <param name="discountsTotals">True - Only shopping cart item discounts totals are cleared.</param>
            <param name="taxesTotals">True - Only shopping cart item taxes totals are cleared.</param> 
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.ApplyExchangeRate(System.Double)">
            <summary>
            Returns price in shopping cart currency.
            </summary>
            <param name="price">Price in site main currency to which the exchange rate should be applied</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.ApplyExchangeRate(System.Double,System.Boolean)">
            <summary>
            Returns price in shopping cart currency.
            </summary>
            <param name="price">Price to which the shopping cart exchange rate should be applied</param>
            <param name="forGlobalItems">True - shopping cart exchange rate for global items is used, False - shopping cart exchange rate for site items is used</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.ApplyExchangeRateFromGlobalMainCurrency(System.Double)">
            <summary>
            Returns price in main currency of the site to which the shopping cart belongs.
            </summary>
            <param name="price">Price in global main currency to which the exchange rate should be applied</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfo.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemID">
            <summary>
            Shopping cart item ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemGUID">
            <summary>
            Shopping cart item unique identifier. Shopping cart item means collection of the product and its selected product options.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemParentGUID">
            <summary>
            Unique identifier of the parent shopping cart item. When set current SKU is a product option, otherwise it is a product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemBundleGUID">
            <summary>
            Unique identifier of parent shopping cart item. If set, this shopping cart item is a bundle item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemCustomData">
            <summary>
            Shopping cart item custom data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ShoppingCartID">
            <summary>
            Shopping cart ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.SKUID">
            <summary>
            SKU ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemUnits">
            <summary>
            Amount of the current shopping cart item in the shopping cart. 
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemPrice">
            <summary>        
            If set, its value is used instead of the SKUPrice value in price calculation process. 
            </summary>    
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemIsPrivate">
            <summary>
            It is set only when cart item represents donation. Then it indicates if the donation is private.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemValidTo">
            <summary> 
            It is set only when cart item represents e-product and when the cart item was loaded from the existing e-product order item. 
            Then it is date and time until the e-product download links are valid.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemAutoAddedUnits">
            <summary>
            The number of shopping cart item units added automatically to the shopping cart for free.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.CartItemText">
            <summary>
            It is set only when cart item represents text product option. 
            Then it is the text defined by the customer, e.g. custom label for a T-shirt.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.OrderItem">
            <summary>
            Order item data. Loaded when the shopping cart is created from an existing order, otherwise it is null.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ProductDiscounts">
            <summary>
            List of discounts which should be applied to the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ProductTaxes">
            <summary>
            List of taxes which should be applied to the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.DiscountsTable">
            <summary>
            Table with calculated discounts which are applied to the shopping cart item. All table values are in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TaxesTable">
            <summary>
            Table with calculated taxes which are applied to the shopping cart item. All table values are in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitPrice">
            <summary>
            Unit price of the shopping cart item in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitPriceInMainCurrency">
            <summary>
            Unit price of the shopping cart item in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitPriceAfterDiscount">
            <summary>
            Unit price after discount of the shopping cart item in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitPriceAfterDiscountInMainCurrency">
            <summary>
            Unit price after discount of the shopping cart item in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalPrice">
            <summary>
            Unit total price of the shopping cart item in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalPriceIncludingOptions">
            <summary>
            Gets the total price of one unit including options.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalPriceIncludingOptionsWithoutTax">
            <summary>
            Gets the total price of one unit including options without tax.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalPriceInMainCurrency">
            <summary>
            Unit total price of the shopping cart item in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalDiscount">
            <summary>
            Unit discount of the shopping cart item in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalDiscountInMainCurrency">
            <summary>
            Unit discount of the shopping cart item in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalTax">
            <summary>
            Unit tax of the shopping cart item in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitTotalTaxInMainCurrency">
            <summary>
            Unit tax of the shopping cart item in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalPrice">
            <summary>
            Total price of the shopping cart item in shopping cart currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalPriceIncludingOptions">
            <summary>
            Gets the total price including options.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalPriceIncludingOptionsWithoutTax">
            <summary>
            Gets the total price including options without tax.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalPriceInMainCurrency">
            <summary>
            Total price of the shopping cart item in site main currency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalDiscount">
            <summary>
            Total discount in shopping cart currency which is applied to the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalDiscountInMainCurrency">
            <summary>
            Total discount in site main currency which is applied to the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalTax">
            <summary>
            Total tax in shopping cart currency which is applied to the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalTaxInMainCurrency">
            <summary>
            Total tax in site main currency which is applied to the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.UnitWeight">
            <summary>
            Unit weight of the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.TotalWeight">
            <summary>
            Total weight of the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ShoppingCart">
            <summary>
            Data of the shopping cart to which the shopping cart item belongs.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.SKU">
            <summary>
            Data of the SKU (product) which is represented by the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ProductOptions">
            <summary>
            List with product options of the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.IsAccessoryProduct">
            <summary>
            Gets a value indicating whether is accessory product.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.IsTextAttribute">
            <summary>
            Gets a value indicating whether is text attribute.
            </summary>        
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.IsProductOption">
            <summary>
            Indicates if shopping cart item is representing product or product option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.BundleItems">
            <summary>
            List of bundle items of the shopping cart item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.IsBundleItem">
            <summary>
            Indicates if shopping cart item is representing bundle item.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ParentProduct">
            <summary>
            Shopping cart item which represents product in which the current product option is included. 
            If the current item is not product option, returns null.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.VariantParent">
            <summary>
            In case the shopping cart item is a variant, returns its parent product.
            If the current item is not variant, returns null;
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ParentBundle">
            <summary>
            Shopping cart item which represents bundle product in which the current bundle item is included. 
            If the current item is not bundle item, returns null.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.IsPartialDiscountApplied">
            <summary>
            Determines whether there is a discount which is not applied to all units of the shopping cart item
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.InvalidationEnabled">
            <summary>
            By default is invalidation enabled. If FALSE, invalidation of shopping cart item is disabled
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.ShoppingCartItemInfo.ItemCalculatedOnTheFly">
            <summary>
            Indicates if item is calculated on the fly (TRUE) or data are read from order item (FALSE). Default value is true.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.ShoppingCartItemInfoProvider">
            <summary>
            Class providing ShoppingCartItemInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItems">
            <summary>
            Returns the query for all shopping cart items.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemInfo(System.Int32)">
            <summary>
            Returns shopping cart item with specified ID.
            </summary>
            <param name="itemId">Shopping cart item ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemInfo(System.Guid)">
            <summary>
            Returns shopping cart item with specified GUID.
            </summary>
            <param name="itemGuid">Shopping cart item GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.SetShoppingCartItemInfo(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Sets (updates or inserts) specified shopping cart item.
            </summary>
            <param name="itemObj">Shopping cart item to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.DeleteShoppingCartItemInfo(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Deletes specified shopping cart item.
            </summary>
            <param name="itemObj">Shopping cart item to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.DeleteShoppingCartItemInfo(System.Int32)">
            <summary>
            Deletes shopping cart item with specified ID.
            </summary>
            <param name="itemId">Shopping cart item ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.DeleteShoppingCartItemInfo(System.Guid)">
            <summary>
            Deletes shopping cart item with specified GUID.
            </summary>
            <param name="itemGuid">Shopping cart item GUID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemInfo(CMS.Ecommerce.OrderItemInfo,CMS.Ecommerce.SKUInfo)">
            <summary>
            Returns shopping cart item created from the order item data.
            </summary>
            <param name="item">Order item</param>      
            <param name="sku">Current data of the product (SKU) which is associated with the order item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItems(System.Int32)">
            <summary>
            Returns DataSet with all shopping cart items data of the specified cart. DataSet includes both SKU data and shopping cart item data.
            </summary>
            <param name="cartId">Shopping cart ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemsFromOrder(System.Int32)">
            <summary>
            Returns DataSet with all shopping cart items of the specified order. DataSet includes both SKU data and order item data.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.LoadShoppingCartItems(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Loads shopping cart items into the specified shopping cart. 
            If shopping cart is created from an order, cart items are loaded from the corresponding order items.
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.IsProductWithTextOption(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Indicates if specified shopping cart item is representing product with at least one text option.
            </summary>
            <param name="item">Shopping cart item to check.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CheckShoppingCartItem(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Checks shopping cart item in the shopping cart.
            The following conditions must be met to pass the check:
            1)Shopping cart item is enabled 2)Max units in one order are not exceeded 
            3)There is enough units in the inventory 4) Customer is registered, if it is a membership type product 
            5)Product validity is valid, if it is a membership or e-product type product
            </summary>
            <param name="item">Shopping cart item to check</param>  
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetSKUOrderUnits(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns sum of all units of the specified SKU in the order from which the shopping cart item is loaded.
            </summary>
            <param name="item">Shopping cart item which is loaded from the order (has order data).</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetSKUShoppingCartUnits(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns sum of all units of the specified SKU in the shopping cart to which the shopping cart item belongs. 
            </summary>
            <param name="item">Shopping cart item.</param>         
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemResolver(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns initialized shopping item cart resolver.
            </summary>
            <param name="item">Shopping cart item data to be used for resolver initialization</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.UpdateShoppingCartItemUnits(CMS.Ecommerce.ShoppingCartItemInfo,System.Int32)">
            <summary>
            Updates unit count of shopping cart item, related product option unit count or bundle item count is updated as well.
            </summary>
            <param name="item">Shopping cart item to updates unit count for.</param>      
            <param name="newCount">New number of cart item units.</param>  
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.EvaluateShoppingCartItem(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates shopping cart item discounts and taxes.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.EvaluateDiscounts(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates shopping cart item discounts.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.EvaluateTaxes(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates shopping cart item taxes.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateDiscountsTable">
            <summary>
            Creates empty table for calculated shopping cart item discounts.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateTaxesTable">
            <summary>
            Creates empty table for calculated shopping cart item taxes.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateDiscountRow(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount)">
            <summary>
            Creates one row of the discounts table with the data which are calculated from the shopping cart item and specified discount.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="discount">Discount which should be applied to the shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateTaxRow(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemTax)">
            <summary>
            Creates one row of the taxes table with the data which are calculated from the shopping cart item and specified tax.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="tax">Tax which should be applied to the shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetDiscounts(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns list of all discounts which should be applied to the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount)">
            <summary>
            Calculates single discount which is applied to one shopping cart item unit. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="discount">Discount which should be applied to the shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTax(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemTax)">
            <summary>
            Calculates single tax which is applied to one shopping cart item unit. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="tax">Data of the tax which is used for unit tax calculation</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateSubtotalDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount,System.Double)">
            <summary>
            Calculates the subtotal of a single discount which is applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="discount">Data of the discount which was used for unit discount calculation</param>
            <param name="unitDiscount">Calculated unit discount</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateSubtotalTax(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemTax,System.Double)">
            <summary>
            Calculates the subtotal of a single tax which is applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="tax">Data of the tax which was used for unit tax calculation</param>
            <param name="unitTax">Calculated unit tax</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTotalDiscount(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>        
            Calculates the sum of all discounts which are applied to one shopping cart item unit altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTotalTax(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the sum of all taxes which are applied to one shopping cart item unit altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalDiscount(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>        
            Calculates the sum of all discounts which are applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalTax(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the sum of all taxes which are applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitPrice(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the price of one shopping cart item unit. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTotalPrice(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the total price of one shopping cart item unit. Shopping cart item unit total discount and unit total tax are included. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalPrice(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the total price of all shopping cart item units altogether. Shopping cart item total discount and total tax are included. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitWeight(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the weight of one shopping cart item unit. 'SKUWeight' field value of the corresponding SKU is returned by default.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalWeight(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the total weight of all shopping cart item units altogether.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitPriceAfterDiscount(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns unit price after the discounts which were already applied. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemInfoInternal(System.Int32)">
            <summary>
            Returns shopping cart item with specified ID.
            </summary>
            <param name="itemId">Shopping cart item ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemInfoInternal(System.Guid)">
            <summary>
            Returns shopping cart item with specified GUID.
            </summary>
            <param name="itemGuid">Shopping cart item GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.SetShoppingCartItemInfoInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Sets (updates or inserts) specified shopping cart item.
            </summary>
            <param name="itemObj">Shopping cart item to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.DeleteShoppingCartItemInfoInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Deletes specified shopping cart item.
            </summary>
            <param name="itemObj">Shopping cart item to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemInfoInternal(CMS.Ecommerce.OrderItemInfo,CMS.Ecommerce.SKUInfo)">
            <summary>
            Returns shopping cart item created from the order item data.
            </summary>
            <param name="item">Order item</param>        
            <param name="sku">Current data of the product (SKU) which is associated with the order item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemsInternal(System.Int32)">
            <summary>
            Returns DataSet with all shopping cart items data of the specified cart. DataSet includes both SKU data and shopping cart item data.
            </summary>
            <param name="cartId">Shopping cart ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemsFromOrderInternal(System.Int32)">
            <summary>
            Returns DataSet with all shopping cart items of the specified order. DataSet includes both SKU data and order item data.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.LoadItemsFromCartInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Loads shopping cart items into the specified shopping cart. 
            Shopping cart items are loaded from standard shopping cart items data.       
            </summary>
            <param name="cart">Shopping cart</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.LoadItemsFromOrderInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Loads shopping cart items into the specified shopping cart. 
            Shopping cart items are loaded from items of the order from which the shopping cart is created.        
            </summary>
            <param name="cart">Shopping cart which is created from order data</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.IsProductWithTextOptionInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Indicates if specified shopping cart item is representing product with at least one text option.
            </summary>
            <param name="item">Shopping cart item to check.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CheckShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Checks shopping cart item in the shopping cart. If check fails the specified error message is returned, otherwise an empty string is returned.
            The following conditions must be met to pass the check:
            1)Shopping cart item is enabled 2)Max units in one order are not exceeded 
            3)There is enough units in the inventory 4) Customer is registered, if it is a membership type product 
            5)Product validity is valid, if it is a membership or e-product type product
            </summary>
            <param name="item">Shopping cart item to check</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.UpdateShoppingCartItemUnitsInternal(CMS.Ecommerce.ShoppingCartItemInfo,System.Int32)">
            <summary>
            Updates unit count of shopping cart item, related product option unit count or bundle item count is updated as well.
            </summary>
            <param name="item">Shopping cart item to updates unit count for.</param>      
            <param name="newCount">New number of cart item units.</param>  
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetSKUOrderUnitsInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns sum of all units of the specified SKU in the order from which the shopping cart item is loaded.
            </summary>
            <param name="item">Shopping cart item which is loaded from the order (has order data).</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetSKUShoppingCartUnitsInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns sum of all units of the specified SKU in the shopping cart to which the shopping cart item belongs.
            </summary>
            <param name="item">Shopping cart item.</param>    
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetCartUnitsCount(CMS.Ecommerce.ShoppingCartItemInfo,System.Boolean,System.Boolean)">
            <summary>
            Gets the cart units count for specified cart item.
            </summary>
            <param name="item">The cart item.</param>
            <param name="includeVariantsOfSameParent">if set to true variants of same parent are included to result.</param>
            <param name="orderCounts">if set to true order counts are evaluating.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetShoppingCartItemResolverInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns initialized shopping item cart resolver.
            </summary>
            <param name="item">Shopping cart item data to be used for resolver initialization</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.EvaluateShoppingCartItemInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates shopping cart item discounts and taxes.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.EvaluateDiscountsInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates shopping cart item discounts.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.AddDiscountRowInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount,System.Double)">
            <summary>
            Adds new discounts table row corresponding to given discount and shopping cart based on given base price. Returns calculated discount value.
            </summary>
            <param name="item">Cart item to add discount row to.</param>
            <param name="discount">Discount to be added.</param>
            <param name="basePrice">Price to calculate discount from.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.EvaluateTaxesInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates shopping cart item taxes.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateDiscountsTableInternal">
            <summary>
            Creates empty table for calculated shopping cart item discounts.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateTaxesTableInternal">
            <summary>
            Creates empty table for calculated shopping cart item taxes.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateDiscountRowInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount,System.Double)">
            <summary>
            Creates one row of the discounts table with the data which are calculated from the shopping cart item and specified discount.
            </summary>
            <param name="item">Shopping cart item</param>        
            <param name="discount">Discount which should be applied to the shopping cart item</param>
            <param name="basePrice">Price to apply discount to.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CreateTaxRowInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemTax)">
            <summary>
            Creates one row of the taxes table with the data which are calculated from the shopping cart item and specified tax.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="tax">Tax which should be applied to the shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.GetDiscountsInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns the list of all discounts which should be applied to the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount,System.Double)">
            <summary>
            Calculates single discount which is applied to one shopping cart item unit. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
            <param name="discount">Discount which should be applied to the shopping cart item</param>
            <param name="basePrice">Price to apply discount to.</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitAverageDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount,System.Double)">
            <summary>
            Calculates average discount per shopping cart item unit. 
            If discount is applied to all units of the shopping cart item average discount is equal to unit discount. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
            <param name="discount">Discount which should be applied to the shopping cart item</param>
            <param name="subtotalDiscount">Calculated subtotal discount</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTaxInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemTax)">
            <summary>
            Calculates single tax which is applied to one shopping cart item unit. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
            <param name="tax">Data of the tax which is used for unit tax calculation</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateSubtotalDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemDiscount,System.Double)">
            <summary>
            Calculates the subtotal of a single discount which is applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="discount">Data of the discount which was used for unit discount calculation</param>
            <param name="unitDiscount">Calculated unit discount</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateSubtotalTaxInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.IItemTax,System.Double)">
            <summary>
            Calculates the subtotal of a single tax which is applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
            <param name="tax">Data of the tax which was used for unit tax calculation</param>
            <param name="unitTax">Calculated unit tax</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTotalDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>        
            Calculates the sum of all discounts which are applied to one shopping cart item unit altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTotalTaxInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the sum of all taxes which are applied to one shopping cart item unit altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>        
            Calculates the sum of all discounts which are applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalTaxInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the sum of all taxes which are applied to all shopping cart item units altogether. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitPriceInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the price of one shopping cart item unit. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitTotalPriceInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the total price of one shopping cart item unit. Shopping cart item unit total discount and unit total tax are included. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalPriceInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the total price of all shopping cart item units altogether. Shopping cart item total discount and total tax are included. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitWeightInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the weight of one shopping cart item unit. 'SKUWeight' field value of the corresponding SKU is returned by default.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateTotalWeightInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Calculates the total weight of all shopping cart item units altogether.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.CalculateUnitPriceAfterDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns unit price after the discounts which were already applied. Result is in site main currency.
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.UpdateItemCount(CMS.Ecommerce.ShoppingCartItemInfo,System.Int32,System.Boolean)">
            <summary>
            Updates number of units in shopping cart item.
            </summary>
            <param name="item">Item which units should be updated</param>
            <param name="count">Number of units</param>
            <param name="updateInDatabase">If, item si updated in database</param>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.RoundValue(System.Double,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Round double value according according to the shopping cart item RoundTo property.
            </summary>
            <param name="value">Value to round</param>
            <param name="item">Shopping cart item</param>
            <returns>Rounded value</returns>
        </member>
        <member name="M:CMS.Ecommerce.ShoppingCartItemInfoProvider.InitShoppingCartItems(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Sets product options of each parent cart item and puts all cart items to the proper order (parent1-parent1 children, parent2- parent2 children,...).
            </summary>
            <param name="cart">Shopping cart</param> 
        </member>
        <member name="T:CMS.Ecommerce.SKUDiscountCouponInfo">
            <summary>
            SKUDiscountCouponInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUDiscountCouponInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUDiscountCouponInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUDiscountCouponInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SKUDiscountCouponInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.SKUDiscountCouponInfo.SKUID">
            <summary>
            ID of the SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUDiscountCouponInfo.DiscountCouponID">
            <summary>
            ID of the coupon.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUDiscountCouponInfoProvider">
            <summary>
            Class providing SKUDiscountCouponInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.GetSKUDiscountCoupons">
            <summary>
            Returns the query for all relationships between SKUs and discount coupons (product coupons).
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.GetSKUDiscountCouponInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified SKU and discount coupon.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.SetSKUDiscountCouponInfo(CMS.Ecommerce.SKUDiscountCouponInfo)">
            <summary>
            Sets relationship between specified SKU and discount coupon.
            </summary>
            <param name="infoObj">SKU-discount coupon relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.DeleteSKUDiscountCouponInfo(CMS.Ecommerce.SKUDiscountCouponInfo)">
            <summary>
            Deletes relationship between specified SKU and discount coupon.
            </summary>
            <param name="infoObj">SKU-discount coupon relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.AddDiscountCouponToSKU(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified SKU and discount coupon.
            </summary>  
            <param name="skuId">SKU ID</param>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.RemoveDiscountCouponFromSKU(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified SKU and discount coupon.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.IsSKUAssignedToDiscountCoupon(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Returns true if discount coupon can be applied to the given SKU.
            </summary>
            <param name="sku">SKU</param>
            <param name="coupon">Discount coupon</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.GetSKUDiscountCouponInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified SKU and discount coupon.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="couponId">Discount coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.SetSKUDiscountCouponInfoInternal(CMS.Ecommerce.SKUDiscountCouponInfo)">
            <summary>
            Sets relationship between specified SKU and discount coupon.
            </summary>
            <param name="infoObj">SKU-discount coupon relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.DeleteSKUDiscountCouponInfoInternal(CMS.Ecommerce.SKUDiscountCouponInfo)">
            <summary>
            Deletes relationship between specified SKU and discount coupon.
            </summary>
            <param name="infoObj">SKU-discount coupon relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUDiscountCouponInfoProvider.IsSKUAssignedToDiscountCouponInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.DiscountCouponInfo)">
            <summary>
            Returns true if discount coupon can be applied to the given SKU.
            </summary>
            <param name="sku">SKU</param>
            <param name="coupon">Discount coupon</param>
        </member>
        <member name="T:CMS.Ecommerce.SKUInfo">
            <summary>
            SKUInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUInfo.OBJECT_TYPE_SKU">
            <summary>
            Object type for sku
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUInfo.OBJECT_TYPE_OPTIONSKU">
            <summary>
            Object type for optionsku
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUInfo.OBJECT_TYPE_VARIANT">
            <summary>
            Object type for variant
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUInfo.TYPEINFOSKU">
            <summary>
            Type information for products.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUInfo.TYPEINFOOPTIONSKU">
            <summary>
            Type information for product options.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUInfo.TYPEINFOVARIANT">
            <summary>
            Type information for product variants.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUInfo.mSKUCustomData">
            <summary>
            SKU custom data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.CheckLicense(CMS.DataEngine.ObjectActionEnum,System.String)">
            <summary>
            Checks the object license. Returns true if the licensing conditions for this object were matched
            </summary>
            <param name="action">Object action</param>
            <param name="domainName">Domain name, if not set, uses current domain</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.InsertAsClonePostprocessing(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            This method is called once the object is completely cloned (with all children, bindings, etc.).
            Performs additional 
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Result of the cloning - messages in this object will be altered by processing this method</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.SetObjectOrderPostprocessing">
            <summary>
            Method which is called after the order of the object was changed. Generates staging tasks and webfarm tasks by default.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SKUInfo object from the given DataRow.
            </summary>
            <param name="dr">Source data row</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.#ctor(CMS.Base.IDataContainer)">
            <summary>
            Constructor - Creates a new SKUInfo object from the given DataContainer.
            </summary>
            <param name="data">Source data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.GetEffectiveIntegerValue(System.String,System.Int32)">
            <summary>
            Get effective integer value. Returns value from parent product when value in given column is not specified.
            </summary>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.GetEffectiveDoubleValue(System.String,System.Double)">
            <summary>
            Get effective double value. Returns value from parent product when value in given column is not specified.
            </summary>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.GetSKUPrice(CMS.Ecommerce.CurrencyInfo)">
            <summary>
            Get SKU price in given currency. Its basic SKU price without adjustments like taxes, discounts, options.
            </summary>
            <param name="currency">Target currency</param>
            <exception cref="T:System.Exception">Exception is thrown in case of invalid parameters.</exception>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="user">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.TypeInfo">
            <summary>
            Type info.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUInternalStatusID">
            <summary>
            Product internal status ID. For product variant with internal status ID not set, it is returned from parent product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUDepartmentID">
            <summary>
            Product department ID. For product variant with department ID not set, it is returned from parent product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUManufacturerID">
            <summary>
            Product manufacturer ID. For product variant with manufacturer ID not set, it is returned from parent product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUDescription">
            <summary>
            Product description.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUShortDescription">
            <summary>
            Short product description.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUName">
            <summary>
            Product name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUID">
            <summary>
            Product ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUNumber">
            <summary>
            Product number.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUEnabled">
            <summary>
            Product enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUAvailableInDays">
            <summary>
            Product available in days.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUPublicStatusID">
            <summary>
            Product public status ID. For product variant with public status ID not set, it is returned from parent product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUSupplierID">
            <summary>
            Product supplier ID. For product variant with supplier ID not set, it is returned from parent product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUPrice">
            <summary>
            Product price.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKURetailPrice">
            <summary>
            Product retail price.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUGUID">
            <summary>
            Product GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUSiteID">
            <summary>
            SKU site ID. Set to 0 for global SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUImagePath">
            <summary>
            Product image path.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUWeight">
            <summary>
            Product weight. For product variant with weight not set, it is returned from parent product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUHeight">
            <summary>
            Product height. For product variant with height not set, it is returned from parent product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUWidth">
            <summary>
            Product width. For product variant with width not set, it is returned from parent product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUDepth">
            <summary>
            Product depth. For product variant with depth not set, it is returned from parent product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUTrackInventory">
            <summary>
            Track inventory mode. Value is taken from parent product in case of product variant.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUAvailableItems">
            <summary>
            Product available items. In case of product variant value is taken from parent product if it tracks inventory 'ByProduct'.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUReorderAt">
            <summary>
            Available items quantity at which the product is to be reordered.
            In case of product variant value is taken from parent product if it tracks inventory 'ByProduct'.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUSellOnlyAvailable">
            <summary>
            Product sell only available. Value is taken from parent product in case of product variant.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUCustomData">
            <summary>
            Product custom data.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUOptionCategoryID">
            <summary>
            SKU option category ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUParentSKUID">
            <summary>
            ID of parent SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUOrder">
            <summary>
            SKU option order within the parent option category.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKULastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUCreated">
            <summary>
            Object creation date.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUProductType">
            <summary>
            Product type.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUConversionName">
            <summary>
            Conversion name of the product
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUConversionValue">
            <summary>
            Conversion value of the product
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUMembershipGUID">
            <summary>
            GUID of the membership associated with SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUValidity">
            <summary>
            Validity type of SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUValidFor">
            <summary>
            Multiplier for period defined by SKU validity type.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUValidUntil">
            <summary>
            Date until which products represented by SKU are valid.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUMaxDownloads">
            <summary>
            Maximum number of downloads.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUBundleInventoryType">
            <summary>
            Indicates how bundle product is removed from inventory.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUPrivateDonation">
            <summary>
            Indicates if donation represented by SKU is allowed to be private.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUMinPrice">
            <summary>
            Minimum allowed price of SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUMaxPrice">
            <summary>
            Maximum allowed price of SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUNeedsShipping">
            <summary>
            Indicates if SKU needs to be shipped. Value is taken from parent product in case of product variant.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUMinItemsInOrder">
            <summary>
            Minimum number of units of SKU allowed to be in one order.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUMaxItemsInOrder">
            <summary>
            Maximum number of units of SKU allowed to be in one order.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUInStoreFrom">
            <summary>
            Date from which the SKU is available in store. Value is taken from parent product in case of product variant.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.SKUOptionCategory">
            <summary>
            Gets the SKUs option category.
            </summary>       
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.IsProductOption">
            <summary>
            Indicates if current SKU is representing product or product option.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.IsAccessoryProduct">
            <summary>
            Gets a value indicating whether is accessory product.
            </summary>      
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.IsProductVariant">
            <summary>
            Indicates if current SKU is representing product variant.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.IsProduct">
            <summary>
            Indicates if current SKU is representing product.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfo.HasVariants">
            <summary>
            Indicates whether SKU has any variants.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUInfoProvider">
            <summary>
            Class providing SKUInfo management.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUInfoProvider.mLicenseEcommerce">
            <summary>
             Status of the e-commerce license for domains
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUs">
            <summary>
            Returns the query for all products and product option.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUInfo(System.Int32)">
            <summary>
            Returns product with specified ID.
            </summary>
            <param name="skuId">Product ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUInfo(System.Guid)">
            <summary>
            Returns product with specified GUID.
            </summary>
            <param name="skuGuid">Product GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.SetSKUInfo(CMS.Ecommerce.SKUInfo)">
            <summary>
            Sets (updates or inserts) specified product.
            </summary>
            <param name="skuObj">Product to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.DeleteSKUInfo(CMS.Ecommerce.SKUInfo)">
            <summary>
            Deletes specified product.
            </summary>
            <param name="skuObj">Product to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.DeleteSKUInfo(System.Int32)">
            <summary>
            Deletes product with specified ID.
            </summary>
            <param name="skuId">Product ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUInfo(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.SKUInfo,CMS.Ecommerce.SKUInfo)">
            <summary>
            Returns SKU data for the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item.</param>
            <param name="newSku">Current SKU data loaded from the products catalog.</param>
            <param name="oldSku">Old SKU data loaded from the associated order item.</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUs(System.Int32)">
            <summary>
            Returns query for all SKUs for specified site.
            </summary>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetRelatedProductsByBuy(System.Int32,System.Int32)">
            <summary>
            Returns query for products which were bought together with specified product.
            </summary>
            <param name="skuId">Product ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetTopNProductsBySales(System.Int32,System.Int32,System.String)">
            <summary>
            Returns dataset with top N products by sales.
            </summary>
            <param name="topN">Number of products to be selected</param>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUOptions(System.Int32,System.Boolean)">
            <summary>
            Returns query for all product options from specified product option category.
            </summary>
            <param name="categoryId">Product option category ID</param> 
            <param name="onlyEnabled">Indicates if only enabled product options should be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUOptionsForProduct(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns query for all product options from specified product option category allowed for product specified by skuId parameter.
            </summary>
            <param name="skuId">ID of the SKU for which options are to be obtained</param>
            <param name="categoryId">Product option category ID</param> 
            <param name="onlyEnabled">Indicates if only enabled product options should be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUOptionsCount(System.Int32)">
            <summary>
            Returns number of product options which are defined for the specified product option category.
            </summary>
            <param name="categoryId">Product option category ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.MoveSKUOptionUp(System.Int32)">
            <summary>
            Moves specified product option up within the parent option category.
            </summary>
            <param name="skuId">Product option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.MoveSKUOptionDown(System.Int32)">
            <summary>
            Moves specified product option down within the parent option category.
            </summary>
            <param name="skuId">Product option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetBundleItems(System.Int32)">
            <summary>
            Returns query for all bundle items for specified bundle SKU ID.
            </summary>
            <param name="bundleId">Bundle SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetWishlistProducts(System.Int32,System.Int32)">
            <summary>
            Returns dataset with the products from specified user's wishlist.
            </summary>
            <param name="userId">ID of the user the wishlist belongs to</param>  
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetCouponProducts(System.Int32)">
            <summary>
            Returns the query for all products which are assigned to the specified discount coupon.
            </summary>
            <param name="couponId">Coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUUrl(System.Guid,System.String,System.String)">
            <summary>
            Returns user friendly URL of the specified product.
            </summary>
            <param name="skuGuid">Product unique identifier (GUID)</param>
            <param name="skuName">Product name</param>
            <param name="siteName">Site Name</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.UpdateInventory(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Updates products' available items according to the products' units of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart with some products</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.IsUserAuthorizedToModifySKU(CMS.Ecommerce.SKUInfo,System.String,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to modify specific SKU. 
            For global SKU: 'EcommerceGlobalModify' permission is checked. 
            For site-specific SKU: 'EcommerceModify' OR 'ModifyProducts' permission is checked.
            </summary>
            <param name="skuObj">SKU to be checked</param>
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.IsUserAuthorizedToModifySKU(System.Boolean,System.String,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to modify SKUs.
            </summary>
            <param name="global">For global SKUs (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific SKUs (global = False): 'EcommerceModify' OR 'ModifyProducts' permission is checked.</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="skuId">Product identifier</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.LicenseVersionCheck(System.String,CMS.DataEngine.FeatureEnum,CMS.DataEngine.ObjectActionEnum)">
            <summary>
            License version check.
            </summary>
            <param name="domain">Domain name</param>
            <param name="feature">Feature</param>
            <param name="action">Action to check</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CheckLicense(CMS.DataEngine.ObjectActionEnum,System.String)">
            <summary>
            Checks the license.
            </summary>
            <param name="action">Object action</param>
            <param name="domainName">Domain name, if not set, current domain name is used</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.RecalculateProducts(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates products (including product options) prices using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">Id of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.RecalculateProductDocuments(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculate prices in fields of all product documents which are mapped to SKU price field. This method is invoked 
            in case of changing main currency.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition for View_CMS_Tree_Joined filtering</param>
            <param name="siteId">Id of the site which main currency was changed (0 for global main currency changed)</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.SortProductOptionsAlphabetically(System.Int32)">
            <summary>
            Sorts product options of the specified option category alphabetically (A-Z).
            </summary>
            <param name="categoryId">ID of option category</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.HasSKUEnabledOptions(System.Int32)">
            <summary>
            Returns True if there are any enabled options categories with some enabled product options assigned to the specified SKU, otherwise returns False.
            </summary>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.IsSKUNew(CMS.Ecommerce.SKUInfo)">
            <summary>
            Indicates if the given SKU is new in the store. By default it is determined based on the CMSStoreProductsAreNewFor setting and SKUInStoreFrom property.
            </summary>
            <param name="sku">SKU data</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.IsSKUAvailableForSale(CMS.Ecommerce.SKUInfo)">
            <summary>
            Indicates if the given SKU can be bought by the customer based on the SKU inventory properties.
            </summary>
            <param name="sku">SKU data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.IsSKUInStock(CMS.Ecommerce.SKUInfo)">
            <summary>
            Indicates the real stock status of SKU based on SKU items available.
            </summary>
            <param name="sku">SKU data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetDefaultNeedsShippingFlag(CMS.Ecommerce.SKUProductTypeEnum)">
            <summary>
            Returns default value of NeedsShipping flag for given representation of product.
            </summary>
            <param name="representation">Product representation to get default value for.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUPrice(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean,System.Boolean,System.Boolean,System.String,CMS.Ecommerce.SKUInfo,System.Double)">
            <summary>
            Returns product catalog price based on the SKU data and shopping cart data.
            Catalog discounts and/or taxes are included optionally. Result is in site main currency.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="discounts">True - catalog discounts are applied to the price</param>
            <param name="taxes">True - catalog taxes are applied to the discounted price</param>
            <param name="forCart">True - This method is called within the shopping cart calculations, False (default) - This method is called within the displaying price on the live site.</param>
            <param name="column">Name of the column the price should be retrieved from. If empty, SKUPrice column is used.</param>
            <param name="parentSku">The parent SKU for option(SKU) price calculation. Parent SKU taxes and discounts will be used.</param>
            <param name="customPrice">If set, sku price is not taken from SKUInfo object.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUFormattedPrice(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean,System.Boolean,System.String)">
            <summary>
            Returns formatted product catalog price based on the SKU data and shopping cart data. 
            Catalog discounts and/or taxes are included optionally. Result is in shopping cart currency.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="discounts">True - catalog discounts are applied to the price</param>
            <param name="taxes">True - catalog taxes are applied to the discounted price</param>
            <param name="column">Name of the column the price should be retrieved from. If empty, SKUPrice column is used.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUPrice(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns value of the SKU catalog price based on the SKU data and shopping cart data. 
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUPrice(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Returns value of the SKU catalog price based on the SKU data and shopping cart data. 
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="column">Name of the column the price should be retrieved from. If empty, SKUPrice column is used.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CalculateSKUTotalTax(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Double)">
            <summary>
            Returns product total tax in site main currency based on the product data and the data of the shopping cart. 
            Result is cached according to the content cache settings (CMSCacheMinutes settings key).
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="priceAfterDiscount">SKU price in main currency after discount the tax should be applied to</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUInfoInternal(System.Int32)">
            <summary>
            Returns product with specified ID.
            </summary>
            <param name="skuId">Product ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUInfoInternal(System.Guid)">
            <summary>
            Returns product with specified GUID.
            </summary>
            <param name="skuGuid">Product GUID</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.SetSKUInfoInternal(CMS.Ecommerce.SKUInfo)">
            <summary>
            Sets (updates or inserts) specified product.
            </summary>
            <param name="skuObj">Product to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.DeleteSKUInfoInternal(CMS.Ecommerce.SKUInfo)">
            <summary>
            Deletes specified product.
            </summary>
            <param name="skuObj">Product to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CleanUpProductTypeDependenciesInternal(CMS.Ecommerce.SKUInfo)">
            <summary>
            Cleans up product type dependencies like e-product files, bundle relations, Memberships etc.
            </summary>
            <param name="skuObj">The SKU.</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUInfoInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.SKUInfo,CMS.Ecommerce.SKUInfo)">
            <summary>
            Returns SKU data for the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item.</param>
            <param name="newSku">Current SKU data loaded from the products catalog.</param>
            <param name="oldSku">Old SKU data loaded from the associated order item.</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUsInternal(System.Int32)">
            <summary>
            Returns query for all SKUs for specified site.
            </summary>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetRelatedProductsByBuyInternal(System.Int32,System.Int32)">
            <summary>
            Returns query for products which were bought together with specified product.
            </summary>
            <param name="skuId">Product ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetTopNProductsBySalesInternal(System.Int32,System.Int32,System.String)">
            <summary>
            Returns dataset with top N products by sales.
            </summary>
            <param name="topN">Number of products to be selected</param>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUOptionsForProductInternal(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns query for all product options from specified product option category allowed for product specified by skuId parameter.
            </summary>
            <param name="skuId">ID of the SKU for which options are to be obtained</param>
            <param name="categoryId">Product option category ID</param> 
            <param name="onlyEnabled">Indicates if only enabled product options should be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUOptionsCountInternal(System.Int32)">
            <summary>
            Returns number of product options which are defined for the specified product option category.
            </summary>
            <param name="categoryId">Product option category ID</param> 
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.MoveSKUOptionUpInternal(System.Int32)">
            <summary>
            Moves specified product option up within the parent option category.
            </summary>
            <param name="skuId">Product option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.MoveSKUOptionDownInternal(System.Int32)">
            <summary>
            Moves specified product option down within the parent option category.
            </summary>
            <param name="skuId">Product option ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetBundleItemsInternal(System.Int32)">
            <summary>
            Returns query for all bundle items for specified bundle SKU ID.
            </summary>
            <param name="bundleId">Bundle SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetWishlistProductsInternal(System.Int32,System.Int32)">
            <summary>
            Returns dataset with the products from specified user's wishlist.
            </summary>
            <param name="userId">ID of the user the wishlist belongs to</param>  
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetCouponProductsInternal(System.Int32)">
            <summary>
            Returns the query for all products which are assigned to the specified discount coupon.
            </summary>
            <param name="couponId">Coupon ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUUrlInternal(System.Guid,System.String,System.String)">
            <summary>
            Returns user friendly URL of the specified product.
            </summary>
            <param name="skuGuid">Product unique identifier (GUID)</param>
            <param name="skuName">Product name</param>
            <param name="siteName">Site Name</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.UpdateInventoryInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Updates products' available items in database according to the products' units of the specified shopping cart.
            </summary>
            <param name="cartObj">Shopping cart with some products</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.RecalculateProductsInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculates products (including product options) prices using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.RecalculateProductDocumentsInternal(System.Single,System.Int32,System.String,System.Int32)">
            <summary>
            Recalculate prices in fields of all product documents which are mapped to SKU price field. This method is invoked 
            in case of changing main currency.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Additional WHERE condition for View_CMS_Tree_Joined filtering</param>
            <param name="siteId">Id of the site which main currency was changed (0 for global main currency changed)</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.SortProductOptionsAlphabeticallyInternal(System.Int32)">
            <summary>
            Sorts product options of the specified option category alphabetically (A-Z).
            </summary>
            <param name="categoryId">Option category ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.HasSKUEnabledOptionsInternal(System.Int32)">
            <summary>
            Returns True if there are any enabled options categories with some enabled product options assigned to the specified SKU, otherwise returns False.
            </summary>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.IsSKUNewInternal(CMS.Ecommerce.SKUInfo)">
            <summary>
            Indicates if the given SKU is new in the store. By default it is determined based on the CMSStoreProductsAreNewFor setting and SKUInStoreFrom property.
            </summary>
            <param name="sku">SKU data</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.IsSKUAvailableForSaleInternal(CMS.Ecommerce.SKUInfo)">
            <summary>
            Indicates if the given SKU can be bought by the customer based on the SKU inventory settings.
            </summary>
            <param name="sku">SKU data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.IsSKUInStockInternal(CMS.Ecommerce.SKUInfo)">
            <summary>
            Indicates the real stock status of SKU based on SKU items available.
            </summary>
            <param name="sku">SKU data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetDefaultNeedsShippingFlagInternal(CMS.Ecommerce.SKUProductTypeEnum)">
            <summary>
            Returns default value of NeedsShipping flag for given representation of product.
            </summary>
            <param name="representation">Product representation to get default value for.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUPriceInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean,System.Boolean,System.Boolean,System.String,CMS.Ecommerce.SKUInfo,System.Double)">
            <summary>
            Returns product catalog price based on the SKU data and the shopping cart data. 
            Discounts and/or taxes are included optionally. Result is in site main currency.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="discounts">True - catalog discounts are applied to the price</param>
            <param name="taxes">True - catalog taxes are applied to the discounted price</param>
            <param name="forCart">True - This method is called within the shopping cart calculations, False - This method is called within the displaying price on the live site.</param>
            <param name="column">Name of the column the price should be retrieved from. If empty, SKUPrice column is used.</param>
            <param name="parentSku">The parent SKU for option(SKU) price calculation. Parent SKU taxes and discounts will be used.</param>
            <param name="customPrice">If set, sku price is not taken from SKUInfo object.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUFormattedPriceInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean,System.Boolean,System.String)">
            <summary>
            Returns formatted product catalog price based on the SKU data and the shopping cart data. 
            Discounts and/or taxes are included optionally. Result is in shopping cart currency.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="discounts">True - catalog discounts are applied to the price</param>
            <param name="taxes">True - catalog taxes are applied to the discounted price</param>
            <param name="column">Name of the SKU column the price should be retrieved from. If empty, SKUPrice field is used.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUPriceInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns value of the SKU catalog price based on the SKU data and shopping cart data. By default value from SKUPrice field is returned.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUPriceInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.String)">
            <summary>
            Returns value of the SKU catalog price based on the SKU data and shopping cart data.         
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="column">Name of the column from which the SKU price should be retrieved. If empty, SKUPrice column is used.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetSKUDiscountsInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean)">
            <summary>
            Returns list of catalog discounts which should be applied to the given product based on the product data and shopping cart data.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="forCart">True - This method is called within the shopping cart calculations, False - This method is called within the displaying price on the live site.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CalculateSKUPriceAfterDiscountInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Boolean,System.String,CMS.Ecommerce.SKUInfo,System.Double)">
            <summary>
            Calculates product price after all its catalog discounts are applied.       
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="forCart">True - This method is called within the shopping cart calculations, False - This method is called within the displaying price on the live site.</param>
            <param name="column">Name of the column from which the product price should be retrieved. If empty, SKUPrice column is used.</param>
            <param name="parentSku">The parent SKU for option(SKU) price calculation. Parent SKU discounts will be used.</param>
            <param name="customPrice">If set, sku price is not taken from SKUInfo object.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CalculateSKUDiscountInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,CMS.Ecommerce.IItemDiscount,System.Double)">
            <summary>
            Calculates specified catalog discount which should be applied to the given product. Result is in site main currency.
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="discount">Discount data</param>
            <param name="priceAfterDiscount">SKU price after previous discounts</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CalculateSKUTotalTaxInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Double,CMS.Ecommerce.SKUInfo)">
            <summary>
            Returns product total tax in site main currency based on the product data and the data of the shopping cart. 
            Result is cached according to the content cache settings (CMSCacheMinutes settings key).
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="priceAfterDiscount">SKU price in main currency after discount the tax should be applied to</param>
            <param name="parentSku">The parent SKU for option(SKU) price calculation. Parent SKU taxes will be used.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.CalculateSKUTotalTaxFromDBInternal(CMS.Ecommerce.SKUInfo,CMS.Ecommerce.ShoppingCartInfo,System.Double,CMS.Ecommerce.SKUInfo)">
            <summary>
            Returns product total tax in site main currency based on the product data and the data of the shopping cart.         
            </summary>
            <param name="sku">SKU data</param>
            <param name="cart">Shopping cart data</param>
            <param name="priceAfterDiscount">SKU price in main currency after discount the tax should be applied to</param>
            <param name="parentSku">The parent SKU for option(SKU) price calculation. Parent SKU taxes will be used.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetBundleInventoryTypeEnum(System.String)">
            <summary>
            Returns BundleInventoryType enum.
            </summary>
            <param name="bundleInventoryType">Bundle inventory type</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.GetBundleInventoryTypeString(CMS.Ecommerce.BundleInventoryTypeEnum)">
            <summary>
            Returns BundleInventoryType string.
            </summary>
            <param name="bundleInventoryType">Bundle inventory type</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.UpdateInventory(CMS.Ecommerce.SKUInfo,System.Int32,CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Updates the inventory of specified SKU.
            </summary>
            <param name="sku">The sku.</param>
            <param name="inventoryChange">The inventory change.</param>
            <param name="cartItem">[Optional] The cart item for specified SKU. Inventory change will be added to cart item's OrderItemUnitCount, to handle multiple UpdateInventory requests.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.ClearUnusedFields(CMS.Ecommerce.SKUInfo)">
            <summary>
            Set unused fields in SKU to null (or default) value
            </summary>
            <param name="skuObj">SKU</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.ClearEcommerceLicense">
            <summary>
            Clear e-commerce license.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.UpdateSearchIndex(CMS.Ecommerce.SKUInfo)">
            <summary>
            Updates search index of depending nodes.
            </summary>
            <param name="skuObj">Product data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.SetDefaultTaxes(CMS.Ecommerce.SKUInfo)">
            <summary>
            Sets default tax class to a specified product according to its department.
            </summary>
            <param name="skuObj">Product data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUInfoProvider.SetLowestPriceToParent(CMS.Ecommerce.SKUInfo,System.Boolean)">
            <summary>
            Set to the parent the price of the cheapest product variant.
            </summary>
            <param name="variantInfo">Product variant</param>
            <param name="deleting">Flag indicate if product variant is being deleted</param>
        </member>
        <member name="P:CMS.Ecommerce.SKUInfoProvider.LicenseEcommerce">
            <summary>
            License limitation for ecommerce products number
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUOptionCategoryInfo">
            <summary>
            SKUOptionCategoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUOptionCategoryInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUOptionCategoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUOptionCategoryInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SKUOptionCategoryInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.SKUOptionCategoryInfo.SKUCategoryID">
            <summary>
            Unique identifier of the relationship between SKU and product option category.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUOptionCategoryInfo.SKUID">
            <summary>
            ID of the SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUOptionCategoryInfo.CategoryID">
            <summary>
            ID of the product option category.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUOptionCategoryInfo.AllowAllOptions">
            <summary>
            Indicates if all product options from the given product option category are allowed for the given SKU. By default it is True.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUOptionCategoryInfo.SKUCategoryOrder">
            <summary>
            Option category order within the parent product.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUOptionCategoryInfoProvider">
            <summary>
            Class providing SKUOptionCategoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.GetSKUOptionCategories">
            <summary>
            Returns the query for all relationships between categories and SKUs.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.GetSKUOptionCategoryInfo(System.Int32)">
            <summary>
            Returns specified relationship between the given category and SKU.
            </summary>
            <param name="relationshipId">Category-SKU relationship ID.</param>        
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.GetSKUOptionCategoryInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified category and SKU.
            </summary>
            <param name="categoryId">Category ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.SetSKUOptionCategoryInfo(CMS.Ecommerce.SKUOptionCategoryInfo)">
            <summary>
            Sets relationship between specified category and SKU.
            </summary>
            <param name="infoObj">Category-SKU relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.DeleteSKUOptionCategoryInfo(CMS.Ecommerce.SKUOptionCategoryInfo)">
            <summary>
            Deletes relationship between specified category and SKU.
            </summary>
            <param name="infoObj">Category-SKU relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.AddOptionCategoryToSKU(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified category and SKU.
            </summary>  
            <param name="categoryId">Category ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.RemoveOptionCategoryFromSKU(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified category and SKU.
            </summary>
            <param name="categoryId">Category ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.MoveSKUCategoryOrderUp(CMS.Ecommerce.SKUOptionCategoryInfo)">
            <summary>
            Moves SKU Category Order up (decreases its order).
            </summary>
            <param name="skuOptionCategory">SKU Option Category to move</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.MoveSKUCategoryOrderDown(CMS.Ecommerce.SKUOptionCategoryInfo)">
            <summary>
            Moves SKU Category Order down (increases its order).
            </summary>
            <param name="skuOptionCategory">SKU Option Category to move</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.GetSKUOptionCategoryInfoInternal(System.Int32)">
            <summary>
            Returns specified relationship between the given category and SKU.
            </summary>
            <param name="relationshipId">Category-SKU relationship Id.</param>            
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.GetSKUOptionCategoryInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified category and SKU.
            </summary>
            <param name="categoryId">Category ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.SetSKUOptionCategoryInfoInternal(CMS.Ecommerce.SKUOptionCategoryInfo)">
            <summary>
            Sets relationship between specified category and SKU.
            </summary>
            <param name="infoObj">Category-SKU relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.DeleteSKUOptionCategoryInfoInternal(CMS.Ecommerce.SKUOptionCategoryInfo)">
            <summary>
            Deletes relationship between specified category and SKU.
            </summary>
            <param name="infoObj">Category-SKU relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.MoveSKUCategoryOrderUpInternal(CMS.Ecommerce.SKUOptionCategoryInfo)">
            <summary>
            Moves SKU Category Order up (decreases its order).
            </summary>
            <param name="skuOptionCategory">SKU Option Category to move</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.MoveSKUCategoryOrderDownInternal(CMS.Ecommerce.SKUOptionCategoryInfo)">
            <summary>
            Moves SKU Category Order down (increases its order).
            </summary>
            <param name="skuOptionCategory">SKU Option Category to move</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUOptionCategoryInfoProvider.GetLastStatusOrderInternal(System.Int32)">
            <summary>
            Returns SKU category of last category item for skuCategoryId.
            </summary>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="T:CMS.Ecommerce.SKUTaxClassInfo">
            <summary>
            SKUTaxClassInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUTaxClassInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUTaxClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty SKUTaxClassInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SKUTaxClassInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.SKUTaxClassInfo.SKUID">
            <summary>
            ID of the SKU.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUTaxClassInfo.TaxClassID">
            <summary>
            ID of the tax class.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SKUTaxClassInfoProvider">
            <summary>
            Class providing SKUTaxClassInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.GetSKUTaxClasses">
            <summary>
            Returns the query for all relationships between SKUs and tax classes.
            </summary>        
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.GetSKUTaxClassInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified SKU and tax class.
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.SetSKUTaxClassInfo(CMS.Ecommerce.SKUTaxClassInfo)">
            <summary>
            Sets relationship between specified SKU and tax class.
            </summary>
            <param name="infoObj">SKU-tax class relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.DeleteSKUTaxClassInfo(CMS.Ecommerce.SKUTaxClassInfo)">
            <summary>
            Deletes relationship between specified SKU and tax class.
            </summary>
            <param name="infoObj">SKU-tax class relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.AddTaxClassToSKU(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified SKU and tax class.
            </summary>  
            <param name="taxClassId">Tax class ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.RemoveTaxClassFromSKU(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified SKU and tax class.
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.GetSKUTaxClassInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified SKU and tax class.
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.SetSKUTaxClassInfoInternal(CMS.Ecommerce.SKUTaxClassInfo)">
            <summary>
            Sets relationship between specified SKU and tax class.
            </summary>
            <param name="infoObj">SKU-tax class relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTaxClassInfoProvider.DeleteSKUTaxClassInfoInternal(CMS.Ecommerce.SKUTaxClassInfo)">
            <summary>
            Deletes relationship between specified SKU and tax class.
            </summary>
            <param name="infoObj">SKU-tax class relationship to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.SupplierInfo">
            <summary>
            SupplierInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SupplierInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SupplierInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfo.#ctor">
            <summary>
            Constructor - Creates an empty SupplierInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SupplierInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierFax">
            <summary>
            Fax of the supplier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierEmail">
            <summary>
            E-mail of the supplier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierID">
            <summary>
            ID of the supplier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierPhone">
            <summary>
            Phone of the supplier.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierDisplayName">
            <summary>
            Supplier display name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierName">
            <summary>
            Supplier code name.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierEnabled">
            <summary>
            Supplier enabled.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierGUID">
            <summary>
            Supplier GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SupplierInfo.SupplierSiteID">
            <summary>
            Supplier site ID. Set to 0 for global supplier.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.SupplierInfoProvider">
            <summary>
            Class providing SupplierInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSuppliers">
            <summary>
            Returns the query for all suppliers.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSupplierInfo(System.Int32)">
            <summary>
            Returns supplier with specified ID.
            </summary>
            <param name="supplierId">Supplier ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.SetSupplierInfo(CMS.Ecommerce.SupplierInfo)">
            <summary>
            Sets (updates or inserts) specified supplier.
            </summary>
            <param name="supplierObj">Supplier to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.DeleteSupplierInfo(CMS.Ecommerce.SupplierInfo)">
            <summary>
            Deletes specified supplier.
            </summary>
            <param name="supplierObj">Supplier to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.DeleteSupplierInfo(System.Int32)">
            <summary>
            Deletes supplier with specified ID.
            </summary>
            <param name="supplierId">Supplier ID</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSuppliers(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all suppliers for specified site.
            </summary>
            <param name="siteId">Site ID</param>   
            <param name="onlyEnabled">True - only enable suppliers are returned.
            False - both enabled and disabled suppliers are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSupplierInfo(System.String,System.String)">
            <summary>
            Returns suppliers with specified code name.
            </summary>
            <param name="supplierName">Supplier code name</param>        
            <param name="siteName">Supplier site name</param>        
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.IsUserAuthorizedToModifySupplier(CMS.Ecommerce.SupplierInfo,System.String,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to modify specific supplier. 
            For global supplier: 'EcommerceGlobalModify' permission is checked. 
            For site-specific supplier: 'EcommerceModify' OR 'ModifySuppliers' permission is checked.
            </summary>
            <param name="supplier">Supplier to be checked</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.IsUserAuthorizedToModifySupplier(System.Boolean,System.String,CMS.Base.IUserInfo)">
            <summary>
            Indicates if user is authorized to modify suppliers.
            </summary>
            <param name="global">For global suppliers (global = True): 'EcommerceGlobalModify' permission is checked. 
            For site-specific suppliers (global = False): 'EcommerceModify' OR 'ModifySuppliers' permission is checked.</param>        
            <param name="siteName">Site name</param>
            <param name="user">User to be checked</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSuppliersInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all suppliers matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSupplierInfoInternal(System.Int32)">
            <summary>
            Returns supplier with specified ID.
            </summary>
            <param name="supplierId">Supplier ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.SetSupplierInfoInternal(CMS.Ecommerce.SupplierInfo)">
            <summary>
            Sets (updates or inserts) specified supplier.
            </summary>
            <param name="supplierObj">Supplier to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.DeleteSupplierInfoInternal(CMS.Ecommerce.SupplierInfo)">
            <summary>
            Deletes specified supplier.
            </summary>
            <param name="supplierObj">Supplier to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSuppliersInternal(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of all suppliers for specified site.
            </summary>
            <param name="siteId">Site ID</param>   
            <param name="onlyEnabled">True - only enable suppliers are returned.
            False - both enabled and disabled suppliers are returned.</param>
        </member>
        <member name="M:CMS.Ecommerce.SupplierInfoProvider.GetSupplierInfoInternal(System.String,System.String)">
            <summary>
            Returns suppliers with specified code name.
            </summary>
            <param name="supplierName">Supplier code name</param>        
            <param name="siteName">Supplier site name</param>        
        </member>
        <member name="T:CMS.Ecommerce.TaxClassCountryInfo">
            <summary>
            TaxClassCountryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.TaxClassCountryInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.TaxClassCountryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfo.#ctor">
            <summary>
            Constructor - Creates an empty TaxClassCountryInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new TaxClassCountryInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassCountryInfo.TaxClassCountryID">
            <summary>
            Tax class - country relationship ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassCountryInfo.TaxValue">
            <summary>
            Value of the tax.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassCountryInfo.CountryID">
            <summary>
            ID of the country.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassCountryInfo.TaxClassID">
            <summary>
            ID of the tax class.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassCountryInfo.IsFlatValue">
            <summary>
            Indicates whether the value is flat or not.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.TaxClassCountryInfoProvider">
            <summary>
            Class providing TaxClassCountryInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.GetTaxClassCountries">
            <summary>
            Returns the query for all relationships between tax classes and countries.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.GetTaxClassCountryInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified tax class and country.
            </summary>
            <param name="countryId">Country ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.SetTaxClassCountryInfo(CMS.Ecommerce.TaxClassCountryInfo)">
            <summary>
            Sets relationship between specified tax class and country.
            </summary>
            <param name="infoObj">Tax class-country relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.DeleteTaxClassCountryInfo(CMS.Ecommerce.TaxClassCountryInfo)">
            <summary>
            Deletes relationship between specified tax class and country.
            </summary>
            <param name="infoObj">Tax class-country relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.RemoveCountryTaxValue(System.Int32,System.Int32)">
            <summary>
            Removes tax value defined for specified country. 
            </summary>
            <param name="countryId">Country ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.GetCountriesAndTaxValues(System.Int32)">
            <summary>
            Returns dataset with countries and their values of the specified tax. 
            This method is used in the administration user interface when configuring values of the specified tax for all countries.
            </summary>
            <param name="classId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.CopyCountryTaxes(System.Int32,System.Int32)">
            <summary>
            Copies country-specific tax values from global another country.
            </summary>
            <param name="srcTaxClassId">ID of the tax class used as source</param>
            <param name="dstTaxClassId">ID of the tax class used as destination</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.RecalculateCountryTaxes(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates country-dependent value of tax class using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.GetTaxClassCountryInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified tax class and country.
            </summary>
            <param name="countryId">Country ID</param>
            <param name="taxClassId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.SetTaxClassCountryInfoInternal(CMS.Ecommerce.TaxClassCountryInfo)">
            <summary>
            Sets relationship between specified tax class and country.
            </summary>
            <param name="infoObj">Tax class-country relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.DeleteTaxClassCountryInfoInternal(CMS.Ecommerce.TaxClassCountryInfo)">
            <summary>
            Deletes relationship between specified tax class and country.
            </summary>
            <param name="infoObj">Tax class-country relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.GetCountriesAndTaxValuesInternal(System.Int32)">
            <summary>
            Returns dataset with countries and their values of the specified tax. 
            This method is used in the administration user interface when configuring values of the specified tax for all countries.
            </summary>
            <param name="classId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.RecalculateCountryTaxesInternal(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates country-dependent value of tax class using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassCountryInfoProvider.CopyCountryTaxesInternal(System.Int32,System.Int32)">
            <summary>
            Copies country-specific tax values from global another country.
            </summary>
            <param name="srcTaxClassId">ID of the tax class used as source</param>
            <param name="dstTaxClassId">ID of the tax class used as destination</param>
        </member>
        <member name="T:CMS.Ecommerce.TaxClassInfo">
            <summary>
            TaxClassInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.TaxClassInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.TaxClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.CopyDataFrom(CMS.Ecommerce.TaxClassInfo)">
            <summary>
            Fills data properties with values from given template.
            </summary>
            <param name="taxClass">Template to copy data from</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty TaxClassInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new TaxClassInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassDisplayName">
            <summary>
            Display name of the tax class.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassID">
            <summary>
            ID of the tax class.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassName">
            <summary>
            Code name of the tax class.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassZeroIfIDSupplied">
            <summary>
            Zero tax if tax ID is supplied.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassGUID">
            <summary>
            TaxClass GUID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassInfo.TaxClassSiteID">
            <summary>
            Tax class site ID. Set to 0 for global tax class.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.TaxClassInfoProvider">
            <summary>
            Class providing TaxClassInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClasses">
            <summary>
            Returns the query for all tax classes.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClassInfo(System.Int32)">
            <summary>
            Returns tax class with specified ID.
            </summary>
            <param name="classId">Tax class ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClassInfo(System.String,System.String)">
            <summary>
            Returns tax class with specified name.
            </summary>
            <param name="className">Tax class name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.SetTaxClassInfo(CMS.Ecommerce.TaxClassInfo)">
            <summary>
            Sets (updates or inserts) specified tax class.
            </summary>
            <param name="classObj">Tax class to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.DeleteTaxClassInfo(CMS.Ecommerce.TaxClassInfo)">
            <summary>
            Deletes specified tax class.
            </summary>
            <param name="classObj">Tax class to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.DeleteTaxClassInfo(System.Int32)">
            <summary>
            Deletes tax class with specified ID.
            </summary>
            <param name="classId">Tax class ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClasses(System.Int32)">
            <summary>
            Returns dataset of all tax classes for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetSKUTaxClasses(System.Int32)">
            <summary>
            Returns DataSet with all the tax classes that are assigned to the specified product.
            </summary>
            <param name="skuId">SKU ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetDepartmentTaxClasses(System.Int32)">
            <summary>
            Returns DataSet with all the tax classes that are assigned to the specified department.
            </summary>
            <param name="departmentId">Department ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxes(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Returns DataSet with all the taxes that are applied to the specified product and their values according to the specified country, state and zip code.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="stateId">State ID</param>
            <param name="countryId">Country ID</param>  
            <param name="zipCode">ZIP code - for later use, not implemented yet.</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.ApplyTax(System.Double,System.Double,System.Boolean)">
            <summary>
            Returns the modified price after the specified tax is applied.
            </summary>
            <param name="price">Price the tax should be applied to</param>
            <param name="taxValue">Tax value, either flat or relative</param>
            <param name="isFlat">True - tax value is flat, False - tax value is relative</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxValue(System.Double,System.Double,System.Boolean)">
            <summary>
            Returns calculated tax based on the product price and tax type.
            </summary>
            <param name="price">Price the tax should be calculated from</param>
            <param name="taxValue">Tax value</param>
            <param name="isFlat">
            True - tax value is flat (both price and tax value must be expressed in the same currency to obtain correct result), 
            False - tax value is relative (currency of the price is not important).</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.CopyFromGlobal(System.Int32)">
            <summary>
            Copies site-specific tax class options from global tax class list.
            </summary>
            <param name="siteId">Id of the site for which new tax classes are to be created</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.RecalculateTaxes(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates tax class values (values for countries and states) using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxes(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns DataSet with all taxes which should be applied the shopping cart items.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetShippingTaxes(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns DataSet with all taxes which should be applied to the shopping cart shipping option.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxes(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns list of all taxes which should be applied to the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClassInfoInternal(System.Int32)">
            <summary>
            Returns tax class with specified ID.
            </summary>
            <param name="classId">Tax class ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClassInfoInternal(System.String,System.String)">
            <summary>
            Returns tax class with specified name.
            </summary>
            <param name="className">Tax class name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.SetTaxClassInfoInternal(CMS.Ecommerce.TaxClassInfo)">
            <summary>
            Sets (updates or inserts) specified tax class.
            </summary>
            <param name="classObj">Tax class to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.DeleteTaxClassInfoInternal(CMS.Ecommerce.TaxClassInfo)">
            <summary>
            Deletes specified tax class.
            </summary>
            <param name="classObj">Tax class to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxClassesInternal(System.Int32)">
            <summary>
            Returns dataset of all tax classes for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetSKUTaxClassesInternal(System.Int32)">
            <summary>
            Returns DataSet with all the taxes that are assigned to the specified product.
            </summary>
            <param name="skuId">SKU ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetDepartmentTaxClassesInternal(System.Int32)">
            <summary>
            Returns DataSet with all the taxes that are assigned to the specified department.
            </summary>
            <param name="departmentId">Department ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxesInternal(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Returns DataSet with all the taxes that are applied to the specified product and their values according to the specified country, state and zip code.
            </summary>
            <param name="skuId">SKU ID</param>
            <param name="stateId">State ID</param>
            <param name="countryId">Country ID</param>  
            <param name="zipCode">ZIP code - for later use, not implemented yet.</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxValueInternal(System.Double,System.Double,System.Boolean)">
            <summary>
            Returns tax value based on the product price and tax type.
            </summary>
            <param name="price">Price the tax should be calculated from</param>
            <param name="taxValue">Tax value</param>
            <param name="isFlat">True - tax value is flat, False - tax value is relative</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.ApplyTaxInternal(System.Double,System.Double,System.Boolean)">
            <summary>
            Returns the modified price after the specified tax is applied.
            </summary>
            <param name="price">Price the tax should be applied to</param>
            <param name="taxValue">Tax value, either flat or relative</param>
            <param name="isFlat">True - tax value is flat, False - tax value is relative</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.CopyFromGlobalInternal(System.Int32)">
            <summary>
            Copies site-specific tax class options from global tax class list.
            </summary>
            <param name="siteId">Id of the site for which new tax classes are to be created</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.RecalculateTaxesInternal(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates tax class values (values for countries and states) using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxesInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns DataSet with all taxes which should be applied the shopping cart items.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetShippingTaxesInternal(CMS.Ecommerce.ShoppingCartInfo)">
            <summary>
            Returns DataSet with all taxes which should be applied to the shopping cart shipping option.
            </summary>
            <param name="cart">Shopping cart</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetTaxesInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Returns list of all taxes which should be applied to the specified shopping cart item.
            </summary>
            <param name="item">Shopping cart item</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetSKUIDToGetTaxesInternal(CMS.Ecommerce.ShoppingCartItemInfo)">
            <summary>
            Gets the right SKUID to get taxes from. For variants and non-product options it is parent product
            </summary>
            <param name="item">Shopping cart item</param>        
        </member>
        <member name="M:CMS.Ecommerce.TaxClassInfoProvider.GetItemTaxClassInternal(System.Data.DataRow)">
            <summary>
            Returns ITaxClassInfo object created from the given data row.
            </summary>
            <param name="dr">Data row with the tax calculated data. Names of data row columns: TaxClassID, TaxClassDisplayName, TaxClassZeroIfIDSupplied, TaxValue, TaxIsFlat, TaxIsGlobal</param>        
        </member>
        <member name="T:CMS.Ecommerce.TaxClassStateInfo">
            <summary>
            TaxClassStateInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.TaxClassStateInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.TaxClassStateInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfo.#ctor">
            <summary>
            Constructor - Creates an empty TaxClassStateInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new TaxClassStateInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassStateInfo.TaxClassStateID">
            <summary>
            Tax class - state relationship ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassStateInfo.TaxValue">
            <summary>
            Value of the tax.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassStateInfo.TaxClassID">
            <summary>
            ID of the tax class.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassStateInfo.IsFlatValue">
            <summary>
            Indicates whether the value is flat or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.TaxClassStateInfo.StateID">
            <summary>
            ID of the state.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.TaxClassStateInfoProvider">
            <summary>
            Class providing TaxClassStateInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.GetTaxClassStates">
            <summary>
            Returns the query for all relationships between tax classes and states.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.GetTaxClassStateInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified tax class and state.
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="stateId">State ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.SetTaxClassStateInfo(CMS.Ecommerce.TaxClassStateInfo)">
            <summary>
            Sets relationship between specified tax class and state.
            </summary>
            <param name="infoObj">Tax class-state relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.DeleteTaxClassStateInfo(CMS.Ecommerce.TaxClassStateInfo)">
            <summary>
            Deletes relationship between specified tax class and state.
            </summary>
            <param name="infoObj">Tax class-state relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.RemoveStateTaxValue(System.Int32,System.Int32)">
            <summary>
            Removes tax value defined for specified state. 
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="stateId">State ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.RecalculateStateTaxes(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates state-dependent value of tax class using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.GetStatesAndTaxValues(System.Int32,System.Int32)">
            <summary>
            Returns dataset with states and their values of the specified tax. 
            This method is used in the administration user interface when configuring values of the specified tax for all states.
            </summary>
            <param name="classId">Tax class ID</param>
            <param name="countryId">Country ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.CopyStateTaxes(System.Int32,System.Int32)">
            <summary>
            Copies state-specific tax values from another tax class.
            </summary>
            <param name="srcTaxClassId">Id of the tax class used as source</param>
            <param name="dstTaxClassId">Id of the tax class used as destination</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.CopyStateTaxes(System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies state-specific tax values from another country.
            </summary>
            <param name="srcTaxClassId">Id of the tax class used as source</param>
            <param name="dstTaxClassId">Id of the tax class used as destination</param>
            <param name="countryId">Id of the country which states should be copied</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.GetTaxClassStateInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified tax class and state.
            </summary>
            <param name="taxClassId">Tax class ID</param>
            <param name="stateId">State ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.SetTaxClassStateInfoInternal(CMS.Ecommerce.TaxClassStateInfo)">
            <summary>
            Sets relationship between specified tax class and state.
            </summary>
            <param name="infoObj">Tax class-state relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.DeleteTaxClassStateInfoInternal(CMS.Ecommerce.TaxClassStateInfo)">
            <summary>
            Deletes relationship between specified tax class and state.
            </summary>
            <param name="infoObj">Tax class-state relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.RecalculateStateTaxesInternal(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates state-dependent value of tax class using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.GetStatesAndTaxValuesInternal(System.Int32,System.Int32)">
            <summary>
            Returns dataset with states and their values of the specified tax. 
            This method is used in the administration user interface when configuring values of the specified tax for all states.
            </summary>
            <param name="classId">Tax class ID</param>
            <param name="countryId">Country ID</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.CopyStateTaxesInternal(System.Int32,System.Int32)">
            <summary>
            Copies state-specific tax values from another tax class.
            </summary>
            <param name="srcTaxClassId">Id of the tax class used as source</param>
            <param name="dstTaxClassId">Id of the tax class used as destination</param>
        </member>
        <member name="M:CMS.Ecommerce.TaxClassStateInfoProvider.CopyStateTaxesInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies state-specific tax values from another country.
            </summary>
            <param name="srcTaxClassId">Id of the tax class used as source</param>
            <param name="dstTaxClassId">Id of the tax class used as destination</param>
            <param name="countryId">Id of the country which states should be copied</param>
        </member>
        <member name="T:CMS.Ecommerce.UserDepartmentInfo">
            <summary>
            UserDepartmentInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.UserDepartmentInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.UserDepartmentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserDepartmentInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserDepartmentInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.UserDepartmentInfo.UserID">
            <summary>
            ID of the user.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.UserDepartmentInfo.DepartmentID">
            <summary>
            ID of the department.
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.UserDepartmentInfoProvider">
            <summary>
            Class providing UserDepartmentInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.GetUserDepartments">
            <summary>
            Returns the query for all relationships between users and departments.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.GetUserDepartmentInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified user and department.
            </summary>
            <param name="userId">User ID</param>
            <param name="departmentId">Department ID</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.SetUserDepartmentInfo(CMS.Ecommerce.UserDepartmentInfo)">
            <summary>
            Sets relationship between specified user and department.
            </summary>
            <param name="infoObj">User-department relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.DeleteUserDepartmentInfo(CMS.Ecommerce.UserDepartmentInfo)">
            <summary>
            Deletes relationship between specified user and department.
            </summary>
            <param name="infoObj">User-department relationship to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.AddUserToDepartment(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified user and department.
            </summary>  
            <param name="departmentId">Department ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.RemoveUserFromDepartment(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified user and department.
            </summary>
            <param name="departmentId">Department ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.GetUserDepartmentInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified user and department.
            </summary>
            <param name="departmentId">Department ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.SetUserDepartmentInfoInternal(CMS.Ecommerce.UserDepartmentInfo)">
            <summary>
            Sets relationship between specified user and department.
            </summary>
            <param name="infoObj">User-department relationship to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.UserDepartmentInfoProvider.DeleteUserDepartmentInfoInternal(CMS.Ecommerce.UserDepartmentInfo)">
            <summary>
            Deletes relationship between specified user and department.
            </summary>
            <param name="infoObj">User-department relationship to be deleted</param>
        </member>
        <member name="T:CMS.Ecommerce.VolumeDiscountInfo">
            <summary>
            VolumeDiscountInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.VolumeDiscountInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.VolumeDiscountInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.#ctor">
            <summary>
            Constructor - Creates an empty VolumeDiscountInfo object.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new VolumeDiscountInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.ApplyTogetherWith(CMS.Ecommerce.IItemDiscount)">
            <summary>
            Returns false. Volume discounts are applied on result of previous discounts application.
            </summary>
            <param name="discount">Examined discount.</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,System.Double)">
            <summary>
            Calculates discount based on basePrice for given shoppingcart item.
            </summary>
            <param name="item">Item to apply discount to.</param>
            <param name="basePrice">Base price to apply discount to. It is the item price with all previous discounts applied.</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountID">
            <summary>
            ID of the discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountValue">
            <summary>
            Value of the discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountMinCount">
            <summary>
            Minimal number of objects for the discount to be applied.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountSKUID">
            <summary>
            ID of the SKU for which the discount is applied.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountIsFlatValue">
            <summary>
            Indicates whether the discount is flat or not.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountGUID">
            <summary>
            GUID of the discount.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.VolumeDiscountLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountType">
            <summary>
            Discount type. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountID">
            <summary>
            Discount identifier. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountDisplayName">
            <summary>
            Discount display name. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountValue">
            <summary>
            Discount value. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountIsFlat">
            <summary>
            True - discount value is flat, False - discount value is relative. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountIsGlobal">
            <summary>
            True - says that discounts value is set in global main currency, False - says that discounts value is set in site main currency. 
            Takes effect only if discount value is flat. Used for discount calculation in the shopping cart.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.VolumeDiscountInfo.ItemDiscountedUnits">
            <summary>
            Number of units the discount should be applied to
            </summary>
        </member>
        <member name="T:CMS.Ecommerce.VolumeDiscountInfoProvider">
            <summary>
            Class providing VolumeDiscountInfo management.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscounts">
            <summary>
            Returns the query for all volume discounts.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscountInfo(System.Int32)">
            <summary>
            Returns volume discount with specified ID.
            </summary>
            <param name="discountId">Volume discount ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.SetVolumeDiscountInfo(CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Sets (updates or inserts) specified volume discount.
            </summary>
            <param name="discountObj">Volume discount to be set</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.DeleteVolumeDiscountInfo(CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Deletes specified volume discount.
            </summary>
            <param name="discountObj">Volume discount to be deleted</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.DeleteVolumeDiscountInfo(System.Int32)">
            <summary>
            Deletes volume discount with specified ID.
            </summary>
            <param name="discountId">Volume discount ID</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscounts(System.Int32)">
            <summary>
            Returns query for volume discounts related to specified product(SKU).
            </summary>
            <param name="skuId">SKU id</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscountInfo(System.Int32,System.Int32)">
            <summary>
            Returns corresponding VolumeDiscountInfo structure for the specified SKU and SKU units, if no volume discount found returns null.
            </summary>        
            <param name="skuId">SKU id</param>
            <param name="units">SKU units</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.RecalculateVolumeDiscounts(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates volume discount values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.ValidateVolumeDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Returns True if volume discount is valid and can be applied to the specified shopping cart item, otherwise returns False.
            </summary>
            <param name="item">Shopping cart item to which the volume discount should be applied</param>
            <param name="discount">Volume discount data</param>        
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.CalculateUnitDiscount(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.VolumeDiscountInfo,System.Double)">
            <summary>
            Validates volume discount and calculates shopping cart item unit discount after the volume discount is applied.
            </summary>
            <param name="item">Shopping cart item to which the volume discount should be applied</param>
            <param name="discount">Volume discount data</param>
            <param name="basePrice">Price to apply discount to.</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscountInfoInternal(System.Int32)">
            <summary>
            Returns volume discount with specified ID.
            </summary>
            <param name="discountId">Volume discount ID</param>        
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.SetVolumeDiscountInfoInternal(CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Sets (updates or inserts) specified volume discount.
            </summary>
            <param name="discountObj">Volume discount to be set</param>        
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.DeleteVolumeDiscountInfoInternal(CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Deletes specified volume discount.
            </summary>
            <param name="discountObj">Volume discount to be deleted</param>        
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscountsInternal(System.Int32)">
            <summary>
            Returns query for volume discounts related to specified product(SKU). Records are ordered by VolumeDiscountMinCount field.
            </summary>
            <param name="skuId">SKU id</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.GetVolumeDiscountInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns corresponding VolumeDiscountInfo structure for the specified SKU and SKU units, if no volume discount found returns null.
            </summary>        
            <param name="skuId">SKU id</param>
            <param name="units">SKU units</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.RecalculateVolumeDiscountsInternal(System.Single,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Recalculates volume discount values using the given coefficient.
            </summary>
            <param name="coefficient">Factor by which values are recalculated</param>        
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="flatValues">Indicates if flat values should be recalculated</param>
            <param name="relativeValues">Indicates if relative values should be recalculated</param>
            <param name="where">Additional WHERE condition</param>
            <param name="siteId">ID of the site which records are to be recalculated</param>
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.ValidateVolumeDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.VolumeDiscountInfo)">
            <summary>
            Returns True if volume discount is valid and can be applied to the specified shopping cart item, otherwise returns False.
            </summary>
            <param name="item">Shopping cart item to which the volume discount should be applied</param>
            <param name="discount">Volume discount data</param>        
        </member>
        <member name="M:CMS.Ecommerce.VolumeDiscountInfoProvider.CalculateUnitDiscountInternal(CMS.Ecommerce.ShoppingCartItemInfo,CMS.Ecommerce.VolumeDiscountInfo,System.Double)">
            <summary>
            Validates volume discount and calculates shopping cart item unit discount after the volume discount is applied.
            </summary>
            <param name="item">Shopping cart item to which the volume discount should be applied</param>
            <param name="discount">Volume discount data</param>
            <param name="basePrice">Price to apply discount to.</param>
        </member>
        <member name="T:CMS.Ecommerce.SKUTreeNode">
            <summary>
            Class representing document connected with product
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUTreeNode.mPrioritizedProperties">
            <summary>
            List of properties which should be prioritized in the macro controls (Intellisense, MacroTree).
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUTreeNode.mSKU">
            <summary>
            Inner SKU info
            </summary>
        </member>
        <member name="F:CMS.Ecommerce.SKUTreeNode.mRegisteredProperties">
            <summary>
            Registered properties
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.#ctor">
            <summary>
            Empty constructor, allowed only if Initialize is called immediately after it.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.#ctor(System.String)">
            <summary>
            Base constructor for inherited classes and internal purposes
            </summary>
            <param name="className">Class name of the document</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.GetPropertyType(System.String)">
            <summary>
            Gets the type of the given property
            </summary>
            <param name="columnName">Property name</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.SetValue(System.String,System.Object)">
            <summary>
            Sets value of the specified node column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specific column
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.ItemChanged(System.String)">
            <summary>
            Returns true if the item on specified column name changed.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.GetOriginalValue(System.String)">
            <summary>
            Gets the original value of the given column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.ResetChanges(System.Boolean)">
            <summary>
            Resets the object changes and keeps the new values as unchanged.
            </summary>
            <param name="asUnchanged">If true, the changed columns won't contain anything. If false, the previous values are discarded, but all the columns will be marked as changed.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.RevertChanges">
            <summary>
            Reverts the object changes and keeps the new values as unchanged.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.MakeComplete(System.Boolean)">
            <summary>
            Makes the object data complete.
            </summary>
            <param name="loadFromDb">If true, the data to complete the object is loaded from database</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.DataChanged(System.String)">
            <summary>
            Returns true if the object changed.
            </summary>
            <param name="excludedColumns">List of columns excluded from change (separated by ';')</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.AddTypeSpecificColumns(System.Collections.Generic.List{System.String})">
            <summary>
            Adds the columns that are specific to the document type
            </summary>
            <param name="names">List of column names</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.Clone(System.Boolean)">
            <summary>
            Creates a clone of the object
            </summary>
            <param name="clear">If true, the object is cleared to be able to create new object</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.CopyDataTo(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.CopyNodeDataSettings)">
            <summary>
            Copies the node data to the destination node according to the settings. 
            </summary>
            <param name="destNode">Destination node</param>
            <param name="settings">Copy settings</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.LoadFromDataRow(System.Data.DataRow)">
            <summary>
            Loads the object data from given DataRow.
            </summary>
            <param name="dr">Data row with the data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.LoadFromDataContainer(CMS.Base.IDataContainer)">
            <summary>
            Loads the object data from given data container.
            </summary>
            <param name="data">Container with the data</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.InsertTreeNodeData(CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts the CMS_Tree part of the document node
            </summary>
            <param name="parent">Parent node</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.UpdateTreeNodeData">
            <summary>
            Updates the CMS_Tree part of the document node
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.MapDocumentName">
            <summary>
            Maps the document name based on the document type settings
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.NodeSharesSKUWithOtherNode(CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns true when node is bound to the same SKU as some other non-link node does.
            </summary>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.RemoveDocumentDependencies(CMS.DocumentEngine.DeleteDocumentSettings)">
            <summary>
            Handles removing of dependencies for product document.
            </summary>
            <param name="settings">Settings used for deleting documents</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.CreateDefaultSKU">
            <summary>
            Creates default E-Commerce SKU for the document if configured, does not save the document. Returns true on success, false on error or null when module entry not found.
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.SynchronizeFields(System.Boolean,System.Boolean)">
            <summary>
            Ensures the same values in document fields and their mapped SKU fields plus ensures the same values in DocumentName, DocumentSKUName and SKUName fields. 
            Please note that SKU fields are updated only if it is possible, i.e. it is either default culture version or SKU field is empty.
            </summary>
            <param name="fromDocumentToSKU">True (default) - fields are synchronized in direction from document to SKU, False - fields are synchronized in direction from SKU to document</param>
            <param name="reverseSynchronizationIfEmpty">True (default) - field is synchronized reversely to the direction given by fromDocumentToSKU parameter if source field of the synchronization is empty, 
            False - all fields are always synchronized in direction given by the fromDocumentToSKU parameter</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.SynchronizeFields">
            <summary>
            Ensures the same values in document fields and their mapped SKU fields plus ensures the same values in DocumentName, DocumentSKUName and SKUName fields. 
            Please note that SKU fields are updated only if it is possible, i.e. it is either default culture version or SKU field is empty.
            </summary>      
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.SetSKU">
            <summary>
            Inserts or updates the internal SKU object
            </summary>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.SetSKUColumn(System.String,System.Object,System.Boolean)">
            <summary>
            Sets value of the specified SKU column and its document paired column if any.
            </summary>
            <param name="column">SKU column to be set</param>
            <param name="value">Value to be used</param>
            <param name="fromDocument">Indicates if the given value comes from the corresponding document mapped column</param>               
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.EnsureSKUColumnValue(System.String,System.Object,System.Boolean)">
            <summary>
            For the given SKU field ensures correct value coming from its mapped document field. 
            </summary>
            <param name="columnName">Name of the SKU field</param>
            <param name="value">Value coming from corresponding mapped document field.</param>
            <param name="convert">Indicates if type conversion from document field type to SKU field type should be performed</param>  
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.GetMappedDocumentColumn(System.String)">
            <summary>
            Returns name of the document field which is mapped to the given SKU field. If there is no document field mapped to the given SKU field, returns null.
            </summary>
            <param name="skuColumn">SKU column name</param> 
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.GetMappedSKUColumn(System.String)">
            <summary>
            Returns name of the SKU field which is mapped to the given document field. If there is no SKU field mapped to the given document field, returns null.
            </summary>
            <param name="docColumn">Document column name</param>         
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.SetPairedSKUColumn(System.String,System.Object)">
            <summary>
            Sets SKU paired column of the given document column. Returns True if paired column is found, otherwise returns False.
            Paired columns: (DocumentSKUName or DocumentName -> SKUName, DocumentSKUDescription -> SKUDescription, DocumentSKUShortDescription -> SKUShortDescription)
            </summary>
            <param name="docColumn">Document column</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.SetPairedDocumentColumns(System.String,System.Object)">
            <summary>
            Sets all document paired columns of the given SKU column. Returns True if paired column is found, otherwise returns False.
            Paired columns: (SKUName -> DocumentSKUName and DocumentName, SKUDescription -> DocumentSKUDescription, SKUShortDescription -> DocumentSKUShortDescription)
            </summary>
            <param name="skuColumn">SKU column</param> 
            <param name="value">SKU column value</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.SynchronizeFromSKUColumn(System.String,System.String)">
            <summary>
            Gets value from the given SKU column and synchronizes its value to the mapped document column. 
            Alternatively synchronizes in reverse direction, i.e. from the given document column, in case SKU column value is empty. 
            </summary>
            <param name="skuColumn">SKU column name which is used as a source of the synchronization.</param>
            <param name="docColumn">Document column name which is used as an alternative source of the synchronization in case SKU column value is empty.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.SynchronizeFromDocumentColumn(System.String,System.String)">
            <summary>
            Gets value from the given document column and synchronizes its value to the mapped SKU column. 
            Alternatively synchronizes in reverse direction, i.e. from the given SKU column, in case document column value is empty. 
            </summary>
            <param name="docColumn">Document column name which is used as a source of the synchronization.</param>
            <param name="skuColumn">SKU column name which is used as an alternative source of the synchronization in case document column value is empty.</param>
        </member>
        <member name="M:CMS.Ecommerce.SKUTreeNode.EnsureConsistency">
            <summary>
            Ensures data consistency.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUTreeNode.DocumentSKUName">
            <summary>
            Document SKU name
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUTreeNode.DocumentSKUDescription">
            <summary>
            Document SKU description
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUTreeNode.DocumentSKUShortDescription">
            <summary>
            Document SKU short description
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUTreeNode.RegisteredProperties">
            <summary>
            Registered properties
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUTreeNode.PrioritizedProperties">
            <summary>
            List of prioritized properties.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUTreeNode.SKU">
            <summary>
            SKU class - Custom document fields
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUTreeNode.NodeSKUID">
            <summary>
            E-commerce SKU (product) ID.
            </summary>
        </member>
        <member name="P:CMS.Ecommerce.SKUTreeNode.HasChanged">
            <summary>
            Returns true if the object changed.
            </summary>   
        </member>
        <member name="P:CMS.Ecommerce.SKUTreeNode.IsComplete">
            <summary>
            Returns true if the object changed.
            </summary>       
        </member>
        <member name="P:CMS.Ecommerce.SKUTreeNode.ProductDataClass">
            <summary>
            Data class configuration of the product document.
            </summary>
        </member>
    </members>
</doc>
