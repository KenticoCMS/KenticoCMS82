<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.StrandsRecommender</name>
    </assembly>
    <members>
        <member name="T:CMS.StrandsRecommender.StrandsCatalogFeedSecurity">
            <summary>
            Handles credentials verifying for Strands Recommender catalog.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeedSecurity.CheckCredentials(System.Web.HttpContext)">
            <summary>
            Checks whether user is properly authenticated with username and password set in Strands settings. If user is not
            authenticated and
            username or password are set in Strands settings, user is prompted to authenticate and false is returned.
            </summary>
            <param name="context">HTTP context</param>
            <returns>True if authentication is disabled or user is properly authenticated; otherwise false</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeedSecurity.SetUnauthorizedStatus">
            <summary>
            Checks whether current status code is 319. If true, sets response status code to 401 Unauthorized, so the browser will prompt user to enter credentials.
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.IStrandsCatalogCategoryMapper">
            <summary>
            Maps properties of the document to the ones used in the Strands catalog feed and other places.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.IStrandsCatalogCategoryMapper.GetItemCategory(CMS.DocumentEngine.TreeNode)">
            <summary>
            Retrieves property which will be used as category field in the Strands catalog feed.
            </summary>
            <param name="catalogItem">Document</param>
            <returns>Category field</returns>
        </member>
        <member name="T:CMS.StrandsRecommender.DefaultStrandsCatalogCategoryMapper">
            <summary>
            Default implementation of <see cref="T:CMS.StrandsRecommender.IStrandsCatalogCategoryMapper"/> which returns NodeClassID as category field.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.DefaultStrandsCatalogCategoryMapper.GetItemCategory(CMS.DocumentEngine.TreeNode)">
            <summary>
            Retrieves NodeClassID which will be used as category field in the Strands catalog feed.
            </summary>
            <param name="catalogItem">Document</param>
            <returns>Category field</returns>
            <exception cref="T:System.ArgumentNullException">Parameter <paramref name="catalogItem"/> is null</exception>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsCatalogPropertiesMapper">
            <summary>
            Methods in this class map properties of the document to the ones used in the Strands catalog feed.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogPropertiesMapper.GetItemID(CMS.DocumentEngine.TreeNode)">
            <summary>
            Retrieves document NodeID which will be used as ItemID in the Strands catalog feed.
            Behavior of this method can't be changed because implementation of Strands integration is dependent on it.
            </summary>
            <param name="catalogItem">Document</param>
            <returns>ID of the catalog item</returns>
            <exception cref="T:System.ArgumentNullException">Parameter <paramref name="catalogItem"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogPropertiesMapper.GetItemCategory(CMS.DocumentEngine.TreeNode)">
            <summary>
            Retrieves NodeClassID which will be used as category field in the Strands catalog feed.
            Returned value can be changed easily by using different implementation of IStrandsCatalogCategoryMapper.
            This can be done by calling ObjectFactory&lt;IStrandsCatalogCategoryMapper&gt;.SetDefaultObjectTypeTo&lt;NameOfDifferentImplementation&gt;() somewhere during Init phase.
            </summary>
            <param name="catalogItem">Document</param>
            <returns>Category field specified by implementation of <see cref="T:CMS.StrandsRecommender.IStrandsCatalogCategoryMapper"/></returns>
            <exception cref="T:System.ArgumentNullException">Parameter <paramref name="catalogItem"/> is null</exception>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsRecommenderModuleMetadata">
            <summary>
            Represents the Strands Recommender module metadata.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsRecommenderModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.SubscriberInfoMacroMethods">
            <summary>
            Macro methods working with SubscriberInfo and needed by Strands module.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.SubscriberInfoMacroMethods.GetStrandsUserID(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Finds Contact related to the Subscriber and returns its ContactGUID which uniquely identifies visitor when communicating with Strands. If Subscriber is not directly
            related to contact, contact with the same email as subscriber's is used.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsSetupCall">
            <summary>
            Loads settings related with automatic catalog upload, creates call data object and performs setup call to Strands Recommender.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSetupCall.DoWithDefaults">
            <summary>
            Updates Strands Recommender settings with automatic setup call. Uses values provided in settings or the default, hard-coded ones.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSetupCall.LogSetupCallResult(System.Threading.Tasks.Task{CMS.StrandsRecommender.StrandsSetupCallStatusCodeEnum})">
            <summary>
            Logs the setup call result
            </summary>
            <param name="task">Setup call task</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSetupCall.CreateDefaultSettingsData(System.String)">
            <summary>
            Creates new instance of StrandsSetupCallData and fills it with default values (the ones, that cannot be changed in settings).
            </summary>
            <param name="cultureSuffix">Culture suffix used in definition of field mappings</param>
            <returns>Instance of StrandsSetupCallData filled with predefined values</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSetupCall.LogSetupCallResult(CMS.StrandsRecommender.StrandsSetupCallStatusCodeEnum)">
            <summary>
            Handles setup call response and perform info/exception logging.
            </summary>
            <param name="response">Response given by Strands Recommender after setup call is performed</param>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsRecommenderHandlers">
            <summary>
            Contains handlers of the Strands recommendation module.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsRecommenderHandlers.NEWSLETTER_USERID_PLACEHOLDER">
            <summary>
            Placeholder to be replaced with macro generating recipient's contact GUID. This placeholder is located in the recommendation HTML received from the Strands web service.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsRecommenderHandlers.USERID_MACRO">
            <summary>
            Macro replacing placeholder specified by the <see cref="F:CMS.StrandsRecommender.StrandsRecommenderHandlers.NEWSLETTER_USERID_PLACEHOLDER"/> constant. This macro will generate ContactGUID of the email recipient when email is being sent.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsRecommenderHandlers.Init">
            <summary>
            Connects handlers to events.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsRecommenderHandlers.BindStrandsToPagePreRender(System.Object,System.EventArgs)">
            <summary>
            Bind RenderStrandsScripts method to page prerender event.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsRecommenderHandlers.RememberDelayedRendering(System.Object,System.EventArgs)">
            <summary>
            Remembers information that purchased or cart update events happened, so tracking script can be rendered later.
            </summary>
            <remarks>
            This is needed, because there comes a redirect after mentioned activities are performed. This means that HTTP response is 302 and is not rendered on the client side and thus JavaScript is not executed.
            Therefore information that event happened is stored to user's cookie and is retrieved later, when response is 200.
            </remarks>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsRecommenderHandlers.ReplaceStrandsPlaceholdersWithMacros(System.Object,CMS.Newsletters.ResolveMacrosEventArgs)">
            <summary>
            Changes placeholders located in the recommendation template received from the Strands to the actual macro which will be resolved to the recipient's contact GUID.
            This method replaces placeholder only if there is SubscriberInfo located in the MacroResolver's context under the name Subscriber.
            </summary>
            <remarks>
            <p>
            Another way to substitute REPLACE_WITH_RECIPIENT_USER_ID placeholder with the recipient's ContactGUID, would be to replace REPLACE_WITH_RECIPIENT_USER_ID with 
            the macro immediately after inserting recommendation code to the email content. This would be the easiest way, but unfortunately Strands API won't return
            correct image if links contain special macro characters ({, % or #) thus making editing recommendation in the WYSIWYG editor unusable. That's why REPLACE_WITH_RECIPIENT_USER_ID
            is left in the email content to the moment when email is actually being sent. Only then macro is inserted.
            </p>
            <p>
            REPLACE_WITH_RECIPIENT_USER_ID is also kept in the original link stored in the Newsletter_Link table and is resolved to the macro when click is being tracked
            in the LinkTracker class. If REPLACE_WITH_RECIPIENT_USER_ID would be replaced by the macro before changing original links to the tracking ones (by the 
            IssueHelper.AddTrackingLinks method), the Strands links wouldn't be tracked, because links with macros are not considered as valid.
            </p>
            </remarks>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsRecommenderHandlers.SetUnauthorizedStatus(System.Object,System.EventArgs)">
            <summary>
            Checks whether current status code is 319. If true, sets response status code to 401 Unauthorized, so the browser will prompt user to enter credentials.
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsEventsMemory">
            <summary>
            When it isn't right time to render Strands tracking event (for example the HTTP response status is 302, so JavaScripts wouldn't be executed), this class
            can remember the information about the event and when the time is right, it will provide information that event tracking is pending.
            </summary>
            <remarks>
            Class uses Cookies internally to remember pending events.
            This is needed, because there comes a redirect after items are purchased or shopping cart is updated. This means that HTTP response is 302 and is not rendered on the client side and thus JavaScript is not executed.
            Therefore information that event happened is stored to user's cookie and is retrieved later, when response is 200.
            </remarks>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsEventsMemory.RememberCartUpdateEvent">
            <summary>
            Stores information that cart update event should be rendered. After calling this method, <see cref="M:CMS.StrandsRecommender.StrandsEventsMemory.IsCartUpdateEventPending"/> method will return
            true once for the same user. Information will be stored in Cookies.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsEventsMemory.IsCartUpdateEventPending">
            <summary>
            Checks if cart update event should be rendered. This method returns true only once and after that assumes that event has been rendered.
            </summary>
            <returns>True if cart update event should be rendered</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsEventsMemory.RememberItemsPurchasedEvent(System.Int32)">
            <summary>
            Stores information that items purchased event should be rendered. After calling this method, <see cref="M:CMS.StrandsRecommender.StrandsEventsMemory.IsItemsPurchasedEventPending(System.Int32@)"/> method will return
            true once for the same user. Information will be stored in Cookies.
            </summary>
            <param name="lastOrderID">ID of the order which was made</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsEventsMemory.IsItemsPurchasedEventPending(System.Int32@)">
            <summary>
            Checks if item purchased event should be rendered. This method returns true only once and after that assumes that event has been rendered.
            </summary>
            <param name="lastOrderID">Output parameter which will be set to the value passed to the <see cref="M:CMS.StrandsRecommender.StrandsEventsMemory.RememberItemsPurchasedEvent(System.Int32)"/> method when storing information about pending event</param>
            <returns>True if cart update event should be rendered</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsEventsMemory.RememberEvent(System.String,System.IConvertible)">
            <summary>
            Stores information about pending event to the cookie.
            </summary>
            <param name="trackingEventCode">Event code</param>
            <param name="eventData">Associated data which will be stored and returned when <see cref="M:CMS.StrandsRecommender.StrandsEventsMemory.IsEventPending``1(System.String,``0@)"/> method succeeds. Has to implement IConvertible to be able to cast value to string with invariant culture</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsEventsMemory.IsEventPending``1(System.String,``0@)">
            <summary>
            Checks if the particular event is pending by checking data in the cookie. If this method returns true, it automatically removes data from cookie, so next time it returns false again.
            </summary>
            <typeparam name="TEventData">Type of associated data, has to implement IConvertible</typeparam>
            <param name="trackingEventCode">Code of the event</param>
            <param name="eventData">Associated data stored when event was set</param>
            <returns>True if event was pending, otherwise false</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsEventsMemory.GetTrackingEventCookieKey(System.String)">
            <summary>
            Gets key which will be used to store information about pending events.
            </summary>
            <param name="trackingEventCode">Code of the event</param>
            <returns>Generated key</returns>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsScriptGenerator">
            <summary>
            This class is able to generate JavaScript snippets which are required to be rendered on page in order to enable integration with Strands Recommender.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptGenerator.GetVisitedTrackingScript(System.String)">
            <summary>
            Returns script which logs "visited" event to the Strands Recommender.
            </summary>
            <param name="itemID">ID of the catalog item which is being visited. Must correspond to the IDs send through catalog feed</param>
            <returns>JavaScript code which logs "visited" event</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptGenerator.GetSearchedTrackingScript(System.String,System.String)">
            <summary>
            Returns script which logs "searched" event to the Strands Recommender.
            </summary>
            <param name="searchText">Text which was searched</param>
            <param name="itemID">ID of the catalog item which is being visited. Must correspond to the IDs send through catalog feed</param>
            <returns>Generated JavaScript</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptGenerator.GetUserLoggedTrackingScript(System.String)">
            <summary>
            Returns script which logs "userlogged" event to the Strands Recommender.
            This script indicates which user is browsing the web. This event needs to be logged at every page user visits (see http://recommender.strands.com/developers/javascript/#ulogin"/). 
            Strands can later associate this user ID with the ID of the newsletter recipient and show appropriate recommendations.
            </summary>
            <param name="userID">ID of the user (needs to be the same as ID which is placed at the newsletter email with recommendation)</param>
            <returns>Generated JavaScript</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptGenerator.GetUpdateShoppingCartTrackingScript(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns script which logs "updateschoppingcart" event to the Strands Recommender.
            </summary>
            <param name="itemsInCart">IDs of all items in shopping cart</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="itemsInCart"/> is null</exception>
            <returns>Generated JavaScript</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptGenerator.GetPurchasedTrackingScript(System.String,System.Collections.Generic.IEnumerable{CMS.StrandsRecommender.StrandsPurchasedEventData})">
            <summary>
            Returns script which logs "purchased" event to the Strands Recommender.
            </summary>
            <param name="orderID">ID of the order</param>
            <param name="orderData">Information about products which were purchased</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="orderData"/> is null</exception>
            <returns>Generated JavaScript</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptGenerator.GetLibraryIncludeScript">
            <summary>
            Returns script which includes Strands library file. Returned string contains html script tags.
            </summary>
            <returns>Generated JavaScript</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptGenerator.GetInitializationScript(System.String)">
            <summary>
            Returns script which starts execution of the Strands library. Must be included after Strands library.
            </summary>
            <param name="apiID">API ID of the connected Strands account</param>
            <returns>Generated JavaScript</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptGenerator.GetCustomizedRendererScript(System.String,System.String,System.String)">
            <summary>
            Returns code which registers custom rendering function and declaration of the rendering function. jQuery templates library has to be included in order for this code to work.
            </summary>
            <param name="jQueryTransformation">Code of the transformation which will be used to render recommendation</param>
            <param name="templateID">ID of the Strands template which will be rendered using custom transformation (i.e. HOME-1)</param>
            <param name="placementID">Client ID of the element where transformation will be rendered</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="jQueryTransformation"/>, <paramref name="templateID"/> or <paramref name="placementID"/> is null</exception>
            <returns>Generated JavaScript</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptGenerator.GetCultureSettingsScript(System.String)">
            <summary>
            Returns script which sets current culture, so correct item captions can be shown.
            </summary>
            <param name="cultureCode">Culture code, e.g. en-US</param>
            <returns>Generated JavaScript</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="cultureCode"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptGenerator.GetCurrencySettingsScript(System.String)">
            <summary>
            Returns script which sets current currency, so correct prices can be shown.
            </summary>
            <param name="currencyCode">Current currency, e.g. EUR</param>
            <returns>Generated JavaScript</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptGenerator.GetStrandsPushScript(System.Object)">
            <summary>
            Returns script which pushes data into StrandsTrack JavaScript array. This array is used
            to communicate with Strands library.
            </summary>
            <param name="parameters">Parameters which will be pushed into array. This will be serialized to JavaScript</param>
            <returns>Push script</returns>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsTrackingScriptsManager">
            <summary>
            Handles rendering Strands tracking scripts on the live site. This class is able to recognize which scripts shall be rendered and renders them if needed.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsTrackingScriptsManager.#ctor(System.Web.UI.Page,System.String)">
            <summary>
            Constructs Strands scripts delayed renderer. 
            </summary>
            <param name="page">Scripts will be rendered to this page</param>
            <param name="strandsApiID">API ID of the connected Strands account</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="page"/> or <paramref name="strandsApiID"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsTrackingScriptsManager.RenderStrandsScripts">
            <summary>
            Renders strands scripts for all supported Strands events. This method recognizes based on context which events shall be logged and renders apropriate scripts.
            This method must be called when the Session is ready (typically on the Page's PreRender event).
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsTrackingScriptsManager.RenderUserLoggedScript(CMS.StrandsRecommender.StrandsScriptRenderer)">
            <summary>
            Renders event indicating which user is browsing the web. This event needs to be logged at every page user visits (see http://recommender.strands.com/developers/javascript/#ulogin"/). 
            Strands can later associate this user ID with the ID of the newsletter recipient and show appropriate recommendations.
            User logged event is rendered only if current contact is known.
            </summary>
            <param name="strandsScriptRenderer">Renderer</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsTrackingScriptsManager.RenderItemVisitedScript(CMS.StrandsRecommender.StrandsScriptRenderer)">
            <summary>
            Renders JavaScript which tracks event when user visits product. 
            </summary>
            <param name="strandsScriptRenderer">Renderer</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsTrackingScriptsManager.RenderItemSearchedScript(CMS.StrandsRecommender.StrandsScriptRenderer)">
            <summary>
            Renders script tracking event when user opens product from the search results.
            Method finds out that user comes from search page by checking http referrer. If previous page was displaying search results, it had searchtext parameter in url.
            </summary>
            <param name="strandsScriptRenderer">Renderer</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsTrackingScriptsManager.RenderPurchasedScript(CMS.StrandsRecommender.StrandsScriptRenderer)">
            <summary>
            Tracks event when user places an order. All items in order are included as event parameters.
            </summary>
            <param name="strandsScriptRenderer">Renderer</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsTrackingScriptsManager.RenderUpdateShoppingCartScript(CMS.StrandsRecommender.StrandsScriptRenderer)">
            <summary>
            Render script tracking event when user updates his shopping cart (adds or removes a product).
            </summary>
            <param name="strandsScriptRenderer">Renderer</param>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsSetupCallData">
            <summary>
            Wraps all necessary data required for setup call performing.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsSetupCallData.ValidationToken">
            <summary>
            Validation token.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsSetupCallData.Version">
            <summary>
            Version sent to Strands Recommender. CMS build version should be used.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsSetupCallData.FeedActive">
            <summary>
            True if updating feed is enabled, false otherwise.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsSetupCallData.FeedFrequency">
            <summary>
            Frequency with which should be feed sending to the Strands Recommender.
            </summary>
            <remarks>
            Has to be in specific format {d|w|h}{\d+}.
            d stands for daily update, number has to be from interval 0-23 (eg. d0, d15, d23)
            w stands for weekly update, number has to be from interval 0-6 (mondays to sundays, eg. w0, w3, w6)
            h stands for hourly update, number has to be from interval 1-12 (every n hour, eg. h1, h7, h12)
            </remarks>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsSetupCallData.Type">
            <summary>
            Type parameter of setup call, 'kentico' value is required by Strands.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsSetupCallData.FeedUrl">
            <summary>
            Uri of product catalog feed.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsSetupCallData.Tracking">
            <summary>
            Events which should be tracked by Strands Recommender.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsSetupCallData.Fields">
            <summary>
            Contains pairs for mapping values from feed to the Strands Recommender.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsSetupCallData.Pagination">
            <summary>
            Number of products per page.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsSetupCallData.CatalogFeedUsername">
            <summary>
            Username required to access catalog feed page.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsSetupCallData.CatalogFeedPassword">
            <summary>
            Password required to access catalog feed page.
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsSetupCallStatusCodeEnum">
            <summary>
            Enumeration describes status code returned by Strands portal in API setup calls.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsSetupCallStatusCodeEnum.UnknownStatus">
            <summary>
            Occurs when no status code is present in document.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsSetupCallStatusCodeEnum.Success">
            <summary>
            Success response.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsSetupCallStatusCodeEnum.WrongApiId">
            <summary>
            Wrong api ID in setup call request.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsSetupCallStatusCodeEnum.MissingParameter">
            <summary>
            Missing required parameter in setup call request.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsSetupCallStatusCodeEnum.UnexpectedError">
            <summary>
            Unexpected error on Strands Recommender end.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsSetupCallStatusCodeEnum.WrongValidationToken">
            <summary>
            Wrong validation token in setup call request.
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsCatalogFeed">
            <summary>
            Loads documents according to the settings and generates XML feed suitable for Strands. If offset and maxcount GET
            parameters are provided, the feed is paged.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes request and generates XML feed of documents to the HTTP response.
            </summary>
            <param name="context">An HttpContext associated with this request</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.WriteCatalogToOutputStream(System.Web.HttpResponse,CMS.StrandsRecommender.StrandsCatalogFeed.PagingData)">
            <summary>
            Generates XML catalog and writes it to the output stream.
            </summary>
            <param name="response">Response of HTTP context</param>
            <param name="pagingData">Indicates if paging is enabled and what page shall be returned</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.ResolveProduct(CMS.StrandsRecommender.StrandsCatalogFeed.ItemData,System.Collections.Generic.List{CMS.Ecommerce.CurrencyInfo},CMS.PortalEngine.TransformationInfo,CMS.MacroEngine.MacroResolver)">
            <summary>
            Resolves macros in given product.
            </summary>
            <param name="product">Product to be resolved</param>
            <param name="currencies">Currencies which will be specified within product</param>
            <param name="transformationInfo">Transformation info containing macros</param>
            <param name="macroResolver">Macro resolver which will be used to resolve macros in text</param>
            <returns>Resolved XML string</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.GetCurrencies">
            <summary>
            Gets list containing all enabled currencies with set Exchange rate. If main currency is specified, it is added to the list. 
            </summary>
            <returns>Collection of all available currencies</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.WriteCatalogBeginning(System.Xml.XmlTextWriter,System.Int32)">
            <summary>
            Writes beginning of XML file and appends feed description required by Strands. 
            </summary>
            <param name="xmlTextWriter">Writer of XMl file</param>
            <param name="totalProducts">Total count of products in the database</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.GetPagedProducts(CMS.StrandsRecommender.StrandsCatalogFeed.PagingData)">
            <summary>
            Retrieves products from the database with the paging specified by the <paramref name="pagingData" /> applied.
            </summary>
            <param name="pagingData">Specification of the page which shall be retrieved</param>
            <returns>Catalog data with paging applied</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.GetAllProducts">
            <summary>
            Retrieves all products from the database.
            </summary>
            <returns>Catalog data with all products</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.GetCatalogItems(System.Collections.Generic.IEnumerable{CMS.DocumentEngine.TreeNode})">
            <summary>
            Creates Catalog items from the list of tree nodes which shall be included in the catalog.
            One tree node in <paramref name="includedTreeNodes" /> represents one language version of the document. Documents
            belonging to the same node will be grouped into one CatalogItem.
            </summary>
            <param name="includedTreeNodes">Documents (all language versions) included in the feed</param>
            <returns>
            List of items which shall be included in the catalog, containing node ID, language versions, SKU object and
            category of product
            </returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.GetBaseDocumentQuery">
            <summary>
            Creates MultiDocumentQuery with properties (path, document types, etc.) set to the values specified in settings.
            Only documents from current site are returned. Culture filter is not set.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.GetTransformationInfoFromSettings">
            <summary>
            Gets transformation info according to code name provided in settings.
            </summary>
            <exception cref="T:CMS.StrandsRecommender.StrandsException">Transformation provided in settings was not found or is not of type text</exception>
            <returns>Transformation info corresponding to settings value</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.GetPagingInfoFromQueryParameters">
            <summary>
            Returns information about paging which should be applied to the catalog feed.
            If pagination is enabled at Strands, request contains offset and maxcount parameters determining what products shall be
            included.
            If parameters are not present, it indicates that paging is not enabled.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsCatalogFeed.IsReusable">
            <summary>
            Gets whether this handler can be reused for other request. This property is required by IHttpHandler interface.
            </summary>
            <value>Always false</value>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsCatalogFeed.CatalogData">
            <summary>
            Holds all retrieved catalog items and count of the total items in database.
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsCatalogFeed.ItemData">
            <summary>
            Holds data about one item in the catalog.
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsCatalogFeed.PagingData">
            <summary>
            This class knows (contains information) if paging shall be performed and which page shall be retrieved when querying
            documents.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.PagingData.#ctor">
            <summary>
            Indicates that feed should not be paged.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsCatalogFeed.PagingData.#ctor(System.Int32,System.Int32)">
            <summary>
            Indicates that feed shall be paged and that number of documents specified by <paramref name="count" /> and starting
            from <paramref name="offset" /> shall be retrieved.
            </summary>
            <param name="offset">Number of documents which will be skipped</param>
            <param name="count">Maximum number of documents which will be retrieved</param>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsCatalogFeed.PagingData.Page">
            <summary>
            Gets 0-based page calculated from <see cref="P:CMS.StrandsRecommender.StrandsCatalogFeed.PagingData.Offset"/> and <see cref="P:CMS.StrandsRecommender.StrandsCatalogFeed.PagingData.Count"/> properties.
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsException">
            <summary>
            Represents a general Strands exception.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Strands exception.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Strands exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="uiMessage">The exception localized message.</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the Strands exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the Strands exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
            <param name="uiMessage">The exception localized message.</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsException.Clone">
            <summary>
            Returns clone of the exception
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsPurchasedEventData">
            <summary>
            Class that stores specified data needed for Strands purchased event.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsPurchasedEventData.ItemID">
            <summary>
            ID of purchased item.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsPurchasedEventData.Price">
            <summary>
            Price of item.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsPurchasedEventData.Quantity">
            <summary>
            Quantity of purchased items.
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsSettings">
            <summary>
            Methods for accessing Strands Recommender settings.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSettings.IsStrandsEnabled(System.String)">
            <summary>
            Gets boolean indicating if Strands module is enabled. Module is enabled if both API ID and Validation token are set in settings.
            </summary>
            <param name="siteName">Site name where settings are checked</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="siteName"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSettings.GetApiID(System.String)">
            <summary>
            Gets Strands API ID from settings or null if not specified.
            </summary>
            <param name="siteName">Site name where settings are checked</param>
            <returns>API ID if set, null when setting is empty</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="siteName"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSettings.GetValidationToken(System.String)">
            <summary>
            Gets Strands Validation token from settings or null if not specified.
            </summary>
            <param name="siteName">Site name where settings are checked</param>
            <returns>Validation token if set, null when setting is empty</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="siteName"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSettings.GetTransformationInfo(System.String)">
            <summary>
            Gets transformation used to render XML feed.
            </summary>
            <param name="siteName">Site name where settings are checked</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="siteName"/> is null</exception>
            <exception cref="T:CMS.StrandsRecommender.StrandsException">Transformation code name in settings is not set</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSettings.GetWhereCondition(System.String)">
            <summary>
            Gets WHERE condition that restricts selection of products.
            </summary>
            <param name="siteName">Site name where settings are checked</param>
            <returns>WHERE condition if set, empty string when setting is empty</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="siteName"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSettings.GetPath(System.String)">
            <summary>
            Gets path to restrict documents selection.
            </summary>
            <param name="siteName">Site name where settings are checked</param>
            <returns>Path if set, empty string when setting is empty</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="siteName"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSettings.GetDocumentTypes(System.String)">
            <summary>
            Gets document types that will be rendered into Strands XML feed.
            </summary>
            <param name="siteName">Site name where settings are checked</param>
            <returns>Document types array if set, empty array when setting is empty</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="siteName"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSettings.IsAutomaticCatalogUploadEnabled(System.String)">
            <summary>
            Gets whether automatic download of catalog performed by Strands Recommender is enabled or not. If true, after setup call, Strands
            will automatically download XML feed. Downloading of feed is performed with frequency specified in <see cref="M:CMS.StrandsRecommender.StrandsSettings.GetAutomaticCatalogUploadFrequency(System.String)"/>.
            </summary>
            <param name="siteName">Site name where settings are checked</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="siteName"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSettings.GetAutomaticCatalogUploadFrequency(System.String)">
            <summary>
            Gets frequency of automatic download performed by Strands Recommender of catalog. Usable only when <see cref="M:CMS.StrandsRecommender.StrandsSettings.IsAutomaticCatalogUploadEnabled(System.String)"/> is true, 
            specifies frequency with which is catalog automatically updated.
            </summary>
            <param name="siteName">Site name where settings are checked</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="siteName"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSettings.IsCatalogFeedAuthenticationEnabled(System.String)">
            <summary>
            Checks whether catalog feed protection is enabled in settings. Protection is enabled when either username or password are set.
            </summary>
            <param name="siteName">Site name where settings are checked</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="siteName"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSettings.GetCatalogFeedUsername(System.String)">
            <summary>
            Gets username required to access Strands catalog feed page.
            </summary>
            <param name="siteName">Site name where settings are checked</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="siteName"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsSettings.GetCatalogFeedPassword(System.String)">
            <summary>
            Gets password required to access Strands catalog feed page.
            </summary>
            <param name="siteName">Site name where settings are checked</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="siteName"/> is null</exception>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsRecommenderModule">
            <summary>
            Represents StrandsRecommender module. This module handles integration with the Strands Recommender (http://recommender.strands.com/) 
            and provides online store administrator the ability to enhance sales by automatically his recommending products to his customers.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsRecommenderModule.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsRecommenderModule.OnInit">
            <summary>
            Handles the module initialization.
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsApiClient">
            <summary>
            Client for communication with Strands Recommender web services. API ID is always needed to communicate with service.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.EMAIL_TEMPLATES_URL">
            <summary>
            Strands API URL for obtaining all available email templates.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.EMAIL_SINGLE_TEMPLATE_URL">
            <summary>
            Strands API URL for obtaining specific email template.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.WEB_TEMPLATES_URL">
            <summary>
            Strands API URL for obtaining all available web templates.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.SETUP_CALL_URL">
            <summary>
            Strands API URL for automation of settings.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.SUCCESS_RESPONSE_STATUS">
            <summary>
            Status text sent by Strands Recommender when successful response.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.TEMPLATE_TYPE_HOME">
            <summary>
            Key determining recommendation is of type Home.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.TEMPLATE_TYPE_CONFIRMATION">
            <summary>
            Key determining recommendation is of type Order confirmation.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.TEMPLATE_TYPE_CART">
            <summary>
            Key determining recommendation is of type Shopping cart/wishlist.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.TEMPLATE_TYPE_CATEGORY">
            <summary>
            Key determining recommendation is of type Category.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.TEMPLATE_TYPE_PRODUCT">
            <summary>
            Key determining recommendation is of type Product.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.TEMPLATE_TYPE_MISCELLANEOUS">
            <summary>
            Key determining recommendation is of type Miscellaneous.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.MAX_NUMBER_OF_ATTEMPTS">
            <summary>
            Maximal number of attempts to get XML document from Strands API if HTTP status 404 is returned.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.DELAY_BEFORE_NEXT_ATTEMPT">
            <summary>
            Defines the time span application will be waiting before making next attempt to load templates from Strands API.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsApiClient.mApiID">
            <summary>
            Strands API ID.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="apiID">Strands API ID</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="apiID"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.GetEmailTemplate(System.String)">
            <summary>
            Gets specific email template for given API ID and template name from Strands API.
            </summary>
            <param name="templateName">Name of desired template</param>
            <returns>String containing HTML code of email template</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="templateName"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.GetAvailableEmailTemplates">
            <summary>
            Gets names of all available email templates for given API ID from Strands API.
            </summary>
            <returns>Collection containing names of all available email templates</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.GetAvailableWebTemplates">
            <summary>
            Gets all available web templates for given API ID from Strands API.
            </summary>
            <returns>Collection containing all available web templates</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.DoSetupCallAsync(CMS.StrandsRecommender.StrandsSetupCallData)">
            <summary>
            The call sets up fields in Strands Recommender settings. Eg. number of products per page, frequency of catalog update, 
            URL from which should Strands download the catalog, mapping between catalog feed elements and Strands fields etc.
            Most of the values are predefined and cannot be changed by user. Only exceptions are enabling/disabling of automatic 
            download of catalog from Strands and frequency of this download.
            </summary>
            <param name="data">Setup data</param>
            <returns>Task with result of asynchronous call</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.GetResponseStatusCode(System.Threading.Tasks.Task{System.Net.WebResponse})">
            <summary>
            Gets the setup call response status code
            </summary>
            <param name="task">Setup task</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.GetExceptionStatusCode(System.Net.WebException)">
            <summary>
            Gets HTTP status code from given WebException.
            </summary>
            <param name="exception">Exception</param>
            <returns>HTTP status code or 0 if not available</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.CheckForTemplateCallSuccessfulResponse(System.Xml.Linq.XDocument)">
            <summary>
            Checks, whether response from Strands API when using template call is valid (Strands is returning status code 0).
            </summary>
            <param name="document">Document to be checked</param>
            <exception cref="T:CMS.StrandsRecommender.StrandsException">Response from Strands API is not successful</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.GetTemplateCallStatusCode(System.Xml.Linq.XDocument)">
            <summary>
            Gets status response from XML document when using template call.
            </summary>
            <param name="document">XML document obtained from Strands Recommender</param>
            <returns>Status of given document</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.GetSetupCallStatusCode(System.Xml.Linq.XDocument)">
            <summary>
            Gets status response from XML document when using setup call.
            </summary>
            <param name="document">XML document obtained from Strands Recommender</param>
            <returns>Status of given document</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.DownloadXDocument(System.String)">
            <summary>
            Gets XML document loading it from given API URL.
            </summary>
            <param name="url">API URL of XML document</param>
            <returns>XDocument representing XML document located on given API URL</returns>
            <exception cref="T:CMS.StrandsRecommender.StrandsException">API request fails (i.e. due to limited connectivity) or Strands returns code indicating error (i.e. invalid API ID)</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.GetElementValue(System.Xml.Linq.XElement,System.String)">
            <summary>
            Gets value of first element in container with tag name specified by <paramref name="element"/>.
            </summary>
            <param name="container">Container of element</param>
            <param name="element">Desired element</param>
            <returns>Value of given element</returns>
            <exception cref="T:CMS.StrandsRecommender.StrandsException">XML document does not contain expected element</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.ResolveRecommendationType(System.String)">
            <summary>
            Determines type of recommendation template based on placement attribute sent by Strands. 
            </summary>
            <param name="tpl">Template ID</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsApiClient.BuildSetupCallQuery(CMS.StrandsRecommender.StrandsSetupCallData)">
            <summary>
            Builds query for Strands setup call from given settings.
            </summary>
            <param name="data">Setup settings</param>
            <returns>Query containing every single setting as parameter</returns>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsTemplateCallStatusCodeEnum">
            <summary>
            Enumeration describes status code returned by Strands portal in API template calls.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsTemplateCallStatusCodeEnum.UnknownStatus">
            <summary>
            Occurs when no status code is present in document.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsTemplateCallStatusCodeEnum.Success">
            <summary>
            Success response.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsTemplateCallStatusCodeEnum.ErrorInTheRequestParameters">
            <summary>
            Error in request parameter response.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsTemplateCallStatusCodeEnum.ErrorValidatingCustomersApiID">
            <summary>
            Error in provided api ID response.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsTemplateCallStatusCodeEnum.UnexpectedError">
            <summary>
            Unexpected error response.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsTemplateCallStatusCodeEnum.EmailRecommendationsUnavailable">
            <summary>
            Email recommendations are not enabled for requested account due to licensing reasons.
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsWebTemplateData">
            <summary>
            Data type for one web template given from all templates feed.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsWebTemplateData.ID">
            <summary>
            ID of template.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsWebTemplateData.Title">
            <summary>
            Title of template.
            </summary>
        </member>
        <member name="P:CMS.StrandsRecommender.StrandsWebTemplateData.Type">
            <summary>
            Type of template.
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsWebTemplateTypeEnum">
            <summary>
            Enumeration describes type of recommendation widget.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsWebTemplateTypeEnum.Home">
            <summary>
            Home type, doesn't send any identifier
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsWebTemplateTypeEnum.Category">
            <summary>
            Category related type, sends category of currently visited page.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsWebTemplateTypeEnum.Product">
            <summary>
            Product related type, sends identifier of currently visited product.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsWebTemplateTypeEnum.Cart">
            <summary>
            Shopping cart related type, sends all items from shopping cart.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsWebTemplateTypeEnum.Order">
            <summary>
            Order confirmation related type, send all recently purchased items.
            </summary>
        </member>
        <member name="F:CMS.StrandsRecommender.StrandsWebTemplateTypeEnum.Miscellaneous">
            <summary>
            Miscellaneous type, not supported, recommendations with this type will be skipped.
            </summary>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsProductsProvider">
            <summary>
            Helper methods for fetching various data needed mainly by Strands Recommendation web part. In general, data are fetched from the contexts (i.e. EcommerceContext) and database.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsProductsProvider.GetItemIDsFromCurrentShoppingCart">
            <summary>
            Gets all products from current user shopping cart and finds corresponding nodes.
            </summary>
            <returns>Collection containing all node IDs representing current user shopping cart items</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsProductsProvider.GetItemsIDsFromRecentOrder">
            <summary>
            Gets all products from current customer/user most recent order and finds corresponding nodes.
            </summary>
            <returns>Collection containing all node IDs representing current customer/user most recent order</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsProductsProvider.GetCustomerRelatedToCurrentContact">
            <summary>
            Gets Customer ID related to current contact.
            </summary>
            <returns>ID of related customer</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsProductsProvider.GetNodeIDsForSKUs(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets tree node for every SKU item given and returns its nodeID.
            </summary>
            <param name="skuIDs">Collection of SKU items</param>
            <returns>Collection containing nodeIDs of all tree nodes corresponding to given SKU items</returns>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsProductsProvider.GetSKURootID(CMS.Ecommerce.SKUInfo)">
            <summary>
            Get SKUID of SKU parent, if exists. Otherwise gets ID of SKU itself.
            </summary>
            <param name="sku">SKU should be ID taken from</param>
            <remarks>If SKU is of the type variant, it does not have connection with tree node, whose ID is used for item identification. Thus its SKU parent tree node ID has to be used instead</remarks>
            <returns>SKUParentID, if not null, SKUID otherwise</returns>
        </member>
        <member name="T:CMS.StrandsRecommender.StrandsScriptRenderer">
            <summary>
            Class capable of rendering various JavaScripts needed by Strands recommendation engine.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptRenderer.#ctor(System.Web.UI.Page,System.String)">
            <summary>
            Constructs class with default Scripts Generator.
            </summary>
            <param name="page">Scripts will be rendered on this page</param>
            <param name="apiID">API ID of the associated Strands account</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptRenderer.#ctor(System.Web.UI.Page,System.String,CMS.StrandsRecommender.StrandsScriptGenerator)">
            <summary>
            Constructs class.
            </summary>
            <param name="page">Scripts will be rendered on this page</param>
            <param name="apiID">API ID of the associated Strands account</param>
            <param name="strandsScriptGenerator">This instance will be used to generate scripts rendered to the page</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="page"/>, <paramref name="apiID"/> or <paramref name="strandsScriptGenerator"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptRenderer.RenderItemVisitedTrackingScript(System.String)">
            <summary>
            Renders script for the item visited event tracking.
            </summary>
            <param name="itemID">ID of the catalog item which is being visited. Must correspond to the IDs send through catalog feed</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptRenderer.RenderSearchedTrackingScript(System.String,System.String)">
            <summary>
            Renders script for the item searched event tracking.
            </summary>
            <param name="searchText">Search text</param>
            <param name="itemID">ID of the catalog item which is being visited. Must correspond to the IDs send through catalog feed</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptRenderer.RenderUserLoggedTrackingScript(System.String)">
            <summary>
            Renders event indicating which user is browsing the web. This event needs to be logged at every page user visits (see http://recommender.strands.com/developers/javascript/#ulogin"/). 
            Strands can later associate this user ID with the ID of the newsletter recipient and show appropriate recommendations.        
            </summary>
            <param name="userID">ID of the user (needs to be the same as ID which is placed at the newsletter email with recommendation)</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptRenderer.RenderUpdateShoppingCartTrackingScript(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Renders script for updateschoppingcart tracking event.
            </summary>
            <param name="itemsInCart">IDs of all items in shopping cart</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="itemsInCart"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptRenderer.RenderPurchasedTrackingScript(System.String,System.Collections.Generic.IEnumerable{CMS.StrandsRecommender.StrandsPurchasedEventData})">
            <summary>
            Renders purchased script with informations about all purchased items.
            </summary>
            <param name="orderID">ID of the order</param>
            <param name="orderData">Informations about items to render</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="orderData"/> is null</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptRenderer.RenderLibraryScript">
            <summary>
            Includes Strands library in the page and initializes it by calling SBS.Worker.go. This is needed to perform any other actions (event tracking or getting recommendations).
            Strands library and initialization call are rendered at the end of the page, so every other script (tracking, settings, etc.) is before it.
            </summary>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptRenderer.RenderCustomizedRendererScript(CMS.PortalEngine.TransformationInfo,System.String,System.String)">
            <summary>
            Renders script from custom layout of recommendation template.
            </summary>
            <param name="transformation">Transformation provided by webpart settings. JQuery type is required</param>
            <param name="templateID">ID of Strands template to be customized</param>
            <param name="placementID">Client ID of element, where the template should be placed. Should by ID of 'Strands div' by default</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="transformation"/>, <paramref name="templateID"/> or <paramref name="placementID"/> is null</exception>
            <exception cref="T:System.ArgumentException">Type of <paramref name="transformation"/> is not jQuery</exception>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptRenderer.RenderCultureScript(System.String)">
            <summary>
            Includes information about current culture in the page. Strands is then able to show recommendations in given culture.
            </summary>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptRenderer.RenderCurrencyScript(System.String)">
            <summary>
            Includes information about current currency in the page. Strands is then able to show recommendations with price in given currency.
            </summary>
            <param name="currencyCode">currency code</param>
        </member>
        <member name="M:CMS.StrandsRecommender.StrandsScriptRenderer.RenderSettingsScript(System.String)">
            <summary>
            Renders Strands JS script to the beginning of the page.
            </summary>
            <remarks>
            This method can be used to render:
            - tracking scripts (such as user logged tracking event)
            - settings scripts (cview or pview) 
            - custom rendering function.
            </remarks>
            <param name="script">Script which will be rendered</param>
        </member>
    </members>
</doc>
