<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.Relationships</name>
    </assembly>
    <members>
        <member name="T:CMS.Relationships.RelationshipImport">
            <summary>
            Handles special actions during the Relationship import process.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipImport.Init">
            <summary>
            Initializes import handlers
            </summary>
        </member>
        <member name="T:CMS.Relationships.RelationshipsModule">
            <summary>
            Represents the Relationships module.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipsModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipsModule.OnInit">
            <summary>
            Init module
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipsModule.Delete_Before(System.Object,CMS.DataEngine.ObjectEventArgs)">
            <summary>
            Fires before deletion of the object
            </summary>
        </member>
        <member name="T:CMS.Relationships.RelationshipsModuleMetadata">
            <summary>
            Represents the Relationships module metadata.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipsModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.Relationships.RelationshipNameInfo">
            <summary>
            Relationship name info data container class.
            </summary>
        </member>
        <member name="F:CMS.Relationships.RelationshipNameInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Relationships.RelationshipNameInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfo.#ctor">
            <summary>
            Constructor, creates an empty RelationshipNameInfo structure.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates an empty RelationshipNameInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfo.IsOnSite(System.Int32)">
            <summary>
            Check whether relationship is in site given by id.
            </summary>
            <param name="siteId">ID of site to check</param>
            <returns>Returns true if relationship name already exists</returns>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipNameId">
            <summary>
            Gets or sets the relationship name ID.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipDisplayName">
            <summary>
            Gets or sets the relationship display name.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipName">
            <summary>
            Gets or sets the relationship name.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipAllowedObjects">
            <summary>
            Gets or sets the relationship allowed objects.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipGUID">
            <summary>
            Relationship GUID.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameInfo.RelationshipLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="T:CMS.Relationships.RelationshipNameInfoProvider">
            <summary>
            Provides access to information about relationship names.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNameInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.SetRelationshipNameInfo(CMS.Relationships.RelationshipNameInfo)">
            <summary>
            Sets the specified relationship name data from info object to DB.
            </summary>
            <param name="relationshipNameInfo">Relationship name data object</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNameInfo(System.Int32)">
            <summary>
            Returns the RelationshipNameInfo structure for the specified relationship name ID.
            </summary>
            <param name="relationshipNameId">Relationship name ID to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNameInfo(System.String)">
            <summary>
            Returns the RelationshipNameInfo structure for the specified relationship name.
            </summary>
            <param name="relationshipName">Relationship name to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.DeleteRelationshipName(CMS.Relationships.RelationshipNameInfo)">
            <summary>
            Deletes relationship name specified by id.
            </summary>
            <param name="ri">RelationshipName object</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.DeleteRelationshipName(System.Int32)">
            <summary>
            Deletes relationship name specified by id.
            </summary>
            <param name="relationshipNameId">ID of relationship name to delete</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNames(System.Int32,System.String)">
            <summary>
            Returns object query of relationship names on selected site specified by where condition.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNames">
            <summary>
            Returns the query for all relationship names.
            </summary>        
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNames(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns object query of relationship names specified by where condition.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.RelationshipNameExists(System.String)">
            <summary>
            Check whether relationship with given name already exists.
            </summary>
            <param name="name">Relationship name to check</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNameInfoByGUIDInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.SetRelationshipNameInfoInternal(CMS.Relationships.RelationshipNameInfo)">
            <summary>
            Sets the specified relationship name data from info object to DB.
            </summary>
            <param name="relationshipNameInfo">Relationship name data object</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNameInfoInternal(System.Int32)">
            <summary>
            Returns the RelationshipNameInfo structure for the specified relationship name ID.
            </summary>
            <param name="relationshipNameId">Relationship name ID to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNameInfoInternal(System.String)">
            <summary>
            Returns the RelationshipNameInfo structure for the specified relationship name.
            </summary>
            <param name="relationshipName">Relationship name to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.DeleteRelationshipNameInternal(CMS.Relationships.RelationshipNameInfo)">
            <summary>
            Deletes relationship name specified by id.
            </summary>
            <param name="ri">RelationshipName object</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.GetRelationshipNamesInternal">
            <summary>
            Returns the query for all relationship names.
            </summary>        
        </member>
        <member name="M:CMS.Relationships.RelationshipNameInfoProvider.RelationshipNameExistsInternal(System.String)">
            <summary>
            Check whether relationship with given name already exists.
            </summary>
            <param name="name">Relationship name to check</param>
        </member>
        <member name="T:CMS.Relationships.RelationshipNameSiteInfo">
            <summary>
            RelationshipNameSiteInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Relationships.RelationshipNameSiteInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Relationships.RelationshipNameSiteInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfo.#ctor">
            <summary>
            Constructor - Creates an empty RelationshipNameSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RelationshipNameSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameSiteInfo.RelationshipNameID">
            <summary>
            Relationship name ID.
            </summary>
        </member>
        <member name="P:CMS.Relationships.RelationshipNameSiteInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="T:CMS.Relationships.RelationshipNameSiteInfoProvider">
            <summary>
            Class providing RelationshipNameSiteInfo management.
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.GetRelationshipNameSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns the RelationshipNameSiteInfo structure for the specified relationshipNameSite.
            </summary>
            <param name="relationshipNameId">RelationshipNameID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.SetRelationshipNameSiteInfo(CMS.Relationships.RelationshipNameSiteInfo)">
            <summary>
            Sets (updates or inserts) specified relationshipNameSite.
            </summary>
            <param name="relationshipNameSite">RelationshipNameSite to set</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.DeleteRelationshipNameSiteInfo(CMS.Relationships.RelationshipNameSiteInfo)">
            <summary>
            Deletes specified relationshipNameSite.
            </summary>
            <param name="infoObj">RelationshipNameSite object</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.GetRelationshipNameSites">
            <summary>
            Returns the query for all relationship name site bindings.
            </summary>        
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.GetRelationshipNameSites(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the bindings between relationship names and sites.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.RemoveRelationshipNameFromSite(System.Int32,System.Int32)">
            <summary>
            Deletes specified relationshipNameSite.
            </summary>
            <param name="relationshipNameId">RelationshipNameID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.AddRelationshipNameToSite(System.Int32,System.Int32)">
            <summary>
            Adds the relationship name specified by id to the site.
            </summary>
            <param name="relationshipNameId">ID of relationship name to add</param>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.IsRelationShipOnSite(System.Int32,System.Int32)">
            <summary>
            Returns true if the relationship is assigned to the given site.
            </summary>
            <param name="relationshipNameId">Relationship name ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.GetRelationshipNameSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the RelationshipNameSiteInfo structure for the specified relationshipNameSite.
            </summary>
            <param name="relationshipNameId">RelationshipNameID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.SetRelationshipNameSiteInfoInternal(CMS.Relationships.RelationshipNameSiteInfo)">
            <summary>
            Sets (updates or inserts) specified relationshipNameSite.
            </summary>
            <param name="relationshipNameSite">RelationshipNameSite to set</param>
        </member>
        <member name="M:CMS.Relationships.RelationshipNameSiteInfoProvider.DeleteRelationshipNameSiteInfoInternal(CMS.Relationships.RelationshipNameSiteInfo)">
            <summary>
            Deletes specified relationshipNameSite.
            </summary>
            <param name="infoObj">RelationshipNameSite object</param>
        </member>
        <member name="T:CMS.Relationships.ObjectRelationshipInfo">
            <summary>
            ObjectRelationshipInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Relationships.ObjectRelationshipInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Relationships.ObjectRelationshipInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.Relationships.ObjectRelationshipInfo.mCustomData">
            <summary>
            Relationship custom data.
            </summary>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfo.#ctor">
            <summary>
            Constructor - Creates an empty ObjectRelationshipInfo object.
            </summary>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ObjectRelationshipInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.Relationships.ObjectRelationshipInfo.RelationshipLeftObjectID">
            <summary>
            Relationship left object ID.
            </summary>
        </member>
        <member name="P:CMS.Relationships.ObjectRelationshipInfo.RelationshipLeftObjectType">
            <summary>
            Relationship left object type.
            </summary>
        </member>
        <member name="P:CMS.Relationships.ObjectRelationshipInfo.RelationshipNameID">
            <summary>
            Relationship name ID.
            </summary>
        </member>
        <member name="P:CMS.Relationships.ObjectRelationshipInfo.RelationshipRightObjectID">
            <summary>
            Relationship right object ID.
            </summary>
        </member>
        <member name="P:CMS.Relationships.ObjectRelationshipInfo.RelationshipRightObjectType">
            <summary>
            Relationship right object type.
            </summary>
        </member>
        <member name="P:CMS.Relationships.ObjectRelationshipInfo.RelationshipCustomData">
            <summary>
            Relationship custom data.
            </summary>
        </member>
        <member name="T:CMS.Relationships.ObjectRelationshipInfoProvider">
            <summary>
            Class providing ObjectRelationshipInfo management.
            </summary>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.GetObjectRelationshipInfo(System.Int32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns the ObjectRelationshipInfo structure for the specified ObjectRelationship.
            </summary>
            <param name="leftObjectId">Relationship left object ID</param>
            <param name="leftObjectType">Relationship left object type</param>
            <param name="rightObjectId">Relationship right object ID</param>
            <param name="rightObjectType">Relationship right object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.SetObjectRelationshipInfo(CMS.Relationships.ObjectRelationshipInfo)">
            <summary>
            Sets (updates or inserts) specified ObjectRelationship.
            </summary>
            <param name="objectRelationship">ObjectRelationship to set</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.DeleteRelationship(CMS.Relationships.ObjectRelationshipInfo)">
            <summary>
            Removes the relationship.
            </summary>
            <param name="infoObj">ObjectRelationship object</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.RemoveRelationship(System.Int32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Removes the relationship.
            </summary>
            <param name="leftObjectId">Relationship left object ID</param>
            <param name="leftObjectType">Relationship left object type</param>
            <param name="rightObjectId">Relationship right object ID</param>
            <param name="rightObjectType">Relationship right object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.GetRelationships">
            <summary>
            Returns the query for all relationship names.
            </summary>        
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.GetRelationships(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all the relationships based on the given parameters.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.GetRelationships(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            Gets all the relationships for the specified object.
            Left and right parameters determine whether the object can be on left or right side of the relationship.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="relationshipNameId">RelationshipName ID</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
            <param name="relatedObjectType">Type of the related object</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.RemoveRelationships(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes all the relationships for the specified object.
            Left and right parameters determine whether the object can be on left or right side of the relationship.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.UpdateRelationships(System.Int32,System.String,System.Data.DataTable,CMS.DataEngine.TranslationHelper,System.Boolean)">
            <summary>
            Updates the object relationships.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="relationshipsDT">Relationships table</param>
            <param name="th">Translation helper with the object translation data</param>
            <param name="logSynchronization">Indicates if staging tasks should be logged</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.RelationshipExists(System.Int32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns true if the relationship exists.
            </summary>
            <param name="leftObjectId">Relationship left object ID</param>
            <param name="leftObjectType">Relationship left object type</param>
            <param name="rightObjectId">Relationship right object ID</param>
            <param name="rightObjectType">Relationship right object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.AddRelationship(System.Int32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Adds the relationship to the database.
            </summary>
            <param name="leftObjectId">Relationship left object ID</param>
            <param name="leftObjectType">Relationship left object type</param>
            <param name="rightObjectId">Relationship right object ID</param>
            <param name="rightObjectType">Relationship right object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.GetWhereCondition(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            Gets the relationship where condition.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
            <param name="relatedObjectType">Type of the related object</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.GetObjectRelationshipInfoInternal(System.Int32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns the ObjectRelationshipInfo structure for the specified ObjectRelationship.
            </summary>
            <param name="leftObjectId">Relationship left object ID</param>
            <param name="leftObjectType">Relationship left object type</param>
            <param name="rightObjectId">Relationship right object ID</param>
            <param name="rightObjectType">Relationship right object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.SetObjectRelationshipInfoInternal(CMS.Relationships.ObjectRelationshipInfo)">
            <summary>
            Sets (updates or inserts) specified ObjectRelationship.
            </summary>
            <param name="objectRelationship">ObjectRelationship to set</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.DeleteRelationshipInternal(CMS.Relationships.ObjectRelationshipInfo)">
            <summary>
            Removes the relationship.
            </summary>
            <param name="infoObj">ObjectRelationship object</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.GetRelationshipsInternal">
            <summary>
            Returns the query for all relationship names.
            </summary>   
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.RemoveRelationshipsInternal(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes all the relationships for the specified object.
            Left and right parameters determine whether the object can be on left or right side of the relationship.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.UpdateRelationshipsInternal(System.Int32,System.String,System.Data.DataTable,CMS.DataEngine.TranslationHelper,System.Boolean)">
            <summary>
            Updates the object relationships.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="relationshipsDT">Relationships table</param>
            <param name="th">Translation helper with the object translation data</param>
            <param name="logSynchronization">Indicates if staging tasks should be logged</param>
        </member>
        <member name="M:CMS.Relationships.ObjectRelationshipInfoProvider.GetWhereConditionInternal(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            Gets the relationship where condition.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
            <param name="relatedObjectType">Type of the related object</param>
        </member>
        <member name="T:CMS.Relationships.RelationshipsExtensions">
            <summary>
            Relationship extension methods
            </summary>
        </member>
        <member name="M:CMS.Relationships.RelationshipsExtensions.GetObjectRelationships(CMS.DataEngine.IObjectQuery,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets the query for all relationships of the objects that the query represents
            </summary>
            <param name="query">Base query</param>
            <param name="relationshipNameId">Relationship name ID</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
        </member>
    </members>
</doc>
