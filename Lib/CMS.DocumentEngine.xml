<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.DocumentEngine</name>
    </assembly>
    <members>
        <member name="T:CMS.DocumentEngine.AttachmentInfo">
            <summary>
            Attachment info data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.mAttachmentUrl">
            <summary>
            Attachment URL - for internal purposes.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.mAttachmentVersionHistoryID">
            <summary>
            Attachment version history ID.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.mInputStream">
            <summary>
            Input stream - for file upload.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.mStreamProcessed">
            <summary>
            True if the input stream has already been processed.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.mAttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.mAttachmentSearchContent">
            <summary>
            Extracted content from attachment binary used for search indexing.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfo.mTreeProvider">
            <summary>
            Tree provider object to use for the database access.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.GetSiblingsWhereCondition">
            <summary>
            Creates where condition according to Parent, Group and Site settings.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.SetObjectOrderPostprocessing">
            <summary>
            Method which is called after the order of the object was changed. Generates staging tasks and webfarm tasks by default.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor">
            <summary>
            Constructor of AttachmentInfo structure.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(CMS.DataEngine.IDataClass)">
            <summary>
            Constructor of AttachmentInfo structure, creates a new AttachmentInfo object from the given IDataClass data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor of AttachmentInfo structure, creates a new AttachmentInfo object from the given DataRow data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(System.Web.HttpPostedFile)">
            <summary>
            Creates a new AttachmentInfo object based on the file posted through the upload control.
            </summary>
            <param name="postedFile">Posted file</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(System.Web.HttpPostedFile,System.Int32,System.Guid)">
            <summary>
            Creates a new AttachmentInfo object based on the file posted through the upload control.
            </summary>
            <param name="postedFile">Posted file</param>
            <param name="documentId">Document ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(System.String)">
            <summary>
            Creates a new AttachmentInfo object based on the file specified by given path.
            </summary>
            <param name="filePath">File path</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.#ctor(System.String,System.Int32,System.Guid)">
            <summary>
            Creates a new AttachmentInfo object based on the file specified by given path.
            </summary>
            <param name="filePath">File path</param>
            <param name="documentId">Document ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.GetBinaryData">
            <summary>
            Returns binary data of the attachment in the BinaryData wrapper.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.EnsureSearchContent(CMS.Search.ExtractionContext,CMS.DataEngine.ISearchFields)">
            <summary>
            Returns the search content of the attachment (including names, title, description and extracted content of the attachment binary data) which should be included to the content field of the SearchDocument.
            Caches the extracted value to the AttachmentSearchContent field if called for the first time (calls AttachmentInfoProvider.SetAttachmentInfo(this, false) in this case to save to value to the DB).
            </summary>
            <param name="context">Extration context passed to the text extractors</param>
            <param name="searchFields">Search fields collection that can be extended by extractors (DOES NOT modify the content field, this is dealt with separately - as a return value of this method)</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.EnsureBinaryData(System.Boolean)">
            <summary>
            Ensures the binary data - loads the binary data from file stream if present.
            </summary>
            <param name="forceLoadFromDB">If true, the data are loaded even from DB</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.GetFileStream">
            <summary>
            Returns the FileStream if file physically exists on disk.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.LoadDataFromStream">
            <summary>
            Loads the attachment data from the input stream.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.Clone(System.Boolean)">
            <summary>
            Returns clone object of current attachment info.
            </summary>
            <param name="clear">If true, the attachment is cleared to allow create new object</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.IsLastVersion">
            <summary>
            If true, the attachment belongs to the document which is the last version (retrieved using DocumentHelper.GetDocument).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.TreeProvider">
            <summary>
            Tree provider instance used to access data. If no TreeProvider is assigned, a new TreeProvider instance is created.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.ObjectParent">
            <summary>
            Returns the object parent
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.Parent">
            <summary>
            Parent document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentUrl">
            <summary>
            Attachment URL - for attachment information transfer purposes, not saved to the database.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentVersionHistoryID">
            <summary>
            Attachment version history ID - for attachment information transfer purposes, not saved to the database.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentID">
            <summary>
            Attachment ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentName">
            <summary>
            Attachment name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentExtension">
            <summary>
            Attachment extension.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentSize">
            <summary>
            Attachment size.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentMimeType">
            <summary>
            Attachment mime type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentBinary">
            <summary>
            Attachment binary.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentImageWidth">
            <summary>
            Attachment image width.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentImageHeight">
            <summary>
            Attachment image height.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentDocumentID">
            <summary>
            Attachment document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentGUID">
            <summary>
            Attachment GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentLastHistoryID">
            <summary>
            Attachment last history ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentSiteID">
            <summary>
            Attachment site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentLastModified">
            <summary>
            Attachment last modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentIsUnsorted">
            <summary>
            Indicates if attachment is an unsorted attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentOrder">
            <summary>
            Stores the attachment order.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentGroupGUID">
            <summary>
            Holds the GUID of the document field (group) under which the grouped attachment belongs.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentFormGUID">
            <summary>
            Indicates that the attachment is temporary and it is bound to the specific instance of form with this GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.InputStream">
            <summary>
            File input stream (for large files).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentHash">
            <summary>
            Attachment hash.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentTitle">
            <summary>
            Attachment title.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentDescription">
            <summary>
            Attachment description.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentSearchContent">
            <summary>
            Extracted content from attachment binary used for search indexing.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfo.AttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentInfoCollection">
            <summary>
            Collection of the attachments
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.UnsortedAttachmentInfoCollection">
            <summary>
            Collection of the attachments which only covers unsorted attachments
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UnsortedAttachmentInfoCollection.EnsureObjectValues(CMS.DataEngine.BaseInfo)">
            <summary>
            Ensures the proper values for the given object
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentInfoProvider">
            <summary>
            Class providing attachment management.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfoProvider.MAXATTACHMENTNAMELENGTH">
            <summary>
            Maximal length of the attachment name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfoProvider.mConnection">
            <summary>
            General connection.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfoProvider.mThumbnailQuality">
            <summary>
            Thumbnail quality.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfoProvider.mDeletePhysicalFiles">
            <summary>
            Indicates if physical files should be deleted.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfoProvider.ensureFileLock">
            <summary>
            Lock object for ensuring of the physical files.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentInfoProvider.mDeleteTemporaryAttachmentsOlderThan">
            <summary>
            Specifies how old (in hours) should be attachments deleted by the 'Delete old temporary attachments' scheduled task.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfo(System.Int32,System.Guid)">
            <summary>
            Gets the attachment by the document ID and attachment GUID.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="attachmentGuid">GUID of the attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfo(System.Int32,System.String,System.Boolean)">
            <summary>
            Gets the attachment by the document ID and file name.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="fileName">File name</param>
            <param name="getBinary">Get the binary data?</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfo(System.Guid,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfo(System.String,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfoWithoutBinary(System.Guid,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment without binary data.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfo(System.Int32,System.Boolean)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentId">Attachment id</param>
            <param name="getBinary">If false, no binary data is retrieved from the database</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.SetAttachmentInfo(CMS.DocumentEngine.AttachmentInfo,System.Boolean)">
            <summary>
            Sets (updates or inserts) specified attachment.
            </summary>
            <param name="attachment">Attachment to set</param>
            <param name="resetSearchContent">If true, the search content field is set to null to be forced to load again</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteAttachmentInfo(CMS.DocumentEngine.AttachmentInfo,System.Boolean)">
            <summary>
            Deletes specified attachment.
            </summary>
            <param name="atInfo">Attachment object</param>
            <param name="deletePhysicalFile">Delete physical file</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteAttachmentInfo(System.Int32,System.Boolean)">
            <summary>
            Deletes specified attachment.
            </summary>
            <param name="attachmentId">Attachment id</param>
            <param name="deletePhysicalFile">Delete physical file</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachments(System.Int32,System.Boolean)">
            <summary>
            Returns object query of attachments with specified document id.
            </summary>
            <param name="documentId">Document id</param>
            <param name="getBinary">If false, no binary data is returned for the attachments</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachments">
            <summary>
            Gets the query for all attachments
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachments(System.String,System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            Returns object query of all attachments filtered by where condition.
            </summary>
            <param name="whereCondition">Where condition statement</param>
            <param name="orderBy">Order by statement</param>
            <param name="getBinary">If false, no binary data is returned for the attachments</param>
            <param name="topN">Top N attachments</param>
            <param name="columns">Selected columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteAttachments(System.Int32)">
            <summary>
            Deletes all the attachments of specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteAttachments(System.String)">
            <summary>
            Deletes the attachments.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteAttachments(CMS.DataEngine.IWhereCondition)">
            <summary>
            Deletes the attachments.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.MoveAttachment(CMS.DocumentEngine.AttachmentInfo,System.Int32,System.Int32)">
            <summary>
            Moves the attachment data to the new site.
            </summary>
            <param name="attachment">Attachment object</param>
            <param name="oldSiteId">Old site ID</param>
            <param name="newSiteId">New site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.MoveAttachmentUp(System.Guid,System.Int32)">
            <summary>
            Moves temporary attachment up.
            </summary>
            <param name="attachmentGuid">GUID of attachment</param>
            <param name="documentId">Document ID (0 for temporary attachments)</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.MoveAttachmentDown(System.Guid,System.Int32)">
            <summary>
            Moves temporary attachment down.
            </summary>
            <param name="attachmentGuid">GUID of attachment</param>
            <param name="documentId">Document ID (0 for temporary attachments)</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteOldTemporaryAttachments">
            <summary>
            Deletes old temporary attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteTemporaryAttachments(System.Int32)">
            <summary>
            Deletes old temporary attachments.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.AddTemporaryAttachment(System.Guid,System.Guid,System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file path</param>
            <param name="siteId">Site ID</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.AddTemporaryAttachment(System.Guid,System.Guid,System.Guid,System.Web.HttpPostedFile,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file</param>
            <param name="siteId">Site ID</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.AddTemporaryAttachment(System.Guid,System.String,System.Guid,System.Guid,System.Object,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="guidColumnName">Column containing the Attachment GUID (optional)</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file (HttpPostedFile or file path)</param>
            <param name="siteId">Site ID</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteTemporaryAttachment(System.Guid,System.String)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="attachmentGuid">GUID of the attachment</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.ResizeImageAttachment(CMS.DocumentEngine.AttachmentInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes image to specified dimensions.
            </summary>
            <param name="newAttachment">Attachment info</param>
            <param name="width">New width of the attachment</param>
            <param name="height">New height of the attachment</param>
            <param name="maxSideSize">Maximal side size of the attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetUniqueTemporaryAttachmentFileName(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Method gets unique temporary attachment file name in the form scope.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="fileName">Name of file</param>
            <param name="currentAttachmentId">Current attachment ID</param>
            <param name="siteId">Site ID</param>
            <returns>Unique attachment name</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.IsUniqueTemporaryAttachmentName(System.Guid,System.String,System.String,System.Int32)">
            <summary>
            Finds out whether given attachment name is unique
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="fileName">Name of file</param>
            <param name="extension">Extension of file</param>
            <param name="currentAttachmentId">Current attachment ID</param>
            <returns>True if attachment name is unique</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetFile(CMS.DocumentEngine.AttachmentInfo,System.String)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="atInfo">Attachment object</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetFile(System.Guid,System.String)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="guid">GUID of the file to get</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetImageThumbnailFile(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the image thumbnail from the disk.
            </summary>
            <param name="guid">GUID of the file to get</param>
            <param name="siteName">Site name</param>
            <param name="height">Image thumbnail width</param>
            <param name="width">Image thumbnail height</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetImageThumbnail(CMS.DocumentEngine.AttachmentInfo,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesn't exist).
            </summary>
            <param name="atInfo">Attachment info</param>
            <param name="siteName">Site name</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Maximum side size</param>
            <param name="searchThumbnailFile">Indicates if thumbnail should be searched on the disk</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetImageThumbnail(System.Guid,System.Byte[],System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesn't exist).
            </summary>
            <param name="guid">File GUID</param>
            <param name="imageData">Image data</param>
            <param name="extension">Image extension</param>
            <param name="siteName">Site name</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Maximum side size</param>
            <param name="originalWidth">Original width of the image</param>
            <param name="originalHeight">Original height of the image</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.EnsurePhysicalFile(CMS.DocumentEngine.AttachmentInfo,System.String)">
            <summary>
            Ensures the file in the file system and returns the path to the file.
            </summary>
            <param name="atInfo">Attachment info</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.EnsureThumbnailFile(CMS.DocumentEngine.AttachmentInfo,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ensures the thumbnail file.
            </summary>
            <param name="atInfo">Attachment info</param>
            <param name="siteName">Site name</param>
            <param name="width">File width</param>
            <param name="height">File height</param>
            <param name="maxSideSize">Maximum side size</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.SaveFileToDisk(System.String,System.String,System.String,System.String,CMS.Core.BinaryData,System.Boolean,System.Boolean)">
            <summary>
            Saves file to the disk.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="fileName">File name</param>
            <param name="fileExtension">File extension</param>
            <param name="fileData">File data (byte[] or Stream)</param>   
            <param name="deleteOldFiles">Indicates whether files in destination folder with mask '[guid]*.*' should be deleted</param>
            <param name="synchronization">Indicates if this function is called from "ProcessTask"</param>
            <returns>Returns the path to the file on the disk</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteFile(System.Guid,System.String,System.Boolean,System.Boolean)">
            <summary>
            Delete all files with the same name ([name].*) in specified directory.
            </summary>
            <param name="fileGuid">GUID of the file to delete</param>
            <param name="siteName">Site name</param>
            <param name="deleteDirectory">Determines whether delete specified directory or not</param>
            <param name="synchronization">Indicates whether the method is called due to synchronization</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.CanResizeImage(CMS.DocumentEngine.AttachmentInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks whether the image should be processed (resized) by the Image manager (if the destination size is smaller).
            </summary>
            <param name="atInfo">Attachment info to check</param>
            <param name="width">New width</param>
            <param name="height">New height</param>
            <param name="maxSideSize">Max side size</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.ResizeAttachments(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes specified attachments to the required dimensions.
            </summary>
            <param name="where">Where condition</param>        
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Image max side size</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.SetAttachmentsQuality(System.String,System.Int32)">
            <summary>
            Sets image quality of all specified attachments to the required level.
            </summary>
            <param name="where">Where condition to filter attachments</param>        
            <param name="quality">New image quality, from 0 (lowest quality) to 100 (highest quality)</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentSite(CMS.DocumentEngine.AttachmentInfo)">
            <summary>
            Gets attachment site.
            </summary>
            <param name="attInfo">Attachment info</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetFilesFolderPath(System.String)">
            <summary>
            Returns files folder physical path according to 'CMSFilesFolder' settings key is set or not.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetFilesFolderRelativePath(System.String)">
            <summary>
            Returns files folder relative path according to 'CMSFilesFolder' settings key is set or not.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetFilePhysicalPath(System.String,System.String,System.String)">
            <summary>
            Returns physical path to the file.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetThumbnailPhysicalPath(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns physical path to the thumbnail.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetDependencyCacheKeys(CMS.DocumentEngine.AttachmentInfo)">
            <summary>
            Gets the cache key dependencies array for the attachment (cache item keys affected when the attachment changes).
            </summary>
            <param name="ai">Attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetDependencyCacheKeys(System.Int32)">
            <summary>
            Gets the cache key dependencies array for the attachment order change (cache item keys affected when the attachment order changes).
            </summary>
            <param name="documentId">Attachment document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.StoreFilesInFileSystem(System.String)">
            <summary>
            Returns the current settings whether the files should be stored in the file system.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.StoreFilesInDatabase(System.String)">
            <summary>
            Returns the current settings whether the files should be stored in the database.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GenerateThumbnails(System.String)">
            <summary>
            Returns the current settings whether the thumbnails should be generated.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.CheckFilesPermissions(System.String)">
            <summary>
            Returns the current settings whether the files should check document permissions.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.CheckPublishedFiles(System.String)">
            <summary>
            Returns the current settings whether the files should check if the document is published.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetFilePhysicalURL(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the URL to the physical file.
            </summary>
            <param name="siteName">File site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetPermanentAttachmentUrl(System.Guid,System.String,System.String)">
            <summary>
            Returns attachment URL.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
            <param name="extension">Extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentUrl(System.Guid,System.String,System.String)">
            <summary>
            Returns attachment URL.
            </summary>
            <param name="attachmentGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
            <param name="extension">Extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentUrl(System.String,System.String,System.String)">
            <summary>
            Returns friendly attachment URL.
            </summary>
            <param name="safeFileName">Attachment safe file name</param>
            <param name="aliasPath">Node alias path</param>
            <param name="extension">Extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.ClearSearchCache">
            <summary>
            Clears the AttachmentSearchContent for all attachments in the DB.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfoInternal(System.Int32,System.Guid)">
            <summary>
            Gets the attachment by the document ID and attachment GUID.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="attachmentGuid">GUID of the attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfoInternal(System.Int32,System.String,System.Boolean)">
            <summary>
            Gets the attachment by the document ID and file name.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="fileName">File name</param>
            <param name="getBinary">Get the binary data?</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfoInternal(System.Guid,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfoWithoutBinaryInternal(System.Guid,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment without binary data.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentInfoInternal(System.Int32,System.Boolean)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentId">Attachment id</param>
            <param name="getBinary">If false, no binary data is retrieved from the database</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.SetAttachmentInfoInternal(CMS.DocumentEngine.AttachmentInfo,System.Boolean)">
            <summary>
            Sets (updates or inserts) specified attachment.
            </summary>
            <param name="attachment">Attachment to set</param>
            <param name="resetSearchContent">If true, the search content field is set to null to be forced to load again</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteAttachmentInfoInternal(CMS.DocumentEngine.AttachmentInfo,System.Boolean)">
            <summary>
            Deletes specified attachment.
            </summary>
            <param name="atInfo">Attachment object</param>
            <param name="deletePhysicalFile">Delete physical file</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentsInternal">
            <summary>
            Gets the query for all attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.MoveAttachmentInternal(CMS.DocumentEngine.AttachmentInfo,System.Int32,System.Int32)">
            <summary>
            Moves the attachment data to the new site.
            </summary>
            <param name="attachment">Attachment object</param>
            <param name="oldSiteId">Old site ID</param>
            <param name="newSiteId">New site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.MoveAttachmentUpInternal(System.Guid,System.Int32)">
            <summary>
            Moves temporary attachment up.
            </summary>
            <param name="attachmentGuid">GUID of attachment</param>
            <param name="documentId">Document ID (0 for temporary attachments)</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.MoveAttachmentDownInternal(System.Guid,System.Int32)">
            <summary>
            Moves temporary attachment down.
            </summary>
            <param name="attachmentGuid">GUID of attachment</param>
            <param name="documentId">Document ID (0 for temporary attachments)</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteOldTemporaryAttachmentsInternal">
            <summary>
            Deletes old temporary attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteTemporaryAttachmentsInternal(System.Int32)">
            <summary>
            Deletes old temporary attachments.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.AddTemporaryAttachmentInternal(System.Guid,System.String,System.Guid,System.Guid,System.Object,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="guidColumnName">Column containing the Attachment GUID (optional)</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file (HttpPostedFile or file path)</param>
            <param name="siteId">Site ID</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.ResizeImageAttachmentInternal(CMS.DocumentEngine.AttachmentInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes image to specified dimensions.
            </summary>
            <param name="newAttachment">Attachment info</param>
            <param name="width">New width of the attachment</param>
            <param name="height">New height of the attachment</param>
            <param name="maxSideSize">Maximal side size of the attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetUniqueTemporaryAttachmentFileNameInternal(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Method gets unique temporary attachment file name in the form scope.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="fileName">Name of file</param>
            <param name="currentAttachmentId">Current attachment ID</param>
            <param name="siteId">Site ID</param>
            <returns>Unique attachment name</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.IsUniqueTemporaryAttachmentNameInternal(System.Guid,System.String,System.String,System.Int32)">
            <summary>
            Finds out whether given attachment name is unique
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="fileName">Name of file</param>
            <param name="extension">Extension of file</param>
            <param name="currentAttachmentId">Current attachment ID</param>
            <returns>True if attachment name is unique</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetAttachmentBinaryInternal(System.Guid,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns attachment binary and optionally store it in file system.
            </summary>
            <param name="guid">GUID of the attachment to get</param>
            <param name="id">ID of the attachment to get</param>
            <param name="siteName">Site name</param>
            <param name="storeInFileSystem">If true, given attachment is stored in file system</param>
            <returns>Attachment binary.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetFileInternal(System.Guid,System.String)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="guid">GUID of the file to get</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetFileInternal(CMS.DocumentEngine.AttachmentInfo,System.String)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="atInfo">Attachment object</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetImageThumbnailFileInternal(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the image thumbnail from the disk.
            </summary>
            <param name="guid">GUID of the file to get</param>
            <param name="siteName">Site name</param>
            <param name="height">Image thumbnail width</param>
            <param name="width">Image thumbnail height</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetImageThumbnailInternal(CMS.DocumentEngine.AttachmentInfo,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesn't exist).
            </summary>
            <param name="atInfo">Attachment info</param>
            <param name="siteName">Site name</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Maximum side size</param>
            <param name="searchThumbnailFile">Indicates if thumbnail should be searched on the disk</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetImageThumbnailInternal(System.Guid,System.Byte[],System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesn't exist).
            </summary>
            <param name="guid">File GUID</param>
            <param name="imageData">Image data</param>
            <param name="extension">Image extension</param>
            <param name="siteName">Site name</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Maximum side size</param>
            <param name="originalWidth">Original width of the image</param>
            <param name="originalHeight">Original height of the image</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.EnsurePhysicalFileInternal(CMS.DocumentEngine.AttachmentInfo,System.String)">
            <summary>
            Ensures the file in the file system and returns the path to the file.
            </summary>
            <param name="atInfo">Attachment info</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.EnsureThumbnailFileInternal(CMS.DocumentEngine.AttachmentInfo,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ensures the thumbnail file.
            </summary>
            <param name="atInfo">Attachment info</param>
            <param name="siteName">Site name</param>
            <param name="width">File width</param>
            <param name="height">File height</param>
            <param name="maxSideSize">Maximum side size</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.SaveFileToDiskInternal(System.String,System.String,System.String,System.String,CMS.Core.BinaryData,System.Boolean,System.Boolean)">
            <summary>
            Saves file to the disk.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="fileName">File name</param>
            <param name="fileExtension">File extension</param>
            <param name="fileData">File data (byte[] or Stream)</param>   
            <param name="deleteOldFiles">Indicates whether files in destination folder with mask '[guid]*.*' should be deleted</param>
            <param name="synchronization">Indicates if this function is called from "ProcessTask"</param>
            <returns>Returns the path to the file on the disk</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.DeleteFileInternal(System.Guid,System.String,System.Boolean,System.Boolean)">
            <summary>
            Delete all files with the same name ([name].*) in specified directory.
            </summary>
            <param name="fileGuid">GUID of the file to delete</param>
            <param name="siteName">Site name</param>
            <param name="deleteDirectory">Determines whether delete specified directory or not</param>
            <param name="synchronization">Indicates whether the method is called due to synchronization</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.ResizeAttachmentsInternal(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes specified attachments to the required dimensions.
            </summary>
            <param name="where">Where condition</param>        
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Image max side size</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.SetAttachmentsQualityInternal(System.String,System.Int32)">
            <summary>
            Sets image quality of all specified attachments to the required level.
            </summary>
            <param name="where">Where condition to filter attachments</param>        
            <param name="quality">New image quality, from 0 (lowest quality) to 100 (highest quality)</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.CanResizeImageInternal(CMS.DocumentEngine.AttachmentInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks whether the image should be processed (resized) by the Image manager (if the destination size is smaller).
            </summary>
            <param name="atInfo">Attachment info to check</param>
            <param name="width">New width</param>
            <param name="height">New height</param>
            <param name="maxSideSize">Max side size</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetFilesFolderPathInternal(System.String)">
            <summary>
            Returns files folder physical path according to 'CMSFilesFolder' settings key is set or not.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetFilesFolderRelativePathInternal(System.String)">
            <summary>
            Returns files folder relative path according to 'CMSFilesFolder' settings key is set or not.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetFileFolder(System.String,System.String)">
            <summary>
            Returns physical path to the file folder(files folder path + subfolder).
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>        
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetFilePhysicalPathInternal(System.String,System.String,System.String)">
            <summary>
            Returns physical path to the file.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetThumbnailPhysicalPathInternal(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns physical path to the thumbnail.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetDependencyCacheKeysInternal(CMS.DocumentEngine.AttachmentInfo)">
            <summary>
            Gets the cache key dependencies array for the attachment (cache item keys affected when the attachment changes).
            </summary>
            <param name="ai">Attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.GetDependencyCacheKeysInternal(System.Int32)">
            <summary>
            Gets the cache key dependencies array for the attachment order change (cache item keys affected when the attachment order changes).
            </summary>
            <param name="documentId">Attachment document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentInfoProvider.ClearSearchCacheInternal">
            <summary>
            Clears the AttachmentSearchContent for all attachments in the DB.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfoProvider.DeletePhysicalFiles">
            <summary>
            Thumbnail quality.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfoProvider.ThumbnailQuality">
            <summary>
            Thumbnail quality.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfoProvider.WebApplicationPhysicalPath">
            <summary>
            Full path to the root of the web.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentInfoProvider.DeleteTemporaryAttachmentsOlderThan">
            <summary>
            Specifies how old (in hours) should be attachments deleted by the 'Delete old temporary attachments' scheduled task.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentURLProvider">
            <summary>
            URL provider for the attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetFilePhysicalURL(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the URL to the physical file.
            </summary>
            <param name="siteName">File site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetAttachmentUrl(System.String,System.String,System.String)">
            <summary>
            Returns friendly attachment URL.
            </summary>
            <param name="safeFileName">Attachment safe file name</param>
            <param name="aliasPath">Node alias path</param>
            <param name="extension">File extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetPermanentAttachmentUrl(System.Guid,System.String,System.String)">
            <summary>
            Returns attachment URL.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="nodeAlias">Node alias</param>
            <param name="extension">Extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetAttachmentUrl(System.Guid,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns attachment URL.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="nodeAlias">Node Alias name</param>
            <param name="extension">Extension</param>
            <param name="versionHistoryId">Version history ID</param>
            <param name="prefix">URL prefix, if null, "getdoc" is used, the prefix must be supported by the URL rewriting engine</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetFilePhysicalURLInternal(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the URL to the physical file.
            </summary>
            <param name="siteName">File site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetPermanentAttachmentUrlInternal(System.Guid,System.String,System.String)">
            <summary>
            Returns attachment URL.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="nodeAlias">Node alias</param>
            <param name="extension">Extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetAttachmentUrlInternal(System.String,System.String,System.String)">
            <summary>
            Returns friendly attachment URL.
            </summary>
            <param name="safeFileName">Attachment safe file name</param>
            <param name="aliasPath">Node alias path</param>
            <param name="extension">Extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentURLProvider.GetAttachmentUrlInternal(System.Guid,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns attachment URL.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="nodeAlias">Node alias name</param>
            <param name="extension">Extension</param>
            <param name="versionHistoryId">Version history ID</param>
            <param name="prefix">URL prefix, if null, "getdoc" is used, the prefix must be supported by the URL rewriting engine</param>
        </member>
        <member name="T:CMS.DocumentEngine.CMSOutputAttachment">
            <summary>
            Summary description for CMSOutputFile.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.#ctor(CMS.DocumentEngine.AttachmentInfo,System.Byte[])">
            <summary>
            Constructor.
            </summary>
            <param name="ai">AttachmentInfo</param>
            <param name="data">Output file data</param>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.EnsureData(System.Byte[])">
            <summary>
            Ensures that the object contains the output data.
            </summary>
            <param name="defaultData">Default data which should be loaded if data required</param>
            <returns>Returns true if new data has been loaded</returns>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.LoadData(System.Byte[])">
            <summary>
            Loads the data to the object.
            </summary>
            <param name="data">New data</param>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.GetValue(System.String)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="M:CMS.DocumentEngine.CMSOutputAttachment.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.UseWatermark">
            <summary>
            If true, the watermark is allowed to be used.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.Attachment">
            <summary>
            AttachmentInfo without AttachmentBinary.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.LastModified">
            <summary>
            Time when the file was last modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.IsSecured">
            <summary>
            File is secured (located within the secured area document).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.AliasPath">
            <summary>
            Document alias path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.SiteName">
            <summary>
            Document site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.CultureCode">
            <summary>
            Document culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.RedirectTo">
            <summary>
            If set, file should be redirected to the file system.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.FileNode">
            <summary>
            File document node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.MimeType">
            <summary>
            Mime type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.ValidTo">
            <summary>
            Time to which the file is valid.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.ValidFrom">
            <summary>
            Time from which the file is valid.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.IsValid">
            <summary>
            Returns true if the file is valid.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.IsPublished">
            <summary>
            Returns true if the file is published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.PhysicalFile">
            <summary>
            Physical file path to the data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.DocumentEngine.CMSOutputAttachment.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAttachment">
            <summary>
            Document attachment with versioning support
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachment.Delete">
            <summary>
            Deletes the attachment
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachment.Update">
            <summary>
            Updates the attachment
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAttachment.Insert">
            <summary>
            Inserts the attachment
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TemporaryAttachmentsCleaner">
            <summary>
            Provides an ITask interface for the temporary attachments deletion.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TemporaryAttachmentsCleaner.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the purge action.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="T:CMS.DocumentEngine.CMSDataContextBase`1">
            <summary>
            Data context base
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContextBase`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContextBase`1.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjects">
            <summary>
            Loads GlobalObjects and SiteObjects lists.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjectType(System.String,System.Int32)">
            <summary>
            Loads the given object type
            </summary>
            <param name="objectType">Object type</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContextBase`1.LoadObjectType(CMS.DataEngine.GeneralizedInfo,System.Int32)">
            <summary>
            Loads the given object type
            </summary>
            <param name="infoObj">Info object for the given object type</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContextBase`1.RegisterProperties">
            <summary>
            Registers the object properties.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.IsCachedObject">
            <summary>
            If true, the object is cached within the system for later use
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.IsDisconnected">
            <summary>
            Returns true if this object is disconnected from the database
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.SiteName">
            <summary>
            Context site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.RootDocument">
            <summary>
            Gets the root document of current site.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.Documents">
            <summary>
            Gets the collection of all documents on the site
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.Settings">
            <summary>
            Gets the object encapsulating all the settings categories with its setting.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContextBase`1.SiteObjects">
            <summary>
            Returns the list of all site objects (entry point to site objects).
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CMSSiteDataContext">
            <summary>
            Data context for specific site, contains only site related items
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSSiteDataContext.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSSiteDataContext.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="T:CMS.DocumentEngine.ModuleUsageTracking.DocumentEngineUsageDataSource">
            <summary>
            Module usage data for document engine.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ModuleUsageTracking.DocumentEngineUsageDataSource.GetData">
            <summary>
            Get document engine usage data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.ModuleUsageTracking.DocumentEngineUsageDataSource.Name">
            <summary>
            Document engine usage data source name.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AllowedChildClassInfo">
            <summary>
            AllowedChildClass data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AllowedChildClassInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AllowedChildClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfo.TouchParent">
            <summary>
            Updates the parent object by saving it (to update the timestamp).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty AllowedChildClass object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AllowedChildClass object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AllowedChildClassInfo.ChildClassID">
            <summary>
            Child class ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AllowedChildClassInfo.ParentClassID">
            <summary>
            Parent class ID.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AllowedChildClassInfoProvider">
            <summary>
            Class providing AllowedChildClassInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.GetAllowedChildClasses">
            <summary>
            Returns all allowed child classes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.GetAllowedChildClasses(System.Int32,System.Int32)">
            <summary>
            Returns allowed child classes for given parent class ID and site ID.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.GetAllowedChildClasses(System.String,System.String)">
            <summary>
            Returns the DataSet of all the allowed child classes records.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.GetAllowedChildClassInfo(System.Int32,System.Int32)">
            <summary>
            Returns the AllowedChildClassInfo structure for the specified allowedChildClass.
            </summary>
            <param name="parentClassId">ParentClassID</param>
            <param name="childClassId">ChildClassID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.SetAllowedChildClassInfo(CMS.DocumentEngine.AllowedChildClassInfo)">
            <summary>
            Sets (updates or inserts) specified allowedChildClass.
            </summary>
            <param name="allowedChildClass">AllowedChildClass to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.DeleteAllowedChildClassInfo(CMS.DocumentEngine.AllowedChildClassInfo)">
            <summary>
            Deletes specified allowedChildClass.
            </summary>
            <param name="infoObj">AllowedChildClass object</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.RemoveAllowedChildClass(System.Int32,System.Int32)">
            <summary>
            Deletes specified allowedChildClass.
            </summary>
            <param name="parentClassId">ParentClassID</param>
            <param name="childClassId">ChildClassID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.AddAllowedChildClass(System.Int32,System.Int32)">
            <summary>
            Inserts new record to CMS_AllowedChildClasses table if no one exists.
            </summary>
            <param name="parentClassId">Parent ClassID</param>
            <param name="childClassId">Child ClassID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.IsChildClassAllowed(System.Int32,System.Int32)">
            <summary>
            Returns true if child class is allowed within given parent class.
            </summary>
            <param name="parentClassId">Parent class ID</param>
            <param name="childClassId">Child class ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.GetAllowedChildClassesInternal">
            <summary>
            Returns all allowed child classes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.GetAllowedChildClassInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the AllowedChildClassInfo structure for the specified allowedChildClass.
            </summary>
            <param name="parentClassId">ParentClassID</param>
            <param name="childClassId">ChildClassID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.GetAllowedChildClassesInternal(System.String,System.String)">
            <summary>
            Returns the DataSet of all the allowed child classes records.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.SetAllowedChildClassInfoInternal(CMS.DocumentEngine.AllowedChildClassInfo)">
            <summary>
            Sets (updates or inserts) specified allowedChildClass.
            </summary>
            <param name="allowedChildClass">AllowedChildClass to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.DeleteAllowedChildClassInfoInternal(CMS.DocumentEngine.AllowedChildClassInfo)">
            <summary>
            Deletes specified allowedChildClass.
            </summary>
            <param name="infoObj">AllowedChildClass object</param>
        </member>
        <member name="M:CMS.DocumentEngine.AllowedChildClassInfoProvider.InvalidateFileHasChildClass(System.Int32)">
            <summary>
            Invalidates variable CMSFileHasChildClass
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="P:CMS.DocumentEngine.AllowedChildClassInfoProvider.CMSFileHasChildClass">
            <summary>
            Indicates if CMS File has allowed child classes.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeHelper">
            <summary>
            Helper methods for document types
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTypeHelper.mClassNames">
            <summary>
            Table of resolved class names [classNames -> resolved]
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeHelper.ClearClassNames(System.Boolean)">
            <summary>
            Clears the class names resolving cache.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeHelper.GetClassNames(System.String,System.String)">
            <summary>
            Resolves the document type classes, if the input value is constant TreeProvider.ALL_CLASSES, returns all class names used on any site, otherwise resolves * as a wildcard in class name to get all matching. Supports the list of classes separated by semicolon.
            </summary>
            <param name="classNames">Class names value</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeHelper.GetDocumentTypeClasses">
            <summary>
            Returns the document type classes DataSet.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeHelper.ClassNames">
            <summary>
            Table of resolved class names [classNames -> resolved]
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeInfo">
            <summary>
            Specialized class for the document type info.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeInfo.RegisteredProperties">
            <summary>
            Local registered properties
            </summary>
        </member>
        <member name="T:CMS.RegisterDocumentTypeAttribute">
            <summary>
            Registers the document type class within the system or overrides the existing one.
            </summary>
        </member>
        <member name="M:CMS.RegisterDocumentTypeAttribute.#ctor(System.String,System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="className">Class name</param>
            <param name="type">Object type</param>
        </member>
        <member name="M:CMS.RegisterDocumentTypeAttribute.Init">
            <summary>
            Initializes the attribute
            </summary>
        </member>
        <member name="P:CMS.RegisterDocumentTypeAttribute.ClassName">
            <summary>
            Class name
            </summary>
        </member>
        <member name="P:CMS.RegisterDocumentTypeAttribute.AssemblyName">
            <summary>
            Class assembly name
            </summary>
        </member>
        <member name="P:CMS.RegisterDocumentTypeAttribute.MarkedType">
            <summary>
            Document factory
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSortEnum">
            <summary>
            Documents sort type enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSortEnum.Unknown">
            <summary>
            Unknown type of sort.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSortEnum.Alphabetically">
            <summary>
            Sorting by alphabet.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSortEnum.ByDate">
            <summary>
            Sorting by date.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IconType">
            <summary>
            Document con type enumeration
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.Linked">
            <summary>
            Linked document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.NotTranslated">
            <summary>
            Not translated document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.Redirected">
            <summary>
            Redirected document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.Archived">
            <summary>
            Archived document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.Published">
            <summary>
            Published document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.NotPublished">
            <summary>
            Not published document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.CheckedOut">
            <summary>
            Checked out document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.VersionNotPublished">
            <summary>
            Document version not published
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.IconType.Wireframe">
            <summary>
            Wireframe document type
            </summary>
        </member>
        <member name="T:CMS.Base.DocumentTypeNotExistsException">
            <summary>
            Exception raised when a non-existing document type is requested.
            </summary>
        </member>
        <member name="M:CMS.Base.DocumentTypeNotExistsException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Base.DocumentTypeNotExistsException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Base.DocumentTypeNotExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Exception that caused the current exception</param>
        </member>
        <member name="M:CMS.Base.DocumentTypeNotExistsException.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="method">Method which caused threw the exception</param>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.Base.DocumentTypeNotExistsException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="method">Method which caused threw the exception</param>
            <param name="message">Exception message</param>
            <param name="innerException">Exception that caused the current exception</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentDataEventArgs">
            <summary>
            Document data event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentDataEventArgs.Data">
            <summary>
            Data set returned by document query or custom data set
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentDataEventArgs.Query">
            <summary>
            Document query.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentDataEventArgs.TotalRecords">
            <summary>
            Number of total records when paging is used. If value is less than 0, value is calculated as number of rows in Data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentDataEventHandler">
            <summary>
            Document data handler enables manipulation with document data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDataEventHandler.StartEvent(System.Data.DataSet,CMS.DocumentEngine.IDocumentQuery,System.Int32)">
            <summary>
            Initiates the event handling.
            </summary>
            <param name="result">Data set with document data.</param>
            <param name="query">Default document query used to select data in case data set is not returned by event.</param>
            <param name="totalRecords">Number of records which should by used for paging. If not set, number of rows in dataset is calculated.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentMarkEventArgs">
            <summary>
            Document mark event arguments.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentMarkEventArgs.MarkContent">
            <summary>
            Content of the mark to be modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentMarkEventArgs.Page">
            <summary>
            Page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentMarkEventArgs.SiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentMarkEventArgs.PreferredCultureCode">
            <summary>
            Preferred culture code.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentMarkEventArgs.StepType">
            <summary>
            Current workflow step.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentMarkEventArgs.Container">
            <summary>
            Container with Document and Node data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentMarkHandler">
            <summary>
            Document mark handler.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeScopeClassInfo">
            <summary>
            DocumentTypeScopeClass data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTypeScopeClassInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTypeScopeClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentTypeScopeClass object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentTypeScopeClass object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfo.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="scopeId">Document type scope identifier</param>
            <param name="classId">Document type class identifier</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeClassInfo.ScopeID">
            <summary>
            Document type scope identifier.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeClassInfo.ClassID">
            <summary>
            Document type identifier.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider">
            <summary>
            Class providing DocumentTypeScopeClass management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.GetScopeClassInfo(System.Int32)">
            <summary>
            Returns document type scope class with specified ID.
            </summary>
            <param name="classId">Document type scope class ID.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.SetScopeClassInfo(CMS.DocumentEngine.DocumentTypeScopeClassInfo)">
            <summary>
            Sets (updates or inserts) specified document type scope class.
            </summary>
            <param name="classObj">Document type scope class to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.DeleteScopeClassInfo(CMS.DocumentEngine.DocumentTypeScopeClassInfo)">
            <summary>
            Deletes specified document type scope class.
            </summary>
            <param name="classObj">Document type scope class to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.DeleteScopeClassInfo(System.Int32)">
            <summary>
            Deletes document type scope class with specified ID.
            </summary>
            <param name="classId">Document type scope class ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.GetScopeClasses">
            <summary>
            Gets the query for all scope class bindings.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.GetScopeClasses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all document type scope classes matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.GetScopeClassInfo(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentTypeScopeClassInfo structure for the specified scope and class.
            </summary>
            <param name="scopeId">Scope identifier</param>        
            <param name="classId">Class identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.RemoveClassFromScope(System.Int32,System.Int32)">
            <summary>
            Removes document type from scope.
            </summary>
            <param name="scopeId">Scope identifier</param>        
            <param name="classId">Class identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.AddClassToScope(System.Int32,System.Int32)">
            <summary>
            Adds document type to scope.
            </summary>
            <param name="scopeId">Scope identifier</param>        
            <param name="classId">Class identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.GetScopeClassInfoInternal(System.Int32)">
            <summary>
            Returns document type scope class with specified ID.
            </summary>
            <param name="classId">Document type scope class ID.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.SetScopeClassInfoInternal(CMS.DocumentEngine.DocumentTypeScopeClassInfo)">
            <summary>
            Sets (updates or inserts) specified document type scope class.
            </summary>
            <param name="classObj">Document type scope class to be set.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.DeleteScopeClassInfoInternal(CMS.DocumentEngine.DocumentTypeScopeClassInfo)">
            <summary>
            Deletes specified document type scope class.
            </summary>
            <param name="classObj">Document type scope class to be deleted.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.GetScopeClassesInternal">
            <summary>
            Gets the query for all scope class bindings.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.GetScopeClassInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentTypeScopeClassInfo structure for the specified scope and class.
            </summary>
            <param name="scopeId">Scope identifier</param>        
            <param name="classId">Class identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.RemoveClassFromScopeInternal(System.Int32,System.Int32)">
            <summary>
            Removes document type from scope.
            </summary>
            <param name="scopeId">Scope identifier</param>        
            <param name="classId">Class identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeClassInfoProvider.AddClassToScopeInternal(System.Int32,System.Int32)">
            <summary>
            Adds document type to scope.
            </summary>
            <param name="scopeId">Scope identifier</param>        
            <param name="classId">Class identifier</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeScopeInfo">
            <summary>
            DocumentTypeScopeInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTypeScopeInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTypeScopeInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentTypeScopeInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentTypeScopeInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeGUID">
            <summary>
            Document type scope GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeLastModified">
            <summary>
            Document type scope last modified date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeID">
            <summary>
            Document type scope identifier.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeSiteID">
            <summary>
            Document type scope site identifier.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopePath">
            <summary>
            Document type scope starting path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeIncludeChildren">
            <summary>
            Indicates if scope is applied to children documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeAllowAllTypes">
            <summary>
            Indicates if scope allows all document types.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeAllowLinks">
            <summary>
            Indicates if scope allows creating linked documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeAllowABVariant">
            <summary>
            Indicates if scope allows creating A/B test variants.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeInfo.ScopeMacroCondition">
            <summary>
            Document type scope macro condition.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeScopeInfoProvider">
            <summary>
            Class providing ScopeInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeInfo(System.Int32)">
            <summary>
            Returns document type scope with specified ID.
            </summary>
            <param name="scopeId">Document type scope ID.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.SetScopeInfo(CMS.DocumentEngine.DocumentTypeScopeInfo)">
            <summary>
            Sets (updates or inserts) specified document type scope.
            </summary>
            <param name="scopeObj">Document type scope to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.DeleteScopeInfo(CMS.DocumentEngine.DocumentTypeScopeInfo)">
            <summary>
            Deletes specified document type scope.
            </summary>
            <param name="scopeObj">Document type scope to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.DeleteScopeInfo(System.Int32)">
            <summary>
            Deletes document type scope with specified ID.
            </summary>
            <param name="scopeId">Document type scope ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopes">
            <summary>
            Gets the query for all scopes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopes(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all document type scopes matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopesForDocumentType(System.Int32,System.Int32)">
            <summary>
            Returns dataset of all document type scopes for specified document type matching the specified parameters.
            </summary>       
            <param name="documentTypeId">Document type identifier</param>
            <param name="siteId">Site ID.</param>        		
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeInfo(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the best fitting document type scope for specified node alias path.
            </summary>
            <param name="node">Node under which is created a new document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeClassWhereCondition(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the where condition to filter document types allowed in scope.
            </summary>
            <param name="node">Node under which is created a new document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeClassWhereCondition(CMS.DocumentEngine.DocumentTypeScopeInfo)">
            <summary>
            Returns the where condition to filter document types allowed in scope.
            </summary>
            <param name="scope">Document type scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.IsDocumentTypeAllowed(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Returns true if document type is allowed in given alias path.
            </summary>
            <param name="node">Node under which is created a new document</param>
            <param name="classId">Created document type identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeInfoInternal(System.Int32)">
            <summary>
            Returns document type scope with specified ID.
            </summary>
            <param name="scopeId">Document type scope ID.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.SetScopeInfoInternal(CMS.DocumentEngine.DocumentTypeScopeInfo)">
            <summary>
            Sets (updates or inserts) specified document type scope.
            </summary>
            <param name="scopeObj">Document type scope to be set.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.DeleteScopeInfoInternal(CMS.DocumentEngine.DocumentTypeScopeInfo)">
            <summary>
            Deletes specified document type scope.
            </summary>
            <param name="scopeObj">Document type scope to be deleted.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopesInternal">
            <summary>
            Gets the query for all scopes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeInfoInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the best fitting document type scope for specified node alias path.
            </summary>
            <param name="node">Node under which is created a new document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeClassWhereConditionInternal(CMS.DocumentEngine.DocumentTypeScopeInfo)">
            <summary>
            Returns the where condition to filter document types allowed in the best fitting scope for given node alias path.
            </summary>
            <param name="scope">Document type scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.IsDocumentTypeAllowedInternal(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Returns true if document type is allowed in given alias path.
            </summary>
            <param name="node">Node under which is created a new document</param>
            <param name="classId">Created document type identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeScopeInfoProvider.GetScopeResolver(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initializes macro resolver.
            </summary>
            <param name="node">Node under which is created a new document</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeScopeResolvers">
            <summary>
            Resolvers used in e-mail templates and other macro visual components.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeScopeResolvers.DocumentTypeScopeResolver">
            <summary>
            Returns document type scope macro resolver with document and current user fields.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentChangeOrderEventArgs">
            <summary>
            Document change order event arguments
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1">
            <summary>
            Document change order event arguments
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.#ctor(`0,System.Int32,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="node">Document</param>
            <param name="newOrder">Specific new document order index to be set</param>
            <param name="relativeOrder">Indicates if the NewOrder index is relative to current document position.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.#ctor(`0,CMS.DocumentEngine.DocumentOrderEnum)">
            <summary>
            Constructor.
            </summary>
            <param name="node">Document</param>
            <param name="orderType">Defines the order type (First, Last, Alphabetical) if the NewOrder is not specified</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.Node">
            <summary>
            Document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.NewOrder">
            <summary>
            Specific new document order index to be set. If not defined, the OrderType is used instead.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.RelativeOrder">
            <summary>
            Indicates if the NewOrder index is relative to current document position.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentChangeOrderEventArgs`1.OrderType">
            <summary>
            Defines the order type (First, Last, Alphabetical) if the NewOrder is not specified.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderEventArgs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderEventArgs.#ctor(CMS.DocumentEngine.TreeNode,System.Int32,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="node">Document</param>
            <param name="newOrder">Specific new document order index to be set</param>
            <param name="relativeOrder">Indicates if the NewOrder index is relative to current document position.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderEventArgs.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.DocumentOrderEnum)">
            <summary>
            Constructor.
            </summary>
            <param name="node">Document</param>
            <param name="orderType">Defines the order type (First, Last, Alphabetical) if the NewOrder is not specified</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentChangeOrderHandler">
            <summary>
            Document change order handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderHandler.#ctor(CMS.DocumentEngine.DocumentChangeOrderHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentChangeOrderHandler.StartEvent(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Handled document</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSortEventArgs">
            <summary>
            Documents sorting event arguments
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSortEventArgs`1">
            <summary>
            Document change order event arguments
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSortEventArgs`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSortEventArgs`1.#ctor(System.Int32,System.Boolean,CMS.DocumentEngine.DocumentSortEnum)">
            <summary>
            Constructor.
            </summary>
            <param name="parentNodeId">Node ID of a document which sub-section should be sorted</param>
            <param name="ascending">Indicates if the sort should be ascending</param>
            <param name="sortType">Defines the sort type (by alphabet or date)</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSortEventArgs`1.ParentNodeId">
            <summary>
            Node ID of a document which sub-section should be sorted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSortEventArgs`1.Ascending">
            <summary>
            Indicates if the sort should be ascending.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSortEventArgs`1.SortType">
            <summary>
            Defines the sort type (by alphabet or date).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSortEventArgs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSortEventArgs.#ctor(System.Int32,System.Boolean,CMS.DocumentEngine.DocumentSortEnum)">
            <summary>
            Constructor.
            </summary>
            <param name="parentNodeId">Node ID of a document which sub-section should be sorted</param>
            <param name="ascending">Indicates if the sort should be ascending</param>
            <param name="sortType">Defines the sort type (by alphabet or date)</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSortHandler">
            <summary>
            Document change order handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSortHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSortHandler.#ctor(CMS.DocumentEngine.DocumentSortHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSearchEventArgs">
            <summary>
            Document search event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.Node">
            <summary>
            Document node
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.Content">
            <summary>
            Document content, used only when it makes sense: GetContent
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.Settings">
            <summary>
            Search settings for this document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.IndexInfo">
            <summary>
            Search index info
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.SearchDocument">
            <summary>
            Search document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSearchEventArgs.IsCrawler">
            <summary>
            If true, the content is indexed for a crawler
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSearchHandler">
            <summary>
            Document search handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchHandler.#ctor(CMS.DocumentEngine.DocumentSearchHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSecurityEventArgs">
            <summary>
            Document security event arguments
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSecurityEventArgs`1">
            <summary>
            Document security event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSecurityEventArgs`1.Node">
            <summary>
            Document to check
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSecurityHandler">
            <summary>
            Document security handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHandler.#ctor(CMS.DocumentEngine.DocumentSecurityHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHandler.StartEvent(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Handled document</param>
        </member>
        <member name="T:CMS.DocumentEngine.Macros.ContentMembershipMethods">
            <summary>
            Content membership methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.Macros.ContentMembershipMethods.IsAuthorizedPerContent(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if user has access to Pages application.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.DocumentEngine.NodeDataMethods">
            <summary>
            Wrapper class to provide document node data methods in the MacroEngine.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.NodeDataMethods.GetIcon(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Gets icon for specified document type.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentFakeMethods">
            <summary>
            Provides support for faking documents within automated tests
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentFakeMethods.mDocTypeClassId">
            <summary>
            Class ID used for faking document type classes
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFakeMethods.DocumentType``1(CMS.DataEngine.IFakeMethods,System.String)">
            <summary>
            Fakes the given document type
            </summary>
            <param name="fake">Fake methods</param>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFakeMethods.CreateFakeDocumentTypeInfo``1(CMS.DataEngine.IFakeMethods,System.String,System.Action{CMS.DataEngine.DataClassInfo})">
            <summary>
            Creates a fake document type info for faking of the documents
            </summary>
            <param name="fake">Fake methods</param>
            <param name="className">Class name</param>
            <param name="setup">Setup action for further fields of the document type</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentStructureFactory">
            <summary>
            Provides support for document tests.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.Setup">
            <summary>
            Setups basic site structure with sample 'Test' document type for testing purposes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.SelectDocument(System.String,System.String)">
            <summary>
            Selects document
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.CreateDocument(System.String,System.String,System.String,System.String,CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates a document
            </summary>
            <param name="type">Document type</param>
            <param name="name">Document name</param>
            <param name="data">Custom field data</param>
            <param name="cultureCode">Culture code</param>
            <param name="parent">Parent document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.ResetSiteStructure">
            <summary>
            Deletes all documents (all culture variants) and creates new root document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.AssignCulture(System.String)">
            <summary>
            Assignes new culture to the site
            </summary>
            <param name="newCulture">Culture code to assign</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.CreateSite">
            <summary>
            Creates site including root document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.CreateSite(System.String,System.String)">
            <summary>
            Creates site
            </summary>
            <param name="name">Site name</param>
            <param name="domain">Site domain</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.AddTypeToSite(System.String,System.String)">
            <summary>
            Adds type to site
            </summary>
            <param name="typeName">Document type name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.CreateDocumentType(System.String,System.Func{System.Collections.Generic.List{CMS.FormEngine.FormFieldInfo}})">
            <summary>
            Creates document type by given name
            </summary>
            <param name="name">New document type name</param>
            <param name="fieldsCreator">Delegate to create additional field</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.CreateWorkflow(System.String)">
            <summary>
            Creates workflow with given scope
            </summary>
            <param name="path">Path to define the scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.CreateView(CMS.DataEngine.DataClassInfo)">
            <summary>
            Creates view for given class info
            </summary>
            <param name="type">Class info</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.GetClassXML(System.String,System.String)">
            <summary>
            Gets class XML definition
            </summary>
            <param name="tableName">Table name</param>
            <param name="schema">Schema</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentStructureFactory.GetClassFormInfo(System.Func{System.Collections.Generic.List{CMS.FormEngine.FormFieldInfo}})">
            <summary>
            Gets class form info
            </summary>
            <param name="fieldsCreator">Delegate to create additional field</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentStructureFactory.TableManager">
            <summary>
            Table manager
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentStructureFactory.User">
            <summary>
            User
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentStructureFactory.Site">
            <summary>
            Site
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentStructureFactory.SiteName">
            <summary>
            Site name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentStructureFactory.CombineWithDefaultCulture">
            <summary>
            Indicates if content should be combined with default culture
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentStructureFactory.Provider">
            <summary>
            Tree provider instance
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentStructureFactory.Root">
            <summary>
            Root document
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeExport">
            <summary>
            Handles special actions during the Document type export process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeExport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeImport">
            <summary>
            Handles special actions during the Document type import process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeImport.Init">
            <summary>
            Initializes import handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageInfoResult">
            <summary>
            Contextual data object related to the current url (returns different data for different document aliases).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoResult.GetCurrentResult(System.String)">
            <summary>
            Gets the PageInfoResult object for the current url. Returns an null if there is no PageInfoResult stored for the current url.
            </summary>
            <param name="url">The URL</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoResult.SetCurrentResult(System.String,CMS.DocumentEngine.PageInfoResult)">
            <summary>
            Stores the page result data for the given url.
            </summary>
            <param name="url">The URL</param>
            <param name="pageResult">The page result data</param>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfoResult.PageResults">
            <summary>
            Gets the page results dictionary (key: url, value: resultData).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfoResult.DocumentAliasActionMode">
            <summary>
            Gets or sets the document alias action mode.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfoResult.DocumentAliasCampaign">
            <summary>
            Gets or sets the document alias campaign.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfoResult.DocumentAliasCulture">
            <summary>
            Gets or sets the document alias culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfoResult.DocumentAliasUrlPath">
            <summary>
            Gets or sets the document alias URL path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfoResult.PageSource">
            <summary>
            Gets or sets the page source.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfoResult.WildcardQueryString">
            <summary>
            Gets or sets the wildcard query string.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageLocationEnum">
            <summary>
            Page location enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageLocationEnum.None">
            <summary>
            None location.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageLocationEnum.All">
            <summary>
            All (any location).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageLocationEnum.SecuredAreas">
            <summary>
            Only secured areas.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageSecurityHelper">
            <summary>
            Page security methods
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckPagePermissions(System.String)">
            <summary>
            Gets the location where permissions of the page should be checked.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.AccessDeniedPageURL(System.String)">
            <summary>
            Gets the URL of the page where the user should be redirected when not permitted to read the document.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.RedirectToAccessDenied(System.String)">
            <summary>
            Redirects the user to the access denied page.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckSecuredAreas(System.String,CMS.DocumentEngine.PageInfo,System.Boolean,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Redirect to logon page if actual page requires authentication.
            </summary>
            <param name="siteName">Site name</param>
            <param name="pi">PageInfo</param>
            <param name="excludeSystem">If true, the system pages are excluded from evaluation</param>
            <param name="viewMode">View mode</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckSecuredAreas(System.String,System.Boolean,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Redirect to logon page if the user is not authenticated.
            </summary>
            <param name="siteName">Site name</param>
            <param name="excludeSystem">If true, the system pages are excluded from evaluation</param>
            <param name="viewMode">View mode</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckSecured(System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Redirects to the logon page if user is not authenticated.
            </summary>
            <param name="siteName">Site name</param>
            <param name="viewMode">View mode</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckPermissions(System.String,CMS.DocumentEngine.PageInfo,System.Boolean,System.String)">
            <summary>
            Redirect to logon page if actual page requires authentication.
            </summary>
            <param name="siteName">Site name</param>
            <param name="pi">PageInfo</param>
            <param name="excludeSystem">If true, the system pages are excluded from evaluation</param>
            <param name="relativePath">Relative path</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.RequestSecurePage(CMS.DocumentEngine.PageInfo,System.Boolean,CMS.PortalEngine.ViewModeEnum,System.String)">
            <summary>
            Redirect to https:// if page require it
            </summary>
            <param name="pi">PageInfo</param>
            <param name="excludeSystem">If true, the system pages are excluded from evaluation</param>
            <param name="viewMode">View mode</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.RequestSecurePage(System.Boolean,System.Int32,CMS.PortalEngine.ViewModeEnum,System.String)">
            <summary>
            Redirect to  https:// or to http:// if page require it
            </summary>
            <param name="excludeSystem">If true, the system pages are excluded from evaluation</param>
            <param name="requireSSLValue">Require SSL value</param>
            <param name="viewMode">View mode</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.HandlePreviewLink">
            <summary>
            Handles the preview link for document engine
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckPreviewLink(CMS.DocumentEngine.PageInfo,CMS.PortalEngine.ViewModeEnum,System.Boolean)">
            <summary>
            Check preview link context
            </summary>
            <param name="pageInfo">Page info</param>
            <param name="viewMode">View mode</param>
            <param name="documentUrl">Indicates if document URL should be checked</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckViewModePermissions(CMS.DocumentEngine.PageInfo,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Checks whether user is authorized to content with non-live site view mode.
            </summary>
            <param name="pi">Page info</param>
            <param name="viewMode">View mode</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckPageSecurity(CMS.DocumentEngine.PageInfo,CMS.SiteProvider.SiteNameOnDemand,CMS.PortalEngine.ViewModeOnDemand,System.String)">
            <summary>
            Checks the security for current page
            </summary>
            <param name="pageInfo">Page info to check</param>
            <param name="siteName">Site name</param>
            <param name="viewMode">View mode</param>
            <param name="relativePath">Relative path</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckSecuredAreasInternal(System.String,System.Boolean)">
            <summary>
            Redirect to logon page if the user is not authenticated.
            </summary>
            <param name="siteName">Site name</param>
            <param name="excludeSystem">If true, the system pages are excluded from evaluation</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageSecurityHelper.CheckSecuredInternal(System.String)">
            <summary>
            Redirects to the logon page if user is not authenticated.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="T:CMS.DocumentEngine.AclItemInfoProvider">
            <summary>
            Class providing AclItemInfo management.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AclItemInfoProvider.PERMISSIONS_UNDEFINED">
            <summary>
            Indicates that permission won't be changed.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AclItemInfoProvider.ACL_ITEMS_STORAGE_KEY">
            <summary>
            Storage key used for grouping stored ACL items.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItems">
            <summary>
            Returns a query for all the AclItemInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItemInfo(System.Int32)">
            <summary>
            Returns AclitemInfo with specified ID.
            </summary>
            <param name="id">AclitemInfo ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.SetAclItemInfo(CMS.DocumentEngine.AclItemInfo)">
            <summary>
            Sets (updates or inserts) specified AclItemInfo.
            </summary>
            <param name="infoObj">AclItemInfo to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.DeleteAclItemInfo(CMS.DocumentEngine.AclItemInfo)">
            <summary>
            Deletes specified AclItemInfo.
            </summary>
            <param name="infoObj">AclItemInfo to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.DeleteAclItemInfo(System.Int32)">
            <summary>
            Deletes AclItemInfo with specified ID.
            </summary>
            <param name="id">AclItemInfo ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItems(System.Int32,System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns DataSet containing all ACL items related to the specified node. (The inherited ACL items are not included.).
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
            <param name="includeInherited">If true, includes the inherited ACLs to the list</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItems(System.Int32,System.Int32,CMS.Membership.UserInfo)">
            <summary>
            Returns DataSet containing all ACL items related to the specified ACL and user.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="siteId">Site ID</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItems(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo)">
            <summary>
            Returns DataSet containing ACL items related to the specified node and relevant for given user account (and its roles).
            </summary>
            <param name="node">Document node</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAllowedRoles(System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Returns DataSet of roles with allowed particular node permission.
            </summary>
            <param name="aclId">ACLID</param>
            <param name="permission">Permission to check</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAllowedUsers(System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Returns DataSet of roles with allowed particular node permission.
            </summary>
            <param name="aclId">ACLID</param>
            <param name="permission">Permission to check</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.SetUserPermissions(CMS.DocumentEngine.TreeNode,System.Int32,System.Int32,CMS.Membership.UserInfo)">
            <summary>
            Sets specified Allowed and Denied permissions to the specified user for given node.
            </summary>
            <param name="node">Document node</param>
            <param name="allowed">Allowed permissions</param>
            <param name="denied">Denied permissions</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.SetRolePermissions(CMS.DocumentEngine.TreeNode,System.Int32,System.Int32,CMS.Membership.RoleInfo)">
             <summary>
             Sets specified Allowed and Denied permissions to the specified role for given node.
             </summary>
             <param name="node">Document node</param>
             <param name="allowed">Allowed permissions</param>
             <param name="denied">Denied permissions</param>
            <param name="roleInfo">RoleInfo instance</param>    
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.ClearRequestCache(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Invalidates security settings for given document and user.
            </summary>
            <param name="node">Tree node</param>
            <param name="userId">User identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.RemoveUser(System.Int32,CMS.Membership.UserInfo)">
            <summary>
            Removes specified user from the ACL of the given node if the user has a native ACL Item for that node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.RemoveRole(System.Int32,CMS.Membership.RoleInfo)">
            <summary>
            Removes specified role from the ACL of the given node if the role has a native ACL Item for that node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="roleInfo">RoleInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.DeleteAclItems(System.Int32)">
            <summary>
            Clears ACL items.
            </summary>
            <param name="aclId">ACL ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItemsInternal">
            <summary>
            Returns a query for all the AclItemInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItemInfoInternal(System.Int32)">
            <summary>
            Returns AclItemInfo with specified ID.
            </summary>
            <param name="id">AclItemInfo ID.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.SetAclItemInfoInternal(CMS.DocumentEngine.AclItemInfo)">
            <summary>
            Sets (updates or inserts) specified AclItemInfo.
            </summary>
            <param name="infoObj">AclItemInfo to be set.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.DeleteAclItemInfoInternal(CMS.DocumentEngine.AclItemInfo)">
            <summary>
            Deletes specified AclItemInfo.
            </summary>
            <param name="infoObj">AclItemInfo to be deleted.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItemsInternal(System.Int32,System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns DataSet containing all ACL items related to the specified node. (The inherited ACL items are not included.).
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
            <param name="includeInherited">If true, includes the inherited ACLs to the list</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItemsInternal(System.Int32,System.Int32,CMS.Membership.UserInfo)">
            <summary>
            Returns DataSet containing all ACL items related to the specified ACL and user.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="siteId">Site ID</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAllowedItemsInternal(System.String,System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Returns DataSet of specified objects with allowed particular node permission.
            </summary>
            <param name="objectType">Object type</param>
            <param name="aclId">ACL ID</param>
            <param name="permission">Node permission</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.SetOperatorPermissionsInternal(CMS.DocumentEngine.TreeNode,System.Int32,System.Int32,CMS.Membership.UserInfo,CMS.Membership.RoleInfo)">
            <summary>
            Sets specified Allowed and Denied permissions to the specified user or role for given node.
            </summary>
            <param name="node">Document node</param>
            <param name="allowed">Allowed permissions</param>
            <param name="denied">Denied permissions</param>
            <param name="userInfo">UserInfo instance. If you specify roleInfo, this value must be null</param>        
            <param name="roleInfo">RoleInfo instance. If you specify userInfo, this value must be null</param>        
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.ClearRequestCacheInternal(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Invalidates security settings for given document and user.
            </summary>
            <param name="node">Document node</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.RemoveOperatorInternal(System.Int32,CMS.Membership.UserInfo,CMS.Membership.RoleInfo)">
            <summary>
            Removes specified user or role (operator) from the ACL of the given node if the operator has a native ACL Item for that node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="userInfo">UserInfo instance. If roleInfo is specified, this value must be null</param>
            <param name="roleInfo">RoleInfo instance. If userInfo is specified, this value must be null</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.DeleteAclItemsInternal(System.Int32)">
            <summary>
            Clears ACL items.
            </summary>
            <param name="aclId">ACL ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItems(System.String,System.Int32,CMS.Membership.UserInfo)">
            <summary>
            Returns DataSet containing ACL items related to the specified ACLs.
            </summary>
            <param name="aclIDs">List of ACL IDs separated by ','</param>
            <param name="siteId">Site ID</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetACLItemsKey(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns key for retrieving ACL items from request.
            </summary>
            <param name="userId">User identifier</param>
            <param name="aclId">ACL identifier</param>
            <param name="siteId">Site ID</param>
            <returns>Key to retrieve ACL items from request</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetOperatorNativeAclItems(System.Int32,CMS.Membership.UserInfo,CMS.Membership.RoleInfo,System.String)">
            <summary>
            Returns DataSet containing user's native ACL Items for given node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="userInfo">UserInfo instance. If roleInfo is specified, this value must be null</param>
            <param name="roleInfo">RoleInfo instance. If userInfo is specified, this value must be null</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAclItemsWhereCondition(System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Builds where condition for obtaining ACL items.
            </summary>
            <param name="aclId">ACL ID</param>
            <param name="inheritedAcls">Inherited ACLs</param>
            <param name="nodeId">Node Id</param>
            <param name="includeInherited">If true, includes the inherited ACLs to the list</param>
            <returns>Returns where condition</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfoProvider.GetAllowedItemsWhereCondition(System.String,System.Int32,System.Int32)">
            <summary>
            Returns where condition for allowed items
            </summary>
            <param name="objectType">Object type</param>
            <param name="aclId">ACL ID</param>
            <param name="permValue">Permission integer representation</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentCategoryInfo">
            <summary>
            DocumentCategoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentCategoryInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentCategoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentCategoryInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentCategoryInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCategoryInfo.CategoryID">
            <summary>
            Category ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCategoryInfo.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentCategoryInfoProvider">
            <summary>
            Class providing DocumentCategoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.GetDocumentCategoryInfo(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentCategoryInfo structure for the specified documentCategory.
            </summary>
            <param name="categoryId">CategoryID</param>
            <param name="documentId">DocumentID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.GetDocumentCategories">
            <summary>
            Returns a query for all the DocumentCategoryInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.SetDocumentCategoryInfo(CMS.DocumentEngine.DocumentCategoryInfo)">
            <summary>
            Sets (updates or inserts) specified documentCategory.
            </summary>
            <param name="documentCategory">DocumentCategory to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.DeleteDocumentCategoryInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified documentCategory.
            </summary>
            <param name="categoryId">CategoryID</param>
            <param name="documentId">DocumentID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.DeleteDocumentCategoryInfo(CMS.DocumentEngine.DocumentCategoryInfo)">
            <summary>
            Deletes specified documentCategory.
            </summary>
            <param name="infoObj">DocumentCategory object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.AddDocumentToCategory(System.Int32,System.Int32)">
            <summary>
            Adds document (post) to the specified category.
            </summary>
            <param name="documentId">ID of document</param>
            <param name="categoryId">ID of category</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.RemoveDocumentFromCategory(System.Int32,System.Int32)">
            <summary>
            Removes document from category.
            </summary>
            <param name="documentId">ID of document</param>
            <param name="categoryId">ID of category</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.RemoveDocumentFromCategories(System.Int32,System.Boolean)">
            <summary>
            Removes all categories from given document.
            </summary>
            <param name="documentId">ID of document</param>        
            <param name="logSynchronization">Indicates if staging tasks should be logged</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.GetDocumentCategoryInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentCategoryInfo structure for the specified documentCategory.
            </summary>
            <param name="categoryId">CategoryID</param>
            <param name="documentId">DocumentID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.GetDocumentCategoriesInternal">
            <summary>
            Returns a query for all the DocumentCategoryInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.SetDocumentCategoryInfoInternal(CMS.DocumentEngine.DocumentCategoryInfo)">
            <summary>
            Sets (updates or inserts) specified documentCategory.
            </summary>
            <param name="documentCategory">DocumentCategory to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.DeleteDocumentCategoryInfoInternal(CMS.DocumentEngine.DocumentCategoryInfo)">
            <summary>
            Deletes specified documentCategory.
            </summary>
            <param name="infoObj">DocumentCategory object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.RemoveDocumentFromCategoriesInternal(System.Int32,System.Boolean)">
            <summary>
            Removes all categories from given document.
            </summary>
            <param name="documentId">ID of document</param>        
            <param name="logSynchronization">Indicates if staging tasks should be logged</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategoryInfoProvider.SetCategoryCount(System.Int32)">
            <summary>
            Sets the number of documents associated to given category.
            </summary>
            <param name="categoryId">Category ID</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTagInfo">
            <summary>
            DocumentTagInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTagInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTagInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentTagInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentTagInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTagInfo.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTagInfo.TagID">
            <summary>
            Tag ID.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTagInfoProvider">
            <summary>
            Class providing document tag management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.GetDocumentTagInfo(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentTagInfo structure for the specified documentTag.
            </summary>
            <param name="documentId">DocumentID</param>
            <param name="tagId">TagID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.GetDocumentTags">
            <summary>
            Returns a query for all the RelationshipInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.SetDocumentTagInfo(CMS.DocumentEngine.DocumentTagInfo)">
            <summary>
            Sets (updates or inserts) specified documentTag.
            </summary>
            <param name="documentTag">DocumentTag to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.DeleteDocumentTagInfo(CMS.DocumentEngine.DocumentTagInfo)">
            <summary>
            Deletes specified documentTag.
            </summary>
            <param name="documentTag">DocumentTag object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.RemoveTags(System.Int32,System.Boolean)">
            <summary>
            Removes all the tags from the specified document.
            </summary>        
            <param name="documentId">ID of the document tags are removed from</param> 
            <param name="deleteNotUsedTags">True (default) - All tags which are not assigned to any other document are deleted, False -  Tags always stay in the system even they are not assigned to any other document. </param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.RemoveTags(System.Int32,System.Int32,System.String)">
            <summary>
            Removes a specified tags from specified group and specified document.
            </summary>
            <param name="groupId">ID of the group holding tags to remove</param>
            <param name="documentId">ID of the document tags are removed from</param>
            <param name="tags">Set of tags (separated by commas) to remove</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.AddTags(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a specified tags of the specified group to the specified document.
            </summary>
            <param name="groupId">ID of the group inserted tags belongs to</param>
            <param name="documentId">ID of the document tags are inserted to</param>
            <param name="tags">Set of tags (separated by commas) to insert</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.AddTagToDocument(System.Int32,System.Int32)">
            <summary>
            Adds the specific tag to the specified document.
            </summary>
            <param name="tagId">ID of the tag to add</param>
            <param name="documentId">ID of the document the tag is added for</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.RemoveTagFromDocument(System.Int32,System.Int32)">
            <summary>
            Removes tag from the specified document.
            </summary>
            <param name="tagId">ID of the removed tag</param>
            <param name="documentId">ID of the document tag is removed from</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.GetDocumentTagInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentTagInfo structure for the specified documentID and tagID.
            </summary>
            <param name="documentId">DocumentID</param>
            <param name="tagId">TagID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.GetDocumentTagsInternal">
            <summary>
            Returns a query for all the DocumentTagInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.SetDocumentTagInfoInternal(CMS.DocumentEngine.DocumentTagInfo)">
            <summary>
            Sets (updates or inserts) specified documentTag.
            </summary>
            <param name="documentTag">Document tag binding object to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.DeleteDocumentTagInfoInternal(CMS.DocumentEngine.DocumentTagInfo)">
            <summary>
            Deletes specified documentTag.
            </summary>
            <param name="documentTag">Document tag binding object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.RemoveTagsInternal(System.Int32,System.Boolean)">
            <summary>
            Removes all the tags from the specified document.
            </summary>        
            <param name="documentId">ID of the document tags are removed from</param> 
            <param name="deleteNotUsedTags">True (default) - All tags which are not assigned to any other document are deleted, False -  Tags always stay in the system even they are not assigned to any other document. </param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.RemoveTagsInternal(System.Int32,System.Int32,System.String)">
            <summary>
            Removes a specified tags from specified group and specified document.
            </summary>
            <param name="groupId">ID of the group holding tags to remove</param>
            <param name="documentId">ID of the document tags are removed from</param>
            <param name="tags">Set of tags (separated by commas) to remove</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.AddTagsInternal(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a specified tags of the specified group to the specified document.
            </summary>
            <param name="groupId">ID of the group inserted tags belongs to</param>
            <param name="documentId">ID of the document tags are inserted to</param>
            <param name="tags">Set of tags (separated by commas) to insert</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTagInfoProvider.GetTagsList(System.String)">
            <summary>
            Gets list of tags filtering the multiple occurrence of particular tags.
            </summary>
            <param name="tags">Tags (separated by commas)</param>        
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTagInfoProvider.TagsRegex">
            <summary>
            Regular expression for tags.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CombinedTreeNodeCollection">
            <summary>
            Combined collection of documents.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CombinedTreeNodeCollection.SubmitChanges">
            <summary>
            Submits the changes in the collection to the database.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeCollection`1">
            <summary>
            Generic strongly typed info object collection
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeCollection">
            <summary>
            Document collection.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.mTreeProvider">
            <summary>
            Tree provider object to use for the database access.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.SiteName">
            <summary>
            Site name of the documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.AliasPath">
            <summary>
            Alias path.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.CultureCode">
            <summary>
            Culture of the documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.CombineWithDefaultCulture">
            <summary>
            Combine with default culture.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.ClassNames">
            <summary>
            Class names to select.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.MaxRelativeLevel">
            <summary>
            Maximum relative level.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.SelectOnlyPublished">
            <summary>
            Select only published documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.SelectAllData">
            <summary>
            If true, the coupled data are retrieved in case class names are specified
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.mWithAllData">
            <summary>
            Collection including coupled data
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeCollection.mWithPermissionsCheck">
            <summary>
            Collection with filtered documents based on permission check in context of current user
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Constructor. Creates a static collection populated from DataSet
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="sourceData">Source DataSet</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.#ctor(System.String,CMS.DocumentEngine.TreeNode,CMS.Base.ICMSStorage)">
            <summary>
            Constructor.
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="parentDocument">Parent document node</param>
            <param name="parentStorage">Parent storage</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.CreateNewObject(System.Data.DataRow)">
            <summary>
            Creates new instance of the encapsulated object.
            </summary>
            <param name="dr">DataRow with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.GetObjectName(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets the unique object name from the given object.
            </summary>
            <param name="obj">Object</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.GetObjectByNameInternal(System.String)">
            <summary>
            Gets the object by its name, internal representation that gets data from database
            </summary>
            <param name="name">Name of the object</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.GetData(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the data for the collection.
            </summary>
            <param name="where">Where condition</param>
            <param name="offset">Starting offset for the data</param>
            <param name="maxRecords">Maximum number of records to get</param>
            <param name="totalRecords">Returning total number of records</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.Clone">
            <summary>
            Creates the clone of the collection.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.SubmitChanges">
            <summary>
            Submits the changes in the collection to the database.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection.RegisterColumns">
            <summary>
            Registers the Columns of this object
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.NameColumn">
            <summary>
            Name column name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.DefaultClassName">
            <summary>
            Default class name for the documents (if ClassName column is not available)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.IsDisconnected">
            <summary>
            Returns true if the collection is disconnected from the data source
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.ParentDocument">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.User">
            <summary>
            User to be used for permissions check of the collection if required. If none provided, permissions are not checked.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.TreeProvider">
            <summary>
            Tree provider instance used to access data. If no TreeProvider is assigned, a new TreeProvider instance is created.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.WithAllData">
            <summary>
            Collection including coupled data
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollection.WithPermissionsCheck">
            <summary>
            Collection with filtered documents based on permission check in context of current user
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection`1.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Constructor. Creates a static collection populated from DataSet
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="sourceData">Source DataSet</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection`1.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollection`1.GetEnumerator">
            <summary>
            Gets the strongly typed enumerator for the collection
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeCollectionSettings">
            <summary>
            Collection settings for Document collection
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.LowerName">
            <summary>
            Lower name of the collection for indexation
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.ClassName">
            <summary>
            Class name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.SiteName">
            <summary>
            Site name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.AliasPath">
            <summary>
            Alias path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.CultureCode">
            <summary>
            Culture code
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.CombineWithDefaultCulture">
            <summary>
            Combine the documents with default culture
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.ClassNames">
            <summary>
            Class names of the documents to get
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.MaxRelativeLevel">
            <summary>
            Maximum relative level
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.SelectOnlyPublished">
            <summary>
            Select only published documents
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeCollectionSettings.SelectAllData">
            <summary>
            Indicates if coupled data should be included
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentRepository">
            <summary>
            Repository of the documents without workflow support.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentRepository.mTreeProvider">
            <summary>
            Tree provider object to use for the database access.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentRepository.mIsLastVersion">
            <summary>
            If true, the document is the last version (retrieved using DocumentHelper.GetDocument).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentRepository.mSiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentRepository.mRootDocument">
            <summary>
            Root document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentRepository.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentRepository.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Constructor.
            </summary>
            <param name="parentDocument">Parent document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentRepository.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentRepository.GetRootDocument">
            <summary>
            Gets the root document from the database.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentRepository.AddCollection(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.String)">
            <summary>
            Registers the given collection of objects within the repository.
            </summary>
            <param name="name">Collection name</param>
            <param name="className">Default class name</param>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Select top N rows only</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentRepository.LoadCollection(CMS.DocumentEngine.TreeNodeCollectionSettings)">
            <summary>
            Loads the given collection.
            </summary>
            <param name="settings">Collection settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentRepository.NewCollection(System.String)">
            <summary>
            Creates new collection for the data.
            </summary>
            <param name="type">Type of the collection</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentRepository.NewCombinedCollection">
            <summary>
            Creates new combined collection for the data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentRepository.TreeProvider">
            <summary>
            Tree provider instance used to access data. If no TreeProvider is assigned, a new TreeProvider instance is created.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentRepository.IsLastVersion">
            <summary>
            If true, the document is the last version (retrieved using DocumentHelper.GetDocument).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentRepository.SiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentRepository.RootDocument">
            <summary>
            Root document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentRepository.ParentDocument">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentRepository.IsDisconnected">
            <summary>
            Returns true if the repository is disconnected from the data source
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.ContentPublisher">
            <summary>
            Provides an ITask interface for the content publishing.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ContentPublisher.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the publish action.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="T:CMS.DocumentEngine.CMSDataContext">
            <summary>
            Data context.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContext.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContext.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContext.LoadObjects">
            <summary>
            Loads GlobalObjects and SiteObjects lists.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContext.LoadObjectType(CMS.DataEngine.GeneralizedInfo,System.Int32)">
            <summary>
            Loads the given object type
            </summary>
            <param name="infoObj">Info object for the given object type</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.CMSDataContext.RegisterProperties">
            <summary>
            Registers the object properties.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.Current">
            <summary>
            Returns current data context.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.BrowserHelper">
            <summary>
            Browser information
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.DeviceInfo">
            <summary>
            Current device info.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.DeviceProfileInfo">
            <summary>
            Current device profile info.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.DeviceProfileInfoName">
            <summary>
            Current device profile name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.CSS">
            <summary>
            CSS styles
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.AllSites">
            <summary>
            Gets the collection of all sites.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.GlobalObjects">
            <summary>
            Returns the list of all global objects (entry point to global objects).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.Transformations">
            <summary>
            Collection of transformations indexed by their full name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.Queries">
            <summary>
            Collection of queries indexed by their full name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.WebPartLayouts">
            <summary>
            Collection of web part layouts indexed by their full name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CMSDataContext.AlternativeForms">
            <summary>
            Collection of alternative forms indexed by their full name
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CSSContainer">
            <summary>
            CSS Container
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.CSSContainer.mProperties">
            <summary>
            Properties
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.CSSContainer.mStylesheets">
            <summary>
            Stylesheets
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.CSSContainer.mContainers">
            <summary>
            Web part containers
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.CSSContainer.mLayouts">
            <summary>
            Page layouts
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.CSSContainer.mTemplates">
            <summary>
            Page templates
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.CSSContainer.mWebParts">
            <summary>
            Web parts
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.CSSContainer.mWebPartLayouts">
            <summary>
            Web part layouts
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.CSSContainer.mTransformations">
            <summary>
            Transformations
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CSSContainer.GetProperty(System.String)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.CSSContainer.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="P:CMS.DocumentEngine.CSSContainer.Stylesheets">
            <summary>
            CSS Stylesheets
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CSSContainer.Containers">
            <summary>
            Web part containers
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CSSContainer.Layouts">
            <summary>
            Page layouts
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CSSContainer.Templates">
            <summary>
            Page templates
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CSSContainer.WebParts">
            <summary>
            Web parts
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CSSContainer.Transformations">
            <summary>
            Transformations
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CSSContainer.WebPartLayouts">
            <summary>
            Web part layouts
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CSSContainer.Properties">
            <summary>
            Properties of the object available through GetProperty.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CSSContainer.Item(System.String)">
            <summary>
            Returns the CSS content of the given CSS stylesheet (by code name)
            </summary>
            <param name="name">Stylesheet name</param>
        </member>
        <member name="P:CMS.DocumentEngine.CSSContainer.CMS#Base#INameIndexable#Item(System.String)">
            <summary>
            Returns the object registered by the specific name.
            </summary>
            <param name="name">Object name (indexer)</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentHierarchyHelper">
            <summary>
            Object hierarchy manipulation methods.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.#ctor(CMS.DataEngine.ExportObjectSettings,CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates new instance of CMSHierarchyHelper which can be used to serialize given object.
            </summary>
            <param name="settings">Settings of the serialization</param>
            <param name="node">TreeNode to serialize</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.TraverseObjectStructure(CMS.DataEngine.TraverseObjectSettings,CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Returns XML representation of given instance of tree node.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="node">TreeNode to serialize</param>
            <param name="currentLevel">Current level of the object tree structure</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.TraverseConnectedObject(CMS.DataEngine.TraverseObjectSettings,CMS.DocumentEngine.TreeNode,CMS.DataEngine.ExportObjectSettings,System.String)">
            <summary>
            Traverses the internal connected object
            </summary>
            <param name="settings">Traverse settings</param>
            <param name="node">Document node</param>
            <param name="childObjectSettings">Child object settings</param>
            <param name="colName">Column name referring to the object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.TraverseTreeCollection(CMS.DataEngine.TraverseObjectSettings,System.Collections.Generic.IEnumerable{CMS.DocumentEngine.TreeNode},System.String,System.Int32)">
            <summary>
            Exports given TreeNode collection.
            </summary>        
            <param name="settings">Traverse object settings</param>
            <param name="collection">Collection to export</param>
            <param name="name">Name of the collection</param>
            <param name="currentLevel">Current level of the object tree structure</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.LoadObjectFromXML(CMS.DocumentEngine.TreeNode,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Loads objects data including collection from a given XML representation.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="xml">XML data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="updateMode">If true, only column contained in the JSON method are loaded (columns which are not contained are not set to null)</param>
            <param name="prepareStructure">If true, in create mode the structure of data set is prepared in advanced (causes the whole process to be case sensitive)</param>
            <param name="cultureName">Name of the culture to use for parsing double and datetime values</param>
            <param name="excludedColumns">Columns which will be ignored during the data load even if they are in the provided data</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.LoadObjectFromJSON(CMS.DocumentEngine.TreeNode,System.String,System.Boolean,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Loads objects data including collection from a given XML representation.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="json">JSON data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="updateMode">If true, only column contained in the JSON method are loaded (columns which are not contained are not set to null)</param>
            <param name="excludedColumns">Columns which will be ignored during the data load even if they are in the provided data</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.LoadObjectFromDataSet(CMS.DocumentEngine.TreeNode,System.Data.DataSet,System.Boolean,System.Int32,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Loads TreeNode data including collection from a given data set.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="ds">Dataset with data</param>
            <param name="disconnectNode">If true, node collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="id">ID of the object to identify it within the DataSet</param>
            <param name="columnsToUpdate">List of columns which will be updated</param>
            <param name="excludedColumns">Columns which will be ignored during the data load even if they are in the provided data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.GetNodeClassName(System.String,CMS.DataEngine.ExportFormatEnum)">
            <summary>
            Parses NodeClassName from node data.
            </summary>
            <param name="nodeData">Node data</param>
            <param name="format">Format of the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.GetNodeClassName(System.String,CMS.DataEngine.ExportFormatEnum,System.Boolean)">
            <summary>
            Parses NodeClassName from node data.
            </summary>
            <param name="nodeData">Node data</param>
            <param name="format">Format of the data</param>
            <param name="tryToGetByClassId">Tries to get the name by extracting class identifier.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.LoadObjectFromDataSet(CMS.DocumentEngine.TreeNode,System.Data.DataSet,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Loads object data including collection from a given data set.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="ds">Dataset with data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="columnsToUpdate">List of columns to update</param>
            <param name="excludedColumns">Columns which will be ignored during the data load even if they are in the provided data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.ExportObject(CMS.DataEngine.ExportObjectSettings,CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns XML representation of given instance of info object.
            </summary>
            <param name="settings">Export settings</param>
            <param name="node">Tree node to export</param>
            <returns>XML representation of given instance of document.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.GetSyndicationItem(System.ServiceModel.Syndication.SyndicationContent)">
            <summary>
            Gets the syndication item created from current object
            </summary>
            <param name="content">Content</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.ProcessObjectMethod(CMS.DataEngine.TraverseObjectSettings,CMS.Base.ICMSObject,System.Int32)">
            <summary>
            Handles export to required format.
            </summary>
            <param name="settings">Export settings object</param>
            <param name="obj">Object (TreeNode / Info Object) to process</param>
            <param name="currentLevel">Current level within the object tree structure</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.GetMetadataSource">
            <summary>
            Gets the metadata source object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.ExportObjectData">
            <summary>
            Exports the object data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHierarchyHelper.DataAvailable">
            <summary>
            Returns true if the data can be exported
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHierarchyHelper.NodeClassXMLRegex">
            <summary>
            Regex to parse node class id from xml data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentHierarchyHelper.NodeClassJSONRegex">
            <summary>
            Regex to parse node class id from JSON data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CopyNodeDataSettings">
            <summary>
            Represents the settings for the node data copying.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CopyNodeDataSettings.#ctor">
            <summary>
            Creates a default settings object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CopyNodeDataSettings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a settings object with the properties initialized to the specified values.
            </summary>
            <param name="copyTreeData">Indicates if the CMS_Tree data should be copied</param>
            <param name="copyDocumentData">Indicates if the CMS_Document data should be copied</param>
            <param name="copyCoupledData">Indicates if the coupled data should be copied</param>
            <param name="copyVersionedData">Indicates if the versioned data should be copied</param>
            <param name="copyNonVersionedData">Indicates if the non-versioned data should be copied</param>
            <param name="copySystemTreeData">Indicates if the system tree data should be copied</param>
            <param name="copySystemDocumentData">Indicates if the system document data should be copied</param>
            <param name="copySkuData">Indicates if the SKU data should be copied</param>
            <param name="excludeColumns">Columns to be excluded from the copying, as a string of the column names separated by a semicolon</param>
        </member>
        <member name="M:CMS.DocumentEngine.CopyNodeDataSettings.#ctor(System.Boolean,System.String)">
            <summary>
            Creates a settings object with the properties initialized to the specified values.
            </summary>
            <param name="copyFlagsValue">Common copy flags value</param>
            <param name="excludeColumns">Columns to be excluded from the copying, as a string of the column names separated by a semicolon</param>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopyTreeData">
            <summary>
            Gets or sets a value that indicates if the CMS_Tree data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopyDocumentData">
            <summary>
            Gets or sets a value that indicates if the CMS_Document data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopyCoupledData">
            <summary>
            Gets or sets a value that indicates if the coupled data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopyVersionedData">
            <summary>
            Gets or sets a value that indicates if the versioned data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopyNonVersionedData">
            <summary>
            Gets or sets a value that indicates if the non-versioned data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopySystemTreeData">
            <summary>
            Gets or sets a value that indicates if the system tree data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopySystemDocumentData">
            <summary>
            Gets or sets a value that indicates if the system document data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.CopySKUData">
            <summary>
            Gets or sets a value that indicates if the SKU data should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.ExcludeColumns">
            <summary>
            Gets or sets the columns to be excluded from the copying, as a string of the column names separated by a semicolon.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyNodeDataSettings.UpdateOriginalValues">
            <summary>
            Indicates if the original values of a document should be updated.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.ITreeNodeMethods">
            <summary>
            TreeNodesMethods interface
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ITreeNodeMethods.IsProductSection">
            <summary>
            Returns true if the document type stands for the product section
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ITreeNodeMethods.IsProduct">
            <summary>
            Returns true if the document represents a product.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ITreeNodeMethods.IsWireframe">
            <summary>
            Returns true if the document is a wireframe document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ITreeNodeMethods.GetUsedPageTemplateIdColumn">
            <summary>
            Gets the page template id used by this document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ITreeNodeMethods.GetUsedPageTemplateId">
            <summary>
            Gets the page template id used by this document
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeMethods">
            <summary>
            TreeNode methods applicable to both PageInfo and TreeNode objects
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeMethods.IsRoot(CMS.Base.ITreeNode)">
            <summary>
            Returns true if the given document is a root node
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeMethods.IsProductSection(CMS.Base.ITreeNode)">
            <summary>
            Returns true if the document type stands for the product section
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeMethods.IsProduct(CMS.Base.ITreeNode)">
            <summary>
            Returns true if the document's document type represents a product.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeMethods.IsWireframe(CMS.Base.ITreeNode)">
            <summary>
            Returns true if the document is a wireframe document
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeMethods.GetUsedPageTemplateIdColumn(CMS.Base.ITreeNode)">
            <summary>
            Gets the page template id used by this document
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeMethods.GetAbsoluteUrl(CMS.Base.ITreeNode)">
            <summary>
            Gets document absolute URL.
            </summary>
            <param name="node">Document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeMethods.GetRelativeUrl(CMS.Base.ITreeNode)">
            <summary>
            Gets document relative URL.
            </summary>
            <param name="node">Document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeMethods.GetPermanentUrl(CMS.Base.ITreeNode)">
            <summary>
            Gets document permanent absolute URL.
            </summary>
            <param name="node">Document</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentFactory`1">
            <summary>
            Factory that provides document objects
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IDocumentFactory">
            <summary>
            Interface for the document factory
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFactory`1.#ctor(System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="type">Type of the document class</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFactory`1.CreateNewObject">
            <summary>
            Creates new document type object
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentFactory`1.Type">
            <summary>
            Document type
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentGenerator">
            <summary>
            Generator of the specific document types
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentGenerator.mGenerator">
            <summary>
            Object generator
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentGenerator.NewInstance``1(System.String)">
            <summary>
            Creates new instance of the given type
            </summary>
            <typeparam name="NodeType">Node type</typeparam>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentGenerator.RegisterDocumentType(System.String,CMS.DocumentEngine.IDocumentFactory)">
            <summary>
            Registers the given document type class
            </summary>
            <param name="className">Class name to register</param>
            <param name="factory">Document factory</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentGenerator.RegisterDocumentType``1(System.String)">
            <summary>
            Registers the given document type class
            </summary>
            <param name="className">Class name to register</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentGenerator.RegisterDefaultFactory(CMS.DocumentEngine.IDocumentFactory)">
            <summary>
            Registers the default factory for the documents, which overlaps the default one
            </summary>
            <param name="factory">Factory to register</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentHelper">
            <summary>
            Class providing document management methods.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentHelper.DOCUMENT_FIELDS_PREFIX">
            <summary>
            Document fields prefix for object type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentHelper.DOCUMENT_PREFIX">
            <summary>
            Document prefix for object type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentHelper.GETDOCUMENTS_REQUIRED_COLUMNS">
            <summary>
            Columns required for the get documents operation to perform successfully in any case.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocument(System.Int32,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns current document version. If versioning is used, gets the current VersionHistory record, otherwise gets the record directly from the database.
            </summary>
            <param name="documentId">Document ID to retrieve</param>
            <param name="tree">TreeProvider to use for the DB access</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocument(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns current document version. If versioning is used, gets the current VersionHistory record, otherwise gets the record directly from the database. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="columns">Columns to be selected</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocument(CMS.DocumentEngine.NodeSelectionParameters,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns current document version. If versioning used, gets the current VersionHistory record, otherwise gets the record directly from the database.
            </summary>
            <param name="parameters">Parameters for the node selection</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocument(System.Int32,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns current document version. If versioning used, gets the current VersionHistory record, otherwise gets the record directly from the database.
            </summary>
            <param name="nodeId">Node ID to retrieve</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocument(System.Int32,System.String,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns current document version. If versioning used, gets the current VersionHistory record, if not, gets the record directly from the database.
            </summary>
            <param name="nodeId">Node ID to retrieve</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns the latest version of the document if versioning is used or the document itself otherwise.
            </summary>
            <param name="node">Document node</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns latest version documents data in a dataset. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns latest version documents data in a dataset. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns latest version documents data in a dataset. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="tree">Tree provider to use</param>
            <param name="columns">Columns to be selected. Must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture).</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(CMS.DocumentEngine.NodeSelectionParameters,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns latest version documents data in a dataset.
            </summary>
            <param name="parameters">Parameters for the node selection</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns latest version documents data in a dataset. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to node with this GUID.</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Indicates whether the related node is located on the left side of the relationship.</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean,System.Int32,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns latest version documents data in a dataset. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to node with this GUID.</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Indicates whether the related node is located on the left side of the relationship.</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="columns">Columns to be selected.</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments">
            <summary>
            Gets the query for all documents (latest versions)
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments(System.String)">
            <summary>
            Gets the query for all documents (latest versions) of specific type
            </summary>
            <param name="className">Class name representing document type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocuments``1">
            <summary>
            Gets the query for all documents (latest versions) of specific type
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetVersionsSelectQuery(CMS.DocumentEngine.TreeProvider,System.String)">
            <summary>
            Returns versions select query for the given tree provider.
            </summary>
            <param name="tree">Tree provider</param>
            <param name="classNames">Class names - if null, default document query is returned.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ApplyVersionData(System.Data.DataSet,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Applies the version data to the given DataSet. NodeXML column with XML version data is expected.
            </summary>
            <param name="ds">DataSet with the data</param>
            <param name="coupledData">Apply coupled data</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.UpdateDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.String)">
            <summary>
            Updates the current version of the document within the database. If versioning is used, updates the last version within the VersionHistory, otherwise updates directly the database document record.
            </summary>
            <param name="node">Document to update</param>
            <param name="tree">TreeProvider to use</param>
            <param name="updateColumns">List of columns which should be updated explicitly (separated by ';')</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.InsertDocument(CMS.DocumentEngine.TreeNode,System.Int32,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Inserts a new document.
            </summary>
            <param name="node">Document node</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.InsertDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.Boolean)">
            <summary>
            Inserts a new document.
            </summary>
            <param name="node">Document node</param>
            <param name="parentNode">Parent node</param>
            <param name="tree">TreeProvider to use</param>
            <param name="allowCheckOut">If true, document check out is allowed on the insert action.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.InsertNewCultureVersion(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.String,System.Boolean,System.Boolean)">
            <summary>
            Inserts a new document culture version.
            </summary>
            <param name="node">Document node</param>
            <param name="tree">TreeProvider to use</param>
            <param name="cultureCode">Culture code of new culture version (If not specified, node.DocumentCulture property is used.)</param>
            <param name="createVersion">Create a new version for document under workflow.</param>
            <param name="allowCheckOut">If true, document check out is allowed on the insert action.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.InsertNewCultureVersion(CMS.DocumentEngine.NewCultureDocumentSettings)">
            <summary>
            Inserts a new document culture version.
            </summary>
            <param name="settings">New culture version settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.InsertDocumentAsLink(CMS.DocumentEngine.TreeNode,System.Int32,CMS.DocumentEngine.TreeProvider,System.Boolean,System.Boolean)">
            <summary>
            Inserts a new linked document.
            </summary>
            <param name="node">Document node</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeChildNodes">Link also the node child nodes.</param>
            <param name="copyPermissions">Indicates whether document permissions should be copied.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.InsertDocumentAsLink(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Inserts a new linked document.
            </summary>
            <param name="node">Document node</param>
            <param name="parent">Parent node</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeChildNodes">Link also the node child nodes.</param>
            <param name="copyPermissions">Indicates if the document permissions should be copied.</param>
            <param name="newDocumentsOwner">ID of the new document owner</param>
            <param name="newDocumentsGroup">ID of the new document group</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.Boolean,System.Boolean,System.Boolean,System.String,System.Collections.ArrayList)">
            <summary>
            Deletes the given document.
            </summary>
            <param name="node">Document node to delete</param>
            <param name="tree">TreeProvider to use</param>
            <param name="deleteAllCultures">Delete all culture version of the specified document?</param>
            <param name="destroyHistory">Destroy the document history?</param>
            <param name="webRootFullPath">Full path to the web root folder</param>
            <param name="deletedNodeIDs">List of the deleted node IDs - used to prevent cyclic node deletion.</param>
            <param name="deleteProduct">Delete product of the document</param>
            <returns>Returns true if last culture (Tree record) has been deleted.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteDocument(CMS.DocumentEngine.DeleteDocumentSettings)">
            <summary>
            Deletes document according to supplied settings.
            </summary>
            <param name="settings">Document deletion settings</param>
            <returns>Returns true if last culture (Tree record) has been deleted.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ProcessTrackbacks(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Processes blog post trackbacks
            </summary>
            <param name="node">Document node</param>
            <param name="usesWorkflow">Indicates if document uses workflow</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteAdHocPageTemplates(CMS.DocumentEngine.TreeProvider,CMS.DocumentEngine.TreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Deletes the ad-hoc page templates assigned to given document.
            </summary>
            <param name="tree">Tree provider</param>
            <param name="node">Document node</param>
            <param name="documentTemplate">Delete the document template</param>
            <param name="nodeTemplate">Delete the node template</param>
            <param name="wireframeTemplate">Delete the wireframe template</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeletePageTemplate(CMS.DocumentEngine.TreeProvider,System.Int32)">
            <summary>
            Deletes the document page template.
            </summary>
            <param name="tree">Tree provider</param>
            <param name="templateId">Template ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.LogDocumentChange(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider)">
            <summary>
            If synchronization logging is enabled, disables log context and logs the document change.
            </summary>
            <param name="node">Node to log</param>
            <param name="taskTypeEnum">Task type to log</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.EnsureAlternatingDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.DeleteDocumentSettings,System.Boolean)">
            <summary>
            Ensures paths for alternating document for the currently deleted document.
            </summary>
            <param name="deletedDocument">Deleted document</param>
            <param name="settings">Document deletion settings</param>
            <param name="lastCulture">Indicates whether document is last culture version.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.RemoveBlogPostDependencies(System.Int32)">
            <summary>
            Removes dependencies on blogs from specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.RemoveForumDependencies(System.Int32)">
            <summary>
            Remove document ID from ad-hoc forum.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.RemovePersonalizationDependencies(System.Int32)">
            <summary>
            Removes user personalization for specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.RemoveMessageBoardsDependencies(System.Int32)">
            <summary>
            Removes message boards depending on specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteEventAttendees(System.Int32)">
            <summary>
            Deletes all event attendees of specified document.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteDocumentChildNodes(CMS.DocumentEngine.DeleteDocumentSettings)">
            <summary>
            Deletes the child nodes of all culture versions under the specified parent node.
            </summary>
            <param name="settings">Settings used when deleting child nodes.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ClearWorkflowInformation(CMS.DocumentEngine.TreeNode)">
            <summary>
            Clears the workflow information from the given document node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ClearCheckoutInformation(CMS.DocumentEngine.TreeNode)">
            <summary>
            Clears the checkout information from the given document node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.MoveDocument(CMS.DocumentEngine.TreeNode,System.Int32,CMS.DocumentEngine.TreeProvider,System.Boolean)">
            <summary>
            Moves the specified document to the new location.
            </summary>
            <param name="node">Document node to move</param>
            <param name="targetParentNodeId">Target parent node ID</param>
            <param name="tree">TreeProvider to use</param>
            <param name="copyPermissions">Indicates if node permissions should be preserved.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.MoveDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.Boolean)">
            <summary>
            Moves the specified document to the new location.
            </summary>
            <param name="node">Document node to move</param>
            <param name="target">Target node</param>
            <param name="tree">TreeProvider to use</param>
            <param name="copyPermissions">Indicates if node permissions should be preserved.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.FixTemplatesSiteID(CMS.DocumentEngine.TreeProvider,CMS.DocumentEngine.TreeNode,System.Data.DataRow)">
            <summary>
            Fixes the page template site ID for the ad-hoc template
            </summary>
            <param name="tree">Tree provider</param>
            <param name="newParent">New document parent</param>
            <param name="dr">Data row with the document data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.FixTemplateSiteID(CMS.DocumentEngine.TreeProvider,CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Fixes the page template site ID for the ad-hoc template
            </summary>
            <param name="tree">Tree provider</param>
            <param name="newParent">New document parent</param>
            <param name="pageTemplateId">Page template ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CopyDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Copies the node to the specified location.
            </summary>
            <param name="node">Document node to copy</param>
            <param name="target">Target node</param>
            <param name="includeChildNodes">Copy also the node child nodes.</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CopyDocument(CMS.DocumentEngine.TreeNode,System.Int32,System.Boolean,CMS.DocumentEngine.TreeProvider,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Copies the node to the specified location.
            </summary>
            <param name="node">Document node to copy</param>
            <param name="targetParentNodeId">Target location</param>
            <param name="includeChildNodes">Copy also the node child nodes.</param>
            <param name="tree">TreeProvider to use</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
            <param name="copyPermissions">Indicates whether the document permissions should be copied.</param>
            <param name="newDocumentName">New document name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CopyDocument(CMS.DocumentEngine.CopyDocumentSettings)">
            <summary>
            Copies the node to the specified location.
            </summary>
            <param name="settings">Document copy settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CopyAdHocTemplate(CMS.DocumentEngine.TreeProvider,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,System.Collections.Hashtable,System.String)">
            <summary>
            Copies the ad-hoc page template for the document.
            </summary>
            <param name="tree">Tree provider</param>
            <param name="cultureNode">Target node of specified culture</param>
            <param name="sourceCultureNode">Source node of specified culture</param>
            <param name="pageTemplates">Collection of page templates</param>
            <param name="colName">Column name with the template ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CopyDocumentCategories(System.Int32,System.Int32)">
            <summary>
            Copies categories from one document to another.
            </summary>
            <param name="originalDocumentId">Original document ID</param>
            <param name="newDocumentId">New document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.EnsureOwnAttachments(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.Boolean,System.Collections.Hashtable@,System.Boolean)">
            <summary>
            Creates document attachments for the given document when the attachments are bound to several documents.
            </summary>
            <param name="node">New document node</param>
            <param name="originalNode">Original document node</param>
            <param name="tree">TreeProvider to use</param>
            <param name="processVersionHistory">Indicates whether version history of the document should be processed.</param>
            <param name="guidTable">Table with attachments' GUID which have been ensured</param>
            <param name="ensureGroupedAndUnsorted">Indicates if grouped and unsorted attachments should be ensured.</param>
            <returns>Returns true if the document should be updated (Field attachments have been ensured.)</returns>
            <remarks>This method is intended to be used only after the copy operation to separate the documents.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.EnsureOwnVersion(CMS.DocumentEngine.TreeNode,System.Collections.Hashtable,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates document version for the given document when the version is bound to several documents.
            </summary>
            <param name="node">Document node</param>
            <param name="guidTable">Attachment GUID conversion table, pairs [OldGUID->NewGUID]</param>
            <param name="tree">TreeProvider to use</param>
            <remarks>This method is intended to be used only after the copy operation to separate the documents.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ChangeDocumentToLink(CMS.DocumentEngine.TreeNode,System.Int32,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Changes the document so it is link to another document.
            </summary>
            <param name="node">Document node</param>
            <param name="linkedNodeId">Node ID to link</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.EnsureBlogPostHierarchy(CMS.DocumentEngine.TreeNode,System.Int32,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Ensures that the parent document of the blog post is blog month.
            </summary>
            <param name="node">Blog post document</param>
            <param name="parentNodeId">Node ID of the current parent node</param>
            <param name="tree">TreeProvider to use</param>
            <returns>ID of the new parent (blog month document if CMS.BlogMonth document type exists)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.EnsureBlogPostHierarchy(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Ensures that the parent document of the blog post is blog month.
            </summary>
            <param name="node">Blog post document</param>
            <param name="parent">Current parent document</param>
            <param name="tree">TreeProvider to use</param>
            <returns>New parent (blog month document if CMS.BlogMonth document type exists)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.IsDocumentTypeAllowed(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Returns true if child class is allowed within given parent class and alias path.
            </summary>
            <param name="node">Node under which is created a new document</param>
            <param name="childClassId">Child class ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(System.Guid,CMS.DocumentEngine.TreeProvider,System.String,System.Boolean)">
            <summary>
            Returns the latest version of the specified attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="tree">TreeProvider to use</param>
            <param name="siteName">Site name</param>
            <param name="includeBinary">Indicates whether binary data should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(System.Guid,CMS.DocumentEngine.TreeProvider,System.String,System.Boolean,CMS.DocumentEngine.TreeNode@)">
            <summary>
            Returns the latest version of the specified attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="tree">TreeProvider to use</param>
            <param name="siteName">Site name</param>
            <param name="includeBinary">Indicates whether binary data should be included.</param>
            <param name="node">Returning the document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(System.Guid,System.Int32,CMS.DocumentEngine.TreeProvider,System.Boolean)">
            <summary>
            Returns given version of the specified attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="versionHistoryId">Required version history ID</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeBinary">Indicates whether binary column should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(System.Int32,System.String,System.Int32,CMS.DocumentEngine.TreeProvider,System.Boolean)">
            <summary>
            Returns given version of the specified attachment.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="fileName">Attachment file name</param>
            <param name="versionHistoryId">Required version history ID</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeBinary">Indicates whether binary column should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(CMS.DocumentEngine.TreeNode,System.Guid,CMS.DocumentEngine.TreeProvider,System.Boolean)">
            <summary>
            Returns specified attachment for the given node.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeBinary">Indicates whether binary data should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachment(CMS.DocumentEngine.TreeNode,System.String,CMS.DocumentEngine.TreeProvider,System.Boolean)">
            <summary>
            Returns attachment for the given node specified by file name.
            </summary>
            <param name="node">Document node</param>
            <param name="fileName">Attachment file name</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeBinary">Indicates whether binary data should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachments(CMS.DocumentEngine.TreeNode,System.String,System.String,System.Boolean,CMS.DocumentEngine.TreeProvider,System.Int32,System.String)">
            <summary>
            Gets attachments for given document filtered by the given parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="getBinary">Indicates if binary data should be included</param>
            <param name="tree">TreeProvider to use</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteDocumentAttachments(System.String,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Deletes attachments from the specified documents, including versioning consideration.
            </summary>
            <param name="className">Document class name</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteAttachment(CMS.DocumentEngine.TreeNode,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Deletes attachment from the given document node, including versioning consideration.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteAttachment(CMS.DocumentEngine.TreeNode,System.Guid,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Deletes attachment from the given document node, including versioning consideration.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteAttachment(CMS.DocumentEngine.TreeNode,System.String,System.Guid,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Deletes attachment specified by either GUID or GUID column name from the given document node, including versioning consideration.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID (optional)</param>
            <param name="attachmentGuid">Attachment GUID (optional)</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddAttachment(CMS.DocumentEngine.TreeNode,System.String,System.Web.HttpPostedFile,CMS.DocumentEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds given attachment to the document. Does not update the document to the database, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="file">Attachment file</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddAttachment(CMS.DocumentEngine.TreeNode,System.String,System.String,CMS.DocumentEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds specified attachment to the document. Does not update the document to the database, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="file">Attachment file path</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddGroupedAttachment(CMS.DocumentEngine.TreeNode,System.Guid,System.Guid,System.String,CMS.DocumentEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds specified group attachment to the document or updates the attachment if already present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="groupGuid">GUID of the attachment group</param>
            <param name="file">Attachment file path</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddGroupedAttachment(CMS.DocumentEngine.TreeNode,System.Guid,System.Guid,System.Web.HttpPostedFile,CMS.DocumentEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds given group attachment to the document or updates the attachment if already present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="groupGuid">GUID of the attachment group</param>
            <param name="file">Attachment file path</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddUnsortedAttachment(CMS.DocumentEngine.TreeNode,System.Guid,System.String,CMS.DocumentEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds specified unsorted attachment to the document or updates the attachment if already present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="file">Attachment file path</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddUnsortedAttachment(CMS.DocumentEngine.TreeNode,System.Guid,System.Web.HttpPostedFile,CMS.DocumentEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds given unsorted attachment to the document or updates the attachment if already present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="file">Attachment file path</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.AddAttachment(CMS.DocumentEngine.TreeNode,System.String,System.Guid,System.Guid,System.Object,CMS.DocumentEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds an attachment to the document. Does not update the document to the database, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID (optional)</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file (HttpPostedFile, AttachmentInfo or file path)</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment</param>
            <param name="height">New height of the image attachment</param>
            <param name="maxSideSize">Maximum side size of the image attachment</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.UpdateAttachment(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.AttachmentInfo,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Updates the document attachment
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentInfo">Attachment to update</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetUniqueAttachmentFileName(CMS.DocumentEngine.TreeNode,System.String,System.Int32,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns unique attachment file name in the document scope.
            </summary>
            <param name="node">Document node</param>
            <param name="fileName">Attachment file name</param>
            <param name="currentAttachmentId">Current attachment ID</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.IsUniqueAttachmentName(CMS.DocumentEngine.TreeNode,System.String,System.String,System.Int32,CMS.DocumentEngine.TreeProvider)">
            <summary>
             Finds out whether given attachment name is unique.
            </summary>
             <param name="node">Document node</param>
             <param name="fileName">Attachment file name</param>
             <param name="extension">File extension</param>
             <param name="currentAttachmentId">Current attachment ID</param>
             <param name="tree">Tree object</param>
             <returns>True if attachment name is unique</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.SaveTemporaryAttachments(CMS.DocumentEngine.TreeNode,System.Guid,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Saves temporary attachments for specified form.
            </summary>
            <param name="node">Document node</param>
            <param name="formGuid">Form GUID</param>
            <param name="siteName">Site name</param>
            <param name="tree">TreeProvider to use</param>
            <returns>True if node was changed, false otherwise</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachmentUrl(CMS.DocumentEngine.AttachmentInfo,System.Int32)">
            <summary>
            Returns URL to the given attachment.
            </summary>
            <param name="attachment">Attachment info</param>
            <param name="versionHistoryId">Version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetAttachmentUrl(System.Guid,System.Int32)">
            <summary>
            Returns URL to the specified attachment GUID.
            </summary>
            <param name="attGuid">Attachment GUID</param>
            <param name="versionHistoryId">Version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.UpdateAttachment(CMS.DocumentEngine.TreeNode,System.Guid,System.Guid)">
            <summary>
            Updates the attachment reference within document node. To assign the attachment a new GUID value in special operations.
            </summary>
            <param name="node">Document node</param>
            <param name="oldGuid">Old attachment GUID</param>
            <param name="newGuid">New attachment GUID</param>
            <returns>Returns attachment GUID column name</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.MoveAttachmentUp(System.Guid,CMS.DocumentEngine.TreeNode)">
            <summary>
            Moves attachment up within node attachments. Supports unordered, grouped and temporary attachments.
            </summary>
            <param name="attachmentGuid">GUID of attachment or attachment history</param>
            <param name="node">TreeNode under which attachments will be sorted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.MoveAttachmentDown(System.Guid,CMS.DocumentEngine.TreeNode)">
            <summary>
            Moves attachment down within node attachments. Supports unordered, grouped and temporary attachments.
            </summary>
            <param name="attachmentGuid">GUID of attachment or attachment history</param>
            <param name="node">TreeNode under which attachments will be sorted</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CopyDocumentAttachments(CMS.DocumentEngine.TreeNode,System.Guid,System.String)">
            <summary>
            Copies attachments of the given document as temporary attachments for specified form.
            </summary>
            <param name="node">Original document node</param>
            <param name="formGuid">Form GUID</param>
            <param name="siteName">Name of the site</param>
            <remarks>This method is intended to be used only during new culture version of the document creation.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CopyNodeData(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.CopyNodeDataSettings)">
            <summary>
            Copies the data from the source node to the destination node according to the settings.
            </summary>
            <param name="sourceNode">Source node</param>
            <param name="destNode">Destination node</param>
            <param name="settings">Copy node data settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ChangeDocumentCultureDataField(System.String,System.Object,System.String)">
            <summary>
            Updates culture data field value for all documents given by where condition.
            </summary>
            <param name="fieldName">Field name</param>
            <param name="value">Value</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.IsTranslated(System.Int32,System.String)">
            <summary>
            Indicates if node is translated to the given culture.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetTranslatedCultures(System.Int32)">
            <summary>
            Gets list of culture codes to which is the document translated to.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.EnsureDocumentTags(System.Int32,CMS.DocumentEngine.TreeNode@)">
            <summary>
            Ensures the move action target site contains all of the tag groups and tags related to the document.
            </summary>
            <param name="newSiteID">Target site ID</param>        
            <param name="movedNode">Node to move</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteSiteTree(System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Deletes complete site tree including the version history.
            </summary>
            <param name="siteName">Site name</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.DeleteSiteTree(System.String,CMS.DocumentEngine.TreeProvider,CMS.DocumentEngine.DocumentHelper.OnAfterDocumentDeletedEventHandler,System.String)">
            <summary>
            Deletes complete site tree including the version history.
            </summary>
            <param name="siteName">Site name</param>
            <param name="tree">Tree provider to use</param>
            <param name="deleteCallback">Callback function raised when document has been deleted</param>
            <param name="webRootFullPath">Full path to the web root folder</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.IsDocumentObjectType(System.String)">
            <summary>
            Indicates if given object type represents document.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocumentEditUrl(System.Int32,System.String)">
            <summary>
            Gets link to edit document in Administration.
            </summary>
            <param name="nodeId">NodeID</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ConvertContainerToFieldType(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Converts given container class to the field type.
            </summary>
            <param name="className">Class name</param>
            <param name="tableName">Name of a table to be created</param>
            <param name="idFieldName">Primary key field name</param>
            <param name="nameField">Name of the name field</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ColumnExistsInDocumentView(System.String)">
            <summary>
            Checks whether specified column exists in view 'View_CMS_Tree_Joined'.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetTreeNodeDataSet(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the new DataSet for the given node with specific class name.
            </summary>
            <param name="className">Class name</param>
            <param name="isCoupled">Is coupled class</param>
            <param name="hasSku">Has SKU information</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.SearchFieldChanged(CMS.DocumentEngine.TreeNode,System.Collections.Generic.List{System.String})">
            <summary>
            Returns true if any field included in the search changed (checks fields defined in Class Search Settings).
            </summary>
            <param name="node">Document node</param>
            <param name="changedColumns">List of changed columns, if not provided, retrieves the list from the document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.IsSearchTaskCreationAllowed(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns true if the search task for given node should be created.
            Returns true if 
             - search is allowed on general level AND 
             - search is allowed for document type of given node
             - published version for given node exists AND
            </summary>
            <param name="node">Node to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.ClearFieldAttachments(CMS.DocumentEngine.TreeNode)">
            <summary>
            Clears field attachments GUID values.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CheckParameters(CMS.DocumentEngine.TreeNode)">
            <summary>
            Checks method prerequisites
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CheckParameters(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode)">
            <summary>
            Checks method prerequisites
            </summary>
            <param name="node">Document node</param>
            <param name="parent">Parent document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.EnsureTreeProvider(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Ensures tree provider instance
            </summary>
            <param name="node">Document node</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocumentMarkImage(System.Web.UI.Page,CMS.Helpers.DocumentMarkEnum,System.String,System.Boolean)">
            <summary>
            Gets document mark image tag.
            </summary>
            <param name="page">Page</param>
            <param name="mark">Document mark type</param>
            <param name="customTitle">Optional custom title for the icon</param>
            <param name="renderEnvelope">Indicates if surrounding span should be rendered</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.GetDocumentMarks(System.Web.UI.Page,System.String,System.String,CMS.DataEngine.WorkflowStepTypeEnum,CMS.Base.ISimpleDataContainer,System.Boolean)">
            <summary>
            Gets document mark image tag.
            </summary>
            <param name="page">Page</param>
            <param name="siteName">Site name</param>
            <param name="preferredCultureCode">User preferred culture code</param>
            <param name="stepType">Workflow step type</param>
            <param name="container">Data container</param>
            <param name="renderIconEnvelope">Indicates if icons should be surrounded by span envelope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.IsIconUsed(CMS.DocumentEngine.IconType,System.String)">
            <summary>
            Returns true if icon type is enabled 
            </summary>
            <param name="type">Icon type</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.IconsUsed(CMS.DocumentEngine.IconType)">
            <summary>
            Returns true if any of the icon is used
            </summary>
            <param name="iconTypeFlags">Icon flags</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHelper.CheckEnum(CMS.DocumentEngine.IconType,CMS.DocumentEngine.IconType)">
            <summary>
            Returns true if type is used in current flags
            </summary>
            <param name="type">Icon type</param>
            <param name="flags">Enum type flags</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentHelper.OnAfterDocumentDeletedEventHandler">
            <summary>
            Occurs after document is deleted.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="T:CMS.DocumentEngine.PageInfoHandler">
            <summary>
            Page info handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoHandler.StartEvent(CMS.DocumentEngine.PageInfo,CMS.PortalEngine.PageTemplateInstance)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="pi">Page info</param>
            <param name="pti">Page template instance</param>
        </member>
        <member name="T:CMS.DocumentEngine.PageInfoEvents">
            <summary>
            Document events
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoEvents.CombinePageTemplateInstance">
            <summary>
            Fires when page template instance is combined with other instances
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageInfoEventArgs">
            <summary>
            PageInfo event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfoEventArgs.PageInfo">
            <summary>
            Page info
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfoEventArgs.PageTemplateInstance">
            <summary>
            Page template instance which is currently processed
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.SimpleDocumentImportHandler">
            <summary>
            Simple document import handler
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentsImportEventArgs">
            <summary>
            Documents import event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentsImportEventArgs.ImportedDocumentIDs">
            <summary>
            List of imported document original IDs
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentsImportEventArgs.ImportedNodeIDs">
            <summary>
            List of imported node original IDs
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentsImportHandler">
            <summary>
            Documents import handler
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.ContentTransformationFunctions">
            <summary>
            Functions for content macro methods.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ContentTransformationFunctions.IsInCategories(System.Object,System.String,System.Boolean)">
            <summary>
            Returns true if document is in one/all of selected categories.
            </summary>
            <param name="document">Document to check</param>
            <param name="categories">Category names separated with a semicolon</param>
            <param name="allCategories">If true, document must be in all of the selected categories.</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentTransformationFunctions.IsTranslatedTo(System.Object,System.String,System.Boolean)">
            <summary>
            Returns true if document is translated into one of selected cultures.
            </summary>
            <param name="document">Document to check</param>
            <param name="cultures">Culture codes separated with a semicolon</param>
            <param name="publishedOnly">If true culture version must be published</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentTransformationFunctions.HasTags(System.Object,System.String,System.Boolean)">
            <summary>
            Returns true if document has any/all of the specified tags.
            </summary>
            <param name="document">Document</param>
            <param name="tags">Semicolon separated tags</param>
            <param name="allTags">Indicates whether all tags must be present or only one of them</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentTransformationFunctions.IsInRelationship(System.Object,System.String,System.String,System.String,System.String)">
            <summary>
            Returns true if document is in specified relationship with with selected document.
            </summary>
            <param name="document">Document to be checked</param>
            <param name="side">Relationship side</param>
            <param name="relationship">Relationship name</param>
            <param name="relatedDocumentPath">Alias path to selected document</param>
            <param name="relatedDocumentSite">Selected document site name</param>
        </member>
        <member name="T:CMS.DocumentEngine.ContentMethods">
            <summary>
            Content methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ContentMethods.As(CMS.MacroEngine.MacroSettings,System.Object[])">
            <summary>
            Casts node to specified page type node with available fields.
            </summary>
            <param name="settings">Evaluation context with child resolver</param>
            <param name="parameters">Page to cast as the first parameter, page type class name as the second</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentMethods.IsInCategories(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if page is in one/all of the selected categories.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentMethods.IsTranslatedTo(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if page is translated to one/all of the selected cultures.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentMethods.HasTags(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if page has any/all of the specified tags.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.ContentMethods.IsInRelationship(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Returns true if page is in specified relationship with selected document.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeCollectionMethods">
            <summary>
            TreeNodeCollection methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeCollectionMethods.ClassNames(CMS.MacroEngine.EvaluationContext,System.Object[])">
            <summary>
            Class names on collection.
            </summary>
            <param name="context">Evaluation context with child resolver</param>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowTransformationFunctions">
            <summary>
            Functions for workflow macro methods.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowTransformationFunctions.PassedThroughActions(System.Object,System.String,System.Boolean)">
            <summary>
            Returns true if document had passed through one/all selected workflow actions.
            </summary>
            <param name="document">Document to check</param>
            <param name="actions">Workflow action names separated with a semicolon</param>
            <param name="allActions">If true all actions must have been passed.</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowTransformationFunctions.PassedThroughSteps(System.Object,System.String,System.Boolean)">
            <summary>
            Returns true if document had passed through one/all specified workflow steps.
            </summary>
            <param name="document">Document to check</param>
            <param name="steps">Workflow step names separated with a semicolon</param>
            <param name="allSteps">If true all specified steps must have been passed.</param>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowMethods">
            <summary>
            Workflow methods - wrapping methods for macro resolver.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowMethods.PassedThroughActions(System.Object[])">
            <summary>
            Returns true if document passed through one/all of the selected workflow actions in history.
            </summary>
            <param name="parameters">
            Document to be checked;
            Workflow action names separated with a semicolon;
            Indicator whether all of the selected action should be required.
            </param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowMethods.PassedThroughSteps(System.Object[])">
            <summary>
            Returns true if document passed through one/all of the selected workflow steps in history.
            </summary>
            <param name="parameters">
            Document to be checked;
            Workflow step names separated with a semicolon;
            Indicator whether all of the selected steps should be required.
            </param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentHandlers">
            <summary>
            Provides handlers for documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandlers.Init">
            <summary>
            Initializes the document handlers
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandlers.TagGroup_Delete_Before(System.Object,CMS.DataEngine.ObjectEventArgs)">
            <summary>
            Removes tags from DocumentTags field from document when tag group is deleted.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandlers.Search_After(System.Object,CMS.Search.SearchEventArgs)">
            <summary>
            Fires after the search
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandlers.AddAttachmentResults(CMS.Search.SearchParameters,CMS.Search.SearchResults)">
            <summary>
            Adds the attachment results to the search results
            </summary>
            <param name="parameters">Search parameters</param>
            <param name="results">Search results</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandlers.UpdateSessionData_Execute(System.Object,CMS.Membership.SessionEventArgs)">
            <summary>
            Updates session data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandlers.GetURL_Execute(System.Object,CMS.Base.URLEventArgs)">
            <summary>
            Handler to convert URL starting with slash (considered to be an alias path) to the document URL
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandlers.PageTemplateUpdateDelete_After(System.Object,CMS.DataEngine.ObjectEventArgs)">
            <summary>
            Creates smart search tasks for document with removed/changed page template
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandlers.LogSearchTasks(CMS.DataEngine.BaseInfo)">
            <summary>
            Logs the search tasks for the documents matching the given condition.
            </summary>
            <param name="template">Page template</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandlers.Site_Delete_After(System.Object,CMS.DataEngine.ObjectEventArgs)">
            <summary>
            Actions that execute after site info deletion
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentExport">
            <summary>
            Handles special actions during the Attachment export process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentExport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryExport">
            <summary>
            Handles special actions during the Attachment history export process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryExport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentImport">
            <summary>
            Handles special actions during the Attachment import process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentImport.Init">
            <summary>
            Initializes import handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryImport">
            <summary>
            Handles special actions during the Attachment history import process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryImport.Init">
            <summary>
            Initializes import handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.ExportSpecialActions">
            <summary>
            Handles special actions during the export process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ExportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentExport">
            <summary>
            Handles special actions during the Documents export process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentExport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentExport.ExportDocumentsData(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Exports the documents.
            </summary>
            <param name="settings">Export settings</param>
            <param name="th">Translation table</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentExport.ExportRelatedDocumentsData(CMS.CMSImportExport.SiteExportSettings,System.String,CMS.DataEngine.TranslationHelper,System.Boolean,System.String)">
            <summary>
            Exports related document data for given object type.
            </summary>
            <param name="settings">Export settings</param>
            <param name="objectType">Type of the object</param>
            <param name="th">Translation helper</param>
            <param name="siteObjects">Indicates if the object type is site dependent</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentExport.RegisterTranslationRecords(System.Data.DataSet,System.String,CMS.DataEngine.TranslationHelper,System.String,System.String[])">
            <summary>
            Ensure translation records registration.
            </summary>
            <param name="ds">Source dataset</param>
            <param name="objectType">Type of the object</param>
            <param name="th">Translation helper</param>
            <param name="siteName">Site name</param>
            <param name="excludedNames">Excluded object names</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentExport.GetDocuments(CMS.CMSImportExport.SiteExportSettings)">
            <summary>
            Gets the documents data.
            </summary>
            <param name="settings">Export settings</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentImport">
            <summary>
            Handles special actions during the Documents import process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.ImportDocumentsData(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Import documents data with all dependent objects.
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.InitTreeProvider(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Initialize tree provider.
            </summary>
            <param name="settings">Import settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.ImportDocuments(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper,System.Collections.Generic.List{System.Int32}@,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Sets documents.
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
            <param name="importedDocumentIDs">List of imported document IDs</param>
            <param name="tree">Tree provider</param>
            <returns>Hash table (key: Old DocumentID value, value: Old NodeID value)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.TranslateDocumentColumns(CMS.CMSImportExport.SiteImportSettings,CMS.DocumentEngine.TreeNode,CMS.DataEngine.TranslationHelper)">
            <summary>
            Sets additional document ID columns.
            </summary>
            <param name="settings">Import settings</param>
            <param name="node">Tree node</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.GetInheritedACLs(CMS.CMSImportExport.SiteImportSettings,System.String,CMS.DataEngine.TranslationHelper)">
            <summary>
            Translate inherited ACL list.
            </summary>
            <param name="settings">Import settings</param>
            <param name="oldAclList">Old ACL list</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.EnsureUniqueGUID(System.Collections.Hashtable,CMS.DocumentEngine.TreeNode)">
            <summary>
            Ensure unique GUID for the node.
            </summary>
            <param name="guidTable">GUID table</param>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.CreateSiteSkeleton(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Creates site info with additional information.
            </summary>
            <param name="settings">Import settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.CreateSiteRoot(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Creates site root.
            </summary>
            <param name="settings">Import settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.DeleteIncompleteSite(CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Deletes incomplete site.
            </summary>
            <param name="settings">Import settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImport.RefresMacroSecurity(CMS.CMSImportExport.SiteImportSettings,CMS.DocumentEngine.TreeNode)">
            <summary>
            Refreshes all macro signatures in node.
            </summary>
            <param name="settings">Site import settings</param>
            <param name="treeNode">Tree node to refresh</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentsExportEventArgs">
            <summary>
            Document export event arguments
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentsExportHandler">
            <summary>
            Document export handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentsExportHandler.StartEvent(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.TranslationHelper,System.String,System.Boolean)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Export settings</param>
            <param name="th">Translation helper</param>
            <param name="objectType">Exported object type</param>
            <param name="siteObjects">Flag whether site or global objects are exported</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentsExportHandler.StartEvent(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Export settings</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentsExportHandler.StartEvent(CMS.CMSImportExport.SiteExportSettings,CMS.DataEngine.TranslationHelper,System.Data.DataSet)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Export settings</param>
            <param name="th">Translation helper</param>
            <param name="data">Exported data</param>
        </member>
        <member name="T:CMS.CMSImportExport.DocumentImportEventArgs">
            <summary>
            Document import event arguments
            </summary>
        </member>
        <member name="P:CMS.CMSImportExport.DocumentImportEventArgs.Document">
            <summary>
            Document being currently imported
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentImportExportEvents">
            <summary>
            Document import export events
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentImportExportEvents.ImportDocument">
            <summary>
            Fires when the import process runs for a single document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentImportExportEvents.ImportDocuments">
            <summary>
            Fires when the documents are being imported
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentImportExportEvents.ExportDocuments">
            <summary>
            Fires when the export process runs for exporting the document DataSet
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentImportHandler">
            <summary>
            Import export handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImportHandler.StartEvent(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentImportHandler.StartEvent(CMS.CMSImportExport.SiteImportSettings,CMS.DataEngine.TranslationHelper,CMS.DocumentEngine.TreeNode)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Import settings</param>
            <param name="th">Translation helper</param>
            <param name="document">Imported document</param>
        </member>
        <member name="T:CMS.DocumentEngine.CacheMethods">
            <summary>
            Wrapper class to provide basic caching methods in the MacroEngine.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CacheMethods.CMSCachedContext(System.Object[])">
            <summary>
            Returns the cached data context
            </summary>
            <param name="parameters">Macro functions parameters ([0] - cache minutes [1] - cache key</param>
        </member>
        <member name="T:CMS.DocumentEngine.CMSContext">
            <summary>
            Web site context methods and variables.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSContext.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSContext.RegisterColumns">
            <summary>
            Registers the Columns of this object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CMSContext.Init">
            <summary>
            Initializes the system.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.ImportSpecialActions">
            <summary>
            Handles special actions during the import process.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ImportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.ImportSpecialActions.IsDocumentObjectType(System.String)">
            <summary>
            Returns true if object type is from documents data.
            </summary>
            <param name="objectType">Type of the object</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentCategorySearchIndexer">
            <summary>
            Indexer for document category
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCategorySearchIndexer.ExecuteProcessTask(CMS.Search.SearchTaskInfo)">
            <summary>
            Indexes the document category
            </summary>
            <param name="sti">Search task</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentContext">
            <summary>
            Request document values
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentContext.AddDirectionCssClass(System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Adds the direction CSS class
            </summary>
            <param name="cssClass">CSS class to modify</param>
            <param name="viewMode">View mode</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentContext.AddCultureCssClass(System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Adds the UI culture CSS class
            </summary>
            <param name="cssClass">CSS class to modify</param>
            <param name="viewMode">View mode</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentContext.AddBrowserCssClass(System.String)">
            <summary>
            Adds the browser CSS class
            </summary>
            <param name="cssClass">CSS class to modify</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentContext.AddViewModeCssClass(System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Adds the view mode CSS class
            </summary>
            <param name="cssClass">CSS class to modify</param>
            <param name="viewMode">View mode</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentContext.GetBrowserClass(System.Boolean)">
            <summary>
            Gets the browser specific CSS class name.
            </summary>
            <param name="includeVersion">Include browser version</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentContext.GetCultureClass">
            <summary>
            Gets the culture specific CSS class name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentContext.GetUICultureClass">
            <summary>
            Gets the UI culture specific CSS class name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentContext.AddDefaultOutputCacheDependencies">
            <summary>
            Adds the default output cache dependencies to the request output.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentContext.GetContextParametersDataRow">
            <summary>
            Returns datarow with CMSContext parameters.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentResolver">
            <summary>
            Current macro resolver.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.EditedDocument">
            <summary>
            Document edited by the current page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.OriginalAliasPath">
            <summary>
            Returns alias path corresponding to current URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentAliasPath">
            <summary>
            Returns current document aliaspath.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentDocument">
            <summary>
            Returns the current document node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentDocumentParent">
            <summary>
            Returns parent of the current document node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentDocumentCulture">
            <summary>
            Returns the current document culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentDocumentOwner">
            <summary>
            Returns the current document owner.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentDocumentStylesheet">
            <summary>
            Returns the current document CSS stylesheet.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentDocumentStylesheetName">
            <summary>
            Returns current document stylesheet name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentAttachment">
            <summary>
            Returns the current document attachment (only for CMS.File document type).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentParentPageInfos">
            <summary>
            Gets or sets the ordered list of parent page info objects, which are used on current page. These page info should be used as read-only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentPageInfo">
            <summary>
            Returns the current page info object.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentCultureInvariantPageInfo">
            <summary>
            Returns the current culture invariant page info object.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentTemplate">
            <summary>
            Current page template
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.OriginalPageInfo">
            <summary>
            Returns the original page info object if site is in test and current page info belongs to variant.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentKeyWords">
            <summary>
            Current page keywords.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentDescription">
            <summary>
            Current page description.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentTitle">
            <summary>
            Current page title with resolved macros.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentBodyClass">
            <summary>
            Current page body class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.CurrentDocType">
            <summary>
            Current page document type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentContext.PageResultUrlPath">
            <summary>
            Gets or sets the url path of the current request.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentEngineModuleMetadata">
            <summary>
            Represents the Document Engine module metadata.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentMacros">
            <summary>
            Document macros implementation
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentMacros.Init">
            <summary>
            Initializes the macro engine with DocumentEngine parts
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentMacros.MacroSecurityProcessor_OnCheckObjectPermissions(System.Object,CMS.MacroEngine.MacroSecurityEventArgs)">
            <summary>
            Adds permission check for TreeNode collections.
            </summary>
            <param name="sender">MacroResolver which resolves the macro</param>
            <param name="e">Permission check event args</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentMacros.GetObjectValue(System.Object,System.String,System.Object@)">
            <summary>
            Gets the object value.
            </summary>
            <param name="obj">Object</param>
            <param name="columnName">Column name</param>
            <param name="result">Returning the result in case of match</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSearchIndexer">
            <summary>
            Indexer for documents
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSearchIndexer.FIELD_DOCUMENTCATEGORYIDS">
            <summary>
            Document category IDs field name
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.IsDocumentRelatedType(System.String)">
            <summary>
            Returns true of task type is related to document object
            </summary>
            <param name="taskType">Task type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.GetDocumentRelatedCondition">
            <summary>
            Returns the condition for all index types related to documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.GetSearchIndexes(System.String)">
            <summary>
            Returns dataset of index IDs for specific type
            </summary>
            <param name="taskType">Task type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.Rebuild(CMS.Search.SearchIndexInfo)">
            <summary>
            Rebuilds the document index
            </summary>
            <param name="indexInfo">Search index</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.PrepareBuildingValues(CMS.Search.SearchIndexInfo,System.Collections.Generic.List{System.Int32}@,System.String@,CMS.Base.SafeDictionary{System.String,System.String}@,CMS.Base.SafeDictionary{System.String,System.String}@,System.String)">
            <summary>
            Prepares sites, cultures, allowed and excluded collections for partial or full rebuild.
            </summary>
            <param name="indexInfo">Search index</param>
            <param name="sites">List of sites</param>
            <param name="cultures">List of cultures</param>
            <param name="allowedNodes">List of allowed classes</param>
            <param name="excludedNodes">List of excluded classes</param>
            <param name="nodeAliasPath">Node alias path. If is specified, all allowed nodes must be beneath this path</param>
            <returns>Returns true if values are ready</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.Rebuild(CMS.Search.SearchIndexInfo,System.String,System.Collections.Generic.IEnumerable{System.Int32},CMS.Base.SafeDictionary{System.String,System.String},CMS.Base.SafeDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Ensures full or partial index rebuild.
            </summary>
            <param name="indexInfo">Search index</param>
            <param name="cultures">Cultures where condition</param>
            <param name="sites">List of sites</param>
            <param name="allowedNodes">List of allowed classes and paths</param>
            <param name="excludedNodes">List of excluded classes and paths</param>
            <param name="fullRebuild">Indicates whether current rebuild is full or partial</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.GetSearchDocuments(CMS.Search.SearchIndexInfo,CMS.DocumentEngine.DocumentSearchIndexer.GetSearchDocumentsParams,System.Int32)">
            <summary>
            Returns list of search document objects for documents
            </summary>
            <param name="indexInfo">Search index</param>
            <param name="documentsParameters">Search parameters</param>
            <param name="lastId">ID of last processed document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.PartialRebuild(CMS.Search.SearchTaskInfo)">
            <summary>
            Rebuilds part of the index
            </summary>
            <param name="taskInfo">Search task</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.ExecuteUpdateTask(CMS.Search.SearchTaskInfo)">
            <summary>
            Executes the search index update task
            </summary>
            <param name="sti">Search task</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.SelectSearchDocument(System.Int32)">
            <summary>
            Selects the search document based on the given ID
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.DeleteItem(CMS.Search.SearchTaskInfo,CMS.Search.SearchIndexInfo)">
            <summary>
            Deletes specific item from the index
            </summary>
            <param name="taskInfo">Search task</param> 
            <param name="indexInfo">Search index</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.CheckResultPermissions(CMS.Search.SearchResults,CMS.DataEngine.ISearchDocument,System.Int32)">
            <summary>
            Checks the permissions for the given result document
            </summary>
            <param name="settings">Check permission settings</param>
            <param name="currentDoc">Current result document</param>
            <param name="index">Current document index</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.LoadResults(System.Collections.Generic.IEnumerable{CMS.DataEngine.ISearchDocument},CMS.Base.SafeDictionary{System.String,System.Data.DataRow})">
            <summary>
            Loads the results to the given result collection
            </summary>
            <param name="results">Collection of results to load</param>
            <param name="result">Dictionary of the loaded results indexed by their key</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.GetDataClassInfo(CMS.DataEngine.ISearchDocument)">
            <summary>
            Returns the data class info for the given search document
            </summary>
            <param name="obj">Document object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.GetRelevantIndexes(CMS.DataEngine.ISearchable)">
            <summary>
            Gets the list of indexes relevant to the given object
            </summary>
            <param name="searchObject">Search object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.FillSearchResult(System.Data.DataRow,System.Data.DataRow,CMS.DataEngine.ISearchDocument)">
            <summary>
            Fills the data to the search result data row
            </summary>
            <param name="dr">Result data row</param>
            <param name="resultDr">Result data row</param>
            <param name="doc">Found search document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.GetSearchImageUrl(System.String,System.String,System.String)">
            <summary>
            Returns URL to current search result item.
            </summary>
            <param name="id">ID of the item</param>
            <param name="type">Type of the index</param>
            <param name="image">Image</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.GetSearchFields(CMS.Search.SearchIndexInfo,CMS.DataEngine.ISearchFields)">
            <summary>
            Gets the collection of search fields. When no SearchFields colection is provided, new is created.
            </summary>
            <param name="index">Search index</param>
            <param name="searchFields">Search fields collection</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSearchIndexer.LogBatchStart(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Logs the start of batch processing. 
            </summary>
            <param name="batchNumber">Number of batch</param>
            <param name="lastID">ID of last item that is not present in the batch</param>
            <param name="documentTypeCodeName">Code name of the document type</param>
            <param name="siteDisplayName">Display name of the site</param>
            <param name="linkedNodes">Indicates whether standard documents or linked documents are processed in the batch</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSearchIndexer.GetSearchDocumentsParams">
            <summary>
            Get search document parameters
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.SiteDeletion">
            <summary>
            Site deletion actions
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.SiteDeletion.Init">
            <summary>
            Initializes the actions for deletion
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSecurityHelper">
            <summary>
            Helper class to check the document security
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSecurityHelper.IS_AUTHORIZED_PER_NODE_STORAGE_KEY">
            <summary>
            Storage key used for grouping user's authorization per node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsUserAuthorizedPerContent(System.String,CMS.Membership.UserInfo)">
            <summary>
            Determines whether current user is authorized to access Content module.
            </summary>
            <param name="siteName">Site name to check</param>
            <param name="user">User info</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.GetNodePermissionEnum(CMS.DataEngine.PermissionsEnum)">
            <summary>
            Converts the given permission to the node permission
            </summary>
            <param name="permission">Permission to convert</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerTreeNode(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String,System.Boolean,CMS.Membership.UserInfo)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Culture of the document to be checked</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerTreeNode(System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="nodeId">Document node id</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Document culture code. If the culture is null the user allowed cultures check is not performed</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerTreeNode(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Document culture code. If the culture is null the user allowed cultures check is not performed</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.Boolean,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="culture">Culture to check</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String,System.Boolean,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
            <param name="siteName">Site name</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="culture">Culture to check</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerDocument(System.Int32,System.String,CMS.DocumentEngine.NodePermissionsEnum,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="nodeId">ID of node</param>
            <param name="className">Class name of the document</param>
            <param name="permission">Permission</param>
            <param name="culture">Culture to check</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum[],System.Boolean,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="node">Document node</param>
            <param name="permissions">Permissions to check</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="culture">Culture to check</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum[],System.String,System.Boolean,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="node">Document node</param>
            <param name="permissions">Permissions to check</param>
            <param name="siteName">Site name</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="culture">Culture to check</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedToCreateNewDocument(CMS.DocumentEngine.TreeNode,System.String,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="parentNode">Parent node</param>
            <param name="documentClassName">Document class name</param>
            <param name="culture">Culture</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedToCreateNewDocument(CMS.DocumentEngine.TreeNode,System.String,System.String,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="parentNode">Parent node</param>
            <param name="documentClassName">Document class name</param>
            <param name="siteName">Name of site</param>
            <param name="culture">Culture</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedToCreateNewDocument(System.Int32,System.String,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="parentNodeId">Parent node id</param>
            <param name="documentClassName">Document class name</param>
            <param name="culture">Culture to check</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSecurityHelper.IsAuthorizedToCreateNewDocument(System.Int32,System.String,System.String,System.String,CMS.Membership.UserInfo)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="parentNodeId">Parent node id</param>
            <param name="documentClassName">Document class name</param>
            <param name="siteName">Name of site</param>
            <param name="culture">Culture to check</param>
            <param name="userInfo">User to check</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTypeAttribute">
            <summary>
            Adds action to the page.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeAttribute.#ctor(System.String,System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="className">Class name</param>
            <param name="type">Class type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentTypeAttribute.Init">
            <summary>
            Applies the attribute
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeAttribute.ClassName">
            <summary>
            Class name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentTypeAttribute.Type">
            <summary>
            Document factory
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DeleteProductActionEnum">
            <summary>
            Enumeration specifying acion to be performed with SKU bound to the document being deleted.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DeleteProductActionEnum.NoAction">
            <summary>
            Leave SKU without change.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DeleteProductActionEnum.DeleteSKU">
            <summary>
            Delete SKU.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DeleteProductActionEnum.DisableSKU">
            <summary>
            Disable SKU.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DeleteProductActionEnum.DeleteOrDisableSKU">
            <summary>
            Delete SKU if possible otherwise disable it.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.BaseLogDocumentChangeSettings">
            <summary>
            Base class for log document change.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.BaseLogDocumentChangeSettings.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseLogDocumentChangeSettings.TaskType">
            <summary>
            Type of the task.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseLogDocumentChangeSettings.Tree">
            <summary>
            Tree provider.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseLogDocumentChangeSettings.ServerID">
            <summary>
            Server ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseLogDocumentChangeSettings.TaskParameters">
            <summary>
            Additional task parameters.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseLogDocumentChangeSettings.LogStaging">
            <summary>
            Indicates if the staging task should be logged.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseLogDocumentChangeSettings.LogIntegration">
            <summary>
            Indicates if the integration task should be logged.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseLogDocumentChangeSettings.WorkerCall">
            <summary>
            Indicates if in context of worker call (asynchronous task logging).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseLogDocumentChangeSettings.RunAsynchronously">
            <summary>
            Indicates if task logging should be executed asynchronously (in separate thread).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseLogDocumentChangeSettings.EnsurePublishTask">
            <summary>
            If true, also the PublishDocument task is logged for Published documents under workflow along with an PublishDocument task.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.LogMultipleDocumentChangeSettings">
            <summary>
            Class for log multiple document change.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.LogMultipleDocumentChangeSettings.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogMultipleDocumentChangeSettings.SiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogMultipleDocumentChangeSettings.NodeAliasPath">
            <summary>
            Node alias path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogMultipleDocumentChangeSettings.CultureCode">
            <summary>
            Culture code.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogMultipleDocumentChangeSettings.WhereCondition">
            <summary>
            Where condition.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogMultipleDocumentChangeSettings.KeepTaskData">
            <summary>
            Indicates if task data should be kept in the objects.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.LogDocumentChangeEventArgs">
            <summary>
            Log document change event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogDocumentChangeEventArgs.Settings">
            <summary>
            Log document change settings
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.LogDocumentChangeHandler">
            <summary>
            Document handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.LogDocumentChangeHandler.StartEvent(CMS.DocumentEngine.LogDocumentChangeSettings)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="settings">Log document change settings</param>
        </member>
        <member name="T:CMS.DocumentEngine.LogDocumentChangeSettings">
            <summary>
            Class for log single document change.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogDocumentChangeSettings.Node">
            <summary>
            Tree node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogDocumentChangeSettings.NodeChanged">
            <summary>
            Indicates if node data changed
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowActionHandler">
            <summary>
            Workflow action handler
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentTaskType">
            <summary>
            Web farm tasks for document operations
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTaskType.UpdateAttachment">
            <summary>
            Attachment update.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTaskType.DeleteAttachment">
            <summary>
            Attachment delete.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTaskType.ClearDocumentFieldsTypeInfos">
            <summary>
            Clear document fields type infos
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTaskType.InvalidateDocumentFieldsTypeInfo">
            <summary>
            Invalidate document fields type info
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTaskType.ClearDocumentTypeInfos">
            <summary>
            Clear document type infos
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentTaskType.InvalidateDocumentTypeInfo">
            <summary>
            Update document type info
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSynchronization">
            <summary>
            Web farm synchronization for Documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronization.Init">
            <summary>
            Initializes the tasks for media files synchronization
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronization.CheckSynchronizeAttachments">
            <summary>
            Returns true if the synchronization of the attachments is allowed
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronization.CheckSynchronizeDeleteAttachments">
            <summary>
            Returns true if the synchronization of the deletion of the attachments is allowed
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronization.UpdateAttachment(System.String,System.String,CMS.Core.BinaryData)">
            <summary>
            Updates the attachment
            </summary>
            <param name="target">Task target</param>
            <param name="data">Task data</param>
            <param name="binaryData">Task binary data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronization.DeleteAttachment(System.String,System.String,CMS.Core.BinaryData)">
            <summary>
            Deletes the attachment
            </summary>
            <param name="target">Task target</param>
            <param name="data">Task data</param>
            <param name="binaryData">Task binary data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronization.ClearDocumentFieldsTypeInfos(System.String,System.String,CMS.Core.BinaryData)">
            <summary>
            Clears the document fields type infos
            </summary>
            <param name="target">Task target</param>
            <param name="data">Task data</param>
            <param name="binaryData">Task binary data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronization.InvalidateDocumentFieldsTypeInfo(System.String,System.String,CMS.Core.BinaryData)">
            <summary>
            Invalidates the document fields type info
            </summary>
            <param name="target">Task target</param>
            <param name="data">Task data</param>
            <param name="binaryData">Task binary data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronization.ClearDocumentTypeInfos(System.String,System.String,CMS.Core.BinaryData)">
            <summary>
            Clears the documents type infos
            </summary>
            <param name="target">Task target</param>
            <param name="data">Task data</param>
            <param name="binaryData">Task binary data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronization.InvalidateDocumentTypeInfo(System.String,System.String,CMS.Core.BinaryData)">
            <summary>
            Invalidates the documents type info
            </summary>
            <param name="target">Task target</param>
            <param name="data">Task data</param>
            <param name="binaryData">Task binary data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronization.ClearResolvedClassNames(System.String,System.String,CMS.Core.BinaryData)">
            <summary>
            Clears resolved class names
            </summary>
            <param name="target">Task target</param>
            <param name="data">Task data</param>
            <param name="binaryData">Task binary data</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSynchronization.SynchronizeAttachments">
            <summary>
            Gets or sets value that indicates whether file synchronization for document attachments is enabled.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CachedPageInfo">
            <summary>
            Processed page info container.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CachedPageInfo.#ctor(CMS.DocumentEngine.PageInfo,CMS.DocumentEngine.PageInfoSource,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CachedPageInfo.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.CachedPageInfo.ContainsColumn(System.String)">
            <summary>
            Returns true if specified column is available in current structure.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CachedPageInfo.GetValue(System.String)">
            <summary>
            Gets the object value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.CachedPageInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the object value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="P:CMS.DocumentEngine.CachedPageInfo.PageInfo">
            <summary>
            Page info of the page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CachedPageInfo.WildcardQueryString">
            <summary>
            Wildcard query string.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CachedPageInfo.PageInfoSource">
            <summary>
            Page info source.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CachedPageInfo.DocumentAliasUrlPath">
            <summary>
            Gets the document alias url path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CachedPageInfo.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.DocumentEngine.CachedPageInfo.ColumnNames">
            <summary>
            Available column names.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DomainNotFoundException">
            <summary>
            Domain not found exception.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DomainNotFoundException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DomainNotFoundException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DomainNotFoundException.Clone">
            <summary>
            Returns clone of the exception
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageInfo">
            <summary>
            Page data storage object
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfo.mInheritedPageInfo">
            <summary>
            Inherited page info object.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfo.mClassName">
            <summary>
            Document class name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfo.mSiteName">
            <summary>
            Document site name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfo.mPageTemplateInfo">
            <summary>
            Page template info object.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfo.mPageTemplateInfoLoaded">
            <summary>
            If true, the page template info was already loaded
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfo.mWireframePageTemplateInfo">
            <summary>
            Wireframe page template info object.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfo.mWireframePageTemplateInfoLoaded">
            <summary>
            If true, the wireframe page template info was already loaded
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfo.mEditableItems">
            <summary>
            Editable items container.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfo.mDocumentTemplateInstance">
            <summary>
            Document widgets template instance.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfo.mGroupTemplateInstance">
            <summary>
            Group widgets template instance.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfo.mTemplateInstance">
            <summary>
            Complete page template instance (PageTemplateInfo.TemplateInstance + DocumentTemplateInstance + GroupTemplateInstance + MVTVariants + ContentPersonalizationVariants).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor.
            </summary>
            <param name="dr">Datarow with the data (CMS_Tree_Joined + CMS_PageTemplate)</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.CreateInherited">
            <summary>
            Creates an inherited page info.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.Clone">
            <summary>
            Clones the PageInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.Clone(System.Boolean,System.Boolean)">
            <summary>
            Clones the PageInfo object.
            </summary>
            <param name="cloneTemplate">If true, page template object is cloned</param>
            <param name="cloneEditableItems">Clone editable items</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.EnsurePageTemplateInstance">
            <summary>
            Ensures the loading of the combined page template instance
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.EnsureDocumentTemplateInstance">
            <summary>
            Ensures the loading of the document template instance
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.EnsureWireframePageTemplateInfo">
            <summary>
            Ensures the loading of the wireframe page template info object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.EnsurePageTemplateInfo">
            <summary>
            Ensures that the Page template info object is loaded
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.GetResolvedPageTitle">
            <summary>
            Gets resolved document page title
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.GetUpperTree">
            <summary>
            Gets the upper tree data for inherited values.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.GetValueFromUpperTree(System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns string value of selected column.
            </summary>
            <param name="column">Column name</param>
            <param name="checkForNull">If is true, check for NULL value, else check for "-1" value (CSSStyleSheetID)</param>
            <param name="onlyMaster">Indicates whether only master page value should be returned</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.LoadVersion">
            <summary>
            Load the current version data of the document to the page info.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.LoadVersion(CMS.Base.IDataContainer,System.Boolean)">
            <summary>
            Load the given version of the document data to the page info.
            </summary>
            <param name="data">Data to load</param>
            <param name="loadVersionedDataOnly">Indicates if only versioned data should be loaded</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.LoadVersion(CMS.DocumentEngine.TreeNode)">
            <summary>
            Load complete given version of the document to the page info.
            </summary>
            <param name="node">Node to load</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.LoadNodeData(CMS.Base.IDataContainer,System.Boolean)">
            <summary>
            Loads node data
            </summary>
            <param name="data">Data to load</param>
            <param name="loadVersionedDataOnly">Indicates if only versioned data should be loaded</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.LoadSKUData(CMS.Base.IDataContainer)">
            <summary>
            Loads SKU data
            </summary>
            <param name="data">Data to load</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.LoadDocumentData(CMS.Base.IDataContainer,System.Boolean)">
            <summary>
            Loads culture specific data
            </summary>
            <param name="data">Data to load</param>
            <param name="loadVersionedDataOnly">Indicates if only versioned data should be loaded</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.LoadInheritedData(CMS.Base.IDataContainer,System.Boolean)">
            <summary>
            Loads inherited data
            </summary>
            <param name="data">Data to load</param>
            <param name="loadVersionedDataOnly">Indicates if only versioned data should be loaded</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.LoadMasterPageData(CMS.Base.IDataContainer,System.Boolean)">
            <summary>
            Loads data from master page level
            </summary>
            <param name="data">Data to load</param>
            <param name="loadVersionedDataOnly">Indicates if only versioned data should be loaded</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.GetInheritedTemplateInfo(System.String,System.Boolean)">
            <summary>
            Gets the inherited template info from parent page infos
            </summary>
            <param name="cultureCode">Culture code</param>
            <param name="combineWithDefaultCulture">Combine with default culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.GetResponseCacheDependencies">
            <summary>
            Gets the page dependency keys for the response of the page.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.AddResponseCacheDependencies">
            <summary>
            Adds the cache dependencies for the current page to the response.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.ClearOutputCache(System.Boolean)">
            <summary>
            Clears the output cache for current page.
            </summary>
            <param name="allCultures">Clear all cultures cache</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.ClearOutputCache(System.Boolean,System.Boolean)">
            <summary>
            Clears the output cache for current page.
            </summary>
            <param name="allCultures">Clear all cultures cache</param>
            <param name="childNodes">If true, the output cache of the child nodes is cleared as well</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.RegisterColumns">
            <summary>
            Registers the Columns of this object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.GetDocumentName">
            <summary>
            Gets friendly document name
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.SetPageResult(System.String,CMS.DocumentEngine.PageInfoResult)">
            <summary>
            Sets the page result object for the given url. The page result object is then accessible via PageResult property.
            </summary>
            <param name="url">The URL</param>
            <param name="pageResult">The page result object to be stored</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.LoadPageTemplateInfo(CMS.PortalEngine.PageTemplateInfo)">
            <summary>
            Loads the given page template info into the Page info
            </summary>
            <param name="pti">Page template info</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.GetContentXml">
            <summary>
            Returns the xml code of the document contents (Editable regions, web parts).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.LoadContentXml(System.String)">
            <summary>
            Loads the content XML to the content table.
            </summary>
            <param name="contentXml">Content XML to load</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.IsProductSection">
            <summary>
            Returns true if the document type stands for the product section
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.IsProduct">
            <summary>
            Returns true if the document represents a product.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.IsWireframe">
            <summary>
            Returns true if the document is a wireframe document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.SetPageTemplateId(System.Int32)">
            <summary>
            Sets the default document page template ID
            </summary>
            <param name="templateId">Page template ID to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.GetUsedInheritPageLevels">
            <summary>
            Gets the inherit page levels used by this page
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.GetUsedPageTemplateIdColumn">
            <summary>
            Gets the page template id used by this document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.GetUsedPageTemplateId">
            <summary>
            Gets the page template id used by this document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.IsRoot">
            <summary>
            Returns true if the given document is a root node
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfo.UseWireframeTemplate">
            <summary>
            Returns true if the page uses wireframe template in current context
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeBodyElementAttributes">
            <summary>
            Node body CSS class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeDocType">
            <summary>
            Node document type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeHeadTags">
            <summary>
            Node header tags.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeCacheMinutes">
            <summary>
            Node cache minutes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentPageTitle">
            <summary>
            Document page title.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentPageKeyWords">
            <summary>
            Document page keywords.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentPageDescription">
            <summary>
            Document page description.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentStylesheetID">
            <summary>
            Document CSS stylesheet ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.RequiresAuthentication">
            <summary>
            Requires authentication  property.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.RequiresSSL">
            <summary>
            Requires authentication  property.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.RequiresSSLValue">
            <summary>
            Requires authentication  property.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeAllowCacheInFileSystem">
            <summary>
            Requires authentication  property.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentLogActivity">
            <summary>
            Indicates if document enables logging activities.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeID">
            <summary>
            Node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeAliasPath">
            <summary>
            Node alias path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeName">
            <summary>
            Node name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeAlias">
            <summary>
            Node alias.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeClassID">
            <summary>
            Node class ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeParentID">
            <summary>
            Node parent ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeGroupID">
            <summary>
            Node group ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeLevel">
            <summary>
            Node level.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeACLID">
            <summary>
            Node ACLID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeSiteID">
            <summary>
            Node site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeGUID">
            <summary>
            Node GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeOrder">
            <summary>
            Node order.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeInheritPageLevels">
            <summary>
            Node inherit page levels. This property is for internal use only, use method GetUsedInheritPageLevels or SetUsedInheritPageLevels instead.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeLinkedNodeID">
            <summary>
            Linked node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeLinkedNodeSiteID">
            <summary>
            Linked node site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.IsLink">
            <summary>
            Indicates whether the document is link to another document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.OriginalNodeSiteID">
            <summary>
            Original node site ID. Returns NodeSiteID for standard document, LinkedNodeSiteID for linked document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeOwner">
            <summary>
            Document owner.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeSKUID">
            <summary>
            Document product ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeTemplateID">
            <summary>
            Node page template - Used for all culture versions if NodeTemplateForAllCultures is set. This property should not be used from external code, use method GetUsedPageTemplateID or SetPageTemplateID instead.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeTemplateForAllCultures">
            <summary>
            If true, the document uses the same template (NodeTemplateID) for all culture versions
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeInheritPageTemplate">
            <summary>
            If true, the document inherits the page template from parent
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeWireframeTemplateID">
            <summary>
            Node wireframe template ID - Special template used for wireframing - Always ad-hoc template
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.NodeWireframeInheritPageLevels">
            <summary>
            Node wireframe inherit page levels.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentSearchExcluded">
            <summary>
            Indicates whether document should be excluded from search
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentMenuItemHideInNavigation">
            <summary>
            Document menu hide in navigation.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentMenuStyle">
            <summary>
            Document menu style.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentMenuClass">
            <summary>
            Document menu class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentMenuItemInactive">
            <summary>
            Document menu item inactive.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentName">
            <summary>
            Document name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentNamePath">
            <summary>
            Document name path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentMenuRedirectUrl">
            <summary>
            Document Redirect URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentMenuRedirectToFirstChild">
            <summary>
            Indicates if redirection to first child document should be performed when accessed.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentMenuJavascript">
            <summary>
            Document menu JavaScript.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentPublishFrom">
            <summary>
            Document published from.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentPublishTo">
            <summary>
            Document published to.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentUrlPath">
            <summary>
            Document URL path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentCulture">
            <summary>
            Document culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentMenuCaption">
            <summary>
            Document menu caption.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentPublishedVersionHistoryID">
            <summary>
            Document published version history ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentCheckedOutVersionHistoryID">
            <summary>
            Document checked out version history ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentWorkflowStepID">
            <summary>
            Document workflow step ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentPageTemplateID">
            <summary>
            Document page template ID. This property is for internal usage only and may not give proper value in case NodeTemplateForAllCultures is true, use method GetUsedPageTemplateID or SetPageTemplateID instead.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentExtensions">
            <summary>
            Document extensions.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentCampaign">
            <summary>
            Document campaign.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentWorkflowCycleGUID">
            <summary>
            Workflow cycle GUID to obtain preview link for document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentGUID">
            <summary>
            Document GUID
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentTrackConversionName">
            <summary>
            Document conversion name - Reflects the "DocumentTrackConversionName" data column.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentConversionValue">
            <summary>
            Document conversion value - Reflects the "DocumentConversionValue" data column.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.IsPublished">
            <summary>
            Returns true if the node is published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.InheritedPageInfo">
            <summary>
            Inherited page info.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.UpperTree">
            <summary>
            Upper tree DataSet (for inheriting of the values).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.PageTitle">
            <summary>
            Page title.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.WorkflowStepName">
            <summary>
            Workflow step name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.WorkflowStepType">
            <summary>
            Workflow step type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.ClassName">
            <summary>
            Class name of the current document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.SiteName">
            <summary>
            Site name of the current document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.PageResult">
            <summary>
            Gets or sets the contextual page result data object related to the current url.
            PageResult returns different data for different document aliases.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.AbsoluteURL">
            <summary>
            Gets document absolute URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.RelativeURL">
            <summary>
            Gets document relative URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.PermanentURL">
            <summary>
            Gets document permanent absolute URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.WireframePageTemplateInfo">
            <summary>
            Page template info used by the wireframe mode.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DesignPageTemplateInfo">
            <summary>
            Page template info used for standard and design view of the document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.UsedPageTemplateInfo">
            <summary>
            Page template info used by current view mode, either Wireframe or Design page template.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.EditableItems">
            <summary>
            Editable items contained within the page.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.ChildPageInfo">
            <summary>
            Child page info (for the page path of the PortalControls).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.ParentPageInfo">
            <summary>
            Parent page info (for the page path), this property is meant for internal purposes of Portal engine.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.EditableRegions">
            <summary>
            Editable regions contained within the document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.EditableWebParts">
            <summary>
            Editable WebParts contained within the document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentContent">
            <summary>
            Returns document content XML.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.DocumentTemplateInstance">
            <summary>
            Document widgets template instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.GroupTemplateInstance">
            <summary>
            Group widgets template instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.TemplateInstance">
            <summary>
            Complete page template instance (PageTemplateInfo.TemplateInstance + DocumentTemplateInstance + GroupTemplateInstance).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfo.IsDocument">
            <summary>
            Indicates if document context available.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageInfoProvider">
            <summary>
            Provides information on the page that are necessary for its processing.
            </summary>
            <remarks>The class uses cache (if it's available) to store information about pages.</remarks>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoProvider.PAGE_INFO_STORAGE_KEY">
            <summary>
            Storage key used for pageinfo.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoProvider.PAGE_INFO_BY_URL_STORAGE_KEY">
            <summary>
            Storage key used for pageinfobyurl.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoProvider.PREFIX_CMS_GETDOC">
            <summary>
            GetDoc prefix for CMS pages (pages which require authentication).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoProvider.DEFAULT_PATH">
            <summary>
            Default path.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoProvider.CacheItemPriority">
            <summary>
            Cache item priority.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoProvider.mGetDocPrefixes">
            <summary>
            Prefixes for the available permanent document URLs.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoProvider.mUseCultureForBestPageInfoResult">
            <summary>
            Indicates whether culture should be used for bes page info result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetDefaultAliasPath(System.String,System.String)">
            <summary>
            Returns default alias name for domain or site if is defined
            </summary>
            <param name="domain">Domain name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetPageInfos(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets the page info data matching the conditions.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetPageInfo(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns the page info for the given Alias path or URL path.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Alias path</param>
            <param name="cultureCode">Culture code</param>
            <param name="urlPath">URL path</param>
            <param name="combineWithDefaultCulture">Combine with default culture?</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetPageInfo(System.String,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns the page info for the given Alias path or URL path. If NodeID is provided, pageinfo retrieval is faster.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Alias path</param>
            <param name="cultureCode">Culture code</param>
            <param name="urlPath">URL path</param>
            <param name="nodeId">Node ID of the page (when provided, retrieval from the database is faster, use to get parent document)</param>
            <param name="combineWithDefaultCulture">Combine with default culture?</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetPageInfo(System.Guid)">
            <summary>
            Returns the page info for the given Document GUID.
            </summary>
            <param name="documentGuid">Document GUID</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetPageInfo(System.Guid,System.Int32)">
            <summary>
            Returns the page info for the given Document GUID.
            </summary>
            <param name="documentGuid">Document GUID</param>
            <param name="siteId">Document site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetVirtualPageInfo(CMS.PortalEngine.PageTemplateInfo)">
            <summary>
            Gets a virtual page info instance based on the given page template info
            </summary>
            <param name="pti">Page template info</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetVirtualPageInfo(System.Int32)">
            <summary>
            Gets a virtual page info instance based on the given page template
            </summary>
            <param name="pageTemplateId">Page template ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetPageInfoForUrl(System.String,System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Parses the provided URL and returns a PageInfo object describing the required page.
            </summary>
            <param name="url">Full url of the request, including domain name, application, path and extension</param>
            <param name="cultureCode">Current document culture code</param>
            <param name="defaultAliasPath">Default alias path to use in case of default page, if null the path is taken from the system configuration</param>
            <param name="combineWithDefaultCulture">Combine with default culture?</param>
            <param name="isDocumentPage">Is document page</param>
            <param name="siteName">Site name</param>
            <returns>
            Returns null if no such page exists.
            </returns>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.RemovePathPrefix(System.String,System.String@)">
            <summary>
            Remove prefix from path if is defined.
            </summary>
            <param name="siteName">Sitename</param>
            <param name="path">Path</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.RemoveCulturePrefix(System.String@,System.String)">
            <summary>
            Returns culture code or culture alias defined in URL and removes it from input path.
            </summary>
            <param name="path">Url path</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.RemoveCulturePrefix(System.String@,System.String,CMS.Localization.CultureInfo@)">
            <summary>
            Returns culture code or culture alias defined in URL and removes it from input path.
            </summary>
            <param name="path">Url path</param>
            <param name="siteName">Site name</param>
            <param name="ci">Culture info for current culture prefix in URL</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.RemoveAllPageInfosFromCache">
            <summary>
            Removes all page info records from the cache.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetParentCachePageInfo(CMS.DocumentEngine.PageInfo)">
            <summary>
            Returns cache info of the parent page.
            </summary>
            <param name="currentPage">Current page info</param>
            <returns>Returns false if no parent object exists with not null cache info.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetParentSSLPageInfo(CMS.DocumentEngine.PageInfo)">
            <summary>
            Returns SSL info of the parent page.
            </summary>
            <param name="currentPage">Current page info</param>
            <returns>Returns false if no parent object exists with not null secured info.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetParentProperty(System.Int32,System.String,System.String,System.String)">
            <summary>
            Returns value inherited from parent in given culture for given column name.
            </summary>
            <param name="siteId">SiteId</param>
            <param name="nodeAlias">Alias path</param>
            <param name="where">Where condition</param>
            <param name="column">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetParentProperty``1(System.Int32,System.String,System.String,System.String,CMS.DataEngine.WhereCondition)">
            <summary>
            Returns value inherited from parent in given culture for given column name.
            </summary>
            <param name="siteId">SiteId</param>
            <param name="nodeAlias">Alias path</param>
            <param name="column">Column name</param>
            <param name="culture">Document culture</param>
            <param name="notEmptyCondition">Where condition indicating if inherited value is present</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetParentSecurePageInfo(CMS.DocumentEngine.PageInfo)">
            <summary>
            Returns secured info of the parent page.
            </summary>
            <param name="currentPage">Current page info</param>
            <returns>Returns false if no parent object exists with not null secured info.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetParentPageInfo(CMS.DocumentEngine.PageInfo)">
            <summary>
            Returns page info of the parent page.
            </summary>
            <param name="currentPage">Current page info</param>
            <returns>Returns null if no parent object exists.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetTemplateSourcePageInfo(CMS.DocumentEngine.PageInfo,System.String,System.Boolean)">
            <summary>
            Gets the Page info object that defines the page template used by the given page info object.
            </summary>
            <param name="pi">Page info for which the template source should be evaluated</param>
            <param name="culture">Culture to use for retrieving the information</param>
            <param name="combineWithDefaultCulture">Combine the results with default culture?</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetPageInfoByDocumentAliasInfo(System.Data.DataRow,System.String,System.String)">
            <summary>
            Gets PageInfo by DocumentAliasInfo.
            </summary>
            <param name="dr">DataRow with document alias info and node info</param>
            <param name="siteName">Site name</param>
            <param name="cultureCode">Document culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.IsDocumentExtension(System.String,System.String)">
            <summary>
            Returns true if actual extension is correct extension for current set of extensions.
            </summary>
            <param name="extensions">String with extensions separated by semicolon</param>
            <param name="actualExt">Actual extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetDependencyCacheKeys(CMS.DocumentEngine.PageInfo)">
            <summary>
            Gets the dependency cache keys for the given page info.
            </summary>
            <param name="pageInfo">Page info</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetDataForPageInfo(System.Guid,System.Int32)">
            <summary>
            Returns the data for the specified page info.
            </summary>
            <param name="documentGuid">Document GUID</param>
            <param name="siteId">Document site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetDataForPageInfo(System.String,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns the data for the specified page info.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Document alias path</param>
            <param name="cultureCode">Culture code</param>
            <param name="urlPath">Document URL path</param>
            <param name="nodeId">Node ID of the page (when provided, retrieval from the database is faster, use to get parent document)</param>
            <param name="combineWithDefaultCulture">Combine with default culture?</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetCultureWhereCondition(System.String,System.Boolean,System.String)">
            <summary>
            Creates culture where condition if culture code is specified.
            </summary>
            <param name="cultureCode">Culture code</param>
            <param name="combineWithDefaultCulture">Combine with default culture flag</param>
            <param name="defaultCultureCode">Default culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetDataForPageInfoForUrl(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,CMS.DocumentEngine.PageInfoResult@)">
            <summary>
            Parses the provided URL and returns a PageInfo object describing the required page.
            </summary>
            <param name="siteName">Site name</param>
            <param name="url">Full url of the request, including domain name, application, path and extension</param>
            <param name="cultureCode">Current document culture code</param>
            <param name="defaultAliasPath">Default alias path to use in case of default page, if null the path is taken from the system configuration</param>
            <param name="combineWithDefaultCulture">Combine with default culture?</param>
            <param name="isDocumentPage">Is document page</param>
            <param name="pageResult">Returns the contextual data for the given url</param>
            <returns>
            Returns null if no such page exists.
            </returns>
            <exception cref="T:CMS.DocumentEngine.PageNotFoundException">Thrown when PageInfo was not found for current URL.</exception>
            <exception cref="T:CMS.DocumentEngine.DomainNotFoundException">Thrown when SiteInfo was not found for current URL.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetSite(System.String@,System.String)">
            <summary>
            Gets the site info by the given site name or domain. If site name is empty, updates the site name by found site name
            </summary>
            <param name="siteName">Site name</param>
            <param name="domain">Domain name</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.ParseUrl(System.String,System.String@,System.String@)">
            <summary>
            Parses the given URL to the path and domain part
            </summary>
            <param name="url">URL to parse</param>
            <param name="path">Outputs relative path</param>
            <param name="domain">Outputs domain name</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.CheckGetDoc(System.String@)">
            <summary>
            Checks if the link if GetDoc path.
            </summary>
            <param name="path">Path to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.GetDocument(System.String,System.String,System.String,System.Boolean,CMS.DocumentEngine.PageInfo@)">
            <summary>
            Gets the page info by /getdoc/ handler
            </summary>
            <param name="siteName">Site name</param>
            <param name="path">Document path</param>
            <param name="cultureCode">Culture code</param>
            <param name="combineWithDefaultCulture">Combine with default culture</param>
            <param name="result">Resulting page info</param>
            <returns>
            Returns true if the request has been handled by the /getdoc/ handler
            </returns>
            <exception cref="T:CMS.DocumentEngine.PageNotFoundException">[PageInfoProvider.GetDocument]: Document not found.</exception>
        </member>
        <member name="M:CMS.DocumentEngine.PageInfoProvider.SelectNodesByWildcard(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns single node specified wildcard url.
            </summary>
            <param name="wildcardUrl">Wild card url</param>  
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
            <param name="combineWithDefaultCulture">Combine with default culture</param>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfoProvider.UseCultureForBestPageInfoResult">
            <summary>
            Gets or sets the value that indicates whether culture should be used for
            selecting best result instead of URL path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfoProvider.UseUnionForPageInfo">
            <summary>
            If true, union query is used to retrieve the page info.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PageInfoProvider.GetDocPrefixes">
            <summary>
            Prefixes for the available permanent document URLs.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageInfoSource">
            <summary>
            Page info source.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoSource.Unknown">
            <summary>
            Unknown source.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoSource.UrlPath">
            <summary>
            URL path selection.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoSource.AliasPath">
            <summary>
            Alias path selection.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoSource.GetDoc">
            <summary>
            /getdoc/ reference
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoSource.GetDocCulture">
            <summary>
            /getdoc/ reference with culture
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoSource.DocumentAlias">
            <summary>
            Document alias.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PageInfoSource.DefaultAliasPath">
            <summary>
            Default alias path.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PageNotFoundException">
            <summary>
            Page not found exception.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageNotFoundException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageNotFoundException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PageNotFoundException.Clone">
            <summary>
            Returns clone of the exception
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PersonalizationInfo">
            <summary>
            PersonalizationInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PersonalizationInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PersonalizationInfo.OBJECT_TYPE_DASHBOARD">
            <summary>
            Object type for dashboard
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PersonalizationInfo.TYPEINFO">
            <summary>
            User type information.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PersonalizationInfo.DASHBOARD">
            <summary>
            Type information for dashboard.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PersonalizationInfo.mTemplateInstance">
            <summary>
            User widgets template instance.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfo.#ctor">
            <summary>
            Constructor - Creates an empty PersonalizationInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new PersonalizationInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PersonalizationInfo.PersonalizationUserID">
            <summary>
            Personalization user ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PersonalizationInfo.PersonalizationID">
            <summary>
            Personalization ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PersonalizationInfo.PersonalizationGUID">
            <summary>
            Personalization GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PersonalizationInfo.PersonalizationDocumentID">
            <summary>
            Personalization document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PersonalizationInfo.PersonalizationSiteID">
            <summary>
            Personalization site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PersonalizationInfo.PersonalizationLastModified">
            <summary>
            Personalization last modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PersonalizationInfo.PersonalizationDashboardName">
            <summary>
            Personalization dashboard name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PersonalizationInfo.WebParts">
            <summary>
            Gets or sets the page template WebParts.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PersonalizationInfo.TemplateInstance">
            <summary>
            User widgets template instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PersonalizationInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PersonalizationInfoProvider">
            <summary>
            Class providing PersonalizationInfo management.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PersonalizationInfoProvider.UNDEFINEDDASHBOARD">
            <summary>
            Undefined dashboard constant.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PersonalizationInfoProvider.mUserPersonalizations">
            <summary>
            User personalization indexed by document ID [userId + "_" + documentId] -> [PersonalizationInfo]
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PersonalizationInfoProvider.mUserPersonalizationByName">
            <summary>
            User personalization indexed by dashboard name [userId + "_" + dashboardName + "_" + siteId] -> [PersonalizationInfo]
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfoProvider.GetPersonalizationInfos">
            <summary>
            Returns all Personalization records.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfoProvider.GetPersonalizationInfos(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the personalization records based on given parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Get only top N items</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfoProvider.GetPersonalizationInfo(System.Int32)">
            <summary>
            Returns the PersonalizationInfo structure for the specified personalization.
            </summary>
            <param name="personalizationId">Personalization id</param>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfoProvider.GetDashBoardPersonalization(System.Int32,System.String,System.String)">
            <summary>
            Returns PersonalizationInfo according to user ID and Dashboard name.
            </summary>
            <param name="userId">ID of the user to be selected</param>
            <param name="dashboardName">Name of the specified dashboard</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfoProvider.GetUserPersonalization(System.Int32,System.Int32)">
            <summary>
            Returns PersonalizationInfo according to user ID and document ID.
            </summary>
            <param name="userId">ID of the user to be selected</param>
            <param name="documentId">ID of the specified document</param>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfoProvider.SetPersonalizationInfo(CMS.DocumentEngine.PersonalizationInfo)">
            <summary>
            Sets (updates or inserts) specified personalization.
            </summary>
            <param name="personalization">Personalization to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfoProvider.DeletePersonalizationInfo(CMS.DocumentEngine.PersonalizationInfo)">
            <summary>
            Deletes specified personalization.
            </summary>
            <param name="infoObj">Personalization object</param>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfoProvider.DeletePersonalizationInfo(System.Int32)">
            <summary>
            Deletes specified personalization.
            </summary>
            <param name="personalizationId">Personalization id</param>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfoProvider.GetPersonalizedTemplateInstance(CMS.DocumentEngine.PageInfo,System.Int32,System.String,System.String)">
            <summary>
            Gets the personalized user instance for given page info.
            </summary>
            <param name="pageInfo">Page info</param>
            <param name="userId">User ID</param>
            <param name="dashboardName">Dashboard name</param>
            <param name="siteName">Site name - is used for dashboard personalization only</param>
        </member>
        <member name="F:CMS.DocumentEngine.PersonalizationInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfoProvider.LoadPersonalizationHashtables">
            <summary>
            Load personalization to hashtables.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.PersonalizationInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="P:CMS.DocumentEngine.PersonalizationInfoProvider.UserPersonalizations">
            <summary>
            User personalization indexed by document ID [userId + "_" + documentId] -> [PersonalizationInfo]
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.PersonalizationInfoProvider.UserPersonalizationByName">
            <summary>
            User personalization indexed by dashboard name [userId + "_" + dashboardName + "_" + siteId] -> [PersonalizationInfo]
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.UserSecurityExtensions">
            <summary>
            Security extensions for users
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerTreeNode(CMS.Membership.UserInfo,System.Int32,CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="user">User to check</param>
            <param name="nodeId">Document node id</param>
            <param name="permission">Permission to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerTreeNode(CMS.Membership.UserInfo,System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="user">User to check</param>
            <param name="nodeId">Document node id</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Document culture code. If the culture is null the user allowed cultures check is not performed</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerTreeNode(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.Boolean)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result.
            </summary>
            <param name="user">User to check</param>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerTreeNode(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="user">User to check</param>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Document culture code. If the culture is null the user allowed cultures check is not performed</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerTreeNode(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String,System.Boolean)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result.
            </summary>
            <param name="user">User to check</param>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Culture of the document to be checked</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedToCreateNewDocument(CMS.Membership.UserInfo,System.Int32,System.String)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="user">User to check</param>
            <param name="parentNodeId">Parent node id</param>
            <param name="documentClassName">Document class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedToCreateNewDocument(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="user">User to check</param>
            <param name="parentNode">Parent node</param>
            <param name="documentClassName">Document class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerDocument(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.Boolean,System.String)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.)
            </summary>
            <param name="user">User to check</param>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="culture">Culture to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerDocument(CMS.Membership.UserInfo,System.Int32,System.String,CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="user">User to check</param>
            <param name="nodeId">ID of node</param>
            <param name="className">Class name of the document</param>
            <param name="permission">Permission</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserSecurityExtensions.IsAuthorizedPerDocument(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum[],System.Boolean,System.String)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="user">User to check</param>
            <param name="node">Document node</param>
            <param name="permissions">Permissions to check</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="targetCultureCode">Culture code of the document which should be checked. If null or empty user preferred culture is used instead.</param>
        </member>
        <member name="T:CMS.DocumentEngine.BaseDocumentSettings">
            <summary>
            Container for shared settings used by operations with documents.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.BaseDocumentSettings.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.BaseDocumentSettings.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Parametric constructor
            </summary>
            <param name="node">Document node to process</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentSettings.Node">
            <summary>
            Document node to process.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentSettings.Tree">
            <summary>
            TreeProvider to use.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.NewCultureDocumentSettings">
            <summary>
            Container for settings used when creating new document language version.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.NewCultureDocumentSettings.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.NewCultureDocumentSettings.#ctor(CMS.DocumentEngine.TreeNode,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Parametric constructor
            </summary>
            <param name="node">Document node to create new culture version</param>
            <param name="cultureCode">New culture code</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.NewCultureDocumentSettings.#ctor(CMS.DocumentEngine.NewCultureDocumentSettings)">
            <summary>
            Copying constructor
            </summary>
            <param name="settings">NewCultureDocumentSettings object used as a pattern.</param>
        </member>
        <member name="P:CMS.DocumentEngine.NewCultureDocumentSettings.CreateVersion">
            <summary>
            Indicates if new version should be created when document is under a workflow.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NewCultureDocumentSettings.AllowCheckOut">
            <summary>
            Indicates if document should be checked out when new version is created and document is under a workflow.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NewCultureDocumentSettings.CopyAttachments">
            <summary>
            Indicates if document attachments should be copied from source culture version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NewCultureDocumentSettings.ClearAttachmentFields">
            <summary>
            Indicates if field attachments should be cleared. Used in Translation module to ensure correct attachments from external translation.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NewCultureDocumentSettings.CopyCategories">
            <summary>
            Indicates if document categories should be copied from source culture version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NewCultureDocumentSettings.CultureCode">
            <summary>
            Culture code of new language version. If not specified DocumentCulture from node instance is used.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CopyDocumentSettings">
            <summary>
            Container for settings used when copying document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CopyDocumentSettings.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CopyDocumentSettings.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Parametric constructor
            </summary>
            <param name="node">Document node to copy</param>
            <param name="target">Target node</param>
            <param name="tree">Tree provider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.CopyDocumentSettings.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.Int32,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Parametric constructor
            </summary>
            <param name="node">Document node to copy</param>
            <param name="tree">Tree provider to use</param>
            <param name="targetParentNodeId">Target location</param>
            <param name="includeChildNodes">Copy also the node child nodes</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Owner of the new documents</param>
            <param name="copyPermissions">Indicates if the document permissions should be copied</param>
            <param name="newDocumentName">New document name</param>
        </member>
        <member name="M:CMS.DocumentEngine.CopyDocumentSettings.#ctor(CMS.DocumentEngine.CopyDocumentSettings,System.Boolean)">
            <summary>
            Copy constructor
            </summary>
            <param name="settings">Settings object</param>
            <param name="processingChildNodes">Indicates that the instance is created when child nodes are being copied recursively</param>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.TargetParentNodeId">
            <summary>
            Target location
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.TargetNode">
            <summary>
            Target node
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.IncludeChildNodes">
            <summary>
            Indicates whether child nodes should be copied as well.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.ProcessingChildNodes">
            <summary>
            Indicates that child nodes are being copied recursively.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.NewDocumentsOwner">
            <summary>
            Owner of the new documents
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.NewDocumentsGroup">
            <summary>
            Group of the new documents
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.CopyPermissions">
            <summary>
            Indicates if the document permissions should be copied
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.NewDocumentName">
            <summary>
            New document name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.CheckSiteCulture">
            <summary>
            If set to true document will be copied only if target site has assigned the culture document has.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentSettings.CloneSKU">
            <summary>
            If set to true SKU bound to copied document will be cloned.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DeleteDocumentSettings">
            <summary>
            Container for settings used when deleting document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DeleteDocumentSettings.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DeleteDocumentSettings.#ctor(CMS.DocumentEngine.TreeNode,System.Boolean,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates and initializes DeleteDocumentSettings object.
            </summary>
            <param name="node">Document node to delete</param>
            <param name="deleteAllCultures">Delete all culture version of the specified document?</param>
            <param name="destroyHistory">Destroy the document history?</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.DeleteDocumentSettings.#ctor(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,System.Boolean,System.Boolean,CMS.DocumentEngine.DeleteProductActionEnum,System.String,System.Collections.ArrayList,CMS.DocumentEngine.TreeNode,System.Int32,System.Boolean)">
            <summary>
            Creates and initializes DeleteDocumentSettings object.
            </summary>
            <param name="node">Document node to delete</param>
            <param name="tree">TreeProvider to use</param>
            <param name="deleteAllCultures">Delete all culture version of the specified document?</param>
            <param name="destroyHistory">Destroy the document history?</param>
            <param name="deleteProductAction">Action taken when document with product bound is deleted</param>
            <param name="webRootFullPath">Full path to the web root folder</param>
            <param name="deletedNodeIDs">List of the deleted node IDs</param>
            <param name="altDocument">Alternating document</param>
            <param name="altCopyAllPaths">Copy all paths to the alternating document</param>
            <param name="altMaxlevel">Maximal level of deleting document which should be used as source for alternating document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DeleteDocumentSettings.#ctor(CMS.DocumentEngine.DeleteDocumentSettings)">
            <summary>
            Copying constructor.
            </summary>
            <param name="settings">DeleteDocumentSetting object used as a pattern.</param>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.DeleteAllCultures">
            <summary>
            Indicates whether all culture version of the specified document are to be deleted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.DestroyHistory">
            <summary>
            Indicates whether the history of the specified document is to be deleted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.DeleteProductAction">
            <summary>
            Action to be performed with SKU (product) bound to deleted document(s).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.WebRootFullPath">
            <summary>
            Full path to the web root folder.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.DeletedNodeIDs">
            <summary>
            List of the deleted node IDs.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.AlternatingDocument">
            <summary>
            Alternating document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.AlternatingDocumentMaxLevel">
            <summary>
            Maximal level of deleted document which should be used as source for alternating document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentSettings.AlternatingDocumentCopyAllPaths">
            <summary>
            Indicates whether document aliases should be copied to the alternating document
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeHelper">
            <summary>
            Static tree accessing methods.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeHelper.SelectSingleDocument(System.Int32)">
            <summary>
            Returns the document node specified by the given document ID.
            </summary>
            <param name="documentId">Document ID to select</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeHelper.SelectSingleNode(System.Int32)">
            <summary>
            Returns single node specified by NodeID, uses the preferred culture.
            </summary>
            <param name="nodeId">Node ID to select</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeHelper.SelectSingleNode(System.String)">
            <summary>
            Returns single document node.
            </summary>
            <param name="aliasPath">Node AliasPath</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeHelper.SelectSingleNode(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Returns single document node.
            </summary>
            <param name="aliasPath">Node AliasPath</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="className">Node ClassName (e.g.: "cms.article")</param>
            <param name="selectOnlyPublished">Published nodes only</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeHelper.SelectNodes(System.String)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeHelper.SelectNodes(System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeHelper.SelectNodes(System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean)">
            <summary>
            Selects tree nodes without coupled data according to provided parameters and returns them as dataset.
            </summary>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to the Node GUID</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Specify if the related node is located on the left side of the relationship</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            Selects tree nodes according to provided parameters, current view mode and returns them as dataset.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Culture code of the documents</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to the Node GUID</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Specify if the related node is located on the left side of the relationship</param>
            <param name="topN">Select only top N documents</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.String)">
            <summary>
            Selects tree nodes according to provided parameters, current view mode and returns them as dataset.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Culture code of the documents</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Select only top N documents</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeHelper.GetDocument(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,CMS.Membership.UserInfo)">
            <summary>
            Selects document according to provided parameters and current view mode.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Culture code of the documents</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="className">Class name of the document</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="checkPermissions">True if the permissions should be checked</param>
            <param name="user">User info</param>
        </member>
        <member name="T:CMS.DocumentEngine.AliasActionModeEnum">
            <summary>
            Document alias action mode
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AliasActionModeEnum.UseSiteSettings">
            <summary>
            Use site settings
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AliasActionModeEnum.RedirectToMainURL">
            <summary>
            Redirect to main URL
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AliasActionModeEnum.DoNothing">
            <summary>
            Do not redirect to main URL and ignore site settings for document aliases
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAliasInfo">
            <summary>
            DocumentAliasInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentAliasInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentAliasInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>      
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentAliasInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentAliasInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAliasInfo.AliasActionMode">
            <summary>
            Gets or sets the document alias action mode
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAliasInfo.AliasGUID">
            <summary>
            Alias GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAliasInfo.AliasLastModified">
            <summary>
            Alias last modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAliasInfo.AliasNodeID">
            <summary>
            Node ID of alias.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAliasInfo.AliasCampaign">
            <summary>
            Alias campaign.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAliasInfo.AliasExtensions">
            <summary>
            Alias extensions.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAliasInfo.AliasID">
            <summary>
            Alias ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAliasInfo.AliasCulture">
            <summary>
            Alias culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAliasInfo.AliasURLPath">
            <summary>
            Alias URL path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAliasInfo.AliasWildcardRule">
            <summary>
            Alias wildcard rule.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAliasInfo.AliasPriority">
            <summary>
            Alias priority.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAliasInfo.AliasSiteID">
            <summary>
            Alias Site ID.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAliasInfoProvider">
            <summary>
            Class providing DocumentAliasInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.GetDocumentAliasInfo(System.Int32)">
            <summary>
            Returns the DocumentAliasInfo structure for the specified documentAlias.
            </summary>
            <param name="documentAliasId">DocumentAlias id</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.GetDocumentAliases(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the query with document aliases according to WHERE condition ordered.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY condition</param>
            <param name="topN">Get top N rows</param>
            <param name="columns">Columns to select</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.GetDocumentAliasList(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the DataSet with document aliases and NodeAliasPath from CMS_Tree.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY condition</param>
            <param name="topN">Get top N rows</param>
            <param name="columns">Columns to select. If empty default columns are used</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.SetDocumentAliasInfo(CMS.DocumentEngine.DocumentAliasInfo,System.String)">
            <summary>
            Sets (updates or inserts) specified documentAlias.
            </summary>
            <param name="documentAlias">DocumentAlias to set</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.DeleteDocumentAliasInfo(CMS.DocumentEngine.DocumentAliasInfo)">
            <summary>
            Deletes specified documentAlias.
            </summary>
            <param name="infoObj">DocumentAlias object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.DeleteDocumentAliasInfo(System.Int32)">
            <summary>
            Deletes specified documentAlias.
            </summary>
            <param name="documentAliasId">DocumentAlias id</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.GetDocumentAliases">
            <summary>
            Returns the query for all document aliases.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.GetDocumentAliases(System.String,System.Int32)">
            <summary>
            Returns the DataSet with document aliases matching specified wildcard rule.
            </summary>
            <param name="url">Wildcard URL</param>     
            <param name="siteId">Site id</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.MoveAliases(System.Int32,System.Int32,System.String)">
            <summary>
            Moves document aliases from source tree node to the target tree node
            </summary>
            <param name="sourceNodeId">Source node id</param>
            <param name="targetNodeId">Target node id</param>
            <param name="culture">Culture code, if empty all cultures are moved</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.IsUnique(System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Returns true if document alias is unique within the specified site
            </summary>
            <param name="aliasUrlPath">Alias URL path</param>
            <param name="editedAliasId">ID of edited document alias</param>
            <param name="culture">Alias culture</param>
            <param name="siteName">Site name</param>
            <param name="extensions">Alias extensions</param>
            <param name="checkDocumentUrlpath">If is true document alias is checked against document URL path and document aliases</param>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.DocumentAliasExists(CMS.DocumentEngine.DocumentAliasInfo)">
            <summary>
            Returns true if the alias with the same settings as the given alias already exists.
            </summary>
            <param name="dai">Document alias to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.DeleteNodeAliases(System.Int32)">
            <summary>
            Deletes node aliases for given node ID.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.CreateWildcardRule(System.String,System.Int32@)">
            <summary>
            Creates wildcard rule for given URL.
            </summary>
            <param name="wildcardUrl">Wildcard URL</param>
            <param name="wildcardCount">Number of matches</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.GetDocumentAliasInfoInternal(System.Int32)">
            <summary>
            Returns the DocumentAliasInfo structure for the specified documentAlias.
            </summary>
            <param name="documentAliasId">DocumentAlias id</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.GetDocumentAliasListInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the DataSet with document aliases and NodeAliasPath from CMS_Tree.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY condition</param>
            <param name="topN">Get top N rows</param>
            <param name="columns">Columns to select. If empty default columns are used</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.SetDocumentAliasInfoInternal(CMS.DocumentEngine.DocumentAliasInfo,System.String)">
            <summary>
            Sets (updates or inserts) specified documentAlias.
            </summary>
            <param name="documentAlias">DocumentAlias to set</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.DeleteDocumentAliasInfoInternal(CMS.DocumentEngine.DocumentAliasInfo)">
            <summary>
            Deletes specified documentAlias.
            </summary>
            <param name="infoObj">DocumentAlias object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.GetDocumentAliasesInternal">
            <summary>
            Returns the query for all document aliases.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.GetDocumentAliasesInternal(System.String,System.Int32)">
            <summary>
            Returns the DataSet with document aliases matching specified wildcard rule.
            </summary>
            <param name="url">Wildcard URL</param>     
            <param name="siteID">Site id</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.MoveAliasesInternal(System.Int32,System.Int32,System.String)">
            <summary>
            Moves document aliases from source tree node to the target tree node
            </summary>
            <param name="sourceNodeId">Source node id</param>
            <param name="targetNodeId">Target node id</param>
            <param name="culture">Culture code, if empty all cultures are moved</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.GetMatchingAliasesInternal(System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Returns dataset with matching aliases to the specified alias URL path
            </summary>
            <param name="aliasUrlPath">Alias URL path</param>
            <param name="editedAliasId">ID of edited document alias</param>
            <param name="culture">Alias culture</param>
            <param name="siteName">Site name</param>
            <param name="extensions">Alias extensions</param>
            <param name="checkDocumentUrlpath">If is true document alias is checked against document URL path and document aliases</param>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.DeleteNodeAliasesInternal(System.Int32)">
            <summary>
            Deletes node aliases for given node ID.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.CreateWildcardRuleInternal(System.String,System.Int32@)">
            <summary>
            Creates wildcard rule for given URL.
            </summary>
            <param name="wildcardUrl">Wildcard URL</param>
            <param name="wildcardCount">Number of matches</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.GetNormalizedUrlPathInternal(System.String)">
            <summary>
            Returns URL path without MVC or ROUTE prefix
            </summary>
            <param name="urlPath">URL path</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.UpdateData(System.String,System.String,CMS.DataEngine.QueryDataParameters)">
            <summary>
            Updates data for all records given by where condition
            </summary>
            <param name="updateExpression">Update expression, e.g. "Value = Value * 2"</param>
            <param name="where">Where condition</param>
            <param name="parameters">Parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAliasInfoProvider.UpdateSearchIndex(CMS.DocumentEngine.DocumentAliasInfo,System.String)">
            <summary>
            Updates search index.
            </summary>
            <param name="infoObj">Document alias object</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentOrderEnum">
            <summary>
            Document order enumeration (for new document).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentOrderEnum.Unknown">
            <summary>
            Unknown order.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentOrderEnum.Alphabetical">
            <summary>
            Alphabetical order.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentOrderEnum.First">
            <summary>
            First document.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentOrderEnum.Last">
            <summary>
            Last document.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentURLProvider">
            <summary>
            URL provider for the documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.DEFAUL_PAGE_NONE">
            <summary>
            Do not process default page
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.DEFAUL_PAGE_DOMAIN">
            <summary>
            Use domain for default page
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.DEFAUL_PAGE_PAGE">
            <summary>
            Use default alias path page
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.DEFAUL_PAGE_DEFAULT">
            <summary>
            Use default page URL
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.DOMAIN_PREFIX_NONE">
            <summary>
            Do not process domain prefix
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.DOMAIN_PREFIX_WWW">
            <summary>
            Always use www prefix for domains
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.DOMAIN_PREFIX_WITHOUTWWW">
            <summary>
            Never use www prefix for domains
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.NO_EXTENSION">
            <summary>
            No extension constant
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.mDefaultPageURL">
            <summary>
            Default (root) page URL.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.mWildcardDefaultValueDelimiter">
            <summary>
            Default wildcard value delimiter.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.mUseCurrentWildcardValueAsDefaultValue">
            <summary>
            Indicates whether current wildcard query string value should be used as default value.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.mWildcardRegex">
            <summary>
            Regular expression for wildcard.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentURLProvider.mEscapeRegex">
            <summary>
            Regular expression for escaping special regular chars if they are present in URL.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.EnsureDomainPrefix(System.String,System.String)">
            <summary>
            Ensures domain prefix with dependence on specified site setting
            </summary>
            <param name="domain">Domain</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable if urlpath is not wildcard URL) and a specified site name.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">URLU Path</param>
            <param name="siteName">Site name</param>
            <param name="langPrefix">Lang prefix. If is empty current lang prefix is used</param>
            <param name="extension">URL extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetPermanentDocUrl(System.Guid,System.String,System.String,System.String,System.String)">
            <summary>
            Returns permanent document URL.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="nodeAlias">Node alias</param>
            <param name="siteName">Site name</param>
            <param name="prefix">URL prefix, if null, "getdoc" is used, the prefix must be supported by the URL rewriting engine</param>
            <param name="extension">Extension for the URL, if null, it is taken from the Friendly URL settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.UsePermanentUrls(System.String)">
            <summary>
            Indicates if permanent URLs should be generated for documents and attachments
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetUrlForPathInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Returns URL for the specified path.
            </summary>
            <param name="path">Path</param>
            <param name="siteName">Site name</param>
            <param name="langPrefix">Language prefix. If is empty, current language prefix is used</param>
            <param name="extension">Extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetUrlInternal(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable if urlpath is not wildcard URL) and a specified site name.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">URL Path</param>
            <param name="siteName">Site name</param>
            <param name="langPrefix">Lang prefix. If is empty, current lang prefix is used</param>
            <param name="extension">URL extension</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.GetPermanentDocUrlInternal(System.Guid,System.String,System.String,System.String,System.String)">
            <summary>
            Returns permanent document URL.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="nodeAlias">Node alias</param>
            <param name="siteName">Site name</param>
            <param name="prefix">URL prefix, if null, "getdoc" is used, the prefix must be supported by the URL rewriting engine</param>
            <param name="extension">Extension for the URL, if null, it is taken from the Friendly URL settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.WildcardMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Replace wildcard match if contain default value definition.
            </summary>
            <param name="m">Regex match</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.EnsureWildcardPath(System.String)">
            <summary>
            Ensures URL path with wildcards. The wildcard with default value are replace to the default value.
            </summary>
            <param name="path">URL path</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.BuildWildcardQueryString(System.String,System.String)">
            <summary>
            Returns query string for wildcard url. Wildcard is in format /{name
            </summary>
            <param name="urlPath">Url path from database</param>
            <param name="currentPath">Current requested url path</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentURLProvider.EnsureDomainPrefixInternal(System.String,System.String)">
            <summary>
            Ensures domain prefix with dependence on specified site setting
            </summary>
            <param name="domain">Domain</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentURLProvider.EscapeRegex">
            <summary>
            Regular expression for escaping special regular chars if they are present in URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentURLProvider.WildcardRegex">
            <summary>
            Gets the regular expression for wildcard rule.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentURLProvider.DefaultPageURL">
            <summary>
            Default (root) page URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentURLProvider.WildcardDefaultValueDelimiter">
            <summary>
            Gets the delimiter for default widcard value.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentURLProvider.UseCurrentWildcardValueAsDefaultValue">
            <summary>
            Gets or sets the value that indicates whether current wildcard query string value should be used as default value.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.NodeSelectionParameters">
            <summary>
            Structure to define the selection parameters for a document nodes selection
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodeSelectionParameters.mCombineWithDefaultCulture">
            <summary>
            Combine with default culture
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.NodeSelectionParameters.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.SiteName">
            <summary>
            Nodes site name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.AliasPath">
            <summary>
            Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.CultureCode">
            <summary>
            Nodes culture code
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.CombineWithDefaultCulture">
            <summary>
            Specifies if return the default culture document when specified culture not found
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.ClassNames">
            <summary>
            List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.Where">
            <summary>
            Where condition to use for the data selection
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.OrderBy">
            <summary>
            Order by clause to use for the data selection
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.MaxRelativeLevel">
            <summary>
            Maximal child level of the selected nodes
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.SelectOnlyPublished">
            <summary>
            Select only published nodes
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.TopN">
            <summary>
            Select top N rows only
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.Columns">
            <summary>
            Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.SelectAllData">
            <summary>
            If true, the coupled data are retrieved in case class names are specified
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.SelectSingleNode">
            <summary>
            If true, single node selection takes place (escapes query like patterns)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.NodeSelectionParameters.CheckLicense">
            <summary>
            If true, the selection checks license conditions
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TranslationStatusEnum">
            <summary>
            Translation status enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TranslationStatusEnum.Translated">
            <summary>
            Translation of document is up to date.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TranslationStatusEnum.Outdated">
            <summary>
            Translation is out of date.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TranslationStatusEnum.NotAvailable">
            <summary>
            Translation is not avialable.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TranslationStatusEnum.WaitingForTranslation">
            <summary>
            Waiting for translation - submitted to translation service
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNode">
            <summary>
            Represents a document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.TYPEINFO">
            <summary>
            Type information
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mDataClassInfo">
            <summary>
            DataClass info
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mPrioritizedProperties">
            <summary>
            List of properties which should be prioritized in the macro controls (IntelliSense, MacroTree).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.isInDocumentHelper">
            <summary>
            If true, the document is currently in the document helper and should call normal methods.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mWildcardRegex">
            <summary>
            Contains compiled regular expression for wildcard macro.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mTreeProvider">
            <summary>
            Tree provider object to use for the database access.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mVersionManager">
            <summary>
            Manager for version actions.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mWorkflowManager">
            <summary>
            Manager for workflow actions.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mClassName">
            <summary>
            Node class name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mNodeData">
            <summary>
            Tree node data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mCultureData">
            <summary>
            Document culture specific data
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mCoupledData">
            <summary>
            Document coupled data
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalNodeAlias">
            <summary>
            Original node alias.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalNodeAliasPath">
            <summary>
            Original node alias path.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalNodeParentID">
            <summary>
            Original node parent ID.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalSiteID">
            <summary>
            Original parent node ID.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalDocumentName">
            <summary>
            Original document name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalNodeLevel">
            <summary>
            Original node level.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalNodeSKUID">
            <summary>
            Original node SKU (product) ID.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalNodeName">
            <summary>
            Original node name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalDocumentTags">
            <summary>
            Original document tags.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalDocumentTagsGroup">
            <summary>
            Original document tags group.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalDocumentExtensions">
            <summary>
            Original document extensions.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalDocumentCulture">
            <summary>
            Original document culture.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalDocumentUrlPath">
            <summary>
            Original document url path.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mOriginalValuesLoaded">
            <summary>
            If true, the original node values were loaded.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mNodeCustomData">
            <summary>
            Node custom data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mDocumentCustomData">
            <summary>
            Document custom data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mDocumentContent">
            <summary>
            Document editable content.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mWorkflowStep">
            <summary>
            Document workflow step
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mWorkflowStepTimeout">
            <summary>
            Document workflow step timeout
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mParent">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mConnectedDocuments">
            <summary>
            Connected documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mConnectedObjects">
            <summary>
            Connected objects.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mRelatedDocuments">
            <summary>
            Related documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mGroupedAttachments">
            <summary>
            Grouped attachments.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNode.mSite">
            <summary>
            Site of the document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetRelationshipNames">
            <summary>
            Returns relationship names used by the document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.RelatedDocuments_OnLoadCollection(CMS.DataEngine.ObjectRepository{CMS.DocumentEngine.TreeNodeCollection,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNodeCollectionSettings},System.String)">
            <summary>
            Handler to provide the related document collection.
            </summary>
            <param name="repository">Parent repository</param>
            <param name="name">Collection name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetRelatedDocumentsCollection(CMS.DataEngine.ObjectRepository{CMS.DocumentEngine.TreeNodeCollection,CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNodeCollectionSettings},System.String,System.Boolean,System.Boolean)">
            <summary>
            Handler to provide the related document collection.
            </summary>
            <param name="repository">Parent repository</param>
            <param name="name">Collection name</param>
            <param name="documentIsOnLeftSide">If true, the document can be on left side of the relationship</param>
            <param name="documentIsOnRightSide">If true, the document can be on left side of the relationship</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.New(System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates new instance of given class which must inherit TreeNode.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.New(System.String,System.Data.DataRow,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates new instance of given class which must inherit TreeNode and fill it with given data.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="dataRow">Data row containing both tree node and coupled data</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.New``1(System.String,System.Data.DataRow,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates new instance of given class which must inherit specified node type and fill it with given data.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="dataRow">Data row containing both tree node and coupled data</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.New``1(System.String,CMS.Base.IDataContainer,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates new instance of given class which must inherit specified node type and fill it with given data.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="data">Data container containing both tree node and coupled data</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.NewInstance``1(System.String)">
            <summary>
            Creates a new instance of the given type
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.#ctor">
            <summary>
            Empty constructor, allowed only if Initialize is called immediately after it.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.#ctor(System.String)">
            <summary>
            Base constructor for inherited classes and internal purposes.
            </summary>
            <param name="className">Class name in format application.class</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Initialize(System.String,System.Data.DataRow,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initializes the object created with default constructor. Use it to load existing node from data row.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="dataRow">Data row containing all tree node, document and coupled table</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Initialize(System.String,CMS.Base.IDataContainer,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initializes the object created with default constructor. Use it to load existing node from data row.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="data">Data container containing all tree node, document and coupled table</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureDefaultValues">
            <summary>
            Sets the document default values.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.LoadFromDataRow(System.Data.DataRow)">
            <summary>
            Loads the object data from given DataRow.
            </summary>
            <param name="dr">Data row with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.LoadFromDataContainer(CMS.Base.IDataContainer)">
            <summary>
            Loads the object data from given data container.
            </summary>
            <param name="data">Container with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetPropertyType(System.String)">
            <summary>
            Returns the type of given property.
            </summary>
            <param name="columnName">Property name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.RegisterProperties">
            <summary>
            Registers properties of this object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.TryGetProperty(System.String,System.Object@)">
            <summary>
            Obtains value of specified property.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetReferencedObject(System.String,System.Object@)">
            <summary>
            Obtains the object to which the particular column refers.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Result object</param>
            <returns>Returns true if the operation was successful (the object was present)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.HasAutomaticProperty(System.String)">
            <summary>
            Returns true if the given column provides an automatic property to access it's binding.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.TryGetValue(System.String,System.Object@)">
            <summary>
            Obtains value of given column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Result value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetValue(System.String,System.Object)">
            <summary>
            Sets value of the specified node column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Value</param>
            <returns>Returns true if the operation was successful</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetIntegerValue(System.String,System.Int32,System.Boolean)">
            <summary>
            Sets the integer value of the Tree node.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
            <param name="allowZero">If false, only positive values are valid</param>
            <returns>Returns true if the value was changed</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specific column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ItemChanged(System.String)">
            <summary>
            Returns true if the item on specified column name changed.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetOriginalValue(System.String)">
            <summary>
            Returns the original value of given column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ResetChanges(System.Boolean)">
            <summary>
            Resets the object changes and keeps the new values as unchanged.
            </summary>
            <param name="asUnchanged">If true, the changed columns won't contain anything. If false, the previous values are discarded, but all the columns will be marked as changed.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.RevertChanges">
            <summary>
            Reverts the object changes and keeps the original values.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MakeComplete(System.Boolean)">
            <summary>
            Makes the object data complete.
            </summary>
            <param name="loadFromDb">If true, the data to complete the object is loaded from database</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.DataChanged">
            <summary>
            Returns true if the object has changed.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.DataChanged(System.String)">
            <summary>
            Returns true if the object has changed.
            </summary>
            <param name="excludedColumns">List of columns excluded from change (separated by ';')</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InitializeClassName(System.String)">
            <summary>
            Initializes class name
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.RefreshNodeDataClassId">
            <summary>
            Refreshes node data class ID value based on data class info
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertCoupledData">
            <summary>
            Inserts the internal coupled data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateCoupledData">
            <summary>
            Updates the coupled data of the document node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertTreeNodeData(CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts the CMS_Tree part of the document node.
            </summary>
            <param name="parent">Parent node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateTreeNodeData">
            <summary>
            Updates the CMS_Tree part of the document node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertCultureData">
            <summary>
            Inserts the CMS_Document part of the document node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateCultureData">
            <summary>
            Updates the CMS_Document part of the document node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetDocumentNameSource(System.String)">
            <summary>
            Sets the document name source field to the given value.
            </summary>
            <param name="value">Document name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetDocumentNameSource(System.String,System.Boolean)">
            <summary>
            Sets the document name source field to the given value.
            </summary>
            <param name="value">Document name</param>
            <param name="onlyIfEmpty">Indicates if value should only be set if the current value is empty</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MapDocumentName">
            <summary>
            Maps the document name based on the document type settings.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.LogAction(System.String,System.String,System.Boolean)">
            <summary>
            Logs document action to the event log.
            </summary>
            <param name="eventCode">Event code</param>
            <param name="eventDescription">Event description</param>
            <param name="logDocumentFieldChanges">Indicates if log should contain the changes to particular document document fields</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Insert">
            <summary>
            Hides the insert method without parameter. Do not use!
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Insert(System.Int32,System.Boolean)">
            <summary>
            Inserts current node under specified parent node.
            </summary>
            <param name="parentNodeId">Parent node ID</param>
            <param name="useDocumentHelper">Use document helper</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Insert(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Inserts current node under specified parent node.
            </summary>
            <param name="parent">Parent node</param>
            <param name="useDocumentHelper">Use document helper</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Inserts current node under specified parent node.
            </summary>
            <param name="parent">Parent node</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertAsNewCultureVersion(System.String,System.Boolean)">
            <summary>
            Inserts current node as new culture version of the same document.
            </summary>
            <param name="cultureCode">Culture code of new culture version (If not specified, node.DocumentCulture property is used.)</param>
            <param name="useDocumentHelper">If true, the document helper is used for the operation to handle workflow</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertAsNewCultureVersionInternal(System.String)">
            <summary>
            Inserts current node as a new culture version of the specified document.
            </summary>
            <param name="cultureCode">Culture code of new culture version (If not specified, node.DocumentCulture property is used.)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ResetTranslationFlag">
            <summary>
            Clears 'Document is waiting for translation' flag.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertAsLink(System.Int32,System.Boolean)">
            <summary>
            Inserts current node under specified parent node as a document link.
            </summary>
            <param name="parentNodeId">Parent node ID</param>
            <param name="useDocumentHelper">Use document helper</param>
            <remarks>Use this method only for creating a new node linked to existing document (the node must be existing document). The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertAsLink(CMS.DocumentEngine.TreeNode,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Inserts current node under specified parent node as a document link.
            </summary>
            <param name="parent">Parent node</param>
            <remarks>Use this method only for creating a new node linked to existing document (the node must be existing document). The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
            <param name="useDocumentHelper">If true, the document helper is used</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InsertAsLinkInternal(CMS.DocumentEngine.TreeNode,System.Int32,System.Int32)">
            <summary>
            Inserts current node under specified parent node as a document link.
            </summary>
            <param name="parent">Parent node</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
            <remarks>Use this method only for creating a new node linked to existing document (the node must be existing document). The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Update">
            <summary>
            Updates node data in the database.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Update(System.Boolean)">
            <summary>
            Updates node data in the database.
            </summary>
            <param name="useDocumentHelper">If true, the document helper is used for the operation to handle workflow</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateInternal">
            <summary>
            Updates node data in the database.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SubmitChanges(System.Boolean)">
            <summary>
            Submits the changes in the object to the database.
            </summary>
            <param name="withCollections">If true, also submits the changes in the children of the object</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SubmitChanges(System.Boolean,CMS.DocumentEngine.TreeNode)">
            <summary>
            Submits the changes in the object to the database.
            </summary>
            <param name="withCollections">If true, also submits the changes in the children of the object</param>
            <param name="parentDocument">Parent document, needed for new documents</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.DeleteAllCultures">
            <summary>
            Deletes all the culture versions of the specified node including the child nodes.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Destroy">
            <summary>
            Destroys the document with its version history. Deletes only this culture version of the document to the recycle bin, including the bound product.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Delete">
            <summary>
            Deletes the document to the recycle bin. Deletes only this culture version of the document to the recycle bin, including the bound product.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Delete(System.Boolean)">
            <summary>
            Deletes the document to the recycle bin. Deletes only this culture version of the document to the recycle bin, including the bound product.
            </summary>
            <param name="useDocumentHelper">If true, the document helper is used</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Delete(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Deletes the document.
            </summary>
            <param name="deleteAllCultures">Delete all culture version of the specified document?</param>
            <param name="destroyHistory">Destroy the document history?</param>
            <param name="deleteProduct">Delete product</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.DeleteInternal">
            <summary>
            Deletes node from the database. If node is last node culture version, deletes also the child nodes of all culture versions.
            </summary>
            <remarks>If deleted node is the root node it will not be deleted. Only child nodes will be deleted and no exception will be thrown.</remarks>
            <returns>Returns true if last culture (Tree record) has been deleted</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.RemoveDocumentDependencies(CMS.DocumentEngine.DeleteDocumentSettings)">
            <summary>
            Removes document dependencies.
            </summary>
            <param name="settings">Settings used for deleting document.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ChangeToLink(System.Int32)">
            <summary>
            Changes the document node to the link to another document.
            </summary>
            <param name="linkedNodeId">Node to link</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ChangeNodeDocumentType(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Ensures changing the underlying database structure of a given document to the its document type. Changes only the published data of the document type (CMS_Document and coupled data). Fills missing values with the data from given document node.
            </summary>
            <param name="node">Document node to change with new data</param>
            <param name="originalClassName">Original class name of the document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureOriginalValues">
            <summary>
            Ensures that the original node values are loaded.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateOriginalValues">
            <summary>
            Updates the node original values.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Clone``1">
            <summary>
            Returns a clone of the node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Clone">
            <summary>
            Returns a clone of the node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Clone(System.Boolean)">
            <summary>
            Returns a clone of the object.
            </summary>
            <param name="clear">If true, the object is cleared to be able to create new object</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CopyDataTo(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.CopyNodeDataSettings)">
            <summary>
            Copies the node data to the destination node according to the settings.
            </summary>
            <param name="destNode">Destination node</param>
            <param name="settings">Copy settings</param> 
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.LoadInheritedValues(System.String[],System.Boolean)">
            <summary>
            Loads the inherited values to the node.
            </summary>
            <param name="columns">Columns to load</param>
            <param name="allCultures">Indicates if all culture versions of the parent documents will be taken in account</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetInheritedValue(System.String,System.Boolean)">
            <summary>
            Returns the inherited value for the document.
            </summary>
            <param name="column">Column name</param>
            <param name="allCultures">All cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetDataSet">
            <summary>
            Returns the DataSet of the node data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetObjectKey">
            <summary>
            Gets the unique string key for the object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ChangedColumns">
            <summary>
            Returns list of column names which values were changed.
            </summary>
            <returns>List of column names</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetPreviewLink(System.String)">
            <summary>
            Returns document preview link.
            </summary>
            <param name="userName">User name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetPreviewLink(System.String,System.Boolean)">
            <summary>
            Returns document preview link.
            </summary>
            <param name="userName">User name</param>
            <param name="ensureQueryHash">Indicates if query string hash should be added</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetDocumentName">
            <summary>
            Returns friendly document name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CheckIn(System.String,System.String)">
            <summary>
            Checks the document in.
            </summary>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CheckOut">
            <summary>
            Checks the document out.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UndoCheckOut">
            <summary>
            Rolls the checkout operation of the document back.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CreateNewVersion">
            <summary>
            Creates new document version. (Moves document to edit step.)
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MoveToPreviousStep(System.String)">
            <summary>
            Moves the document to a previous step in the workflow (rejects the document).
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MoveToNextStep(System.String)">
            <summary>
            Moves the document to a next step in the workflow (sends the document to approval, approves or publishes the document based on the current workflow status).
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MoveToFirstStep(System.String)">
            <summary>
            Moves the document to first step in the workflow (removes the workflow information if document is not under a workflow anymore).
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MoveToPublishedStep(System.String)">
            <summary>
            Moves the document directly to published workflow step (moves document directly to publish step, skips all following steps).
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Archive(System.String)">
            <summary>
            Archives the document.
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.Publish(System.String)">
            <summary>
            Publishes the document (moves document to publish step through all following steps). If there is not only one path to published step, document stays in the last step it reached.
            </summary>
            <param name="comment">Comment</param>
            <returns>TRUE if document is moved to publish step.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetWorkflow">
            <summary>
            Gets node current workflow (depends on document current workflow step or if document is under a workflow scope).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetWorkflowStep">
            <summary>
            Gets the document workflow step
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetUpperTree(System.String,System.Boolean)">
            <summary>
            Returns the upper tree data for given document.
            </summary>
            <param name="columns">Columns to get</param>
            <param name="allCultures">All cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateChildrenPaths">
            <summary>
            Updates the child documents paths within the tree of documents and generates the document aliases if necessary.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateChildrenDocumentNamePath(System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Updates document name path of the child documents
            </summary>
            <param name="nodeAliasPath">Node alias path of the document</param>
            <param name="nodeLevel">Node level</param>
            <param name="siteId">Site ID</param>
            <param name="defaultCulture">Default culture</param>
            <param name="generateAliases">Indicates if document aliases should be generated</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GenerateDocumentAliases(System.Boolean)">
            <summary>
            Generates the current document aliases if necessary.
            </summary>
            <param name="handleDocumentUrlPathChange">Indicates if document ULR path change should be handled and aliases generated</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureDocumentAliasesSite">
            <summary>
            Ensures target site of the aliases if site changes
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateTags(System.String,System.Boolean,System.Boolean)">
            <summary>
            Update document tag according to tag group only if necessary.
            </summary>
            <param name="sitename">Site name</param>
            <param name="updateInheritedChildTags">Update child tags</param>
            <param name="forceUpdate">Force update of the tags</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateTags(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Update document tag according to tag group only if necessary.
            </summary>
            <param name="sitename">Site name</param>
            <param name="updateInheritedChildTags">Update child tags</param>
            <param name="forceUpdate">Force update of the tags</param>
            <param name="allowRemoveTags">Indicates whether removing tags is allowed</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateInheritedChildTags(System.String,System.Boolean)">
            <summary>
            Updates the tags of the child documents with inherited tag group.
            </summary>
            <param name="sitename">Site name</param>
            <param name="forceUpdate">Force update of the tags</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.UpdateDocumentContent">
            <summary>
            Updates the content of the document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.DeleteChildNodes">
            <summary>
            Deletes the child nodes of all culture versions under the specified parent node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SendNotifications(System.String)">
            <summary>
            Raises the notifications events and sends the notifications.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetDocumentRepository">
            <summary>
            Gets the new repository for the given document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.RegisterConnectedObjects(CMS.DataEngine.InfoObjectRepository)">
            <summary>
            Registers the connected objects for this document.
            </summary>
            <param name="repository">Object repository</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.RegisterGroupedAttachments(CMS.DataEngine.InfoObjectRepository)">
            <summary>
            Registers the grouped attachments for this document.
            </summary>
            <param name="repository">Object repository</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.RegisterConnectedDocuments(CMS.DocumentEngine.DocumentRepository)">
            <summary>
            Registers the connected documents for this document.
            </summary>
            <param name="repository">Object repository</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetChildWhereCondition(System.String,System.String)">
            <summary>
            Gets the child object where condition.
            </summary>
            <param name="where">Original where condition</param>
            <param name="objectType">Object type of the child object</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CheckPermissionsWithHandler(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="currentSiteName">Name of the current context site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetColumnNames(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the list of document column names.
            </summary>
            <param name="nodeColumns">Node data columns</param>
            <param name="documentColumns">Document culture specific columns</param>
            <param name="typeSpecificColumns">Type specific columns</param>
            <param name="extraColumns">Extra columns (from document DB view etc.)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetLocalColumnNames">
            <summary>
            Gets the list of local column names for particular object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.AddTypeSpecificColumns(System.Collections.Generic.List{System.String})">
            <summary>
            Adds the columns that are specific to the document type
            </summary>
            <param name="names">List of column names</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetIconUrl(System.Web.UI.Page,System.String)">
            <summary>
            Gets the object icon URL
            </summary>
            <param name="page">Page for which the image is requested</param>
            <param name="iconSet">Requested icon set</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSiblingsWhereCondition">
            <summary>
            Creates where condition according to Parent, Group and Site settings.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetIdentityWhereCondition">
            <summary>
            Gets indentity where condition to identify the document
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetObjectOrderID">
            <summary>
            Returns ID of the item being ordered (i.e. NodeID).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSiblingsQueryInternal(System.Action{CMS.DataEngine.DataQuerySettings})">
            <summary>
            Gets the parametrized query to get siblings of the document.
            </summary>
            <param name="parameters">Parameters for the data retrieval</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetObjectOrderPostprocessing">
            <summary>
            Method which is called after the order of the object was changed. Generates staging tasks and webfarm tasks by default.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.InitObjectsOrderPostprocessing">
            <summary>
            Method called after the InitObjectOrder method is called. Override this to do further actions after order initialization. Does nothing by default.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetOrderQueryParameters(System.String,System.String,System.Boolean)">
            <summary>
            Creates QueryDataParameters with special macros for object order management.
            </summary>
            <param name="orderColumn">Name of the order column. If null, OrderColumn from TypeInfo is taken</param>
            <param name="nameColumn">Name of the column by which the order should be initialized (if not set, displayname column is used)</param>
            <param name="asc">If true the order will be ascending (default is true)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ClearCache">
            <summary>
            Clears the document cache.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ClearCache(System.String)">
            <summary>
            Clears the document cache.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ClearOutputCache(System.Boolean)">
            <summary>
            Clears the output cache for current page.
            </summary>
            <param name="allCultures">Clear all cultures cache</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.ClearOutputCache(System.Boolean,System.Boolean)">
            <summary>
            Clears the output cache for current page.
            </summary>
            <param name="allCultures">Clear all cultures cache</param>
            <param name="childNodes">If true, the output cache of the child nodes is cleared as well</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CreateDefaultSKU">
            <summary>
            Creates default E-Commerce SKU for the document if configured, does not save the document. Returns true on success, false on error or null when module entry not found.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSearchID">
            <summary>
            Returns an unique id of current object for search index (documentid;nodeid).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSearchFields(CMS.DataEngine.ISearchIndexInfo,CMS.DataEngine.ISearchFields)">
            <summary>
            Returns search fields collection. When existing collection is passed as argument, fields will be added to that collection.
            When collection is not passed, new collection will be created and return. 
            Collection will contain field values only when collection with StoreValues property set to true is passed to the method.
            When method creates new collection, it is created with StoreValues property set to false.
            </summary>
            <param name="index">Search index</param>
            <param name="searchFields">Search fields collection</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSearchDocument(CMS.DataEngine.ISearchIndexInfo)">
            <summary>
            Returns document with dependence on current object type and index.
            </summary>
            <param name="index">Search index info</param>        
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetIncludedSettings(CMS.DataEngine.SearchIndexSettings)">
            <summary>
            Gets the settings included
            </summary>
            <param name="settings">Search index settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSearchDocumentContent">
            <summary>
            Processes DocumentContent field and returns processed content.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSearchCrawlerContent(CMS.DataEngine.ISearchIndexInfo)">
            <summary>
            Download and process HTML content and returns parsed content.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSearchDocumentAliases">
            <summary>
            Processes document allias and returns string containing all relevant aliases that should be inserted into search content field.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSearchWebPartsContent">
            <summary>
            Processes web parts content and returns string that should be inserted into search content field.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSearchDocumentCategories">
            <summary>
            Returns tuple of document categories names and IDs required to create category related search fields.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.AddSearchDocumentCategories(CMS.DataEngine.ISearchFields,System.Boolean)">
            <summary>
            Adds category related search fields into search fields collection.
            </summary>
            <param name="searchFields">Search fields collection</param>
            <param name="includeCategories">Indicates if categories should be inserted to search content field</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetSearchAttachments(CMS.DataEngine.ISearchFields)">
            <summary>
            Processes search attachments and returns data that should be inserted into search content field. 
            Also may add new fields into search fields collection. 
            </summary>
            <param name="searchFields">Search fields collection</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CreateTrackbackSender">
            <summary>
            Creates scheduled task for pinging trackback URLs in given blog post.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.CheckTrackbackStatus">
            <summary>
            Goes through all trackbacks of given blog post and makes sure that all statuses are corresponding current workflow step.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.MergeTrackbackUrls">
            <summary>
            Compares columns 'BlogPostNotPingedUrls' and 'BlogPostPingedUrls'. Removes already pinged URLs if there are the same URLs not pinged yet.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.IsProductSection">
            <summary>
            Returns true if the document type stands for the product section.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.IsProduct">
            <summary>
            Returns true if the document represents a product.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.IsWireframe">
            <summary>
            Returns true if the document is a wireframe document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.SetDefaultPageTemplateID(System.Int32)">
            <summary>
            Sets the default document page template ID.
            </summary>
            <param name="templateId">Page template ID to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetUsedPageTemplateIdColumn">
            <summary>
            Gets the page template id used by this document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetUsedPageTemplateId">
            <summary>
            Gets the page template id used by this document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.IsRoot">
            <summary>
            Returns true if the given document is a root node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureConsistency">
            <summary>
            Ensures data consistency.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.GetParentNamePath(System.Int32,System.String,System.String)">
            <summary>
            Gets best matching parent name path
            </summary>
            <param name="parentId">Node parent ID</param>
            <param name="parentNamePath">Current parent name path</param>
            <param name="parentCulture">Parent culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureInitialOrder(System.String)">
            <summary>
            Ensures initial node order based on settings
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.PropagateDocumentNameToNode(CMS.DataEngine.SiteInfoIdentifier)">
            <summary>
            Propagates document name to node data
            </summary>
            <param name="site">Node site</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNode.EnsureNodeAlias(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Ensures correct node alias based on settings
            </summary>
            <param name="nodeAlias">Current node alias</param>
            <param name="siteName">Node site name</param>
            <param name="nodeParentId">Node parent ID</param>
            <param name="nodeId">NodeID</param>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.SynchronizedLinkColumns">
            <summary>
            List of columns in CMS_Tree table automatically synchronized between linked documents
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WildcardRegex">
            <summary>
            Contains compiled regular expression for wildcard macro.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DataClassInfo">
            <summary>
            DataClass info
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeData">
            <summary>
            Document tree node data
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeDataContainer">
            <summary>
            Document tree node data container
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.CultureData">
            <summary>
            Document culture specific data
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.CultureDataContainer">
            <summary>
            Document culture specific data container
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.CoupledData">
            <summary>
            Document coupled fields data
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.CoupledDataContainer">
            <summary>
            Document coupled fields data container
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.HideTypeSpecificColumns">
            <summary>
            If true, the document specific columns are hidden from the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.ObjectStatus">
            <summary>
            Gets current status of the object.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.TreeProvider">
            <summary>
            Tree provider instance used to access data. If no TreeProvider is assigned, a new TreeProvider instance is created.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WorkflowManager">
            <summary>
            Workflow manager instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.VersionManager">
            <summary>
            Version manager instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.ClassName">
            <summary>
            Class name in format application.class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeClassName">
            <summary>
            Node class name in format application.class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsCoupled">
            <summary>
            Indicates whether the document contains coupled data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.HasSKU">
            <summary>
            Indicates whether the document contains SKU data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsLink">
            <summary>
            Indicates whether the document is link to another document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.OriginalNodeID">
            <summary>
            Original node ID. Returns NodeID for standard document, LinkedNodeID for linked document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.OriginalNodeSiteID">
            <summary>
            Original node site ID. Returns NodeSiteID for standard document, LinkedNodeSiteID for linked document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeCustomData">
            <summary>
            Node custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCustomData">
            <summary>
            Document custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentContent">
            <summary>
            Document content.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.CoupledClassIDColumn">
            <summary>
            Name of the coupled class ID column.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.SearchType">
            <summary>
            Returns search type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.HasChanged">
            <summary>
            Indicates whether the object changed.
            </summary>   
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsComplete">
            <summary>
            Indicates whether the object is complete (has all columns).
            </summary>       
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.LogEvents">
            <summary>
            If true, Events tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.TouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched when the object is changed.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsLastVersion">
            <summary>
            If true, the document is the last version (retrieved using DocumentHelper.GetDocument).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsDefaultCulture">
            <summary>
            If true, the document is in the default culture for the given web site.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.PrioritizedProperties">
            <summary>
            List of properties which should be prioritized in the macro controls (IntelliSense, MacroTree).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.SynchronizeFieldValues">
            <summary>
            Indicates whether field values should be synchronized on set (SKU mappings etc.)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.AbsoluteURL">
            <summary>
            Gets document absolute URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.RelativeURL">
            <summary>
            Gets document relative URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.PermanentURL">
            <summary>
            Gets document permanent absolute URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Owner">
            <summary>
            Document owner
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.ObjectDisplayName">
            <summary>
            Object display name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.ObjectParent">
            <summary>
            Object parent
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Parent">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.ConnectedDocuments">
            <summary>
            Connected documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Children">
            <summary>
            Collection of child nodes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.AllChildren">
            <summary>
            Collection of all child nodes from all levels.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Links">
            <summary>
            Collection of linked nodes, including the original.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.CultureVersions">
            <summary>
            Collection of all culture versions of this document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentsOnPath">
            <summary>
            Collection of documents on the path to the current document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.ConnectedObjects">
            <summary>
            Connected objects.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.GroupedAttachments">
            <summary>
            Document grouped attachments.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Tags">
            <summary>
            Collection of document tags.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Categories">
            <summary>
            Collection of document categories.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.AllAttachments">
            <summary>
            Collection of all document attachments (all field, grouped and unsorted).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Attachments">
            <summary>
            Collection of unsorted document attachments.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.VersionHistory">
            <summary>
            Collection of the version history of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.AttachmentHistory">
            <summary>
            Collection of the attachment history of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WorkflowHistory">
            <summary>
            Collection of the workflow history of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Aliases">
            <summary>
            Collection of the document aliases.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.MessageBoards">
            <summary>
            Collection of the message boards for this document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Forums">
            <summary>
            Collection of the ad-hoc forums for this document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Personalizations">
            <summary>
            Collection of the personalizations (widget settings) for the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.RelatedDocuments">
            <summary>
            Related documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeDocType">
            <summary>
            Node document type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeHeadTags">
            <summary>
            Node header tags.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeBodyElementAttributes">
            <summary>
            Node bode element attributes - attributes of html body tag.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsSecuredNode">
            <summary>
            Node secure property - reflects the "IsSecuredNode" data column.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.RequiresSSL">
            <summary>
            Node secure property - reflects the "RequiresSSL" data column.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeAllowCacheInFileSystem">
            <summary>
            Identifies whether the document allows output caching in the file system.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeName">
            <summary>
            Node name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeAlias">
            <summary>
            Node alias.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeAliasPath">
            <summary>
            Node alias path. This property is read only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeGUID">
            <summary>
            Node GUID to identify document node within site tree.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeChildNodesCount">
            <summary>
            Node child nodes count.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeHasChildren">
            <summary>
            Indicates if node has children.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeHasLinks">
            <summary>
            Indicates if node has links.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeID">
            <summary>
            Node ID. This property is read only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeParentID">
            <summary>
            Document parent node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeCacheMinutes">
            <summary>
            Indicates how long should node stay in cache (in minutes).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeLevel">
            <summary>
            Document node level. This property is read only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeSiteID">
            <summary>
            Node site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeSiteName">
            <summary>
            Node site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.Site">
            <summary>
            Site of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeOrder">
            <summary>
            Node order in sibling sequence. This property is read only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeOwner">
            <summary>
            Node owner, read only.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeSKUID">
            <summary>
            E-commerce SKU (product) ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeInheritPageLevels">
            <summary>
            Node inherit page levels.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeTemplateID">
            <summary>
            Node page template ID - used for all culture versions if NodeTemplateForAllCultures is true
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeTemplateForAllCultures">
            <summary>
            If true, the document uses the same template (NodeTemplateID) for all culture versions
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeInheritPageTemplate">
            <summary>
            If true, the document inherits the page template from parent
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeWireframeTemplateID">
            <summary>
            Node wireframe template ID - Special template used for wireframing (always is ad-hoc).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.NodeWireframeInheritPageLevels">
            <summary>
            Node wireframe inherit page levels.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuRedirectToFirstChild">
            <summary>
            Indicates if redirection to first child document should be performed when accessed
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuRedirectUrl">
            <summary>
            URL to which the document is redirected when accessed
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuJavascript">
            <summary>
            JavaScript code that is executed upon click on the document in the menus.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentName">
            <summary>
            Document name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentNamePath">
            <summary>
            Document name path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentType">
            <summary>
            Document type, contains the document extension.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentUrlPath">
            <summary>
            Document URL path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCulture">
            <summary>
            Document culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuCaption">
            <summary>
            Document menu caption.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuStyle">
            <summary>
            Document menu style.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuItemImage">
            <summary>
            Document menu item image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuItemLeftImage">
            <summary>
            Document menu item left image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuItemRightImage">
            <summary>
            Document menu item right image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuClass">
            <summary>
            Document menu class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuStyleOver">
            <summary>
            Document menu style over.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuClassOver">
            <summary>
            Document menu class over.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuItemImageOver">
            <summary>
            Document menu item image over.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuItemLeftImageOver">
            <summary>
            Document menu item left image over.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuItemRightImageOver">
            <summary>
            Document menu item right image over.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuStyleHighlighted">
            <summary>
            Document menu highlighted style.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuClassHighlighted">
            <summary>
            Document menu highlighted class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuItemImageHighlighted">
            <summary>
            Document menu item highlighted image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuItemLeftImageHighlighted">
            <summary>
            Document menu item left image highlighted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuItemRightImageHighlighted">
            <summary>
            Document menu item right image highlighted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentMenuItemInactive">
            <summary>
            Indicates whether item is inactive in document menu.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentPageTemplateID">
            <summary>
            Document page template for specific culture version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentUseNamePathForUrlPath">
            <summary>
            Automatically use document name path for the UrlPath.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentUseCustomExtensions">
            <summary>
            Use custom document extensions.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentStylesheetID">
            <summary>
            Document stylesheet ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentForeignKeyValue">
            <summary>
            Document foreign key value
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WorkflowStepName">
            <summary>
            Document workflow step name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WorkflowStepType">
            <summary>
            Document workflow step type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WorkflowStep">
            <summary>
            Document workflow step.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.WorkflowStepTimeout">
            <summary>
            Document workflow step timeout date (for steps with timeout).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsPublished">
            <summary>
            Indicates whether the document is published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsArchived">
            <summary>
            Indicates whether the document is archived.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsInPublishStep">
            <summary>
            Indicates whether the node is in published step disregarding publish from/to values.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.IsCheckedOut">
            <summary>
            Indicates whether the document is checked out.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.PublishedVersionExists">
            <summary>
            Indicates whether there is a published version for current document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentPublishFrom">
            <summary>
            Indicates from when the document should be published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentPublishTo">
            <summary>
            Indicates to when the document should be published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentExtensions">
            <summary>
            Document extensions.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCampaign">
            <summary>
            Document campaign.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentTrackConversionName">
            <summary>
            Document conversion name - reflects the "TrackConversionName" data column.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentConversionValue">
            <summary>
            Document conversion value.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentTags">
            <summary>
            Document tags.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentTagGroupID">
            <summary>
            Document tag group ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentWildcardRule">
            <summary>
            Document wild card rule.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentRatingValue">
            <summary>
            Sum of all ratings.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentRatings">
            <summary>
            Number of ratings.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentPriority">
            <summary>
            Document priority.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentPublishedVersionHistoryID">
            <summary>
            Document published version history ID (latest published document version).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCheckedOutVersionHistoryID">
            <summary>
            Document checked out version history ID (latest document version).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentCheckedOutByUserID">
            <summary>
            ID of a user who has checked the document out.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentWorkflowStepID">
            <summary>
            Document workflow step ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentIsArchived">
            <summary>
            Indicates whether document is archived.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentWorkflowActionStatus">
            <summary>
            Returns string representing workflow action status.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentSearchExcluded">
            <summary>
            Indicates whether the document will be excluded from search.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentHash">
            <summary>
            Document hash.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentLogVisitActivity">
            <summary>
            Indicates whether any activity is tracked for this document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentGUID">
            <summary>
            GUID to identify the document within site.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentWorkflowCycleGUID">
            <summary>
            Workflow cycle GUID to obtain preview link for document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentSitemapSettings">
            <summary>
            Gets or sets the sitemap settings in format frequency;priority.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNode.DocumentIsWaitingForTranslation">
            <summary>
            Indicates whether the document is in the process of translation (submitted to a translation service).
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeDataSet">
            <summary>
            Document DataSet class. Enhancement to DataSet to provide strongly typed collection side-by-side with the data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeDataSet.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeDataSet.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeDataSet.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Constructor, creates new DataSet using data from the given DataSet
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="sourceData">Source data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeDataSet.NewCollection">
            <summary>
            Creates new collection of the objects
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeDataSet.Clone">
            <summary>
            Clones the DataSet
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeDataSet.DefaultClassName">
            <summary>
            Default class name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeDataSet.Items">
            <summary>
            Items in the DataSet
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeDataSet.IsLastVersion">
            <summary>
            If true, the document is the last version (retrieved using DocumentHelper.GetDocument).
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreePathUtils">
            <summary>
            Provides static helper methods for converting and validating paths, aliases and names.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreePathUtils.MAX_UNIQUE_INDEX">
            <summary>
            Maximal index to be used for unique name and alias.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreePathUtils.MAXURLPATHLENGTH">
            <summary>
            Maximal length of the node URLPath.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreePathUtils.MAX_NAME_LENGTH">
            <summary>
            Maximal length of the node document name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreePathUtils.URL_PREFIX_MVC">
            <summary>
            URL prefix for the MVC
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreePathUtils.URL_PREFIX_ROUTE">
            <summary>
            URL prefix for the Routing
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.ForbiddenURLCharacters(System.String)">
            <summary>
            Returns string containing all forbidden characters that cannot be used in node alias and in the file system.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.ForbiddenCharactersReplacement(System.String)">
            <summary>
            Returns string containing all forbidden characters that cannot be used in node alias and in the file system.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.EnsureSinglePath(System.String)">
            <summary>
            Ensures path to be only for a single page.
            </summary>
            <param name="path">Original path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.EnsureChildPath(System.String)">
            <summary>
            Ensures path to be for all child pages.
            </summary>
            <param name="path">Original path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetSafeNodeAlias(System.String,System.String)">
            <summary>
            Returns the safe equivalent to the given nodeAlias.
            </summary>
            <param name="nodeAlias">Original node alias</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetSafeNodeAliasPath(System.String,System.String)">
            <summary>
            Returns the safe equivalent to the given node alias path.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetUniqueNodeAlias(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the unique node alias for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="nodeAlias">Original node alias</param>
            <param name="siteName">Site name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetMaxNameLength(System.String)">
            <summary>
            Gets maximal length of the node document name. Reflects the class node name source field size.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.EnsureMaxNodeNameLength(System.String,System.String)">
            <summary>
            Ensures maximal length of the node document name. Reflects the class node name source field size.
            </summary>
            <param name="name">Name to trim</param>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.EnsureMaxFileNameLength(System.String,System.String)">
            <summary>
            Ensures maximal length of the file name. Reflects the class node name source field size.
            </summary>
            <param name="name">Name to trim</param>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.EnsureMaxNodeAliasLength(System.String)">
            <summary>
            Ensures maximal allowed node alias length.
            </summary>
            <param name="nodeAlias">Original node alias</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetUniqueNodeName(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Returns the unique node name for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="nodeName">Original node name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
            <param name="className">Node class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetUniqueDocumentName(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Returns the unique document name for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="documentName">Original document name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
            <param name="documentCulture">Document culture</param>
            <param name="className">Document class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetURLPathDisplayName(System.String)">
            <summary>
            Gets the URL path display name
            </summary>
            <param name="urlPath">URL path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.ParseUrlPath(System.String@,System.String@,System.Collections.Hashtable)">
            <summary>
            Parses the prefix and default values out of the URL path
            </summary>
            <param name="urlPath">URL path to process</param>
            <param name="prefix">Returning the prefix</param>
            <param name="values">Collection of values</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetSafeUrlPath(System.String,System.String)">
            <summary>
            Returns the safe equivalent to the given URLPath.
            </summary>
            <param name="urlPath">Original URL path</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetSafeUrlPath(System.String,System.String,System.Boolean)">
            <summary>
            Returns the safe equivalent to the given URLPath.
            </summary>
            <param name="urlPath">Original URL path</param>
            <param name="siteName">Site name</param>
            <param name="allowLimitReplacements">Indicates whether replacements should be limited if replacement is enabled globally</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetUniqueUrlPath(System.String,System.Int32,System.String,System.String)">
            <summary>
            Returns the unique URL path for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="urlPath">Original URL path</param>
            <param name="currentDocumentId">Current document Id</param>
            <param name="siteName">Parent site name</param>
            <param name="cultureSuffix">Culture suffix</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetUrlPathFromNamePath(System.String,System.Int32,System.String)">
            <summary>
            Returns the UrlPath created from the given NamePath.
            </summary>
            <param name="namePath">NamePath to convert</param>
            <param name="nodeLevel">Node level</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetSafeDocumentName(System.String,System.String)">
            <summary>
            Replaces back slash in document name.
            </summary>
            <param name="documentName">Document name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.PathContainsWildcardChars(System.String)">
            <summary>
            Returns true if path contains wildcard characters(% or _)
            </summary>
            <param name="path">Node alias path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetAliasPathByNodeId(System.Int32)">
            <summary>
            Returns the AliasPath equivalent for the given node ID.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeByAliasPath(System.String,System.String,System.String)">
            <summary>
            Gets the base node record (CMS_Tree) by the alias path and site name.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Alias path</param>
            <param name="columns">List of columns to retrieve</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetClassNameByAliasPath(System.String,System.String)">
            <summary>
            Returns the node class name corresponding to the given aliasPath.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Alias path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetClassNameByDocumentID(System.Int32)">
            <summary>
            Returns the node class name corresponding to the given document ID.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeIdByAliasPath(System.String,System.String)">
            <summary>
            Returns the node ID corresponding to the given aliasPath.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Alias path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeGUIDByNodeId(System.Int32)">
            <summary>
            Returns the Node GUID equivalent for the given node ID.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeGUIDByNodeId(System.Int32,CMS.DataEngine.GeneralConnection)">
            <summary>
            Returns the Node GUID equivalent for the given node ID.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeIdByNodeGUID(System.Guid,System.String)">
            <summary>
            Returns the Node ID equivalent for the given node GUID.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="siteName">Node site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeIdByNodeGUID(System.Guid,System.String,CMS.DataEngine.GeneralConnection)">
            <summary>
            Returns the Node ID equivalent for the given node GUID.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="siteName">Node site name</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetDocumentIdByDocumentGUID(System.Guid,System.String)">
            <summary>
            Returns the Document ID equivalent for the given document GUID.
            </summary>
            <param name="documentGuid">Document GUID</param>
            <param name="siteName">Node site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetDocumentSite(System.Int32)">
            <summary>
            Returns the site info of the specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeSite(System.Int32)">
            <summary>
            Returns the site info of the specified node.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeParentId(System.Int32)">
            <summary>
            Returns the parent node ID.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetUrlExtension(System.String)">
            <summary>
            Returns URL extension used for friendly URLs for specified site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetFilesUrlExtension(System.String)">
            <summary>
            Returns files URL extension used for friendly URLs for specified site.
            </summary>
            <param name="siteName">Site name. If not specified current site name is used.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.AutomaticallyUpdateDocumentAlias(System.String)">
            <summary>
            Returns true if the document alias should be automatically updated upon document name change.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.KeepChangedDocumentsAccessible(System.String)">
            <summary>
            Returns true if the documents should be accessible after change (if the alias should be automatically generated for them).
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.UseNamePathForUrlPath(System.String)">
            <summary>
            Returns true if the new documents should automatically use the name path for their URL path.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.AllowPermanentPreviewLink(System.String)">
            <summary>
            Returns true if document workflow cycle GUID shouldn't be changed when moving from publish/archive step to edit step.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetAlias(System.String)">
            <summary>
            Returns the alias from the given alias path.
            </summary>
            <param name="aliasPath">Alias path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetParentPath(System.String,System.Int32)">
            <summary>
            Returns the parent path for the specified path, with distance of parentLevel from the given path.
            </summary>
            <param name="path">Source path</param>
            <param name="parentLevel">Parent level (distance) from the given path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetParentPath(System.String)">
            <summary>
            Returns the parent path for the specified path (any kind of path with "/" as a separator)
            </summary>
            <param name="path">Original path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetParentPathRestricted(System.String,System.Int32)">
            <summary>
            Returns the parent path for the specified path (any kind of path with "/" as a separator) with restriction on depth of the path
            </summary>
            <param name="path">Original path</param>
            <param name="maximalLevel">Restricts returned path to specified maximal number of parent levels</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetPathLevel(System.String,System.Int32)">
            <summary>
            Returns the specified path level created from the given path.
            </summary>
            <param name="path">Source path</param>
            <param name="level">Level to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.IsMenuItemType(System.String)">
            <summary>
            Returns true, if the class name is considered to be menu item type document (CMS.MenuItem or CMS.Root in basic).
            </summary>
            <param name="className">Class name to analyze</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.NewDocumentOrder(System.String)">
            <summary>
            Returns the new document order settings for the given site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.EnsureSingleNodePath(System.String)">
            <summary>
            Ensures node alias path to be only for single document.
            </summary>
            <param name="path">Original node alias path</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetTreeView(System.String,System.String,System.Int32,System.String)">
            <summary>
            Selects records from View_CMS_Tree_Joined.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to select</param>
            <param name="columns">Columns to select</param>
            <returns>DataSet with view specified by parameters</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetChildNodes(System.Int32)">
            <summary>
            Gets child nodes of node specified by identifier.
            </summary>
            <param name="nodeParentId">Identifier of parent node</param>
            <returns>DataSet with child nodes</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeInheritedValueInternal(System.Int32,System.String,System.String,System.String,CMS.DataEngine.WhereCondition)">
            <summary>
            Gets the inherited value for a single document column.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="nodeAliasPath">Node alias path</param>
            <param name="column">Column to retrieve value for</param>
            <param name="culture">Document culture</param>
            <param name="valueCondition">Where condition indicating if inherited value is present</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeUpperTreeInternal(System.Int32,System.String,System.String,System.String)">
            <summary>
            Gets data with candidates for inherited value of specified document columns.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="nodeAliasPath">Node alias path</param>
            <param name="columns">Columns to retrieve value for</param>
            <param name="culture">Document culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeInheritedValueInternal(System.Data.DataSet,System.String,System.String,System.Func{System.Object,System.Boolean},System.Func{System.Data.DataRow,System.Boolean})">
            <summary>
            Returns inherited value.
            </summary>
            <param name="upperTree">Tree to inherit from</param>
            <param name="column">Name of column to get the value from</param>
            <param name="culture">Document culture code</param>
            <param name="valueChecker">Method to check the inherited value if relevant</param>
            <param name="dataEvaluator">Method to additionally evaluate the inherited value in context of other data if relevant</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetUpperTreeQueryInternal(System.Int32,System.String,System.String)">
            <summary>
            Gets query to retrieve data for upper tree of a document
            </summary>
            <param name="siteId">Document site ID</param>
            <param name="nodeAliasPath">Node alias path</param>
            <param name="culture">Document culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetNodeUpperTree(System.Int32,System.String,System.String,System.String)">
            <summary>
            Gets the inherited value for document column.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="nodeAliasPath">Node alias path</param>
            <param name="culture">Culture</param>
            <param name="columns">Columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetMenuCaption(System.String,System.String)">
            <summary>
            Returns the menu caption.
            </summary>
            <param name="documentMenuCaption">Document menu caption</param>
            <param name="documentName">Document name</param>
            <returns>If regular menu caption not set, document name is returned instead</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetRedirectionUrl(CMS.DocumentEngine.PageInfo,CMS.MacroEngine.MacroResolver)">
            <summary>
            Gets relative redirection URL based on given settings
            </summary>
            <param name="pi">Source page info</param>
            <param name="resolver">Macro resolver to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetRedirectionUrl(System.Guid,System.String,System.Boolean,CMS.MacroEngine.MacroResolver)">
            <summary>
            Gets relative redirection URL based on given settings
            </summary>
            <param name="documentGuid">Document GUID</param>
            <param name="documentMenuRedirectUrl">Redirection URL</param>
            <param name="documentMenuRedirectToFirstChild">Indicates if document should redirect to first child document</param>
            <param name="resolver">Macro resolver to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetRedirectionUrl(System.Guid,System.Int32,System.String,System.Boolean,CMS.MacroEngine.MacroResolver)">
            <summary>
            Gets relative redirection URL based on given settings
            </summary>
            <param name="documentGuid">Document GUID</param>
            <param name="siteId">Document site ID</param>
            <param name="documentMenuRedirectUrl">Redirection URL</param>
            <param name="documentMenuRedirectToFirstChild">Indicates if document should redirect to first child document</param>
            <param name="resolver">Macro resolver to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetFirstChildUrl(CMS.DocumentEngine.PageInfo)">
            <summary>
            Gets first child document URL
            </summary>
            <param name="pi">Page info of the document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreePathUtils.GetDocumentUrl(System.Int32)">
            <summary>
            Returns document URL.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="P:CMS.DocumentEngine.TreePathUtils.UseLimitURLReplacements">
            <summary>
            Gets the value that indicates whether whether multiple, starting and trailing replacements should be limited.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreePathUtils.MaxAliasLength">
            <summary>
            Maximal length of the node alias name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreePathUtils.MaxNameLength">
            <summary>
            Maximal length of the node document name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreePathUtils.WildcardCharsRegex">
            <summary>
            Regex for wildcard characters not surrounded by escape brackets
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeProvider">
            <summary>
            Provides methods for management of the tree structure.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.ALL_CULTURES">
            <summary>
            Supplementary constant to specify all document cultures.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.ALL_SITES">
            <summary>
            Supplementary constant to specify all sites.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.ALL_CLASSNAMES">
            <summary>
            Supplementary constant to specify all class names.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.ALL_DOCUMENTS">
            <summary>
            Supplementary constant to specify all documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.ALL_LEVELS">
            <summary>
            All relative levels.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.DEFAULT_QUERY">
            <summary>
            Default query name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.SELECTNODES_REQUIRED_COLUMNS">
            <summary>
            Columns required for the select nodes operation to perform successfully in any case.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.SELECTTREE_REQUIRED_COLUMNS">
            <summary>
            Columns required for the select tree operation to perform successfully in any case.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.SECURITYCHECK_REQUIRED_COLUMNS">
            <summary>
            Columns required for the security check operation to perform successfully in any case.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.SELECT_SINGLE_NODE_STORAGE_KEY">
            <summary>
            Storage key used for select single node.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.SELECT_NODES_STORAGE_KEY">
            <summary>
            Storage key used for select nodes.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mProviderAssemblyName">
            <summary>
            Provider assembly name.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mProviderAssembly">
            <summary>
            Provider assembly.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mProviderObject">
            <summary>
            Search object instance.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mUserInfo">
            <summary>
            Current user info object.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mCombineWithDefaultCulture">
            <summary>
            Combine the selection result with the default culture records?
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mPreferredCultureCode">
            <summary>
            Preferred culture code for the data selection.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mSelectQueryName">
            <summary>
            Base query name to use for the document selection.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mQueryParameters">
            <summary>
            Query parameters.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mSelectColumns">
            <summary>
            Select columns.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mSortMergedResults">
            <summary>
            If true, merged results are sorted.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mUseAutomaticOrdering">
            <summary>
            If true, automatic ordering is used for new nodes.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mUseCustomHandlers">
            <summary>
            If true, custom handlers are used with Document operations.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mUseCache">
            <summary>
            If true, cache is used for documents data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mGenerateNewGuid">
            <summary>
            If true, new GUID is generated for the inserted nodes where required.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mCheckUniqueNames">
            <summary>
            If true, unique node names and aliases are checked against the database (turn off only when you perform the validation by yourself).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mAutomaticallyUpdateDocumentAlias">
            <summary>
            If true, the document alias should be automatically updated upon document name change.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mEnsureSafeNodeAlias">
            <summary>
            If true, node alias will include only allowed characters (turn off only when you perform the validation by yourself or the source data are already valdiated).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mCheckUniqueAttachmentNames">
            <summary>
            If true, unique attachment names within one document are checked against the database (turn off only when you perform the validation by yourself).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mUpdateTimeStamps">
            <summary>
            If true, document time stamps are updated.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mUpdateUser">
            <summary>
            If true, user IDs of the document (creator, modifier) are updated.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mUpdatePaths">
            <summary>
            If true, the paths of the document are updated.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mUpdateSKUColumns">
            <summary>
            If true, SKU columns are updated on node update.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mUpdateDocumentContent">
            <summary>
            If true, document content is updated from internal objects.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mLogEvents">
            <summary>
            If true, events are logged on document update.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mDeleteChildNodes">
            <summary>
            If false, child nodes of the document are not deleted when the document is deleted.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mLogSynchronization">
            <summary>
            If true, synchronization tasks are logged on document update.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mLogIntegration">
            <summary>
            If true, integration tasks are logged on document update.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mTouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched on document update.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mLogWebFarmTasks">
            <summary>
            If true, web farm tasks are logged on the object update.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mSelectAllData">
            <summary>
            If true, all data are selected, if false, only base document data are selected.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mEnableBlogPostTrackbacks">
            <summary>
            Indicates if blog post trackbacks are enabled.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mEnableNotifications">
            <summary>
            Indicates if notifications are sent when content changes occur (document updated/inserted/deleted,...), by default it is set to TRUE.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mEnableRating">
            <summary>
            Indicates whether rating of a document should be updated. By default it is set to TRUE.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mAllowAsyncActions">
            <summary>
            Indicates if asynchronous actions should be allowed (log synchronization tasks), by default it is set to TRUE.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mEnableDocumentAliases">
            <summary>
            Indicates whether "Remember original URL when moving document" option should be accepted.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mHandleACLs">
            <summary>
            Indicates if the ACL operations should be performed during the document operations.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mUseParentNodeGroupID">
            <summary>
            Indicates if NodeGroupId property should be set according to the parent value.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeProvider.mPreserveACLHierarchy">
            <summary>
            Indicates if the ACL hierarchy should be preserved on processed documents.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.#ctor">
            <summary>
            Constructor.
            </summary>    
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.#ctor(CMS.Base.IUserInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="userInfo">Current user info object</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.FilterOutLocalizedVersions(System.Data.DataSet,System.String,System.String)">
            <summary>
            Removes nodes of default culture that are translated to required language.
            </summary>
            <param name="ds">Original DataSet object containing both default and required language versions</param>
            <param name="siteName">Documents site name</param>
            <param name="preferredCulture">Required culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.FilterOutLocalizedVersions(System.Data.DataSet,System.String,System.String,System.String)">
            <summary>
            Removes nodes of default culture that are translated to required language.
            </summary>
            <param name="ds">Original DataSet object containing both default and required language versions</param>
            <param name="siteName">Documents site name</param>
            <param name="preferredCulture">Required culture code</param>
            <param name="contextCulture">Culture code that allows to override currently preferred culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.FilterOutLocalizedRows(System.Data.DataTable,System.String)">
            <summary>
            Removes nodes of any culture that are translated to required language.
            </summary>
            <param name="dt">DataTable to filter</param>
            <param name="preferredCulture">Required culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.FilterOutDuplicateDocuments(System.Data.DataSet)">
            <summary>
            Filters out duplicate documents (linked ones).
            </summary>
            <param name="ds">Dataset containing the documents</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.Search.SearchModeEnum)">
            <summary>
            Searches specified node and all child nodes and returns results as a dataset with CMS_TREE data.
            </summary>
            <param name="siteName">Site name</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>    
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.Search.SearchModeEnum,System.Boolean)">
            <summary>
            Searches specified node and (optionally) all child nodes and returns results as a dataset with CMS_TREE data.
            </summary>
            <param name="siteName">Site name</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>    
            <param name="searchChildNodes">Indicates whether child nodes should be searched</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.Search.SearchModeEnum,System.Boolean,System.String)">
            <summary>
            Searches specified node and (optionally) all child nodes and returns results as a dataset with CMS_TREE data.
            </summary>
            <param name="siteName">Site name</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>
            <param name="searchChildNodes">Indicates if child nodes should be searched</param>
            <param name="classNames">List of class names to be searched in format application.class separated by semicolon.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.Search.SearchModeEnum,System.Boolean,System.String,System.Boolean)">
            <summary>
            Searches specified node and returns results.
            </summary>
            <param name="siteName">Site name</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>
            <param name="searchChildNodes">Indicates if child nodes should be searched</param>
            <param name="classNames">List of class names to be searched in format application.class separated by semicolon.</param>
            <param name="filterResultsByReadPermission">Indicates whether search results should be filtered by read permission for the current user. The default value is false</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.Search.SearchModeEnum,System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Searches specified node and returns results.
            </summary>
            <param name="siteName">Site name</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>
            <param name="searchChildNodes">Indicates if child nodes should be searched</param>
            <param name="classNames">List of class names to be searched in format application.class separated by semicolon.</param>
            <param name="filterResultsByReadPermission">Indicates if search results should be filtered by read permission for the current user. The default value is false</param>
            <param name="searchOnlyPublished">Indicates if only published documents should be searched</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="combineWithDefaultCulture">Indicates if results will be combined with default culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.Search.SearchModeEnum,System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Searches data and returns results.
            </summary>
            <param name="siteName">Site name</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>
            <param name="searchChildNodes">Indicates if child nodes should be searched</param>
            <param name="classNames">List of class names to be searched in format application.class separated by semicolon.</param>
            <param name="filterResultsByReadPermission">Indicates if search results should be filtered by read permission for the current user. The default value is false</param>
            <param name="searchOnlyPublished">Indicates if only published documents should be searched</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by clause</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.AttachmentSearch(CMS.Search.SearchParameters,System.Collections.Generic.List{System.Int32})">
            <summary>
            Searches attachment binary data for search expression.
            </summary>
            <param name="parameters">Search parameters</param>
            <param name="siteIds">Site Ids</param>
            <returns>DataSet with result</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.RemoveCMSExcludeDocumentsFromSearch(System.Data.DataSet@,System.String)">
            <summary>
            Filters results with AliasPath in CMSExcludeDocumentsFromSearch key.
            </summary>
            <param name="searchResultDS">Search results to filter</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.Guid,System.String,System.String)">
            <summary>
            Returns single node specified by node GUID, culture and site name. Does not include the coupled data.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.Guid,System.String,System.String,System.Boolean)">
            <summary>
            Returns single node specified by node GUID, culture and site name. Does not include the coupled data.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.Int32,System.String)">
            <summary>
            Returns single node specified by node ID and culture.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns single node specified by node ID and culture, optionally combined with default culture.
            </summary>
            <param name="nodeId">Node ID to select</param>
            <param name="cultureCode">Document culture to select</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="coupledData">If true, coupled data are also returned</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.Int32,System.String,System.String)">
            <summary>
            Returns single node specified by specified node ID, culture and class name. Most efficient way of getting the document. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="culture">Culture code</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleDocument(System.Int32,System.Boolean,System.String)">
            <summary>
            Returns single node specified by document ID. If the result is a link to another document original document is returned instead.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="coupledData">If true, coupled data are also returned</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String)">
            <summary>
            Returns single node specified by alias path, culture and site name.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node alias path</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns single node specified by alias path, culture and site name matching the provided parameters.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node alias path</param>
            <param name="cultureCode">Node culture</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="className">Node class name (e.g.: "cms.article")</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="checkPermissions">Indicates whether permissions should be checked.</param>
            <param name="selectCoupledData">Indicates whether coupled data should be selected.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Returns single node specified by alias path, culture and site name matching the provided parameters. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Node alias path - may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode(CMS.DocumentEngine.NodeSelectionParameters)">
            <summary>
            Returns single node matching the provided parameters.
            </summary>
            <param name="parameters">Parameters for the node selection</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode``1(System.Guid,System.String,System.String,System.Boolean)">
            <summary>
            Returns single node specified by node GUID, culture and site name. Does not include the coupled data.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode``1(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns single node specified by node ID and culture.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="cultureCode">Culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="coupledData">Indicates whether coupled data should be contained in the result.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleDocument``1(System.Int32,System.Boolean,System.String)">
            <summary>
            Returns single node specified by document ID. If the result is a link to another document original document is returned instead.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="coupledData">Indicates whether coupled data should be contained in the result.</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode``1(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns single node specified by alias path, culture and site name.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node alias path</param>
            <param name="cultureCode">Culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="className">Node class name (e.g.: "cms.article")</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="checkPermissions">Indicates whether permissions should be checked.</param>
            <param name="selectCoupledData">Indicates whether coupled data should be contained in the result.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode``1(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Returns single node specified by alias path, culture and site name matching the provided parameters. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node alias path - may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectSingleNode``1(CMS.DocumentEngine.NodeSelectionParameters)">
            <summary>
            Returns single node matching the provided parameters. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="parameters">Parameters for the node selection</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes(System.Int32,System.String,System.String)">
            <summary>
            Returns nodes specified by node ID, culture and site name. Multiple nodes are returned if ALL_CULTURES passed in cultureCode parameter. Does not select coupled data.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="cultureCode">Document culture - if null or empty string passed, ALL_CULTURES constant is used instead.</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.String)">
            <summary>
            Returns nodes specified by node alias path, culture and site name, optionally combined with default culture. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Nodes alias path - may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes(CMS.DocumentEngine.NodeSelectionParameters)">
            <summary>
            Returns nodes matching the provided parameters. Result contains coupled data only if classNames are specified.
            </summary>
            <param name="parameters">Selection parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes">
            <summary>
            Gets the query for all published documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes(System.String)">
            <summary>
            Gets the query for all published documents of specific type
            </summary>
            <param name="className">Class name representing document type</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetDocumentTypeData(System.String,System.String,System.String,System.Int32,System.String,System.Int32@)">
            <summary>
            Gets the data for the specific document type
            </summary>
            <param name="className">Class name</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">TopN</param>
            <param name="columns">Columns</param>
            <param name="tables">Updates the number of total tables found</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean)">
            <summary>
            Returns nodes without coupled data specified by node alias path, culture and site name, optionally combined with default culture.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Nodes alias path - may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to node with this GUID.</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Indicates whether the related node is located on the left side of the relationship.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            Returns nodes without coupled data specified by node alias path, culture and site name, optionally combined with default culture.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Nodes alias path - may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data selection</param>
            <param name="orderBy">Order by clause for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to node with this GUID.</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Indicates whether the related node is located on the left side of the relationship</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SelectNodesCount(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns nodes count matching the provided parameters.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Nodes alias path - may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be counted in if node in specified culture was not found.</param>
            <param name="classNames">List of class names separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition for the data count</param>
            <param name="orderBy">Order by clause for the data counting</param>
            <param name="maxRelativeLevel">Maximum child level of the counted nodes</param>
            <param name="selectOnlyPublished">Count only published nodes.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetEmptyDataSet">
            <summary>
            Returns an empty data set to be filled by the data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetDocumentCacheDependencies(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns cache dependencies key for the specified document data source.
            </summary>
            <param name="siteName">Site name</param>
            <param name="classNames">List of class names separated by semicolon. Pass null or empty string to cover all classes.</param>
            <param name="path">Document path</param>
            <param name="groupId">Community group ID, zero if not available</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetDependencyCacheKeys(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Returns the cache dependencies keys array for the node - cache item keys affected when the node is changed.
            </summary>
            <param name="node">Tree node</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetChangeOrderDependencyCacheKeys(System.Int32)">
            <summary>
            Returns the cache dependencies keys array for order change in a section.
            </summary>
            <param name="nodeParentId">Node parent ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetDefaultCultureCode">
            <summary>
            Returns default culture code specified in the CMSDefaultCultureCode configuration key.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.AllClasses(System.String)">
            <summary>
            Returns true if the given classNames value represents all classes
            </summary>
            <param name="classNames">Class names</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.AllSites(System.String)">
            <summary>
            Returns true if the given site name value represents all sites
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetCultureWhereCondition(System.String,System.String,System.Boolean)">
            <summary>
            Returns where condition for given culture.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetCompleteWhereCondition(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Int32)">
            <summary>
            Returns the complete where condition based on the given parameters.
            </summary> 
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Node alias path - may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Indicates whether node in default culture should be returned if node in specified culture was not found.</param>
            <param name="where">Where condition for the data selection</param>
            <param name="maxRelativeLevel">Maximum child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetClassNamesWhereCondition(System.String)">
            <summary>
            Returns where condition for given class names.
            </summary>
            <param name="classNames">List of class names separated by semicolon.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetNodesOnPathWhereCondition(System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns where condition for all nodes on the path to the given alias path.
            </summary>
            <param name="aliasPath">Alias path</param>        
            <param name="includeRoot">Indicates whether root item should be included.</param>
            <param name="includeCurrent">Indicates whether item with the exact alias path should be included.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetRelationshipWhereCondition(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns where condition for the given relationship or null if the relationship was not found.
            </summary>
            <param name="nodeId">ID of a node in the relationship</param>
            <param name="name">Collection name</param>
            <param name="documentIsOnLeftSide">If true, the document can be on left side of the relationship</param>
            <param name="documentIsOnRightSide">If true, the document can be on left side of the relationship</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.CopyNode(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Copies the node to the specified location, optionally with permissions and child nodes. The copy is named according to the parameter and assigned to given owner and group.
            </summary>
            <param name="node">Node to copy</param>
            <param name="target">Target node</param>
            <param name="includeChildNodes">Copy also the node child nodes</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.CopyNode(CMS.DocumentEngine.TreeNode,System.Int32,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Copies the node to the specified location, optionally with permissions and child nodes. The copy is named according to the parameter and assigned to given owner and group.
            </summary>
            <param name="node">Node to copy</param>
            <param name="targetParentNodeId">Target location</param>
            <param name="includeChildNodes">Copy also the node child nodes</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
            <param name="copyPermissions">Indicates whether document permissions should be copied.</param>
            <param name="newDocumentName">New document name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.CopyNode(CMS.DocumentEngine.CopyDocumentSettings)">
            <summary>
            Copies node according to given parameters.
            </summary>
            <param name="settings">Document copy settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.MoveNode(CMS.DocumentEngine.TreeNode,System.Int32,System.Boolean)">
            <summary>
            Moves the node to the specified location.
            </summary>
            <param name="node">Node to move</param>
            <param name="targetParentNodeId">Target parent node</param>
            <param name="keepPermissions">Indicates whether permissions should be preserved.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.MoveNode(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Moves the node to the specified location.
            </summary>
            <param name="node">Node to move</param>
            <param name="target">Target parent node</param>
            <param name="keepPermissions">Indicates whether permissions should be preserved.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.InitNodeOrders(System.Int32,System.Int32)">
            <summary>
            Initializes the node order under specified parent node.
            </summary>
            <param name="parentId">Parent node ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.MoveNodeUp(CMS.DocumentEngine.TreeNode)">
            <summary>
            Moves specified node up in the order sequence (up = smaller NodeOrder = closer to beginning in the navigation).
            </summary>
            <param name="node">Node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.MoveNodeUp(System.Int32)">
            <summary>
            Moves specified node up in the order sequence (up = smaller NodeOrder = closer to beginning in the navigation).
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.MoveNodeDown(CMS.DocumentEngine.TreeNode)">
            <summary>
            Moves specified node down in the order sequence (down = larger NodeOrder = further in the navigation).
            </summary>
            <param name="node">Node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.MoveNodeDown(System.Int32)">
            <summary>
            Moves specified node down in the order sequence (down = larger NodeOrder = further in the navigation).
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SetNodeOrder(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Sets the specified node order.
            </summary>
            <param name="node">Node</param>
            <param name="newOrder">New node order</param>
            <returns>Returns new node order.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SetNodeOrder(System.Int32,System.Int32)">
            <summary>
            Sets the specified node order.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="newOrder">New node order</param>
            <returns>Returns new node order.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SetNodeOrder(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.DocumentOrderEnum)">
            <summary>
            Sets the specified node order.
            </summary>
            <param name="node">Node</param>
            <param name="newOrder">New node order</param>
            <returns>Returns new node order.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SetNodeOrder(System.Int32,CMS.DocumentEngine.DocumentOrderEnum)">
            <summary>
            Sets the specified node order.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="newOrder">New node order</param>
            <returns>Returns new node order.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SortNodesAlphabetically(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sort child nodes alphabetically.
            </summary>
            <param name="parentNodeId">Parent node ID</param>
            <param name="siteId">Node site ID</param>
            <param name="ascending">Indicates whether the alphabetical order should be ascending or descending.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SortNodesByDate(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sort child nodes by date.
            </summary>
            <param name="parentNodeId">Parent node ID</param>
            <param name="siteId">Node site ID</param>
            <param name="ascending">Indicates whether the sort should be from older to newer or vice versa.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.DeleteSiteTree(System.String)">
            <summary>
            Deletes site tree root. For purposes of site deletion.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.CreateSiteRoot(System.String)">
            <summary>
            Creates site tree root. For purposes of site creation.
            </summary>
            <param name="siteName">Site name</param>
            <returns>Root node</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ChangeSiteDefaultCulture(System.String,System.String)">
            <summary>
            Changes default culture of the site.
            </summary>
            <param name="siteName">Site name</param>
            <param name="newCultureCode">New default culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ChangeSiteDefaultCulture(System.String,System.String,System.String)">
            <summary>
            Changes default culture of the site. Removes old culture from the site and adds the new one. Changes culture of the documents in the old culture to the new one. 
            Doesn't handle collisions of existing documents in new culture.
            </summary>
            <param name="siteName">Site name</param>
            <param name="newCultureCode">New default culture code</param>
            <param name="oldCultureCode">Old default culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ChangeCulture(System.String,System.String,System.String)">
            <summary>
            Changes culture of the documents in old culture to the new one. If there is an existing document in new culture, the old culture version is not changed to the new one.
            </summary>
            <param name="siteName">Site name</param>
            <param name="currentCulture">Current culture</param>
            <param name="newCulture">New culture</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.DeleteLinks(System.Int32)">
            <summary>
            Deletes document links to the specified node.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetOriginalNode(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Returns the original node for given link node in specified culture.
            </summary>
            <param name="node">Tree node</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetOriginalNodeParentId(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the original node for the given link node.
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetDocument(CMS.Base.IDataContainer,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates document from given data.
            </summary>
            <param name="data">Node data</param>
            <param name="tree">Tree provider for the new document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetDocument``1(CMS.Base.IDataContainer,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates document from given data.
            </summary>
            <param name="data">Node data</param>
            <param name="tree">Tree provider for the new document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetUniqueNodeName(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Returns unique node name for the specified parent node. Does not check for duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="nodeName">Original node name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
            <param name="className">Node class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetUniqueDocumentName(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Returns unique document name for the specified parent node. Does not check for duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="documentName">Original document name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
            <param name="documentCulture">Document culture</param>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetUniqueNodeAlias(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns unique node alias for the specified parent node. Does not check for duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="nodeAlias">Original node alias</param>
            <param name="siteName">Site name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetUniqueUrlPath(System.String,System.Int32,System.String,System.String)">
            <summary>
            Returns unique URL path for the specified parent node. Does not check for duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="urlPath">Original URL path</param>
            <param name="currentDocumentId">Current document ID</param>
            <param name="siteName">Parent site name</param>
            <param name="cultureSuffix">Culture suffix</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ChangeCommunityGroup(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
             Sets owner group of specified nodes
            </summary>
            <param name="nodeAliasPath">Alias path of node</param>
            <param name="nodeGroupId">ID of the owner group</param>
            <param name="siteId">Site ID</param>
            <param name="inheritOwnerGroup">Indicates whether owner group settings should be inherited by child nodes.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ClearWorkflowInformation(CMS.DocumentEngine.TreeNode)">
            <summary>
            Clears the workflow information from the given tree node.
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ClearCheckoutInformation(CMS.DocumentEngine.TreeNode)">
            <summary>
            Clears the checkout information from the given tree node.
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetUseParentNodeGroupID(System.String)">
            <summary>
            Returns whether NodeGroupID property should be set according to the parent value.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.GetCombineWithDefaultCulture(System.String)">
            <summary>
            Returns whether nodes should be combined with appropriate nodes of default culture if not localized. This applies only when using multilingual support. The default value is false.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.CheckDocumentUIPermissions(System.String)">
            <summary>
            Returns whether document permissions should be checked in the content management UI.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.EnsureRequiredColumns(System.String)">
            <summary>
            Ensures columns required for selection in given column list. Returns the adjusted list
            </summary>
            <param name="columns">List of columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ClearRequestCache">
            <summary>
            Clears the request cache for select nodes and select single node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.SetRating(CMS.DocumentEngine.TreeNode,System.Double,System.Int32)">
            <summary>
            Sets document new ratings.
            </summary>
            <param name="node">Document</param>
            <param name="newRating">New rating value</param>
            <param name="newNumOfRatings">Number of ratings</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ResetRating(CMS.DocumentEngine.TreeNode)">
            <summary>
            Resets rating values of given document.
            </summary>
            <param name="node">Document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.AddRating(CMS.DocumentEngine.TreeNode,System.Double,System.Boolean)">
            <summary>
            Updates rating value of given document.
            </summary>
            <param name="node">Document</param>
            <param name="rating">Rating value</param>
            <param name="rememberRating">If true, rating is stored into cookie</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.RememberRating(CMS.DocumentEngine.TreeNode)">
            <summary>
            Remember that user has rated the document.
            </summary>
            <param name="node">Document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.HasRated(CMS.DocumentEngine.TreeNode)">
            <summary>
            Sets a flag indicating that user rated the document.
            </summary>
            <param name="node">Document</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ExecuteQuery(System.String,CMS.DataEngine.QueryDataParameters)">
            <summary>
            Runs specified query with provided parameters.
            </summary>
            <param name="queryName">Query name in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ExecuteQuery(System.String,CMS.DataEngine.QueryDataParameters,System.String,System.String)">
            <summary>
            Runs specified query with provided parameters.
            </summary>
            <param name="queryName">Query name in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ExecuteQuery(System.String,CMS.DataEngine.QueryDataParameters,System.String,System.String,System.Int32,System.String)">
            <summary>
            Executes query and returns result as a dataset.
            </summary>
            <param name="queryName">Query name in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="columns">Columns that the result will contain.</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeProvider.ExecuteQuery(System.String,CMS.DataEngine.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Executes query and returns result as a dataset.
            </summary>
            <param name="queryName">Name of the query in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Limits the number of returned items.</param>
            <param name="columns">Columns that the result will contain.</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total records count.</param>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.DataSetFactory">
            <summary>
            DataSet factory, if set, the DataSet for the queried data is provided by this object
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UserInfo">
            <summary>
            Current user info.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.CombineWithDefaultCulture">
            <summary>
            Indicates if returned nodes should be combined with appropriate nodes of default culture in case they are not localized. It applies only if you're using multilingual support. The default value is false.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.PreferredCultureCode">
            <summary>
            Preferred culture code to use when none set.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.SelectQueryName">
            <summary>
            Base query name to use for the document selection (for the enhanced selection options only).
            </summary>
            <remarks>
            The incomplete query is compatible only with method SelectNodes. To support all operations, the query must return following columns: 
            </remarks>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.QueryParameters">
            <summary>
            Query parameters for the select query.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.SelectColumns">
            <summary>
            Columns returned by the select query.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.MergeResults">
            <summary>
            If true, tables from result DataSet are merged into a single table.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.SortMergedResults">
            <summary>
            If true, merged results are sorted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UseAutomaticOrdering">
            <summary>
            If true, automatic ordering is used for new nodes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.FilterOutDuplicates">
            <summary>
            If true, duplicate (linked) items are filtered.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.BaseCacheKey">
            <summary>
            Provider base cache key.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UseCustomHandlers">
            <summary>
            If true, custom handlers are used with Document operations.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UseCache">
            <summary>
            If true, cache is used for documents data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.GenerateNewGuid">
            <summary>
            If true, new GUID is generated for the inserted nodes where required.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.CheckUniqueNames">
            <summary>
            If true, unique node names, document names and aliases are checked against the database. Turn off only when you perform the validation by yourself.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.AutomaticallyUpdateDocumentAlias">
            <summary>
            If true, the document alias should be automatically updated upon document name change.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.EnsureSafeNodeAlias">
            <summary>
            If true, node alias will include only allowed characters (turn off only when you perform the validation by yourself or the source data are already valdiated).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.CheckUniqueAttachmentNames">
            <summary>
            If true, unique attachment names within one document are checked against the database. Turn off only when you perform the validation by yourself.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdateTimeStamps">
            <summary>
            If true, time stamps of the document are updated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdateUser">
            <summary>
            If true, user IDs of the document (creator, modifier) are updated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdatePaths">
            <summary>
            If true, paths to the document are updated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdateSKUColumns">
            <summary>
            If true, SKU columns of the document are updated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdateNodeData">
            <summary>
            If true, document content is updated from internal objects.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UpdateDocumentContent">
            <summary>
            If true, document content is updated from internal objects.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.LogEvents">
            <summary>
            If true, events are log on document update.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.DeleteChildNodes">
            <summary>
            If false, child nodes of the document are not deleted when the document is deleted. Default value is true.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.LogSynchronization">
            <summary>
            If true, synchronization tasks are logged on document update.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.LogIntegration">
            <summary>
            If true, integration tasks are logged on document update.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.TouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched on document update.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.LogWebFarmTasks">
            <summary>
            If true, web farm tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.SelectAllData">
            <summary>
            If true, all data are selected. Otherwise only base document data are selected.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.EnableBlogPostTrackbacks">
            <summary>
            Indicates whether blog post trackbacks are enabled.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.EnableNotifications">
            <summary>
            Indicates whether notifications are sent when content changes occur (document updated/inserted/deleted,...). By default it is set to TRUE.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.EnableRating">
            <summary>
            Indicates whether rating of a document should be updated. By default it is set to TRUE.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.AllowAsyncActions">
            <summary>
            Indicates whether asynchronous actions should be allowed (log synchronization tasks). By default it is set to TRUE.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.EnableDocumentAliases">
            <summary>
            Indicates whether "Remember original URL when moving document" option should be accepted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.HandleACLs">
            <summary>
            Indicates whether the ACL operations should be performed during the document operations.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.UseParentNodeGroupID">
            <summary>
            Indicates whether NodeGroupID property should be set according to the parent value.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.PreserveACLHierarchy">
            <summary>
            Indicates whether the ACL hierarchy should be preserved on processed documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.KeepCheckedInOnInsert">
            <summary>
            If true, the document stays checked in on the insert operation
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.ProviderAssemblyName">
            <summary>
            Custom provider library assembly.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeProvider.ProviderObject">
            <summary>
            Returns the provider object.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.UserDocumentsListInfo">
            <summary>
            Defines the listing info for user documents
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.UserDocumentsListInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.UserDocumentsListInfo.TYPEINFO">
            <summary>
            Type information (Not complete - some information is missing).
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UserDocumentsListInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserDocumentsListInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UserDocumentsListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserDocumentsListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.DocumentEngine.UserDocumentsListInfo.GetDataQueryInternal">
            <summary>
            Gets the data query for this object type
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.UserDocumentsListInfo.ColumnNames">
            <summary>
            Returns the list of object columns
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.FileImport">
            <summary>
            Class providing methods for file import.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.FileImport.ImportFiles(System.String,System.String,System.String,System.String[],System.String[],System.Int32,System.Boolean)">
            <summary>
            Imports the set of files.
            </summary>
            <param name="siteName">Site name</param>
            <param name="targetAliasPath">Target alias path</param>
            <param name="cultureCode">Culture code</param>
            <param name="fileList">File list</param>
            <param name="relativePathList">List of files paths that are relative to file import folder. Used by file import to create tree structure that represents sub-tree of file import folder. If this feature is not necessary use null value</param>
            <param name="userId">User ID</param>
            <param name="deleteImportedFile">Indicates if physical file should be deleted after import</param>
            <remarks>Path values are file system paths (with \ as the path separator)</remarks>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAuthorizationEventArgs">
            <summary>
            Document authorization event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAuthorizationEventArgs.User">
            <summary>
            User to check
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAuthorizationEventArgs.Data">
            <summary>
            Data to authorize
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAuthorizationEventArgs.Document">
            <summary>
            Document to authorize
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAuthorizationEventArgs.PermissionName">
            <summary>
            Permission name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentAuthorizationEventArgs.AuthorizationResult">
            <summary>
            Document authorization result
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentAuthorizationHandler">
            <summary>
            Document authorization handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAuthorizationHandler.StartEvent(CMS.Membership.UserInfo,CMS.DocumentEngine.TreeNode,System.String,CMS.DataEngine.AuthorizationResultEnum@)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="userInfo">User info object</param>
            <param name="node">Document node</param>
            <param name="permissionName">Permission name</param>
            <param name="authorized">Authorization result</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentAuthorizationHandler.StartEvent(CMS.Membership.UserInfo,System.Data.DataSet@,System.String)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="userInfo">User info object</param>
            <param name="ds">DataSet with the data</param>
            <param name="permissionName">Permission name</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentEventArgs">
            <summary>
            Document event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentEventArgs.TreeProvider">
            <summary>
            Tree provider
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentEventArgs.Node">
            <summary>
            Document node
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentEventArgs.Attachment">
            <summary>
            Attachment, where is makes sense: SaveAttachment, DeleteAttachment
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentEventArgs.TargetParentNodeID">
            <summary>
            Target parent node ID, initialized for operations where it makes sense: Copy, Move, Insert
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentEventArgs.IncludeChildren">
            <summary>
            If true the children are included within the operation where it makes sense: Copy
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentEvents">
            <summary>
            Document events
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.Update">
            <summary>
            Fires when document is updated
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.Insert">
            <summary>
            Fires when new document is created
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.GetData">
            <summary>
            Fires when document data are being retrieved
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.InsertNewCulture">
            <summary>
            Fires when new culture version of document is created
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.InsertLink">
            <summary>
            Fires when new document link is created
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.Delete">
            <summary>
            Fires when document is deleted
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.Move">
            <summary>
            Fires when document is moved
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.Copy">
            <summary>
            Fires when document is copied
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.GetContent">
            <summary>
            Fires when the content of the document for searching is requested
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.LogChange">
            <summary>
            Fires when document tasks are logged. You can disable tasks logging for staging, integration etc.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.CheckPermissions">
            <summary>
            Fires when permissions are checked on the document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.ChangeOrder">
            <summary>
            Fires when change order is requested on the document
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.Sort">
            <summary>
            Fires when sorting of a document sub-section is requested
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.SaveAttachment">
            <summary>
            Fires when document attachment is saved
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.DeleteAttachment">
            <summary>
            Fires when document attachment is deleted
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.AuthorizeDocument">
            <summary>
            Fires when the permission for particular document is evaluated
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.FilterDataSetByPermissions">
            <summary>
            Fires when the given DataSet should be filtered according to the user permissions
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentEvents.GetDocumentMark">
            <summary>
            Fires at the end of getting document marks for content tree.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentHandler">
            <summary>
            Document handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandler.StartEvent(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Tree node (document)</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandler.StartEvent(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.AttachmentInfo,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Tree node (document)</param>
            <param name="attachment">Attachment</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandler.StartEvent(CMS.DocumentEngine.TreeNode,System.Int32,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Tree node (document)</param>
            <param name="targetParentNodeId">Target parent node ID, initialized for operations where it makes sense: Copy, Move, Insert</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandler.StartEvent(CMS.DocumentEngine.TreeNode,System.Int32,System.Boolean,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Tree node (document)</param>
            <param name="targetParentNodeId">Target parent node ID, initialized for operations where it makes sense: Copy, Move, Insert</param>
            <param name="includeChildNodes">If true the children are included within the operation where it makes sense: Copy</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentHandler.GetRecursionKey(CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Gets the recursion key of the document to identify recursion
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.SimpleWorkflowHandler">
            <summary>
            Simple Workflow handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.SimpleWorkflowHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.SimpleWorkflowHandler.#ctor(CMS.DocumentEngine.SimpleWorkflowHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="M:CMS.DocumentEngine.SimpleWorkflowHandler.StartEvent(CMS.DocumentEngine.TreeNode)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="document">Document</param>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowEventArgs">
            <summary>
            Workflow event arguments
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.TreeProvider">
            <summary>
            Tree provider
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.Document">
            <summary>
            Edited version of the document
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.PublishedDocument">
            <summary>
            Published version of the document, available only for Published handler in after event
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.Attachment">
            <summary>
            Document attachment, used where it makes sense: Save attachment version
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.PreviousStep">
            <summary>
            Previous workflow step, used where it makes sense: After approve, After reject, After archive
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.VersionHistory">
            <summary>
            Version history info record, used where it makes sense: Save version
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.VersionNumber">
            <summary>
            Version number, used where it makes sense: Save version
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEventArgs.VersionComment">
            <summary>
            Version comment, used where it makes sense: Save version
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowEvents">
            <summary>
            Workflow events
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.CheckOut">
            <summary>
            Fires when the document is checked out
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.CheckIn">
            <summary>
            Fires when the document is checked in
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.UndoCheckOut">
            <summary>
            Fires when the undo checkout is performed
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.Approve">
            <summary>
            Fires when the document is approved (moved to next step)
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.Reject">
            <summary>
            Fires when the document is rejected (moved to previous step)
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.Publish">
            <summary>
            Fires when a version of the document is published
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.Archive">
            <summary>
            Fires when a version of the document is archived
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.SaveVersion">
            <summary>
            Fires when a version of the document is saved (during DocumentHelper.UpdateDocument under workflow etc.)
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.SaveAttachmentVersion">
            <summary>
            Fires when a new attachment is added to the document or and attachment is updated (during DocumentHelper.AddAtachment under workflow etc.)
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.RemoveAttachmentVersion">
            <summary>
            Fires when an attachment is removed from he document (during DocumentHelper.DeleteAtachment under workflow etc.)
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowEvents.Action">
            <summary>
            Fires when a workflow action is executed
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowHandler">
            <summary>
            Workflow handler
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowHandler.StartEvent(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="document">Document</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowHandler.StartEvent(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.AttachmentInfo,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="document">Document</param>
            <param name="attachment">Attachment</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowHandler.StartEvent(CMS.DocumentEngine.TreeNode,System.String@,System.String@,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="document">Document</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="T:CMS.DocumentEngine.RelationshipInfo">
            <summary>
            RelationshipInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipInfo.mRelationshipCustomData">
            <summary>
            Custom data.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfo.#ctor">
            <summary>
            Constructor - Creates an empty RelationshipInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RelationshipInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.RelationshipID">
            <summary>
            Relationship ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.RightNodeId">
            <summary>
            Right node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.RelationshipNameId">
            <summary>
            Relationship name ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.LeftNodeId">
            <summary>
            Left node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.RelationshipInfo.RelationshipCustomData">
            <summary>
            Relationship custom data.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.RelationshipInfoProvider">
            <summary>
            Class providing RelationshipInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationships">
            <summary>
            Returns a query for all the RelationshipInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationshipInfo(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets relationship info object.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.SetRelationshipInfo(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Sets relationship info object.
            </summary>
            <param name="relationship">Relationship info</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.DeleteRelationshipInfo(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Removes the relationship between two nodes.
            </summary>
            <param name="relationshipInfo">Relationship object</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.ClearCache(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Clears the document relationship cache for the given relationship.
            </summary>
            <param name="relationship">Relationship</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.AddRelationship(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the relationship for two nodes.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.RemoveRelationship(System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes the relationship between two nodes.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.RelationshipExists(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check whether relationship between two nodes already exists.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
            <returns>Returns true if the relationship between two nodes already exists</returns>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationships(System.Int32,System.Boolean,System.Boolean,System.String,System.Int32,System.String)">
            <summary>
            Returns the relationships DataSet for specified node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, returns the relationships where node is located on the left side</param>
            <param name="nodeRight">If true, returns the relationships where node is located on the right side</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.DeleteRelationships(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Deletes the node relationships.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, relationships with node on the left side are deleted</param>
            <param name="nodeRight">If true, relationships with node on the right side are deleted</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationshipsInternal">
            <summary>
            Returns a query for all the RelationshipInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationshipInfoInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets relationship info object.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.SetRelationshipInfoInternal(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Sets relationship info object.
            </summary>
            <param name="relationship">Relationship info</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.DeleteRelationshipInfoInternal(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Removes the relationship between two nodes.
            </summary>
            <param name="relationshipInfo">Relationship object</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.ClearCacheInternal(CMS.DocumentEngine.RelationshipInfo)">
            <summary>
            Clears the document relationship cache for the given relationship.
            </summary>
            <param name="relationship">Relationship</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.RelationshipExistsInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check whether relationship between two nodes already exists.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
            <returns>Returns true if the relationship between two nodes already exists</returns>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationshipsInternal(System.Int32,System.Boolean,System.Boolean,System.String,System.Int32,System.String)">
            <summary>
            Returns the relationships DataSet for specified node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, returns the relationships where node is located on the left side</param>
            <param name="nodeRight">If true, returns the relationships where node is located on the right side</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.DeleteRelationshipsInternal(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Deletes the node relationships.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, relationships with node on the left side are deleted</param>
            <param name="nodeRight">If true, relationships with node on the right side are deleted</param>
        </member>
        <member name="M:CMS.DocumentEngine.RelationshipInfoProvider.GetRelationshipsWhereCondition(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates where condition for obtaining relationships containing the specified node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, relationships with node on the left side are obtained</param>
            <param name="nodeRight">If true, relationships with node on the right side are obtained</param>
            <returns>Returns where condition for the specified node</returns>
        </member>
        <member name="T:CMS.DocumentEngine.AclInfo">
            <summary>
            AclInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AclInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AclInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfo.#ctor">
            <summary>
            Constructor - Creates an empty AclInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AclInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfo.SetObject">
            <summary>
            Sets object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.DocumentEngine.AclInfo.ACLOwnerNodeID">
            <summary>
            ACL owner node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclInfo.ACLInheritedACLs">
            <summary>
            ACL inherited ACLs.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclInfo.ACLID">
            <summary>
            ACL ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclInfo.ACLSiteID">
            <summary>
            ACL site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclInfo.ACLGUID">
            <summary>
            ACL GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclInfo.ACLLastModified">
            <summary>
            ACL last modified date.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AclItemInfo">
            <summary>
            AclItemInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AclItemInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AclItemInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfo.#ctor">
            <summary>
            Constructor - Creates an empty AclItemInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AclItemInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfo.SetObject">
            <summary>
            Sets object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclItemInfo.CheckPermissionsInternal(CMS.DataEngine.PermissionsEnum,System.String,CMS.Base.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.ACLItemID">
            <summary>
            ACL item ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.ACLID">
            <summary>
            ACL ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.RoleID">
            <summary>
            Role ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.LastModified">
            <summary>
            Acl item last modified date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.LastModifiedByUserID">
            <summary>
            Last modified by user ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.Denied">
            <summary>
            Denied value representing denied permissions.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AclItemInfo.Allowed">
            <summary>
            Allowed value representing allowed permissions.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AclInfoProvider">
            <summary>
            ACL management provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.GetAcls">
            <summary>
            Returns a query for all the AclInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.GetAclInfo(System.Int32)">
            <summary>
            Returns AclInfo with specified ID.
            </summary>
            <param name="id">AclInfo ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.SetAclInfo(CMS.DocumentEngine.AclInfo)">
            <summary>
            Sets (updates or inserts) specified AclInfo.
            </summary>
            <param name="infoObj">AclInfo to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.DeleteAclInfo(CMS.DocumentEngine.AclInfo)">
            <summary>
            Deletes specified AclInfo.
            </summary>
            <param name="infoObj">AclInfo to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.DeleteAclInfo(System.Int32)">
            <summary>
            Deletes AclInfo with specified ID.
            </summary>
            <param name="id">AclInfo ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.RestoreInheritance(CMS.DocumentEngine.TreeNode)">
            <summary>
            Restores inheritance from the parent node and combines parent permissions with original native permissions.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.BreakInherintance(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Removes permission inheritance of the selected node.
            </summary>
            <param name="node">Document node</param>
            <param name="copyParentPermissions">Indicates if parent permissions should be copied to the node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.EnsureOwnAcl(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns ACLID of the given node. If the node doesn't have its own ACL, it creates a new one.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.RemoveAclIds(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Removes specified ACLID values from the ACLs of the specified node and its child nodes.
            </summary>
            <param name="node">Parent document node</param>
            <param name="removeIDs">List of ACLID values to be removed separated with comma (,)</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.ChangeAclId(System.Int32,System.String,System.Int32)">
            <summary>
            Changes the ACLID within the sub-tree defined by path.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="path">Alias path of node, whose ACL ID will be changed(including node children)</param>
            <param name="newId">New ACLID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.GetNodeAndAcl(System.Int32,System.String)">
            <summary>
            Returns a data row containing node data and ACL data.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.DoesNodeInheritPermissions(System.Int32)">
            <summary>
            Returns true if specified node inherits permissions.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.ClearPermissions(System.Int32,System.Int32)">
            <summary>
            Clears permissions of the specified node(s) and sets their ACLID to the specified value.
            </summary>
            <param name="nodeId">Node ID</param>        
            <param name="newAclId">New ACLID value</param>        
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.CopyAcl(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Copies document permissions including the parent document permissions to the target document.
            </summary>
            <param name="sourceNode">Source document</param>
            <param name="targetNode">Target document</param>
            <param name="preserveAclHierarchy">Indicates if target ACL should be same as source</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.HasOwnAcl(CMS.DocumentEngine.TreeNode)">
            <summary>
            Check if node has own ACL.
            </summary>
            <param name="node">Node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.MergeACLs(System.String,System.Int32)">
            <summary>
            Merges ACL items if given ACL is not already contained.
            </summary>
            <param name="inheritedACLs">ACLs separated with comma (,)</param>
            <param name="aclId">ACL</param>
            <returns>String with merged ACLs separated with comma (,)</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.GetAclsInternal">
            <summary>
            Returns a query for all the AclInfo objects.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.GetAclInfoInternal(System.Int32)">
            <summary>
            Returns AclInfo with specified ID.
            </summary>
            <param name="id">AclInfo ID.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.SetAclInfoInternal(CMS.DocumentEngine.AclInfo)">
            <summary>
            Sets (updates or inserts) specified AclInfo.
            </summary>
            <param name="infoObj">AclInfo to be set.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.DeleteAclInfoInternal(CMS.DocumentEngine.AclInfo)">
            <summary>
            Deletes specified AclInfo.
            </summary>
            <param name="infoObj">AclInfo to be deleted.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.RestoreInheritanceInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Restores inheritance from the parent node and combines parent permissions with original native permissions.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.BreakInherintanceInternal(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Removes permission inheritance of the selected node.
            </summary>
            <param name="node">Document node</param>
            <param name="copyParentPermissions">Indicates if parent permissions should be copied to the node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.EnsureOwnAclInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns ACLID of the given node. If the node doesn't have its own ACL, it creates a new one.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.RemoveAclIdsInternal(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Removes specified ACLID values from the ACLs of the specified node and its child nodes.
            </summary>
            <param name="node">Parent document node</param>
            <param name="removeIDs">List of ACLID values to be removed separated with comma (,)</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.ChangeAclIdInternal(System.Int32,System.String,System.Int32)">
            <summary>
            Changes the ACLID within the sub-tree defined by path.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="path">Alias path of node, whose ACL ID will be changed(including node children)</param>
            <param name="newId">New ACLID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.GetNodeAndAclInternal(System.Int32,System.String)">
            <summary>
            Returns a data row containing node data and ACL data.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.DoesNodeInheritPermissionsInternal(System.Int32)">
            <summary>
            Returns true if specified node inherits permissions.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.ClearPermissionsInternal(System.Int32,System.Int32)">
            <summary>
            Clears permissions of the specified node(s) and sets their ACLID to the specified value.
            </summary>
            <param name="nodeId">Node ID</param>        
            <param name="newAclId">New ACLID value</param>        
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.CopyAclInternal(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Copies document permissions including the parent document permissions to the target document.
            </summary>
            <param name="sourceNode">Source document</param>
            <param name="targetNode">Target document</param>
            <param name="preserveAclHierarchy">Indicates if target ACL should be same as source</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.HasOwnAclInternal(System.Int32,System.Data.DataRow)">
            <summary>
            Check if node has own ACL.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="dr">Data row containing ACLOwnerNodeID column</param>
            <returns>Returns true if specified node has own ACL</returns>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.UpdateAclId(System.Int32,System.Int32)">
            <summary>
            Updates ACLID for given node
            </summary>
            <param name="newAclId">New ACL ID</param>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AclInfoProvider.PropagateAclId(CMS.DocumentEngine.TreeNode,System.Int32,System.Int32,System.String)">
            <summary>
            Propagates given ACLID to all underlying nodes that inherit from the specified node.
            </summary>
            <param name="node">Parent document node</param>
            <param name="oldAclId">Original ACLID that will be replaced with new ACLID</param>
            <param name="aclId">New ACLID to be propagated</param>
            <param name="extraAclIds">Additional ACLID values that should be optionally added to the InheritedACLs property of the child ACLs</param>    
        </member>
        <member name="T:CMS.DocumentEngine.NodePermissionsEnum">
            <summary>
            Node permissions enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.Read">
            <summary>
            Read permission.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.Modify">
            <summary>
            Modify permission.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.Create">
            <summary>
            Creates permission.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.Delete">
            <summary>
            Delete permission.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.Destroy">
            <summary>
            Destroy permission.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.ExploreTree">
            <summary>
            Explore tree permission.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.NodePermissionsEnum.ModifyPermissions">
            <summary>
            Permission to change document permissions.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeSecurityProvider">
            <summary>
            Tree provider with an additional security functionality to filter the selection results by the user permissions.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeSecurityProvider.IS_AUTHORIZED_PER_NODE_STORAGE_KEY">
            <summary>
            Storage key used for grouping user's authorization per node.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.IsAuthorizedPerNodeData(System.Object,CMS.DocumentEngine.NodePermissionsEnum,CMS.Membership.UserInfo,System.String)">
            <summary>
            Returns true if user is granted with specified permission for particular node.
            </summary>
            <param name="nodeData">Node data row</param>
            <param name="permission">Permission to check</param>
            <param name="userInfo">UserInfo instance</param> 
            <param name="culture">Document culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.InvalidateTreeNodeAuthorizationResults(CMS.Membership.UserInfo,System.Int32,System.String)">
            <summary>
            Invalidates permission authorization results per node for given user.
            </summary>
            <param name="userInfo">User info object</param>
            <param name="nodeId">Node identifier</param>
            <param name="cultureCode">Document culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.IsAuthorizedPerNode(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,CMS.Membership.UserInfo,System.Boolean,System.String)">
            <summary>
            Returns true if user is granted with specified permission for particular node.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission name</param>
            <param name="userInfo">UserInfo instance</param> 
            <param name="culture">Document culture to be checked</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.IsAuthorizedPerACL(System.Int32,CMS.DocumentEngine.NodePermissionsEnum,CMS.Membership.UserInfo,System.Int32)">
            <summary>
            Returns true if specified user is granted with given permission for the ACL specified by the ACLID value.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="siteId">Site ID</param>
            <remarks>If specified ACLID does not exist, true is returned.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.IsAuthorizedPerACL(System.Int32,CMS.DocumentEngine.NodePermissionsEnum[],CMS.Membership.UserInfo,System.Int32,System.Int32)">
            <summary>
            Returns true if specified user is granted with given permissions for the ACL specified by the ACLID value.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="permissions">Required list of permissions</param>
            <param name="userInfo">Current user info object</param>
            <param name="siteId">Site ID</param>
            <param name="parentNodeId">Parent node ID for 'ExploreTree' permission check</param>
            <remarks>If specified ACLID does not exist, true is returned.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterDataSetByClassPermissions(System.Data.DataSet,CMS.DocumentEngine.NodePermissionsEnum,CMS.Membership.UserInfo,System.Boolean)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permission.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">UserInfo instance</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.DocumentEngine.NodePermissionsEnum,CMS.Membership.UserInfo,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permission.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
            <param name="deleteRecords">If true, the filtered records are deleted from the DataSet. If false, records with flag columns to identify if user was granted with required permission are returned</param>
            <param name="topN">Expected maximum of records to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.DocumentEngine.NodePermissionsEnum[],CMS.Membership.UserInfo,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permissions.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permissions">List of required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
            <param name="deleteRecords">If true, the filtered records are deleted from the DataSet. If false, records with flag columns to identify if user was granted with required permissions are returned</param>
            <param name="topN">Expected maximum of records to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.DocumentEngine.NodePermissionsEnum[],CMS.Membership.UserInfo,System.Boolean,System.String,System.Int32)">
            <summary>
            Filters all tables of the given DataSet and returns records with flag columns to identify if user was granted with required permissions.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permissions">List of required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
            <param name="cultureCodes">Culture codes separated by ';' to perform permissions check separately for each culture</param>
            <param name="topN">Expected maximum of records to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.CheckPermission(System.Data.DataRow,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Gets result of the given permission and culture from DataRow.
            </summary>
            <param name="dr">DataRow with data</param>
            <param name="permission">Permission to check</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.GetPermissionName(CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Returns name of the permission specified by the enumeration value.
            </summary>
            <param name="permission">Enumeration value of the permission</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.IsCultureSpecificPermission(CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Indicates if given document permission is culture specific.
            </summary>
            <param name="permission">Permission</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.GetPermissionColumnName(CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Gets name of the column for given permission.
            </summary>
            <param name="permission">Permission</param>
            <param name="cultureCode">Culture code of the permisson</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterSearchResults(CMS.Search.SearchResults,CMS.DataEngine.ISearchDocument,System.Int32)">
            <summary>
            Returns 1 if current iDocument should be added to the filtered results, returns 2 if current document should be added but
            position should be decreased
            </summary>
            <param name="settings">Check permission settings</param>
            <param name="doc">Current result document</param>
            <param name="position">Current document index</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.DocumentEngine.NodePermissionsEnum[],CMS.Membership.UserInfo,System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permissions.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permissions">List of required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
            <param name="deleteRecords">If true, the filtered records are deleted from the DataSet. If false, the filtered records are marked with a flag</param>
            <param name="cultureCodes">Culture codes separated by ';' to perform permissions check separately for each culture</param>
            <param name="topN">Expected maximum of records to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.GetACLKeyName(System.Int32,CMS.DocumentEngine.NodePermissionsEnum[],System.Int32)">
            <summary>
            Gets key name to access ACL permissions in hashtable.
            </summary>
            <param name="ACLID">ACL ID</param>
            <param name="permissions">Permissions array</param>
            <param name="parentNodeId">Parent node ID</param>
            <returns>If permissions contains 'ExploreTree' then returns key in format 'ACLID|parentNodeId' else 'ACLID'</returns>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.HasUserCultureAllowed(CMS.DocumentEngine.NodePermissionsEnum,System.String,CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user has allowed specified culture.
            </summary>
            <param name="permission">Permission</param>
            <param name="cultureCode">Culture code</param>
            <param name="user">User info</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.IsDocumentAllowed(CMS.Membership.UserInfo,CMS.DocumentEngine.NodePermissionsEnum,System.String,System.String,System.Boolean,CMS.DataEngine.AuthorizationResultEnum,System.Boolean)">
            <summary>
            Checks whether document is allowed.
            </summary>
            <param name="userInfo">User info object</param>
            <param name="permission">Permission to check</param>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
            <param name="isAuthorizedByClassName">Indicates if authorized by class permissions</param>
            <param name="isAuthorizedByACL">Indicates ACL permissions authorization result</param>
            <param name="globalPermissions">If user has global permissions</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeSecurityProvider.GetAuthorizationResultKey(CMS.Membership.UserInfo,System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Gets the authorization result key for request.
            </summary>
            <param name="userInfo">User info object</param>
            <param name="nodeId">Node identifier</param>
            <param name="permission">Permission type</param>
            <param name="cultureCode">Culture code of document</param>
            <returns>Key for retrieving authorization result</returns>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSynchronizationHelper">
            <summary>
            Class containing document synchronization logic.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentSynchronizationHelper.mSynchronizeSharedTemplatesWithDocuments">
            <summary>
            Indicates whether shared template should be synchronized with document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogContentChanges(System.String)">
            <summary>
            Indicates if logging staging tasks for content is enabled.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.CheckIntegrationLogging">
            <summary>
            Indicates if the integration task should be logged.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.CheckStagingLogging(System.String,System.Int32,System.Int32)">
            <summary>
            Indicates if the staging task should be logged.
            </summary>
            <param name="siteName">Name of site to check</param>
            <param name="siteId">Identifier of site to check</param>
            <param name="serverId">Identifier of server to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.GetTaskTitle(CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets document staging task title.
            </summary>
            <param name="taskType">Task type</param>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.GetDocumentXML(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TranslationHelper,CMS.DocumentEngine.TreeProvider,CMS.DataEngine.TaskTypeEnum,CMS.Synchronization.TaskDataTypeEnum,CMS.Synchronization.TaskParameters,System.String)">
            <summary>
            Gets XML of a given node.
            </summary>
            <param name="node">Document node</param>
            <param name="th">Translations (if null TranslationHelper will be created and filled)</param>
            <param name="tree">Tree provider</param>
            <param name="taskType">Task type</param>
            <param name="dataType">Type of data</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="siteName">Site name corresponding to document</param>
            <returns>XML representing document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.GetDocumentDataSet(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TranslationHelper,CMS.DataEngine.TaskTypeEnum,CMS.Synchronization.TaskDataTypeEnum,CMS.DocumentEngine.TreeProvider,CMS.Synchronization.TaskParameters,System.String)">
            <summary>
            Gets a dataset with data of a node and corresponding translation helper.
            </summary>
            <param name="node">Document node</param>
            <param name="th">Translations (if null TranslationHelper will be created and filled)</param>
            <param name="taskType">Task type</param>
            <param name="dataType">Type of data</param>
            <param name="tree">Tree provider</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="siteName">Documents site name</param>
            <returns>DataSet representing document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.RegisterDocumentPageTemplate(CMS.DataEngine.TranslationHelper,System.String,System.Data.DataSet,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Includes document page template into the logged data
            </summary>
            <param name="th">Translation helper</param>
            <param name="originalSiteName">Original site name</param>
            <param name="ds">DataSet with the result</param>
            <param name="translationsNotPresent">Flag whether translations are already present or not</param>
            <param name="includeBindingData">Flag indicating whether binding data should be included</param>
            <param name="includeBindingTranslations">Flag indicating whether binding translations should be included</param>
            <param name="templateId">Template ID to include to export data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.RegisterUserTranslation(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TranslationHelper,System.String)">
            <summary>
            Registers the user translation based on the given column
            </summary>
            <param name="node">Document node</param>
            <param name="th">Translation helper</param>
            <param name="columnName">Column to register</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,System.Boolean,System.Boolean,CMS.DocumentEngine.TreeProvider,System.Int32,CMS.Synchronization.TaskParameters,System.Boolean)">
            <summary>
            Creates the synchronization task for the specified document node and specified server with extra task parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="logStaging">Indicates if the staging task should be logged</param>
            <param name="logIntegration">Indicates if the integration task should be logged</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <returns>List of synchronization tasks</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider,System.Int32,CMS.Synchronization.TaskParameters,System.Boolean)">
            <summary>
            Creates the synchronization task for the specified document node and specified server with extra task parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <returns>Returns new synchronization task</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChangeOrder(System.String,System.String,System.Boolean,System.Boolean,CMS.DocumentEngine.TreeProvider,System.Int32,System.Boolean)">
            <summary>
            Logs the synchronization after the node order change (logs all document nodes on the save level as the document).
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="logStaging">Indicates if the staging task should be logged</param>
            <param name="logIntegration">Indicates if the integration task should be logged</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(System.String,System.String,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates the synchronization tasks for the specified document tree.
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID</param>
            <param name="keepTaskData">Indicates if task data should be kept in the objects</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <returns>Returns list of the ISynchronizationTasks created</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(System.String,System.String,CMS.DataEngine.TaskTypeEnum,System.Boolean,System.Boolean,CMS.DocumentEngine.TreeProvider,System.Int32,System.Boolean,CMS.Synchronization.TaskParameters,System.Boolean,System.String)">
            <summary>
            Creates the synchronization tasks for the specified document tree.
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="taskType">Task type</param>
            <param name="logStaging">Indicates if the staging task should be logged</param>
            <param name="logIntegration">Indicates if the integration task should be logged</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="keepTaskData">Indicates if task data should be kept in the objects</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <param name="where">Where condition</param>
            <returns>Returns collection of the tasks created</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChangeOrder(System.String,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Logs the synchronization after the node order change (logs all document nodes on the same level as the document).
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates the synchronization task for the specified document node, creates the tasks for all the enabled servers when task logging is on.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(System.String,System.String,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Creates the synchronization tasks for the specified document tree.
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
            <returns>Returns list of the ISynchronizationTasks created</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChangeOrder(CMS.DocumentEngine.LogMultipleDocumentChangeSettings)">
            <summary>
            Logs the synchronization after the node order change (logs all document nodes on the save level as the document).
            </summary>
            <param name="settings">Log document change settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.DocumentEngine.LogMultipleDocumentChangeSettings)">
            <summary>
            Creates the synchronization tasks for the specified document tree.
            </summary>
            <param name="settings">Log multiple document change settings</param>
            <returns>Returns collection of the tasks created</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.DocumentEngine.LogDocumentChangeSettings)">
            <summary>
            Creates the synchronization task for the specified document node and specified server with extra task parameters.
            </summary>
            <param name="settings">Log document change settings</param>
            <returns>List of synchronization tasks</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogSynchronization(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider,System.Int32,CMS.Synchronization.TaskParameters)">
            <summary>
            Creates the synchronization task for the specified document node and specified server with extra task parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="taskParams">Extra task parameters to use</param>
            <returns>Returns new synchronization task</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.ProcessSyncTasks(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,System.Int32,System.Collections.Generic.Dictionary{System.String,CMS.Synchronization.TaskProcessTypeEnum})">
            <summary>
            Processes synchronous task subscriptions.
            </summary>
            <param name="node">Document to match</param>
            <param name="siteId">Site identifier</param>
            <param name="taskType">Type of task to match</param>
            <param name="connectors">Connectors to process</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogIntegration(CMS.DocumentEngine.TreeNode,CMS.DataEngine.TaskTypeEnum,CMS.DocumentEngine.TreeProvider,CMS.Synchronization.TaskParameters,System.Int32)">
            <summary>
            Logs integration task.
            </summary>
            <param name="node">Document to log</param>
            <param name="taskType">Type of task to log</param>
            <param name="tree">Tree provider</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="siteId">Site identifier</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogInternalIntegration(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,CMS.DataEngine.TaskTypeEnum,CMS.Synchronization.TaskParameters,CMS.Synchronization.TaskProcessTypeEnum,System.Collections.Generic.List{System.String})">
            <summary>
            Logs the integration task for the given object.
            </summary>
            <param name="node">Document to log</param>
            <param name="tree">Tree provider</param>
            <param name="taskType">Task type</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="taskProcessType">Processing type</param>
            <param name="connectorNames">Integration connector names for which to log the synchronization (nothing is logged when no connector is specified)</param>
            <returns>Returns new integration task</returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationHelper.LogExternalIntegration(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.TreeProvider,CMS.DataEngine.TaskTypeEnum,CMS.Synchronization.TaskDataTypeEnum,CMS.Synchronization.IntegrationProcessTypeEnum,System.String,CMS.DataEngine.TranslationHelper,System.String)">
            <summary>
            Logs the integration task for the given object.
            </summary>
            <param name="node">Document to log</param>
            <param name="tree">Tree provider</param>
            <param name="taskType">Task type</param>
            <param name="dataType">Type of data</param>
            <param name="result">What to do when processing fails</param>
            <param name="connectorName">Integration connector names for which to log the synchronization (nothing is logged when no connector is specified)</param>
            <param name="th">Translation helper</param>
            <param name="siteName">Site name of the target site (for site objects)</param>
            <returns>Returns new integration task</returns>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSynchronizationHelper.SynchronizeSharedTemplatesWithDocuments">
            <summary>
            Gets or sets the value that indicates whether shared templates should be synchronized with documents.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentSynchronizationWorker">
            <summary>
            Class for asynchronous document synchronization logging.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationWorker.#ctor(CMS.DocumentEngine.LogDocumentChangeSettings)">
            <summary>
            Default constructor for single document.
            </summary>
            <param name="settings">Log document change settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationWorker.#ctor(CMS.DocumentEngine.LogMultipleDocumentChangeSettings)">
            <summary>
            Default constructor for multiple documents.
            </summary>
            <param name="settings">Log documents change settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentSynchronizationWorker.Run">
            <summary>
            Runs the action.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSynchronizationWorker.SingleSettings">
            <summary>
            Log single document change settings.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSynchronizationWorker.MultipleSettings">
            <summary>
            Log multiple documents change settings.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSynchronizationWorker.OrderChange">
            <summary>
            If true, the task runs the order change task.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentSynchronizationWorker.Multiple">
            <summary>
            If true, the task runs the multiple log tasks.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentEngineModule">
            <summary>
            Represents the Document Engine module.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.OnPreInit">
            <summary>
            Initializes the module
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.OnInit">
            <summary>
            Initializes the module
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.InitExport">
            <summary>
            Initializes the Import/Export handlers
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.RegisterIndexers">
            <summary>
            Registers the search indexers for documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.ClearHashtables(System.Boolean)">
            <summary>
            Clears the module hash tables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentEngineModule.GetObject(System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentValidationEnum">
            <summary>
            Document validation type
            </summary>   
        </member>
        <member name="F:CMS.DocumentEngine.DocumentValidationEnum.CSS">
            <summary>
            Document CSS validation
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentValidationEnum.HTML">
            <summary>
            Document (X)HTML validation
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentValidationEnum.Link">
            <summary>
            Document validation for broken links
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentValidationEnum.Accessibility">
            <summary>
            (X)HTML document accessibility validation
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentValidationHelper">
            <summary>
            Helper class for document validation
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentValidationHelper.ProcessValidationResult(System.Data.DataSet,CMS.DocumentEngine.DocumentValidationEnum,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Process validation result and apply data transformations
            </summary>
            <param name="result">DataSet with validation results to process</param>
            <param name="validationTask">Type of document validation applied</param>
            <param name="additionalValues">Additional values used in data post-processing</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentValidationHelper.PostProcessValidationData(System.Data.DataSet,CMS.DocumentEngine.DocumentValidationEnum,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Post-Process validation data
            </summary>
            <param name="data">DataSet with validation data to process</param>
            <param name="validationTask">Type of document validation applied</param>
            <param name="additionalValues">Additional values used in data post-processing</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentValidationHelper.DisableMinificationOnUrl(System.String)">
            <summary>
            Update URL so it doesn't use minification
            </summary>
            <param name="url">URL to update</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentValidationHelper.AllowedToEditCSS(CMS.Membership.UserInfo,System.String)">
            <summary>
            Check is user is allowed to edit CSS
            </summary>
            <param name="user">User to check</param>
            <param name="siteName">Name of site under which CSS are checked to be editable</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentValidationHelper.GetStatusCodeDescription(System.Int32,System.String)">
            <summary>
            Get string representation of HTTP status code
            </summary>
            <param name="statusNumber">HTTP status code</param>
            <param name="culture">Culture of resulting text</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentValidationHelper.CleanExplanationRegex">
            <summary>
            Regular expression to remove unnecessary text from validation error explanation
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentValidationHelper.AnchorRegex">
            <summary>
            Regular expression to remove unnecessary text from validation error explanation
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentValidationHelper.InlineCSSSource">
            <summary>
            Returns source of inline CSS styles
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryInfo">
            <summary>
            AttachmentHistory data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentHistoryInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentHistoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentHistoryInfo.mAttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.AttachmentHistoryInfo.mAttachmentSearchContent">
            <summary>
            Extracted content from attachment binary used for search indexing.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty AttachmentHistory structure.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the AttachmentHistory object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentSize">
            <summary>
            Size of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentExtension">
            <summary>
            Extension of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentName">
            <summary>
            Name of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentMimeType">
            <summary>
            MIME type of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentBinary">
            <summary>
            Binary data of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentDocumentID">
            <summary>
            Related document Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentImageWidth">
            <summary>
            Width of the attachment image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentImageHeight">
            <summary>
            Height of the attachment image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentGUID">
            <summary>
            GUID of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentHistoryGUID">
            <summary>
            GUID of the attachment history (unique across whole attachment history).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentIsUnsorted">
            <summary>
            Indicates if attachment is unsorted attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentOrder">
            <summary>
            Stores the attachment order.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentGroupGUID">
            <summary>
            Holds the GUID of the document field (group) under which the grouped attachment belongs.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentHistoryID">
            <summary>
            History ID of the attachment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentHash">
            <summary>
            Attachment hash.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentTitle">
            <summary>
            Attachment title.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentDescription">
            <summary>
            Attachment description.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentLastModified">
            <summary>
            Attachment last modified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentSiteID">
            <summary>
            Attachment site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.AttachmentHistoryInfo.AttachmentSearchContent">
            <summary>
            Extracted content from attachment binary used for search indexing.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryInfoProvider">
            <summary>
            Class providing attachment history management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.GetAttachmentHistory(System.Int32)">
            <summary>
            Returns the AttachmentHistory structure for the specified attachment history.
            </summary>
            <param name="attachmentHistoryId">ID of attachment history</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.SetAttachmentHistory(CMS.DocumentEngine.AttachmentHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified attachment history.
            </summary>
            <param name="attachmentHistory">Attachment history to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.DeleteAttachmentHistory(CMS.DocumentEngine.AttachmentHistoryInfo)">
            <summary>
            Deletes specified attachment history.
            </summary>
            <param name="attachmentHistory">Attachment history object</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.DeleteAttachmentHistory(System.Int32)">
            <summary>
            Deletes specified attachment history.
            </summary>
            <param name="attachmentHistoryId">ID of attachment history</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.GetAttachmentHistories">
            <summary>
            Gets all attachment histories.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.GetAttachmentHistories(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all attachment histories.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.MoveAttachmentUp(System.Guid,System.Int32)">
            <summary>
            Moves attachment history up.
            </summary>
            <param name="attachmentGuid">GUID of attachment history</param>
            <param name="versionHistoryId">ID of version history</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.MoveAttachmentDown(System.Guid,System.Int32)">
            <summary>
            Moves attachment history down.
            </summary>
            <param name="attachmentGuid">GUID of attachment history</param>
            <param name="versionHistoryId">ID of version history</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.MoveHistories(System.Int32,System.Int32)">
            <summary>
            Moves attachment histories of given document to new site.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteId">New site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.ChangeDocument(System.Int32,System.Int32)">
            <summary>
            Changes attachment histories document.
            </summary>
            <param name="originalDocumentId">Document ID</param>
            <param name="newDocumentId">New document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.GetAttachmentHistoryInternal(System.Int32)">
            <summary>
            Returns the AttachmentHistory structure for the specified attachment history.
            </summary>
            <param name="attachmentHistoryId">ID of attachment history</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.SetAttachmentHistoryInternal(CMS.DocumentEngine.AttachmentHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified attachment history.
            </summary>
            <param name="attachmentHistory">Attachment history to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.DeleteAttachmentHistoryInternal(CMS.DocumentEngine.AttachmentHistoryInfo)">
            <summary>
            Deletes specified attachment history.
            </summary>
            <param name="attachmentHistory">Attachment history object</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.GetAttachmentHistoriesInternal">
            <summary>
            Returns the query for all document aliases.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.MoveAttachmentUpInternal(System.Guid,System.Int32)">
            <summary>
            Moves attachment history up.
            </summary>
            <param name="attachmentGuid">GUID of attachment history</param>
            <param name="versionHistoryId">ID of version history</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.MoveAttachmentDownInternal(System.Guid,System.Int32)">
            <summary>
            Moves attachment history down.
            </summary>
            <param name="attachmentGuid">GUID of attachment history</param>
            <param name="versionHistoryId">ID of version history</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.InitAttachmentOrderAndParametersInternal(System.Guid,System.Int32)">
            <summary>
            Initializes sorting order of attachment histories.
            </summary>
            <param name="attachmentGuid">GUID of attachment history</param>
            <param name="versionHistoryId">ID of version history</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.MoveHistoriesInternal(System.Int32,System.Int32)">
            <summary>
            Moves attachment histories of given document to different site.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteId">New site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.AttachmentHistoryInfoProvider.ChangeDocumentInternal(System.Int32,System.Int32)">
            <summary>
            Changes attachment histories document.
            </summary>
            <param name="originalDocumentId">Document ID</param>
            <param name="newDocumentId">New document ID</param>
        </member>
        <member name="T:CMS.DocumentEngine.AttachmentHistoryInfoCollection">
            <summary>
            Collection of the attachments
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.UnsortedAttachmentHistoryInfoCollection">
            <summary>
            Collection of the attachments which only covers unsorted attachments
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.UnsortedAttachmentHistoryInfoCollection.EnsureObjectValues(CMS.DataEngine.BaseInfo)">
            <summary>
            Ensures the proper values for the given object
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.VersionAttachmentInfo">
            <summary>
            Version attachment binding info.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.VersionAttachmentInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.VersionAttachmentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfo.#ctor">
            <summary>
            Constructor - Creates an empty CultureSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CultureSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfo.SetObject">
            <summary>
            Sets object
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionAttachmentInfo.VersionHistoryID">
            <summary>
            Version history ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionAttachmentInfo.AttachmentHistoryID">
            <summary>
            Attachment history ID.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.VersionAttachmentInfoProvider">
            <summary>
            Class providing VersionAttachmentInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.GetVersionAttachmentInfo(System.Int32,System.Int32)">
            <summary>
            Returns version attachment with specified ID.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentHistoryId">Attachment version history ID</param>     
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.SetVersionAttachmentInfo(System.Int32,System.Int32)">
            <summary>
            Sets (updates or inserts) specified version attachment binding.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentHistoryId">Attachment version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.SetVersionAttachmentInfo(CMS.DocumentEngine.VersionAttachmentInfo)">
            <summary>
            Sets (updates or inserts) specified version attachment binding.
            </summary>
            <param name="attachmentObj">Version attachment to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.DeleteVersionAttachmentInfo(System.Int32,System.Int32)">
            <summary>
            Deletes version attachment with specified ID.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentHistoryId">Attachment version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.DeleteVersionAttachmentInfo(CMS.DocumentEngine.VersionAttachmentInfo)">
            <summary>
            Deletes specified version attachment.
            </summary>
            <param name="attachmentObj">Version attachment to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.GetVersionAttachments">
            <summary>
            Gets the query for all version attachments.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.GetVersionAttachments(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the query of all version attachments matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.GetDocumentsForAttachmentVersion(System.Int32)">
            <summary>
            Returns the query of all the document versions bound to the specified attachment version.
            </summary>
            <param name="attachmentHistoryId">Attachment version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.GetVersionAttachmentInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns version attachment binding.
            </summary>
            <param name="versionHistoryId">Identifier for document history</param>
            <param name="attachmentHistoryId">Identifier for attachment history</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.SetVersionAttachmentInfoInternal(CMS.DocumentEngine.VersionAttachmentInfo)">
            <summary>
            Sets (updates or inserts) specified version attachment.
            </summary>
            <param name="attachmentObj">Version attachment to be set.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.DeleteVersionAttachmentInfoInternal(CMS.DocumentEngine.VersionAttachmentInfo)">
            <summary>
            Deletes specified version attachment.
            </summary>
            <param name="attachmentObj">Version attachment to be deleted.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.VersionAttachmentInfoProvider.GetVersionAttachmentsInternal">
            <summary>
            Returns the query for all version attachments.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.VersionHistoryInfo">
            <summary>
            VersionHistoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.VersionHistoryInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.VersionHistoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty VersionHistoryInfo structure.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the VersionHistoryInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.NodeXML">
            <summary>
            Node XML.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.PublishFrom">
            <summary>
            Publish from date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.ToBePublished">
            <summary>
            To be published date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionHistoryID">
            <summary>
            Version history ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.ModifiedByUserID">
            <summary>
            Modified by user ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.DeletedByUserID">
            <summary>
            Deleted by user ID (for recycle bin).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.WasPublishedTo">
            <summary>
            Was published to date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.NodeSiteID">
            <summary>
            Site ID of the node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.ModifiedWhen">
            <summary>
            Modified when date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.DeletedWhen">
            <summary>
            Deleted when date (for recycle bin).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.PublishTo">
            <summary>
            Publish to date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionNumber">
            <summary>
            Version number.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.DocumentNamePath">
            <summary>
            Document name path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionComment">
            <summary>
            Version comment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.WasPublishedFrom">
            <summary>
            Was published from date.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionDocumentName">
            <summary>
            Version document name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionDocumentType">
            <summary>
            Version document type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionClassID">
            <summary>
            Version class ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionMenuRedirectUrl">
            <summary>
            Version menu redirection URL.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionWorkflowID">
            <summary>
            Version workflow ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionWorkflowStepID">
            <summary>
            Version workflow step ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionHistoryInfo.VersionNodeAliasPath">
            <summary>
            Version node aliaspath.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.VersionHistoryInfoProvider">
            <summary>
            Class providing VersionHistoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.GetVersionHistoryInfo(System.Int32)">
            <summary>
            Returns the VersionHistoryInfo structure for the specified versionHistory.
            </summary>
            <param name="versionHistoryId">VersionHistory ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.SetVersionHistoryInfo(CMS.DocumentEngine.VersionHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified versionHistory.
            </summary>
            <param name="versionHistory">VersionHistory to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.DeleteVersionHistoryInfo(CMS.DocumentEngine.VersionHistoryInfo)">
            <summary>
            Deletes specified versionHistory.
            </summary>
            <param name="versionHistory">VersionHistory object</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.DeleteVersionHistoryInfo(System.Int32)">
            <summary>
            Deletes specified versionHistory.
            </summary>
            <param name="versionHistoryId">VersionHistory ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.GetVersionHistories">
            <summary>
            Returns the query for all version histories.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.GetVersionHistories(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all version histories.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.GetRecycleBin(System.Int32,System.Int32,System.String,System.String,System.Int32,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Gets recycle bin for specified user.
            </summary>
            <param name="siteId">ID of site</param>
            <param name="userId">ID of user</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Select only top N rows</param>
            <param name="columns">Select only specified columns</param>
            <param name="modifiedFrom">Lower time bound</param>
            <param name="modifiedTo">Upper time bound</param>
            <returns>Recycle bin for specified user and site</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.MoveHistories(System.Int32,System.Int32)">
            <summary>
            Moves histories of given document to new site.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteId">New site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.ChangeDocument(System.Int32,System.Int32)">
            <summary>
            Changes version histories document.
            </summary>
            <param name="originalDocumentId">Document ID</param>
            <param name="newDocumentId">New document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.GetVersionHistoryInfoInternal(System.Int32)">
            <summary>
            Returns the VersionHistoryInfo structure for the specified versionHistory.
            </summary>
            <param name="versionHistoryId">VersionHistory ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.SetVersionHistoryInfoInternal(CMS.DocumentEngine.VersionHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified versionHistory.
            </summary>
            <param name="versionHistory">VersionHistory to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.DeleteVersionHistoryInfoInternal(CMS.DocumentEngine.VersionHistoryInfo)">
            <summary>
            Deletes specified versionHistory.
            </summary>
            <param name="versionHistory">VersionHistory object</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.GetVersionHistoriesInternal">
            <summary>
            Returns the query for all version histories.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.GetRecycleBinInternal(System.Int32,System.Int32,System.String,System.String,System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>
            Gets recycle bin for specified user.
            </summary>
            <param name="siteId">ID of site</param>
            <param name="userId">ID of user</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Select only top N rows</param>
            <param name="columns">Select only specified columns</param>
            <param name="modifiedFrom">Lower time bound</param>
            <param name="modifiedTo">Upper time bound</param>
            <returns>Recycle bin for specified user and site</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.MoveHistoriesInternal(System.Int32,System.Int32)">
            <summary>
            Moves histories of given document to different site.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteId">New site ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionHistoryInfoProvider.ChangeDocumentInternal(System.Int32,System.Int32)">
            <summary>
            Changes version histories document.
            </summary>
            <param name="originalDocumentId">Document ID</param>
            <param name="newDocumentId">New document ID</param>
        </member>
        <member name="T:CMS.DocumentEngine.VersionManager">
            <summary>
            Class to provide node versioning management.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.VersionManager.mTreeProvider">
            <summary>
            TreeProvider to use for DB access.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.VersionManager.mWorkflowManager">
            <summary>
            WorkflowManager for workflow managing.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.VersionManager.mNonVersionedCoupledColumns">
            <summary>
            Non-versioned coupled columns list.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.#ctor">
            <summary>
            Constructor - Creates version manager.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.#ctor(CMS.DocumentEngine.TreeProvider)">
            <summary>
            Constructor - Creates version manager.
            </summary>
            <param name="tree">TreeProvider instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ChangeManagerTypeTo(System.Type)">
            <summary>
            Changes the manager type to the given type
            </summary>
            <param name="newType">New manager type</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetInstance(CMS.DocumentEngine.TreeProvider)">
            <summary>
            Gets the instance of the manager.
            </summary>
            <param name="tree">TreeProvider instance to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersion(System.Int32)">
            <summary>
            Returns specified history version.
            </summary>
            <param name="versionHistoryId">VersionHistory ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersion(System.Int32,CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns specified history version.
            </summary>
            <param name="versionHistoryId">VersionHistory ID</param>
            <param name="sourceNode">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersion(CMS.DocumentEngine.VersionHistoryInfo,CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns node with applied version data.
            </summary>
            <param name="version">Document version history</param>
            <param name="sourceNode">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyVersion(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.VersionHistoryInfo)">
            <summary>
            Applies version data to the node.
            </summary>
            <param name="node">Document node</param>
            <param name="version">Document version</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyLatestVersion(CMS.DocumentEngine.TreeNode)">
            <summary>
            Applies latest version data to the node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.SaveVersion(CMS.DocumentEngine.TreeNode,System.String,System.String,System.String,CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Saves history version record to the database without checking in.
            </summary>
            <param name="node">Node object that should be stored in the version history</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
            <param name="updateColumns">List of columns which should be updated explicitly (separated by ';')</param>
            <param name="forceWorkflow">Workflow instance to force to apply</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CheckOut(CMS.DocumentEngine.TreeNode)">
            <summary>
            Checks out specified node and creates a new record in the CMS_VersionHistory table.
            </summary>
            <param name="node">Document to check out</param>
            <returns>Returns current workflow step of the document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CheckOut(CMS.DocumentEngine.TreeNode,System.Boolean,System.Boolean)">
            <summary>
            Checks out specified node and creates a new record in the CMS_VersionHistory table.
            </summary>
            <param name="node">Document to check out</param>
            <param name="nodeIsPublished">Document is published</param>
            <param name="isAutomatic">Indicates whether check-in should be performed automatically later on</param>
            <returns>Returns current workflow step of the document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CheckOut(CMS.DocumentEngine.TreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Checks out specified node and creates a new record in the CMS_VersionHistory table.
            </summary>
            <param name="node">Document to check out</param>
            <param name="nodeIsPublished">Document is published</param>
            <param name="isAutomatic">Indicates whether check-in should be performed automatically later on</param>
            <param name="handleSpecialSteps">Indicates if special steps should be handled</param>
            <returns>Returns current workflow step of the document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CheckIn(CMS.DocumentEngine.TreeNode,System.String,System.String)">
            <summary>
            Checks provided node in and stores it in the versioning history.
            </summary>
            <param name="node">Document node</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CreateNewVersion(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates new document version. (Moves document to edit step.)
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetDocumentHistory(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the version history table for the specified document.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N attachments</param>
            <param name="columns">Selected columns</param>     
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetLatestDocumentVersion(System.Int32)">
            <summary>
            Gets latest document version
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DestroyDocumentHistory(System.Int32)">
            <summary>
            Deletes complete history of specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ClearDocumentHistory(System.Int32)">
            <summary>
            Clears complete history of specified document (keeps latest version).
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DestroyDocumentVersion(System.Int32)">
            <summary>
            Deletes specified record in the node version history.
            </summary>
            <param name="versionHistoryId">Version history ID to delete</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DeleteOlderVersions(System.Int32,System.String)">
            <summary>
            Deletes older document versions to keep specified version history length.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteName">Site name</param>
            <returns>Returns the version number of the last deleted version</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishVersion(System.Int32)">
            <summary>
            Puts the specified node history version to the front DB tables.
            </summary>
            <param name="versionHistoryId">ID of the version history record</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishVersion(System.Int32,System.Boolean)">
            <summary>
            Puts the specified node history version to the front DB tables.
            </summary>
            <param name="versionHistoryId">ID of the version history record</param>
            <param name="checkPublish">If true, the ToBePublished item is checked to find out whether to publish or not</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.UndoCheckOut(CMS.DocumentEngine.TreeNode)">
            <summary>
            Undo all operations made during last checkout.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RollbackVersion(System.Int32)">
            <summary>
            Adds specified earlier version to the top of the version history.
            </summary>
            <param name="versionHistoryId">Version history ID</param>
            <returns>Returns new version history ID</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishAllScheduled(System.String)">
            <summary>
            Publishes all documents scheduled for the current time.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RestoreDocument(System.Int32,CMS.DocumentEngine.TreeNode)">
            <summary>
            Restores deleted node and returns the restored node.
            </summary>
            <param name="versionHistoryId">ID of the version to be restored</param>
            <param name="restNode">Node to be restored</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetNewVersion(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Returns new version number representation.
            </summary>
            <param name="oldVersionNumber">Old version number</param>
            <param name="isMajorVersion">If true, the version number is considered major</param>
            <param name="siteName">Site name</param>
            <param name="useCheckInCheckOut">Indicates if use check-in/check-out</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.EnsureVersion(CMS.DocumentEngine.TreeNode,System.Boolean,System.Boolean,CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Ensures that the document version history is present for the given document, returns the document version.
            </summary>
            <param name="node">Document node</param>
            <param name="nodeIsPublished">Document is published</param>
            <param name="nodeDeletion">Indicates if the version should be ensured for the recycle bin</param>
            <param name="forceWorkflow">Workflow instance to force to apply</param>
            <remarks>The document is updated to the database, there is no need to update it after</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.EnsureVersionAttachments(CMS.DocumentEngine.TreeNode)">
            <summary>
            Ensures that the document attachments are present within the AttachmentHistory table.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.UseCheckInCheckOut(System.String)">
            <summary>
            Specifies whether the environment is configured to use check-in and check-out actions.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.UseAutomaticVersionNumbering(System.String)">
            <summary>
            Specifies whether the environment is configured to use automatic version numbering.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetHistoryLength(System.String)">
            <summary>
            Gets version history length
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsVersionedCoupledColumn(System.String,System.String)">
            <summary>
            Returns true if the given column name is a versioned data column name.
            </summary>
            <param name="className">Class name</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsVersionedDocumentColumn(System.String)">
            <summary>
            Returns true if the given column name is a versioned data column name.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsSystemNodeColumn(System.String)">
            <summary>
            Returns true if the given column name is a system data column name of the node.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsSystemDocumentColumn(System.String)">
            <summary>
            Returns true if the given column name is a system data column name.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.AddAttachmentToVersion(System.Int32,System.Int32)">
            <summary>
            Adds the version - attachment binding to the database.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentHistoryId">Attachment version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RemoveAttachmentFromVersion(System.Int32,System.Int32)">
            <summary>
            Removes the version - attachment binding from the database.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentHistoryId">Attachment version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RemoveAttachmentVersion(System.Int32,System.Guid)">
            <summary>
            Removes the AttachmentHistory binding to the document version history and deletes the AttachmentHistory object if there is no more bindings to that version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.SaveAttachmentVersion(CMS.DocumentEngine.AttachmentInfo,System.Int32)">
            <summary>
            Saves the attachment version to the database.
            </summary>
            <param name="attachment">Attachment info object</param>
            <param name="versionHistoryId">Version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CopyVersionAttachments(System.Int32,System.Int32)">
            <summary>
            Copies the version attachment bindings to the given version.
            </summary>
            <param name="sourceVersionHistoryId">Original version history ID</param>
            <param name="destinationVersionHistoryId">Target version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CopyVersionAttachments(System.Int32,System.Int32,System.Collections.Hashtable)">
            <summary>
            Copies the version attachments to the given version, physically copies the attachment history records.
            </summary>
            <param name="sourceVersionHistoryId">Source version history ID</param>
            <param name="destinationVersionHistoryId">Destination version history ID</param>
            <param name="guidTable">Attachment GUID conversion table, pairs [OldGUID->NewGUID]</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishAttachments(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Publishes the attachments for the given document.
            </summary>
            <param name="node">Document node</param>
            <param name="versionHistoryId">Version history for which the attachments should be published</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetAttachmentDocumentVersions(System.Int32)">
            <summary>
            Returns the DataSet of all the document versions bound to the specified attachment version.
            </summary>
            <param name="attachmentHistoryId">Attachment history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetAttachmentVersion(System.Int32,System.Guid)">
            <summary>
            Returns the attachment version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetAttachmentVersion(System.Int32,System.Guid,System.Boolean)">
            <summary>
            Returns the attachment version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetAttachmentVersion(System.Int32,System.String,System.Boolean)">
            <summary>
            Returns the attachment version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="fileName">File name</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetLatestAttachmentVersion(System.Guid,System.String)">
            <summary>
            Returns latest attachment version found in the AttachmentHistoryTable.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Attachment site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetLatestAttachmentVersion(System.Guid,System.String,System.Boolean)">
            <summary>
            Returns latest attachment version found in the AttachmentHistoryTable.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Attachment site name</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersionAttachments(System.Int32)">
            <summary>
            Returns the DataSet containing all the attachments for the given document version based on where condition and order by clause.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersionAttachments(System.Int32,System.Boolean)">
            <summary>
            Returns the DataSet containing all the attachments for the given document version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersionAttachments(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Returns the DataSet containing all the attachments for the given document version based on where condition and order by clause.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersionAttachments(System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            Returns the DataSet containing all the attachments for the given document version based on where condition and order by clause.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="getBinary">Indicates if binary data should be included</param>
            <param name="topN">Top N attachments</param>
            <param name="columns">Selected columns</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RemoveWorkflow(CMS.DocumentEngine.TreeNode)">
            <summary>
            Removes all the workflow information from the document and initializes the document as non-workflow.
            </summary>
            <param name="node">Document node (current version)</param>
            <remarks>Intended for use after finishing current workflow cycle to remove workflow scope from the document</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyDocumentVersionData(System.Data.DataSet)">
            <summary>
            Applies the document version data to the document DataSet (only the document data, not the coupled data).
            </summary>
            <param name="ds">Dataset with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyVersionData(System.Data.DataRow,System.String,System.String)">
            <summary>
            Applies the document version data to the document data row.
            </summary>
            <param name="nodeRow">DataRow with the document data</param>
            <param name="className">Document class name</param>
            <param name="versionXml">Version XML data</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetVersionInternal(CMS.DocumentEngine.VersionHistoryInfo,CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns node with applied version data.
            </summary>
            <param name="version">Document version history</param>
            <param name="sourceNode">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyVersionInternal(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.VersionHistoryInfo)">
            <summary>
            Applies version data to the node.
            </summary>
            <param name="node">Document node</param>
            <param name="version">Document version</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyClassVersionColumns(CMS.DocumentEngine.TreeNode,System.String,System.Data.DataRow)">
            <summary>
            Applies the data from given data row to the document node
            </summary>
            <param name="node">Document node</param>
            <param name="className">Class name defining the columns to apply</param>
            <param name="dr">Source data row</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyLatestVersionInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Applies latest version data to the node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.SaveVersionInternal(CMS.DocumentEngine.TreeNode,System.String,System.String,System.String,CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Saves history version record to the database without checking in.
            </summary>
            <param name="node">Node object that should be stored in the version history</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
            <param name="updateColumns">List of columns which should be updated explicitly (separated by ';')</param>
            <param name="forceWorkflow">Workflow instance to force to apply</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CheckOutInternal(CMS.DocumentEngine.TreeNode,System.Boolean,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            Checks out specified node and creates a new record in the CMS_VersionHistory table.
            </summary>
            <param name="node">Document to check out</param>
            <param name="nodeIsPublished">Document is published</param>
            <param name="isAutomatic">Indicates whether check-in should be performed automatically later on</param>
            <param name="handleSpecialSteps">Indicates if special steps should be handled</param>
            <returns>Returns current workflow step of the document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CheckInInternal(CMS.DocumentEngine.TreeNode,System.String,System.String)">
            <summary>
            Checks provided node in and stores it in the versioning history.
            </summary>
            <param name="node">Document node</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CreateNewVersionInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates new document version. (Moves document to edit step.)
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetDocumentHistoryInternal(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the version history table for the specified document.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N attachments</param>
            <param name="columns">Selected columns</param>     
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetLatestDocumentVersionInternal(System.Int32)">
            <summary>
            Gets latest document version
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DestroyDocumentHistoryInternal(System.Int32)">
            <summary>
            Deletes complete history of specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ClearDocumentHistoryInternal(System.Int32)">
            <summary>
            Clears complete history of specified document (keeps the latest version).
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DestroyDocumentVersionInternal(System.Int32)">
            <summary>
            Deletes specified record in the node version history.
            </summary>
            <param name="versionHistoryId">Version history ID to delete</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.DeleteOlderVersionsInternal(System.Int32,System.String)">
            <summary>
            Deletes older document versions to keep specified version history length.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteName">Site name</param>
            <returns>Returns the version number of the last deleted version</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishVersionInternal(System.Int32,System.Boolean)">
            <summary>
            Puts the specified node history version to the front DB tables.
            </summary>
            <param name="versionHistoryId">ID of the version history record</param>
            <param name="checkPublish">If true, the ToBePublished item is checked to find out whether to publish or not</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.UndoCheckOutInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Undo all operations made during last checkout.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RollbackVersionInternal(System.Int32)">
            <summary>
            Adds specified earlier version to the top of the version history.
            </summary>
            <param name="versionHistoryId">Version history ID</param>
            <returns>Returns new version history ID</returns>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishAllScheduledInternal(System.String)">
            <summary>
            Publishes all documents scheduled for the current time.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RestoreDocumentInternal(System.Int32,CMS.DocumentEngine.TreeNode)">
            <summary>
            Restores deleted node and returns the restored node.
            </summary>
            <param name="versionHistoryId">ID of the version to be restored</param>
            <param name="restNode">Node to be restored</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetNewVersionInternal(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Returns new version number representation.
            </summary>
            <param name="oldVersionNumber">Old version number</param>
            <param name="isMajorVersion">If true, the version number is considered major</param>
            <param name="siteName">Site name</param>
            <param name="useCheckInCheckOut">Indicates if use check-in/check-out</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.EnsureVersionInternal(CMS.DocumentEngine.TreeNode,System.Boolean,System.Boolean,CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Ensures that the document version history is present for the given document, returns the document version.
            </summary>
            <param name="node">Document node</param>
            <param name="nodeIsPublished">Document is published</param>
            <param name="nodeDeletion">Indicates if the version should be ensured for the recycle bin</param>
            <param name="forceWorkflow">Workflow instance to force to apply</param>
            <remarks>The document is updated to the database, there is no need to update it after</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.EnsureVersionAttachmentsInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Ensures that the document attachments are present within the AttachmentHistory table.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.UseCheckInCheckOutInternal(System.String)">
            <summary>
            Specifies whether the environment is configured to use check-in and check-out actions.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.UseAutomaticVersionNumberingInternal(System.String)">
            <summary>
            Specifies whether the environment is configured to use automatic version numbering.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetHistoryLengthInternal(System.String)">
            <summary>
            Gets version history length
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsVersionedCoupledColumnInternal(System.String,System.String)">
            <summary>
            Returns true if the given column name is a versioned data column name.
            </summary>
            <param name="className">Class name</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsVersionedDocumentColumnInternal(System.String)">
            <summary>
            Returns true if the given column name is a versioned data column name.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsSystemNodeColumnInternal(System.String)">
            <summary>
            Returns true if the given column name is a system data column name of the node.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.IsSystemDocumentColumnInternal(System.String)">
            <summary>
            Returns true if the given column name is a system data column name.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.EnsureConsistencyInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Ensures the document consistency with current database content.
            </summary>
            <param name="node">Node to check</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.EnsureUserConsistency(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Ensures the consistency of the user ID column
            </summary>
            <param name="node">Document node</param>
            <param name="colName">Column name with the user ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.EnsureTemplateConsistency(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Ensures the consistency of the template ID column
            </summary>
            <param name="node">Document node</param>
            <param name="colName">Column name with the template ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetAttachmentDocumentVersionsInternal(System.Int32)">
            <summary>
            Returns the DataSet of all the document versions bound to the specified attachment version.
            </summary>
            <param name="attachmentHistoryId">Attachment history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.AddAttachmentToVersionInternal(System.Int32,System.Int32)">
            <summary>
            Adds the version - attachment binding to the database.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentHistoryId">Attachment version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RemoveAttachmentFromVersionInternal(System.Int32,System.Int32)">
            <summary>
            Removes the version - attachment binding from the database.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentHistoryId">Attachment version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RemoveAttachmentVersionInternal(System.Int32,System.Guid)">
            <summary>
            Removes the AttachmentHistory binding to the document version history and deletes the AttachmentHistory object if there is no more bindings to that version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.SaveAttachmentVersionInternal(CMS.DocumentEngine.AttachmentInfo,System.Int32)">
            <summary>
            Saves the attachment version to the database.
            </summary>
            <param name="attachment">Attachment info object</param>
            <param name="versionHistoryId">Version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CopyVersionAttachmentsInternal(System.Int32,System.Int32)">
            <summary>
            Copies the version attachment bindings to the given version.
            </summary>
            <param name="sourceVersionHistoryId">Original version history ID</param>
            <param name="destinationVersionHistoryId">Target version history ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.CopyVersionAttachmentsInternal(System.Int32,System.Int32,System.Collections.Hashtable)">
            <summary>
            Copies the version attachments to the given version, physically copies the attachment history records.
            </summary>
            <param name="sourceVersionHistoryId">Source version history ID</param>
            <param name="destinationVersionHistoryId">Destination version history ID</param>
            <param name="guidTable">Attachment GUID conversion table, pairs [OldGUID->NewGUID]</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.PublishAttachmentsInternal(CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Publishes the attachments for the given document.
            </summary>
            <param name="node">Document node</param>
            <param name="versionHistoryId">Version history for which the attachments should be published</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetLatestAttachmentVersionInternal(System.Guid,System.String,System.Boolean)">
            <summary>
            Returns latest attachment version found in the AttachmentHistoryTable.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Attachment site name</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetAttachmentVersionInternal(System.Int32,System.Guid,System.Boolean)">
            <summary>
            Returns the attachment version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.GetAttachmentVersionInternal(System.Int32,System.String,System.Boolean)">
            <summary>
            Returns the attachment version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="fileName">File name</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.RemoveWorkflowInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Removes all the workflow information from the document and initializes the document as non-workflow.
            </summary>
            <param name="node">Document node (current version)</param>
            <remarks>Intended for use after finishing current workflow cycle to remove workflow scope from the document</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyDocumentVersionDataInternal(System.Data.DataSet)">
            <summary>
            Applies the document version data to the document DataSet (only the document data, not the coupled data).
            </summary>
            <param name="ds">Dataset with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyVersionDataInternal(System.Data.DataRow,System.String,System.String)">
            <summary>
            Applies the document version data to the document data row.
            </summary>
            <param name="nodeRow">DataRow with the document data</param>
            <param name="className">Document class name</param>
            <param name="versionXml">Version XML data</param>
        </member>
        <member name="M:CMS.DocumentEngine.VersionManager.ApplyVersionColumns(System.Data.DataRow,System.Data.DataRow,CMS.DataEngine.ClassStructureInfo)">
            <summary>
            Applies the given list of columns from the source data row to the node data row
            </summary>
            <param name="nodeRow">Node (target) data row</param>
            <param name="sourceRow">Source data row</param>
            <param name="structure">Class structure</param>
        </member>
        <member name="P:CMS.DocumentEngine.VersionManager.NonVersionedCoupledColumns">
            <summary>
            List of the non-versioned coupled document columns.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionManager.TreeProvider">
            <summary>
            TreeProvider instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.VersionManager.WorkflowManager">
            <summary>
            Gets workflow manager instance.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentActionContext">
            <summary>
            Document action context. Ensures context for the document actions block.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentActionContext.RestoreOriginalValues">
            <summary>
            Restores the original values to the context
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentPreserveACLHierarchy">
            <summary>
            Indicates whether the ACL hierarchy should be preserved on processed documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentUseAutomaticOrdering">
            <summary>
            If true, automatic ordering is used for new nodes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentEnableBlogPostTrackbacks">
            <summary>
            Indicates whether blog post trackbacks are enabled.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentHandleACLs">
            <summary>
            Indicates whether the ACL settings should be processed during the document operations.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentResetChanges">
            <summary>
            Indicates whether the changes made to the document instance should be reseted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.CurrentResetIsWaitingForTranslationFlag">
            <summary>
            Indicates whether the 'Document is waiting for translation' flag should be cleared.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.PreserveACLHierarchy">
            <summary>
            Indicates whether the ACL hierarchy should be preserved on processed documents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.UseAutomaticOrdering">
            <summary>
            If true, automatic ordering is used for new nodes.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.EnableBlogPostTrackbacks">
            <summary>
            Indicates whether blog post trackbacks are enabled.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.HandleACLs">
            <summary>
            Indicates whether the ACL settings should be processed during the document operations.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.ResetChanges">
            <summary>
            Indicates whether the changes made to the document instance should be reseted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentActionContext.ResetIsWaitingForTranslationFlag">
            <summary>
            Indicates whether the 'Document is waiting for translation' flag should be cleared.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.BaseDocumentAction">
            <summary>
            Class for base document action
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentWorkflowAction">
            <summary>
            Base document workflow action
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentWorkflowAction.RefreshNode">
            <summary>
            Refreshes node instance
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentWorkflowAction.Node">
            <summary>
            Current document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentWorkflowAction.WorkflowManager">
            <summary>
            Workflow manager
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentAction.SourceAliasPath">
            <summary>
            Source alias path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentAction.SourceSiteName">
            <summary>
            Source site name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentAction.SourceCulture">
            <summary>
            Source document culture code
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentAction.SourceCombineWithDefaultCulture">
            <summary>
            Specifies if return the default culture document when specified culture not found.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentAction.SourceSite">
            <summary>
            Source site
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.BaseDocumentAction.SourceNode">
            <summary>
            Node to be copied
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DeleteDocumentAction">
            <summary>
            Class for document deletion action
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DeleteDocumentAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentAction.AlternatingAliasPath">
            <summary>
            Alternating alias path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentAction.AlternatingNode">
            <summary>
            Alternating node
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentAction.AlternatingDocumentCopyAllPaths">
            <summary>
            Indicates if aliases should be copied.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentAction.AlternatingDocumentChildren">
            <summary>
            Indicates if child documents should be alternated.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentAction.DeleteAllCultures">
            <summary>
            Indicates if all cultures should be deleted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentAction.DestroyDocument">
            <summary>
            Indicates if the document should be destroyed.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DeleteDocumentAction.DeleteSKUsAction">
            <summary>
            Action how to handle SKUs.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentPropertyAction">
            <summary>
            Class for document property set action
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentPropertyAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentPropertyAction.PropertyName">
            <summary>
            Gets property name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentPropertyAction.PropertyValue">
            <summary>
            Gets property value
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.LinkDocumentAction">
            <summary>
            Class for document link action
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.LinkDocumentAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LinkDocumentAction.TargetAliasPath">
            <summary>
            Target alias path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LinkDocumentAction.TargetSiteName">
            <summary>
            Target site name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LinkDocumentAction.IncludeChildren">
            <summary>
            Indicates if child documents should be included
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LinkDocumentAction.CopyPermissions">
            <summary>
            Indicates if document permissions should be copied
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LinkDocumentAction.TargetNodeID">
            <summary>
            Target parent node ID
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.CopyDocumentAction">
            <summary>
            Class for document copy action
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.CopyDocumentAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentAction.TargetAliasPath">
            <summary>
            Target alias path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentAction.TargetSiteName">
            <summary>
            Target site name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentAction.IncludeChildren">
            <summary>
            Indicates if child documents should be included
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentAction.CopyPermissions">
            <summary>
            Indicates if document permissions should be copied
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.CopyDocumentAction.TargetNodeID">
            <summary>
            Target parent node ID
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.MoveDocumentAction">
            <summary>
            Class for document move action
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MoveDocumentAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MoveDocumentAction.TargetAliasPath">
            <summary>
            Target alias path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MoveDocumentAction.TargetSiteName">
            <summary>
            Target site name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MoveDocumentAction.MoveOnlyChildren">
            <summary>
            Indicates if only child documents should be moved
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MoveDocumentAction.PreservePermissions">
            <summary>
            Indicates if document permissions should be preserved
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MoveDocumentAction.TargetNodeID">
            <summary>
            Target parent node ID
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.EmailAction">
            <summary>
            Class representing action to send e-mail
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.EmailAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EmailAction.Recipients">
            <summary>
            Recipients of e-mail separated by ';' or ','.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EmailAction.TemplateName">
            <summary>
            Template of e-mail.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EmailAction.Sender">
            <summary>
            Sender of e-mail.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EmailAction.Subject">
            <summary>
            Subject specifically defined for step.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EmailAction.Body">
            <summary>
            E-mail body specifically defined for step.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.EmailAction.BasedOnTemplate">
            <summary>
            Whether is e-mail based or template or not 
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.LogAction">
            <summary>
            Class for log action - for debug purposes
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.LogAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.LogAction.Managers">
            <summary>
            Managers who can approve
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.NotificationEmailsAction">
            <summary>
            Class representing action to send workflow notification e-mails.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.NotificationEmailsAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowEmailSender">
            <summary>
            Class for asynchronous workflow e-mail sending.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowEmailSender.#ctor(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowActionEnum,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="node">Tree node</param>
            <param name="user">User</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="action">Workflow action</param>
            <param name="comment">Comment</param>
            <param name="applicationUrl">Application URL for macro resolver</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowEmailSender.Run">
            <summary>
            Runs the action.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.Node">
            <summary>
            Tree node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.User">
            <summary>
            User.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.OriginalStep">
            <summary>
            Original step.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.CurrentStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.Action">
            <summary>
            Workflow action.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.Comment">
            <summary>
            Action comment.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowEmailSender.ApplicationUrl">
            <summary>
            Application URL for e-mail macro resolving
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowResolvers">
            <summary>
            Resolvers used in e-mail templates and other macro visual components.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowResolvers.WorkflowResolver">
            <summary>
            Returns workflow e-mail template macro resolver.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowResolvers.WorkflowBaseDocumentResolver">
            <summary>
            Returns base empty workflow macro resolver with document field.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowResolvers.WorkflowSimpleDocumentResolver">
            <summary>
            Returns simple workflow macro resolver with document field.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowTimer">
            <summary>
            Provides an ITask interface for the workflow timing.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowTimer.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the workflow timer.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowException">
            <summary>
            Special workflow exception.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:CMS.DocumentEngine.WorkflowManager">
            <summary>
            Class for managing the workflow procedure.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowManager.mScopesOrderBy">
            <summary>
            Default scopes order by expression to handle scope priorities.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowManager.mTreeProvider">
            <summary>
            Inner TreeProvider object for the data access.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.WorkflowManager.mVersionManager">
            <summary>
            Manager for versions
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.#ctor(CMS.DocumentEngine.TreeProvider)">
            <summary>
            Constructor - Creates workflow manager.
            </summary>
            <param name="tree">TreeProvider instance to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.Init(CMS.DocumentEngine.TreeProvider)">
            <summary>
            Initializes the manager
            </summary>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.ChangeManagerTypeTo(System.Type)">
            <summary>
            Changes the manager type to the given type
            </summary>
            <param name="newType">New manager type</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetInstance(CMS.DocumentEngine.TreeProvider)">
            <summary>
            Gets the instance of the manager.
            </summary>
            <param name="tree">TreeProvider instance to use</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNodeWorkflowScope(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the workflow scope info for the given node, or null when the node does not support workflow.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetFirstWorkflowStep(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns first workflow step for given node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPublishedWorkflowStep(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns published workflow step for given node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNodeWorkflow(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the workflow for the specified node.
            </summary>
            <param name="node">Tree node to analyze for workflow</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetStepInfo(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets step information for given document.
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.EnsureStepInfo(CMS.DocumentEngine.TreeNode)">
            <summary>
            Ensures workflow step for given document.
            </summary>
            <param name="node">Tree node</param>
            <remarks>In case given node is under workflow but doesn't have the workflow step set yet, updates the node information.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPreviousStepInfo(CMS.DocumentEngine.TreeNode,System.Boolean)">
            <summary>
            Returns previous step information for given node.
            </summary>
            <param name="node">Tree node</param>
            <param name="markAsUsed">Indicates if the history should be marked as used.</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPreviousSteps(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns list of previous steps for current workflow cycle
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNextStepInfo(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns list of next steps for given node.
            </summary>
            <param name="node">Node to process</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNextSteps(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns list of next steps for given node.
            </summary>
            <param name="node">Node to process</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNextSteps(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Returns list of next steps for given node.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Workflow step</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.LogWorkflowHistory(CMS.WorkflowEngine.WorkflowLogSettings)">
            <summary>
            Logs specified action in the workflow history record.
            </summary>
            <param name="settings">Log settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.HandleStepTimeout(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Handles step timeout
            </summary>
            <param name="node">Node to process</param>
            <param name="user">User info</param>
            <param name="workflow">Workflow</param>
            <param name="currentStep">Current workflow step</param>
            <param name="step">Target workflow step</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToNextStep(CMS.DocumentEngine.TreeNode,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified node to the next step in the workflow and returns new step.
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToPreviousStep(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Moves the specified node to the previous step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>    
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToPreviousSpecificStep(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Moves the specified node to the specified previous step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>    
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToFirstStep(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Moves the specified node to the first step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToPublishedStep(CMS.DocumentEngine.TreeNode,System.String,System.Boolean)">
            <summary>
            Automatically publishes given document. (Moves document to published step.)
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToSpecificNextStep(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified node to the specified next step in the workflow and returns workflow step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToSpecificStep(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns workflow step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToSpecificStep(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String,System.Boolean,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns workflow step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
            <param name="transitionType">Type of transition</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.SetActionStatus(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Sets action status
            </summary>
            <param name="node">Document node</param>
            <param name="status">Status string</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetActionStatus(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets action status
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.ArchiveDocument(CMS.DocumentEngine.TreeNode,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Archives the document, returns the last step info.
            </summary>
            <param name="node">Document to archive</param>
            <param name="comment">Version comment</param>
            <param name="transitionType">Transition type</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.PublishDocument(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Publishes the document, returns the last step info.
            </summary>
            <param name="node">Document to publish</param>
            <param name="comment">Version comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveDocument(CMS.DocumentEngine.TreeNode,System.String,System.Func{CMS.WorkflowEngine.WorkflowStepInfo,System.Boolean})">
            <summary>
            Moves the document to the next step until the given condition is satisfied, returns the last step info.
            </summary>
            <param name="node">Document to move</param>
            <param name="comment">Version comment</param>
            <param name="condition">Condition to evaluate</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.CheckStepPermissions(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Returns true if current user can approve or reject given node in its current workflow step.
            </summary>
            <param name="node">Document node</param>
            <param name="action">Workflow action</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.CheckStepPermissions(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Returns true if given user can approve or reject given node in its current workflow step.
            </summary>
            <param name="node">Document node</param>
            <param name="user">Current user info</param>
            <param name="action">Workflow action</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.CanUserManageWorkflow(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can manage workflow.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetUsersWhoCanApprove(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.Definitions.SourcePoint,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of users who can approve node in the current workflow step. Users who are approved due to generic roles are not included to the result.
            </summary>
            <param name="node">Document node</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetUsersWhoCanApprove(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.Definitions.SourcePoint,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of all the users who can approve node in the current workflow step.
            </summary>
            <param name="node">Document node</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="assigned">Indicates if users assigned to the workflow steps should be get. Users in the generic roles are not included</param>
            <param name="managers">Indicates if users who have the manage workflow permission should be get</param>
            <param name="administrators">Indicates if users who are global administrators should be get</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
            <returns>Returns defined role users, Global administrators and users who have the Manage workflow permission for the document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.SendWorkflowEmails(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowActionEnum,System.String)">
            <summary>
            Sends the workflow email for the specified document node.
            </summary>
            <param name="node">Document node</param>
            <param name="userInfo">User info that performed the action</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="action">Workflow action to process</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetWorkflowEmailRecipients(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Gets list of user e-mail addresses to send the workflow e-mail
            </summary>
            <param name="node">Document</param>
            <param name="currentStep">Current workflow step</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="action">Action</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.PropagateTreeProviderInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Propagates tree provider
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetCurrentStepInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Always gets instance of current workflow step. (Also checks document for required settings.)
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNodeWorkflowScopeInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the workflow scope info for the given node, or null when the node does not support workflow.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetFirstWorkflowStepInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns first workflow step for given node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPublishedWorkflowStepInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns published workflow step for given node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNodeWorkflowInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns the workflow for the specified node.
            </summary>
            <param name="node">Tree node to analyze for workflow</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetStepInfoInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Gets step information for given document.
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.EnsureStepInfoInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Ensures workflow step for given document.
            </summary>
            <param name="node">Tree node</param>
            <remarks>In case given node is under workflow but doesn't have the workflow step set yet, updates the node information.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPreviousStepInfoInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.Boolean)">
            <summary>
            Returns previous step information for given node.
            </summary>
            <param name="node">Tree node</param>
            <param name="stateObj">State object</param>
            <param name="step">Current workflow step</param>
            <param name="markAsUsed">Indicates if the history should be marked as used.</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPreviousStepsInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Returns list of previous steps for current workflow cycle
            </summary>
            <param name="node">Tree node</param>
            <param name="stateObj">State object</param>
            <param name="step">Current workflow step</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetPreviousStepInfoInternal(CMS.WorkflowEngine.WorkflowHistoryInfo,System.Int32,System.Boolean)">
            <summary>
            Gets previous workflow step
            </summary>
            <param name="history">Workflow history</param>
            <param name="workflowId">Workflow ID</param>
            <param name="markAsUsed">Indicates if the history should be marked as used.</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetApprovalHistoriesInternal(System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Gets approval workflow histories between two given for specified object
            </summary>
            <param name="startHistoryId">Start history ID</param>
            <param name="endHistoryId">End history ID</param>
            <param name="workflowId">Workflow ID</param>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
            <param name="topN">Top N results</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNextStepInfoInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Returns list of next steps for given node.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Current step</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNextStepInfoInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.Membership.UserInfo)">
            <summary>
            Returns list of next steps for given object.
            </summary>
            <param name="node">Node to process</param>
            <param name="stateObj">State object</param>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToNextStepInternal(CMS.DocumentEngine.TreeNode,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified node to the next step in the workflow and returns new step.
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToPreviousStepInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Moves the specified node to the previous step in the workflow and returns StepID of the new step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>    
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MarkRejectHistoriesInternal(CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,System.Int32)">
            <summary>
            Marks workflow histories as used when rejecting to specific step.
            </summary>
            <param name="previousStep">Previous workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToFirstStepInternal(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Moves the specified node to the first step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToSpecificStepInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns workflow step.
            </summary>
            <param name="node">Node to process</param>
            <param name="stateObj">State object</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <param name="action">Action context</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToSpecificStepInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String,System.Boolean,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns workflow step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
            <param name="transitionType">Type of transition</param>
            <param name="action">Action context</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToStepInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="currentStep">Current workflow step of the document</param>
            <param name="step">Target workflow step of the document</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToStepInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,System.Boolean)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="stateObj">State object</param>
            <param name="currentStep">Current workflow step of the document</param>
            <param name="step">Target workflow step of the document</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <param name="handleActions">Indicates if step actions should be handled</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToStepInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,System.Boolean,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,System.Boolean)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns the step.
            </summary>
            <param name="node">Node to process</param>
            <param name="currentStep">Current workflow step of the document</param>
            <param name="step">Target workflow step of the document</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
            <param name="transitionType">Type of transition</param>
            <param name="handleActions">Indicates if step actions should be handled</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveStepInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves the specified node to the first step without automatic transition in the workflow and returns the final step.
            </summary>
            <param name="node">Node to process</param>
            <param name="currentStep">Current workflow step of the document</param>
            <remarks>The return step can be different than the original target step.</remarks>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveToPublishedStepInternal(CMS.DocumentEngine.TreeNode,System.String,System.Boolean)">
            <summary>
            Moves document directly to published step. (Publishes the document without going through all the steps.)
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.ArchiveDocumentInternal(CMS.DocumentEngine.TreeNode,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Archives the document, returns the last step info.
            </summary>
            <param name="node">Document to archive</param>
            <param name="comment">Version comment</param>
            <param name="transitionType">Transition type</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.PublishDocumentInternal(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Publishes the document, returns the last step info.
            </summary>
            <param name="node">Document to publish</param>
            <param name="comment">Version comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.MoveDocumentInternal(CMS.DocumentEngine.TreeNode,System.String,System.Func{CMS.WorkflowEngine.WorkflowStepInfo,System.Boolean})">
            <summary>
            Moves the document to the next step until the given condition is satisfied, returns the last step info.
            </summary>
            <param name="node">Document to move</param>
            <param name="comment">Version comment</param>
            <param name="condition">Condition to evaluate</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.CanUserManageWorkflowInternal(CMS.Membership.UserInfo,System.String)">
            <summary>
            Indicates if user can manage workflow.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.CheckStepPermissionsInternal(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Returns true if given user can approve or reject given node in its current workflow step.
            </summary>
            <param name="node">Tree node</param>
            <param name="user">User</param>
            <param name="action">Workflow action</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetUsersWhoCanApproveInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.Definitions.SourcePoint,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of users who can approve node in the current workflow step. Users who are approved due to generic roles are not included to the result.
            </summary>
            <param name="node">Document node</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetUsersWhoCanApproveInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.Definitions.SourcePoint,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of all the users who can approve node in the current workflow step.
            </summary>
            <param name="node">Document node</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="assigned">Indicates if users assigned to the workflow steps should be get. Users in the generic roles are not included</param>
            <param name="managers">Indicates if users who have the manage workflow permission should be get</param>
            <param name="administrators">Indicates if users who are global administrators should be get</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
            <returns>Returns defined role users, Global administrators and users who have the Manage workflow permission for the document</returns>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.SendWorkflowEmailsInternal(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowActionEnum,System.String)">
            <summary>
            Sends the workflow email for the specified document node.
            </summary>
            <param name="node">Document node</param>
            <param name="userInfo">User info that performed the action</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="action">Workflow action to process</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetEmailTemplateInternal(CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowActionEnum,System.Boolean,System.Boolean,CMS.MacroEngine.MacroResolver)">
            <summary>
            Gets e-mail template name and default subject to be used for given action
            </summary>
            <param name="workflow">Workflow</param>
            <param name="step">Target workflow step</param>
            <param name="action">Workflow action</param>
            <param name="toEditor">Indicates if e-mail template should be used to send e-mail to editor</param>
            <param name="notification">Indicates if general notification template should be returned</param>
            <param name="resolver">Macro resolver</param>
            <returns>E-mail template name and default subject as a pair. Key represents the template name, value represents default subject.</returns>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetEditorEmailInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Gets the document editor e-mail (user that approved the document edit step) 
            </summary>
            <param name="node">Document node</param>
            <param name="step">Workflow step</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetWorkflowEmailRecipientsInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Gets list of user e-mail addresses to send the workflow e-mail
            </summary>
            <param name="node">Document</param>
            <param name="currentStep">Current workflow step</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="action">Action</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetNotificationEmailRecipientsInternal(CMS.DocumentEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Gets list of user e-mail addresses to send the general notification e-mail
            </summary>
            <param name="node">Document</param>
            <param name="currentStep">Current workflow step</param>
            <param name="action">Action</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.SetActionStatusInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,System.String)">
            <summary>
            Sets action status
            </summary>
            <param name="node">Document node</param>
            <param name="stateObj">State object</param>
            <param name="status">Workflow status</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetActionStatusInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo)">
            <summary>
            Gets action status
            </summary>
            <param name="node">Document node</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetEvalResolverInternal(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.Membership.UserInfo)">
            <summary>
            Gets resolver for evaluation of transitions and source points
            </summary>
            <param name="node">Document node</param>
            <param name="stateObj">State object</param>
            <param name="workflow">Workflow</param>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetEmailResolver(CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowInfo,System.String,System.String)">
            <summary>
            Get resolver for e-mail sending.
            </summary>
            <param name="node">Document node</param>
            <param name="stateObj">State object</param>
            <param name="userInfo">User info that performed the action</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="workflow">Workflow</param>
            <param name="action">Workflow action string representation</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.GetEmailResolverInternal(CMS.DocumentEngine.TreeNode,CMS.Membership.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowInfo,System.String,System.String)">
            <summary>
            Get resolver for e-mail sending.
            </summary>
            <param name="node">Document node</param>
            <param name="userInfo">User info that performed the action</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="workflow">Workflow</param>
            <param name="action">Workflow action string representation</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.DocumentEngine.WorkflowManager.ProcessActionInternal(CMS.WorkflowEngine.WorkflowActionEventArgs{CMS.DocumentEngine.TreeNode,CMS.DataEngine.BaseInfo,CMS.WorkflowEngine.WorkflowActionEnum})">
            <summary>
            Processes action connected to given step.
            </summary>
            <param name="arguments">Action arguments</param>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowManager.CheckPermissions">
            <summary>
            Indicates if step permissions should be checked when the step is moved.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowManager.TreeProvider">
            <summary>
            TreeProvider instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowManager.VersionManager">
            <summary>
            Version manager instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.WorkflowManager.ScopesOrderBy">
            <summary>
            Default scopes order by expression to handle scope priorities.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.RelationshipSideEnum">
            <summary>
            Relationship side enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipSideEnum.Both">
            <summary>
            Document participates on both sides.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipSideEnum.Left">
            <summary>
            Document participates on left side only.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.RelationshipSideEnum.Right">
            <summary>
            Document participates on right side only.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.PathTypeEnum">
            <summary>
            Path type enumeration.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PathTypeEnum.Explicit">
            <summary>
            Path used as it is (no additional modification).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PathTypeEnum.Single">
            <summary>
            Path representing single document.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PathTypeEnum.Children">
            <summary>
            Path representing all child documents.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.PathTypeEnum.Section">
            <summary>
            Path representing document and its child documents.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentCultureDataInfo">
            <summary>
            Class representing the culture specific data of a document.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentCultureDataInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentCultureDataInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentCultureDataInfo.mDocumentCustomData">
            <summary>
            Document custom data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentCultureDataInfo.mDocumentContent">
            <summary>
            Document editable content.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfo.#ctor">
            <summary>
            Constructor - Creates an empty PageCultureInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfo.InitFromDataRow(System.Data.DataRow)">
            <summary>
            Initializes the data from the DataRow, can be called only after calling the empty constructor.
            </summary>
            <param name="dr">DataRow</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfo.InitFromDataContainer(CMS.Base.IDataContainer)">
            <summary>
            Initializes the data from the Data container, can be called only after calling the empty constructor.
            </summary>
            <param name="dc">Data container with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfo.SetObject">
            <summary>
            Sets object
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentNodeID">
            <summary>
            Document related tree node ID
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuRedirectToFirstChild">
            <summary>
            Indicates if redirection to first child document should be performed when accessed
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuRedirectUrl">
            <summary>
            URL to which the document is redirected when accessed
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuJavascript">
            <summary>
            JavaScript code that is executed upon click on the document in the menus.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentName">
            <summary>
            Document name
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentNamePath">
            <summary>
            Document name path
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentType">
            <summary>
            Document type - contains the document extension(s) that represents.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentUrlPath">
            <summary>
            Document URL path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentCulture">
            <summary>
            Document culture.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuCaption">
            <summary>
            Document menu caption.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuStyle">
            <summary>
            Document menu style.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuItemImage">
            <summary>
            Document menu item image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuItemLeftImage">
            <summary>
            Document menu item left image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuItemRightImage">
            <summary>
            Document menu item right image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuClass">
            <summary>
            Document menu class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuStyleOver">
            <summary>
            Document menu style over.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuClassOver">
            <summary>
            Document menu class over.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuItemImageOver">
            <summary>
            Document menu item image over.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuItemLeftImageOver">
            <summary>
            Document menu item left image over.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuItemRightImageOver">
            <summary>
            Document menu item right image over.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuStyleHighlighted">
            <summary>
            Document menu highlighted style.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuClassHighlighted">
            <summary>
            Document menu highlighted class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuItemImageHighlighted">
            <summary>
            Document menu item highlighted image.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuItemLeftImageHighlighted">
            <summary>
            Document menu item left image highlighted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuItemRightImageHighlighted">
            <summary>
            Document menu item right image highlighted.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentMenuItemInactive">
            <summary>
            Indicates whether item is inactive in document menu.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentPageTemplateID">
            <summary>
            Document page template for specific culture version.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentUseNamePathForUrlPath">
            <summary>
            Automatically use document name path for the UrlPath.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentUseCustomExtensions">
            <summary>
            Use custom document extensions.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentStylesheetID">
            <summary>
            Document CSS stylesheet ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentForeignKeyValue">
            <summary>
            Document foreign key ID. Connects page with custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentPublishFrom">
            <summary>
            Indicates from when the document should be published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentPublishTo">
            <summary>
            Indicates to when the document should be published.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentExtensions">
            <summary>
            Document extensions.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentCampaign">
            <summary>
            Document campaign.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentTrackConversionName">
            <summary>
            Document conversion name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentConversionValue">
            <summary>
            Document conversion value.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentTags">
            <summary>
            Document tags.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentTagGroupID">
            <summary>
            Document tag group ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentWildcardRule">
            <summary>
            Document wild card rule.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentRatingValue">
            <summary>
            Sum of all ratings.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentRatings">
            <summary>
            Number of ratings.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentPriority">
            <summary>
            Document priority.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentPublishedVersionHistoryID">
            <summary>
            Document published version history ID (latest published document version).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentCheckedOutVersionHistoryID">
            <summary>
            Document checked out version history ID (latest document version).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentCheckedOutByUserID">
            <summary>
            ID of a user who has checked the document out.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentWorkflowStepID">
            <summary>
            Document workflow step ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentIsArchived">
            <summary>
            Indicates whether document is archived.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentWorkflowActionStatus">
            <summary>
            Returns string representing workflow action status.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentSearchExcluded">
            <summary>
            Indicates whether the document will be excluded from search.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentHash">
            <summary>
            Document hash.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentLogVisitActivity">
            <summary>
            Indicates whether any activity is tracked for this document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentGUID">
            <summary>
            GUID to identify the document within site.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentWorkflowCycleGUID">
            <summary>
            Workflow cycle GUID to obtain preview link for document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentSitemapSettings">
            <summary>
            Gets or sets the site map settings in format frequency;priority.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentIsWaitingForTranslation">
            <summary>
            Indicates whether the document is in the process of translation (submitted to a translation service).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentCustomData">
            <summary>
            Document custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentCultureDataInfo.DocumentContent">
            <summary>
            Document content.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentCultureDataInfoProvider">
            <summary>
            Class providing document culture specific data management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfoProvider.GetDocumentCultures">
            <summary>
            Returns document culture data object query.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfoProvider.GetDocumentCultureInfo(System.Int32)">
            <summary>
            Returns document culture data with specified ID.
            </summary>
            <param name="dataId">Document culture ID.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfoProvider.SetDocumentCultureInfo(CMS.DocumentEngine.DocumentCultureDataInfo)">
            <summary>
            Sets (updates or inserts) specified document culture data.
            </summary>
            <param name="data">Document culture data to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfoProvider.DeleteDocumentCultureInfo(CMS.DocumentEngine.DocumentCultureDataInfo)">
            <summary>
            Deletes specified document culture data.
            </summary>
            <param name="data">Document culture data to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfoProvider.DeleteDocumentCultureInfo(System.Int32)">
            <summary>
            Deletes document culture data with specified ID.
            </summary>
            <param name="dataId">Document culture data ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfoProvider.UpdateData(System.String,System.String,CMS.DataEngine.QueryDataParameters)">
            <summary>
            Updates data for all records given by where condition
            </summary>
            <param name="updateExpression">Update expression, e.g. "Value = Value * 2"</param>
            <param name="where">Where condition</param>
            <param name="parameters">Parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfoProvider.GetDocumentCultureInfoInternal(System.Int32)">
            <summary>
            Returns document culture data with specified ID.
            </summary>
            <param name="dataId">Document culture data ID.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfoProvider.SetDocumentCultureInfoInternal(CMS.DocumentEngine.DocumentCultureDataInfo)">
            <summary>
            Sets (updates or inserts) specified document culture data.
            </summary>
            <param name="data">Document culture data to be set.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentCultureDataInfoProvider.DeleteDocumentCultureInfoInternal(CMS.DocumentEngine.DocumentCultureDataInfo)">
            <summary>
            Deletes specified document culture data.
            </summary>
            <param name="data">Document culture data to be deleted.</param>        
        </member>
        <member name="T:CMS.DocumentEngine.DocumentFieldsInfo">
            <summary>
            Class providing access to document custom fields.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfo.Clone">
            <summary>
            Creates a clone of document fields
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfo.#ctor(System.String,System.Data.DataRow)">
            <summary>
            Base constructor for inherited classes and internal purposes
            </summary>
            <param name="className">Class name of the document fields</param>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfo.InitFromDataRow(System.Data.DataRow)">
            <summary>
            Initializes the data from the DataRow, can be called only after calling the empty constructor.
            </summary>
            <param name="dr">DataRow</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfo.InitFromDataContainer(CMS.Base.IDataContainer)">
            <summary>
            Initializes the data from the Data container, can be called only after calling the empty constructor.
            </summary>
            <param name="dc">Data container with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfo.New(System.String,System.Data.DataRow)">
            <summary>
            Creates new DocumentFieldsInfo instance which must inherit the DocumentFieldsInfo class.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="dataRow">Data row containing both tree node and coupled table</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfo.New(System.String,CMS.Base.IDataContainer)">
            <summary>
            Creates new document fields instance.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="data">Data container containing both tree node and coupled table</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfo.Initialize(System.String,System.Data.DataRow)">
            <summary>
            Initializes the object created with default constructor. Use it to load existing document fields from data row.
            </summary>
            <param name="className">Document type name in format application.type</param>
            <param name="dataRow">Data row containing all document data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfo.Initialize(System.String,CMS.Base.IDataContainer)">
            <summary>
            Initializes the object created with default constructor. Use it to load existing document fields from data row.
            </summary>
            <param name="className">Document type name in format application.type</param>
            <param name="data">Data container containing all document data</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentFieldsInfo.DataClassInfo">
            <summary>
            DataClass info
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentFieldsInfoProvider">
            <summary>
            Class for managing document custom fields.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentFieldsInfoProvider.mTypeInfos">
            <summary>
            Document fields TypeInfo's [className.ToLowerCSafe()] -> [TypeInfo]
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.#ctor">
            <summary>
            Constructor (Creates uninitialized provider.)
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.#ctor(System.String)">
            <summary>
            Base constructor for inherited classes and internal purposes
            </summary>
            <param name="className">Class name of the document type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.GetDocumentFieldsInfo(System.Int32,System.String)">
            <summary>
            Returns document fields with specified ID.
            </summary>
            <param name="fieldsId">Document fields ID.</param>        
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.GetDocumentFields(System.String)">
            <summary>
            Returns document fields object query.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.DeleteDocumentFieldsInfo(CMS.DocumentEngine.DocumentFieldsInfo)">
            <summary>
            Deletes specified document fields.
            </summary>
            <param name="fields">Document fields to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.DeleteDocumentFieldsInfo(System.Int32,System.String)">
            <summary>
            Deletes document fields data with specified ID.
            </summary>
            <param name="fieldsId">Document fields data ID.</param>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.SetDocumentFieldsInfo(CMS.DocumentEngine.DocumentFieldsInfo)">
            <summary>
            Sets (updates or inserts) specified document fields.
            </summary>
            <param name="fields">Document fields to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.DeleteDocumentFieldsInfoInternal(CMS.DocumentEngine.DocumentFieldsInfo)">
            <summary>
            Deletes specified document fields.
            </summary>
            <param name="fields">Document fields to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.SetDocumentFieldsInfoInternal(CMS.DocumentEngine.DocumentFieldsInfo)">
            <summary>
            Sets (updates or inserts) specified document fields.
            </summary>
            <param name="fields">Document fields to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.GetDocumentFieldsInfoInternal(System.Int32)">
            <summary>
            Returns document fields with specified ID.
            </summary>
            <param name="fieldsId">Document fields ID.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.GetObjectQueryInternal">
            <summary>
            Gets the object query for the provider
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.GetClassName(System.String)">
            <summary>
            Gets document type class name from given object type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.GetObjectType(System.String)">
            <summary>
            Gets document type object type from given class name.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.IsDocumentFieldsObjectType(System.String)">
            <summary>
            Indicates if given object type represents document type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.GetProviderObject(System.String)">
            <summary>
            Gets provider object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.LoadProviderInternal(System.String)">
            <summary>
            Loads document fields provider for given object type
            </summary>
            <param name="objectType">Document fields object type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.InvalidateProvider(System.String)">
            <summary>
            Invalidates specific provider.
            </summary>
            <param name="objectType">Type of the object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.CreateInfo(System.Data.DataRow,System.Boolean)">
            <summary>
            Gets new document fields instance
            </summary>
            <param name="dr">Data row with the object data</param>
            <param name="useGenerator">If true, the process allows using the generator to differentiate between particular info types based on data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.GetTypeInfo(System.String)">
            <summary>
            Returns the TypeInfo for specified class.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear the class info's and properties lists of all object types.
            </summary>
            <param name="logTask">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.InvalidateTypeInfo(System.String,System.Boolean)">
            <summary>
            Invalidates typeinfo specified by class name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.ValidateClass(System.String)">
            <summary>
            Validates given class name if represents existing document type.
            </summary>
            <param name="className">Class name to validate</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsInfoProvider.CreateTypeInfo(System.String)">
            <summary>
            Creates new typeinfo.
            </summary>        
        </member>
        <member name="P:CMS.DocumentEngine.DocumentFieldsInfoProvider.IsValid">
            <summary>
            Indicates if the provider instance is up-to-date and can be used to manage object instances.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentFieldsInfoProvider.TypeInfos">
            <summary>
            Document fields TypeInfo's [className.ToLowerCSafe()] -> [TypeInfo]
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentFieldsInfoProvider.ClassName">
            <summary>
            Class name
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentFieldsTypeInfo">
            <summary>
            Type info for the document fields
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsTypeInfo.#ctor(System.Type,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="providerType">Provider type</param>
            <param name="objectType">Object type</param>
            <param name="objectClassName">Object class name</param>
            <param name="idColumn">ID column name</param>
            <param name="timeStampColumn">Time stamp column name</param>
            <param name="guidColumn">GUID column name</param>
            <param name="codeNameColumn">Code name column name</param>
            <param name="displayNameColumn">Display name column name</param>
            <param name="binaryColumn">Binary column name</param>
            <param name="siteIDColumn">Site ID column name</param>
            <param name="parentIDColumn">Parent ID column name</param>
            <param name="parentObjectType">Parent object type</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsTypeInfo.GetNiceObjectTypeName">
            <summary>
            Gets the nice object type name for this type
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentFieldsTypeInfo.CopyDocumentFieldsTypeInfoEventsTo(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Copies the event's hooks from current ObjectTypeInfo to specified one.
            </summary>
            <param name="info">Target.</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentDataQuerySource">
            <summary>
            Data query source for documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDataQuerySource.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="lastVersion"></param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDataQuerySource.GetDataSourceName">
            <summary>
            Gets the unique query source ID
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentDataQuerySource.GetData(CMS.DataEngine.DataQuerySourceParameters)">
            <summary>
            Executes the query
            </summary>
            <param name="parameters">Query parameters</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentDataQuerySource.LastVersion">
            <summary>
            Defines if the document source retrieves the last version or not
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentDataQuerySource.ClassNames">
            <summary>
            Class names
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IMultiDocumentQuery`3">
            <summary>
            Multi document query interface for a specific query
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IDocumentQuery`2">
            <summary>
            Document query parameters interface for a specific query
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.IDocumentQuery">
            <summary>
            Document query parameters interface
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.IDocumentQuery.Properties">
            <summary>
            Document query parameters.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.All">
            <summary>
            Ensures that there is no restriction applied for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.Default">
            <summary>
            Ensures default restrictions for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.LatestVersion(System.Boolean)">
            <summary>
            Ensures that latest version of the documents is retrieved.
            </summary>
            <param name="latest">If true, the latest (edited) version is retrieved, otherwise published version is retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.PublishedVersion(System.Boolean)">
            <summary>
            Ensures that latest version of the documents is retrieved.
            </summary>
            <param name="published">If true, published version is retrieved, otherwise latest (edited) version is retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.Published(System.Boolean)">
            <summary>
            Ensures that only documents published on a live site are retrieved.
            </summary>
            <param name="published">If true, only published documents are retrieved, otherwise all documents are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.CheckPermissions(System.Boolean)">
            <summary>
            Ensures that the result will be filtered based on user Read permission.
            </summary>
            <param name="check">If true, the permission check is enabled, otherwise disabled</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.FilterDuplicates(System.Boolean)">
            <summary>
            Ensures that duplicate document are filtered from the result. This means that linked documents are not retrieved, if there is the original document already included in the results.
            </summary>
            <param name="filter">If true, the permission check is enabled, otherwise disabled</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.InCategory(System.String,System.Boolean,System.Boolean)">
            <summary>
            Ensures that only documents assigned to specified category are retrieved (including all categories on path).
            </summary>
            <param name="categoryName">Document category name</param>
            <param name="global">Indicates if global category should be used</param>
            <param name="onlyEnabled">Indicates if only enabled categories should be taken in account</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.InRelationWith(System.Guid,System.String,CMS.DocumentEngine.RelationshipSideEnum)">
            <summary>
            Ensures that only documents in relationship with a specified document are retrieved.
            </summary>
            <param name="nodeGuid">Node GUID of the related document</param>
            <param name="relationshipName">Name of the relationship. If not provided documents from all relationships will be retrieved.</param>
            <param name="side">Side of the related document within the relation</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.NestingLevel(System.Int32)">
            <summary>
            Ensures that only documents within specified nesting level are retrieved.
            </summary>
            <param name="level">Nesting level</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.OnCurrentSite">
            <summary>
            Filters the data to include only records on the current site.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.Path(System.String[])">
            <summary>
            Filters the data to include only documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.Path(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to include only documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define selection scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.ExcludePath(System.String[])">
            <summary>
            Filters the data to exclude documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.ExcludePath(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to exclude documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define excluded scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.Culture(System.String[])">
            <summary>
            Filters the data to include only documents translated to given culture(s).
            </summary>
            <param name="cultures">List of document cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.CombineWithDefaultCulture(System.Boolean)">
            <summary>
            The data will be combined with documents in site default culture if not translated to the requested one. This behavior can be used only when a single culture of documents is requested.
            </summary>
            <param name="combine">If true, documents will be combined with default culture, otherwise only documents translated to requested culture are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.IDocumentQuery`2.AllCultures(System.Boolean)">
            <summary>
            Ensures that all culture versions of the documents are retrieved.
            </summary>
            <param name="all">If true, all culture versions are retrieved, otherwise documents of specified culture(s) are retrieved</param>
        </member>
        <member name="T:CMS.DocumentEngine.IMultiDocumentQuery">
            <summary>
            Multi document query interface
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeProvider">
            <summary>
            Class providing documents management.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.TreeNodeProvider.mTypeInfos">
            <summary>
            Document info TypeInfo [className.ToLowerCSafe()] -> [TypeInfo]
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.#ctor">
            <summary>
            Constructor (Creates uninitialized provider.)
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.#ctor(System.String)">
            <summary>
            Base constructor for inherited classes and internal purposes
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetDocument">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.SetDocument(CMS.DocumentEngine.TreeNode)">
            <summary>
            Sets specified document.
            </summary>
            <param name="document">Document to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.DeleteDocument(CMS.DocumentEngine.TreeNode)">
            <summary>
            Deletes specified document.
            </summary>
            <param name="document">Document to delete</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetDocuments(System.String)">
            <summary>
            Gets the query for all documents
            </summary>
            <param name="className">Class name representing document type</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetDocuments``1">
            <summary>
            Gets the query for all documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetDocuments">
            <summary>
            Gets the query for all documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetDocumentQuery(System.String)">
            <summary>
            Gets the document query of specific type for the provider
            </summary>
            <param name="className">Class name representing document type</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetDocumentQuery``1">
            <summary>
            Gets the document query of specific type for the provider
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetDocumentQuery">
            <summary>
            Gets the object query for the provider
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.SetDocumentInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Sets specified document.
            </summary>
            <param name="document">Document to set</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.DeleteDocumentInternal(CMS.DocumentEngine.TreeNode)">
            <summary>
            Deletes specified document.
            </summary>
            <param name="document">Document to delete</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetClassName(System.String)">
            <summary>
            Gets document class name from given object type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetObjectType(System.String)">
            <summary>
            Gets document object type from given class name.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.IsDocumentObjectType(System.String)">
            <summary>
            Indicates if given object type represents document.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetProviderObject(System.String)">
            <summary>
            Gets provider object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.LoadProviderInternal(System.String)">
            <summary>
            Loads document info provider for given object type
            </summary>
            <param name="objectType">Document object type</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.InvalidateProvider(System.String)">
            <summary>
            Invalidates specific provider.
            </summary>
            <param name="objectType">Type of the object</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.CreateInfo(System.Data.DataRow,System.Boolean)">
            <summary>
            Creates new document info instance
            </summary>
            <param name="dr">DataRow with the object data</param>
            <param name="useGenerator">If true, the process allows using the generator to differentiate between particular info types based on data</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.GetTypeInfo(System.String)">
            <summary>
            Returns the TypeInfo for specified class.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.Clear(System.Boolean)">
            <summary>
            Clear the class info and properties lists of all object types.
            </summary>
            <param name="logTask">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.InvalidateTypeInfo(System.String,System.Boolean)">
            <summary>
            Invalidates typeinfo specified by class name.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.ValidateClass(System.String)">
            <summary>
            Validates given class name if represents existing document type.
            </summary>
            <param name="className">Class name to validate</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeProvider.CreateTypeInfo(System.String)">
            <summary>
            Creates new typeinfo.
            </summary>        
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeProvider.IsValid">
            <summary>
            Indicates if the provider instance is up-to-date and can be used to manage object instances.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeProvider.TypeInfos">
            <summary>
            Document TypeInfo [className.ToLowerCSafe()] -> [TypeInfo]
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.TreeNodeProvider.ClassName">
            <summary>
            Class name
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentNodeDataInfo">
            <summary>
            Class representing document tree structure data container.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentNodeDataInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentNodeDataInfo.OBJECT_TYPE_GROUP">
            <summary>
            Object type for group
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentNodeDataInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentNodeDataInfo.TYPEINFOGROUP">
            <summary>
            Type information (Not complete - some information is missing).
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentNodeDataInfo.mNodeCustomData">
            <summary>
            Node custom data.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentNodeDataInfo.mSynchronizedLinkColumns">
            <summary>
            List of synchronized link columns in CMS_Tree
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentNodeDataInfo object.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.InitFromDataRow(System.Data.DataRow)">
            <summary>
            Initializes the data from the DataRow, can be called only after calling the empty constructor.
            </summary>
            <param name="dr">DataRow</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.InitFromDataContainer(CMS.Base.IDataContainer)">
            <summary>
            Initializes the data from the Data container, can be called only after calling the empty constructor.
            </summary>
            <param name="dc">Data container with the data</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.Insert">
            <summary>
            Data need to be inserted with parent specified. Use Insert(DocumentNodeDataInfo parent) instead.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.Insert(CMS.DocumentEngine.DocumentNodeDataInfo)">
            <summary>
            Inserts node data
            </summary>
            <param name="parent">Parent node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.Update">
            <summary>
            Updates node data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.SetObject">
            <summary>
            Sets node data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.Delete">
            <summary>
            Deletes node data
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.RemoveObjectDependencies(System.Boolean,System.Boolean)">
            <summary>
            Removes object dependencies. First tries to execute removedependencies query, if not found, automatic process is executed.
            </summary>
            <param name="deleteAll">If false, only required dependencies are deleted, dependencies with default value are replaced with default value and nullable values are replaced with null</param>
            <param name="clearHashtables">If true, hashtables of all objecttypes which were potentially modified are cleared</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.GetIconUrl(System.Web.UI.Page,System.String)">
            <summary>
            Gets the object icon URL
            </summary>
            <param name="page">Page for which the image is requested</param>
            <param name="iconSet">Requested icon set</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.EnsureChildrenFlag(CMS.DocumentEngine.DocumentNodeDataInfo)">
            <summary>
            Sets NodeHasChildren flag to true, if hasn't been set already
            </summary>
            <param name="parent">Parent node</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.UpdateChildrenFlag(System.Int32)">
            <summary>
            Updates NodeHasChildren flag only if there is no child node.
            </summary>
            <param name="parentId">Parent ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.UpdateLinks">
            <summary>
            Updates the data in the linked documents
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.EnsureLinksFlag(System.Int32)">
            <summary>
            Sets NodeHasLinks flag to true, if hasn't been set already
            </summary>
            <param name="originalNodeId">Original node ID</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfo.UpdateLinksFlag(System.Int32)">
            <summary>
            Updates NodeHasLinks flag only if there is no links.
            </summary>
            <param name="originalNodeId">Original node ID</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeDocType">
            <summary>
            Node HTML DOCTYPE.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeHeadTags">
            <summary>
            Node custom HTML header tags.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeBodyElementAttributes">
            <summary>
            Node HTML body element attributes - custom attributes of html body tag.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.IsSecuredNode">
            <summary>
            Indicates if the security should be checked for this node. The 'null' value means that the value is inherited from the parent node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.RequiresSSL">
            <summary>
            Indicates if this node requires SSL protocol. The 'null' value means that the value is inherited from the parent node.
            0 - Do not require SSL protocol
            1 - Require SSL protocol
            2 - Never require SSL protocol
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeAllowCacheInFileSystem">
            <summary>
            Identifies whether the document allows output caching in the file system. The 'null' value means that the value is inherited from the parent node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeName">
            <summary>
            Node name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeAlias">
            <summary>
            Node alias.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeAliasPath">
            <summary>
            Node alias path.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeGUID">
            <summary>
            Node GUID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeHasChildren">
            <summary>
            Indicates if node has children.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeHasLinks">
            <summary>
            Indicates if node has links.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeID">
            <summary>
            Node ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeParentID">
            <summary>
            Node parent ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeCacheMinutes">
            <summary>
            Indicates how long should node stay in cache (in minutes). The 'null' means that the value is inherited from parent node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeLevel">
            <summary>
            Node level in the tree hierarchy (starting from 0 for root node).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeSiteID">
            <summary>
            Node site ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeOrder">
            <summary>
            Node order in sibling sequence (same level).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeOwner">
            <summary>
            User ID representing the node owner.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeSKUID">
            <summary>
            E-commerce SKU (product) ID.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeInheritPageLevels">
            <summary>
            Specifies from which level(s) should the document inherit the content.
            Empty string represents inheritance from all levels in the hierarchy
            "/" means that no content is inherited.
            "\" means that only content from master document is inherited.
            "/{0}/{2}" means that content from first and third level is inherited.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeTemplateID">
            <summary>
            Node page template ID - used for all culture versions if NodeTemplateForAllCultures property is true
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeTemplateForAllCultures">
            <summary>
            If true, the document uses the same template (NodeTemplateID) for all culture versions
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeInheritPageTemplate">
            <summary>
            If true, the document inherits the template from parent.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeWireframeTemplateID">
            <summary>
            Node wireframe template ID - Special template used for wireframing (always is an ad-hoc template).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeWireframeInheritPageLevels">
            <summary>
            Specifies from which level(s) should the document wireframe inherit the content.
            Empty string represents inheritance from all levels in the hierarchy
            "/" means that no content is inherited.
            "\" means that only content from master page is inherited.
            "/{0}/{2}" means that content from first and third level is inherited.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeWireframeComment">
            <summary>
            Wireframe comment to provide additional information.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeGroupID">
            <summary>
            ID of a community group which owns the node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeClassID">
            <summary>
            ID of a document type of this document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeACLID">
            <summary>
            ID of a access controller list assigned to the node.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeLinkedNodeID">
            <summary>
            ID of a document to which this linked document is related.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeLinkedNodeSiteID">
            <summary>
            Site ID of a document to which this linked document is related.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeCustomData">
            <summary>
            Node custom data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeSiteName">
            <summary>
            Node site name.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.NodeClassName">
            <summary>
            Node class name in format application.class.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.HasSKU">
            <summary>
            Indicates whether the document contains SKU data.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.IsLink">
            <summary>
            Indicates whether the document is link to another document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.OriginalNodeID">
            <summary>
            Original node ID. Returns NodeID for standard document, LinkedNodeID for linked document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.OriginalNodeSiteID">
            <summary>
            Original node site ID. Returns NodeSiteID for standard document, LinkedNodeSiteID for linked document.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentNodeDataInfo.SynchronizedLinkColumns">
            <summary>
            List of columns in CMS_Tree table automatically synchronized between linked documents
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentNodeDataInfoProvider">
            <summary>
            Class providing document tree nodes management.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfoProvider.GetDocumentNodes">
            <summary>
            Returns document nodes object query.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfoProvider.GetDocumentNodeDataInfo(System.Int32)">
            <summary>
            Returns document node with specified ID.
            </summary>
            <param name="nodeId">Document node ID.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfoProvider.SetDocumentNodeDataInfo(CMS.DocumentEngine.DocumentNodeDataInfo)">
            <summary>
            Sets (updates or inserts) specified document node.
            </summary>
            <param name="node">Document node to be set.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfoProvider.DeleteDocumentNodeDataInfo(CMS.DocumentEngine.DocumentNodeDataInfo)">
            <summary>
            Deletes specified document node.
            </summary>
            <param name="node">Document node to be deleted.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfoProvider.DeleteDocumentNodeDataInfo(System.Int32)">
            <summary>
            Deletes document node with specified ID.
            </summary>
            <param name="nodeId">Document node ID.</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfoProvider.UpdateData(System.String,System.String,CMS.DataEngine.QueryDataParameters)">
            <summary>
            Updates data for all records given by where condition
            </summary>
            <param name="updateExpression">Update expression, e.g. "Value = Value * 2"</param>
            <param name="where">Where condition</param>
            <param name="parameters">Parameters</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfoProvider.GetDocumentNodeDataInfoInternal(System.Int32)">
            <summary>
            Returns document node with specified ID.
            </summary>
            <param name="nodeId">Document node ID.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfoProvider.SetDocumentNodeDataInfoInternal(CMS.DocumentEngine.DocumentNodeDataInfo)">
            <summary>
            Sets (updates or inserts) specified document node.
            </summary>
            <param name="node">Document node to be set.</param>        
        </member>
        <member name="M:CMS.DocumentEngine.DocumentNodeDataInfoProvider.DeleteDocumentNodeDataInfoInternal(CMS.DocumentEngine.DocumentNodeDataInfo)">
            <summary>
            Deletes specified document node.
            </summary>
            <param name="node">Document node to be deleted.</param>        
        </member>
        <member name="T:CMS.DocumentEngine.TreeNodeTypeInfo">
            <summary>
            Type info for the tree node
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeInfo.#ctor(System.Type,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="providerType">Provider type</param>
            <param name="objectType">Object type</param>
            <param name="objectClassName">Object class name</param>
            <param name="idColumn">ID column name</param>
            <param name="timeStampColumn">Time stamp column name</param>
            <param name="guidColumn">GUID column name</param>
            <param name="codeNameColumn">Code name column name</param>
            <param name="displayNameColumn">Display name column name</param>
            <param name="binaryColumn">Binary column name</param>
            <param name="siteIDColumn">Site ID column name</param>
            <param name="parentIDColumn">Parent ID column name</param>
            <param name="parentObjectType">Parent object type</param>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeInfo.GetNiceObjectTypeName">
            <summary>
            Gets the nice object type name for this type
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.TreeNodeTypeInfo.CopyTreeNodeTypeInfoEventsTo(CMS.DataEngine.ObjectTypeInfo)">
            <summary>
            Copies the event's hooks from current ObjectTypeInfo to specified one.
            </summary>
            <param name="info">Target.</param>
        </member>
        <member name="T:CMS.DocumentEngine.MultiDocumentQuery">
            <summary>
            Multiple documents query
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.MultiDocumentQueryBase`3">
            <summary>
            Base class for multiple documents query.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.MultiDocumentQueryBase`3.mDocument">
            <summary>
            Document instance of specified type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.MultiDocumentQueryBase`3.mProperties">
            <summary>
            Document query properties
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetTypedResult">
            <summary>
            Gets typed result
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.ResolveType(System.String)">
            <summary>
            Resolves the given type into corresponding types
            </summary>
            <param name="type">Source type</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.ApplyProperties(`1)">
            <summary>
            Applies main query properties to the given query to ensure synchronized state before execution
            </summary>
            <param name="query">Query to prepare</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetTypesWhereCondition(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns the where condition which filters the default query data for specific types
            </summary>
            <param name="types">List of types for which create the where condition</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.CreateQuery(System.String)">
            <summary>
            Creates query for the given type
            </summary>
            <param name="type">Query type</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetResults(CMS.DataEngine.IDataQuery,System.Int32@)">
            <summary>
            Gets query results
            </summary>
            <param name="query">Query to execute</param>
            <param name="totalRecords">Returns the total records number</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetSingleQuery(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Attempts to get a single query for the whole result based on the current state of the query object
            </summary>
            <param name="settings">Parameters for the query</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetMultiQuery(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Attempts to get a single query for the whole result based on the current state of the query object
            </summary>
            <param name="settings">Parameters for the query</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.CheckReturnsNoResults">
            <summary>
            Checks if where condition results in no data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetAvailableColumns">
            <summary>
            Gets the list of all available columns for this query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetIDColumn">
            <summary>
            Gets the ID column for this query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.SetClassName(System.String)">
            <summary>
            Sets class name for current query
            </summary>
            <param name="value">New class name value</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.CopyPropertiesTo(CMS.DataEngine.IQueryObject)">
            <summary>
            Copies the properties to the target query.
            </summary>
            <param name="target">Target query</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.GetDefaultOrderBy">
            <summary>
            Gets the default order by columns
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.All">
            <summary>
            Ensures that there is no restriction applied for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.Default">
            <summary>
            Ensures default restrictions for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.LatestVersion(System.Boolean)">
            <summary>
            Ensures that latest version of the documents is retrieved.
            </summary>
            <param name="latest">If true, the latest (edited) version is retrieved, otherwise published version is retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.PublishedVersion(System.Boolean)">
            <summary>
            Ensures that latest version of the documents is retrieved.
            </summary>
            <param name="published">If true, published version is retrieved, otherwise latest (edited) version is retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.Published(System.Boolean)">
            <summary>
            Ensures that only documents published on a live site are retrieved.
            </summary>
            <param name="published">If true, only published documents are retrieved, otherwise all documents are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.CheckPermissions(System.Boolean)">
            <summary>
            Ensures that the result will be filtered based on user Read permission.
            </summary>
            <param name="check">If true, the permission check is enabled, otherwise disabled</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.FilterDuplicates(System.Boolean)">
            <summary>
            Ensures that duplicate document are filtered from the result. This means that linked documents are not retrieved, if there is the original document already included in the results.
            </summary>
            <param name="filter">If true, the permission check is enabled, otherwise disabled</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.WithCoupledColumns(System.Boolean)">
            <summary>
            Ensures that coupled columns will be included in the results.
            </summary>
            <param name="include">Indicates if coupled columns should be included</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.OnlyCoupledColumns">
            <summary>
            Ensures that only coupled columns will be included in the results.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.InRelationWith(System.Guid,System.String,CMS.DocumentEngine.RelationshipSideEnum)">
            <summary>
            Ensures that only documents in relationship with a specified document are retrieved.
            </summary>
            <param name="nodeGuid">Node GUID of the related document</param>
            <param name="relationshipName">Name of the relationship. If not provided documents from all relationships will be retrieved.</param>
            <param name="side">Side of the related document within the relation</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.InCategory(System.String,System.Boolean,System.Boolean)">
            <summary>
            Ensures that only documents assigned to specified category are retrieved (including all categories on path).
            </summary>
            <param name="categoryName">Document category name</param>
            <param name="global">Indicates if global category should be used</param>
            <param name="onlyEnabled">Indicates if only enabled categories should be taken in account</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.NestingLevel(System.Int32)">
            <summary>
            Ensures that only documents within specified nesting level are retrieved.
            </summary>
            <param name="level">Nesting level</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.Path(System.String[])">
            <summary>
            Filters the data to include only documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.Path(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to include only documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define selection scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.ExcludePath(System.String[])">
            <summary>
            Filters the data to exclude documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.ExcludePath(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to exclude documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define excluded scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.Culture(System.String[])">
            <summary>
            Filters the data to include only documents translated to given culture(s).
            </summary>
            <param name="cultures">List of document cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.CombineWithDefaultCulture(System.Boolean)">
            <summary>
            The data will be combined with documents in site default culture if not translated to the requested one(s). When several cultures are required, the order is taken in account as a priority for documents with several matching language versions.
            </summary>
            <param name="combine">If true, documents will be combined with default culture, otherwise only documents translated to one of the requested culture(s) are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.CombineWithAnyCulture(System.Boolean)">
            <summary>
            The data will be combined with documents in any culture if not translated to the requested one(s). When several cultures are required, the order is taken in account as a priority for documents with several matching language versions followed by any other language version.
            If no culture specified, the highest priority has site preferred culture, second the default culture followed by the rest of site cultures.
            </summary>
            <param name="combine">If true, documents will be combined with any other culture(s), otherwise only documents translated to one of the requested culture(s) are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.AllCultures(System.Boolean)">
            <summary>
            Ensures that all culture versions of the documents are retrieved.
            </summary>
            <param name="all">If true, all culture versions are retrieved, otherwise documents of specified culture(s) are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.OnSite(CMS.DataEngine.SiteInfoIdentifier,System.Boolean)">
            <summary>
            Filters the documents to include only records on the given site.
            </summary>
            <param name="siteIdentifier">Site identifier</param>
            <param name="includeGlobal">If true, includes the global objects in case the object type covers both site and global objects</param>
        </member>
        <member name="M:CMS.DocumentEngine.MultiDocumentQueryBase`3.OnCurrentSite">
            <summary>
            Filters the data to include only records on the current site.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MultiDocumentQueryBase`3.Document">
            <summary>
            Generic document instance.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.MultiDocumentQueryBase`3.Properties">
            <summary>
            Document query properties.
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentQuery`1">
            <summary>
            Queries particular database data or defines parameters for data selection
            </summary>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentQueryBase`2">
            <summary>
            Predefined query returning given document type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentQueryBase`2.mDocument">
            <summary>
            Document instance of specified type.
            </summary>
        </member>
        <member name="F:CMS.DocumentEngine.DocumentQueryBase`2.mProperties">
            <summary>
            Document query properties
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.TypeUpdated">
            <summary>
            Updates the query class name based on the current status
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetTypedResult">
            <summary>
            Gets typed result
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetAvailableColumns">
            <summary>
            Gets the list of all available columns for this query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetCompleteSettings(CMS.DataEngine.IDataQuery)">
            <summary>
            Gets the complete parameters for the query execution. The parameters are always a new instance of DataQuerySettings which can be further modified without any impact to the query itself.
            </summary>
            <param name="executingQuery">Executing query for which the parameters are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.CopyPropertiesTo(CMS.DataEngine.IQueryObject)">
            <summary>
            Copies the properties to the target query.
            </summary>
            <param name="target">Target query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetResults(CMS.DataEngine.IDataQuery,System.Int32@)">
            <summary>
            Gets query results
            </summary>
            <param name="query">Query to execute</param>
            <param name="totalRecords">Returns the total records number</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetExecutingQuery(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Gets the query to execute against database
            </summary>
            <param name="settings">Parameters for the query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.CheckReturnsNoResults">
            <summary>
            Checks if where condition results in no data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.GetData">
            <summary>
            Gets data set returned by document query or custom data set. Data set can be modified by calling DocumentEvents.GetData event.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.All">
            <summary>
            Ensures that there is no restriction applied for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.Default">
            <summary>
            Ensures default restrictions for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.LatestVersion(System.Boolean)">
            <summary>
            Ensures that latest version of the documents is retrieved.
            </summary>
            <param name="latest">If true, the latest (edited) version is retrieved, otherwise published version is retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.PublishedVersion(System.Boolean)">
            <summary>
            Ensures that latest version of the documents is retrieved.
            </summary>
            <param name="published">If true, published version is retrieved, otherwise latest (edited) version is retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.Published(System.Boolean)">
            <summary>
            Ensures that only documents published on a live site are retrieved.
            </summary>
            <param name="published">If true, only published documents are retrieved, otherwise all documents are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.CheckPermissions(System.Boolean)">
            <summary>
            Ensures that the result will be filtered based on user Read permission.
            </summary>
            <param name="check">If true, the permission check is enabled, otherwise disabled</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.FilterDuplicates(System.Boolean)">
            <summary>
            Ensures that duplicate document are filtered from the result. This means that linked documents are not retrieved, if there is the original document already included in the results.
            </summary>
            <param name="filter">If true, the permission check is enabled, otherwise disabled</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.InCategory(System.String,System.Boolean,System.Boolean)">
            <summary>
            Ensures that only documents assigned to specified category are retrieved (including all categories on path).
            </summary>
            <param name="categoryName">Document category name</param>
            <param name="global">Indicates if global category should be used</param>
            <param name="onlyEnabled">Indicates if only enabled categories should be taken in account</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.InRelationWith(System.Guid,System.String,CMS.DocumentEngine.RelationshipSideEnum)">
            <summary>
            Ensures that only documents in relationship with a specified document are retrieved.
            </summary>
            <param name="nodeGuid">Node GUID of the related document</param>
            <param name="relationshipName">Name of the relationship. If not provided documents from all relationships will be retrieved.</param>
            <param name="side">Side of the related document within the relation</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.NestingLevel(System.Int32)">
            <summary>
            Ensures that only documents within specified nesting level are retrieved.
            </summary>
            <param name="level">Nesting level</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.OnSite(CMS.DataEngine.SiteInfoIdentifier,System.Boolean)">
            <summary>
            Filters the data to include only records on the given site. If site binding is defined, filters the global objects by the site ID
            </summary>
            <param name="siteIdentifier">Site identifier</param>
            <param name="includeGlobal">If true, includes the global objects in case the object type covers both site and global objects</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.OnCurrentSite">
            <summary>
            Filters the data to include only records on the current site.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.Path(System.String[])">
            <summary>
            Filters the data to include only documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.Path(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to include only documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define selection scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.ExcludePath(System.String[])">
            <summary>
            Filters the data to exclude documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.ExcludePath(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to exclude documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define excluded scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.Culture(System.String[])">
            <summary>
            Filters the data to include only documents translated to given culture(s).
            </summary>
            <param name="cultures">List of document cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.CombineWithDefaultCulture(System.Boolean)">
            <summary>
            The data will be combined with documents in site default culture if not translated to the requested one(s). When several cultures are required, the order is taken in account as a priority for documents with several matching language versions.
            </summary>
            <param name="combine">If true, documents will be combined with default culture, otherwise only documents translated to one of the requested culture(s) are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.CombineWithAnyCulture(System.Boolean)">
            <summary>
            The data will be combined with documents in any culture if not translated to the requested one(s). When several cultures are required, the order is taken in account as a priority for documents with several matching language versions followed by any other language version.
            If no culture specified, the highest priority has site preferred culture, second the default culture followed by the rest of site cultures.
            </summary>
            <param name="combine">If true, documents will be combined with any other culture(s), otherwise only documents translated to one of the requested culture(s) are retrieved</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryBase`2.AllCultures(System.Boolean)">
            <summary>
            Ensures that all culture versions of the documents are retrieved.
            </summary>
            <param name="all">If true, all culture versions are retrieved, otherwise documents of specified culture(s) are retrieved</param>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryBase`2.FullQueryName">
            <summary>
            Represents a full query name of the query
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryBase`2.Document">
            <summary>
            Document instance of the specified type.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryBase`2.Properties">
            <summary>
            Document query properties.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuery`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuery`1.op_Explicit(CMS.DocumentEngine.DocumentQuery{`0})~CMS.DataEngine.InfoDataSet{`0}">
            <summary>
            Implicit operator for conversion from typed DocumentQuery class to typed InfoDataSet
            </summary>
            <param name="query">Query object</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuery`1.op_Implicit(CMS.DocumentEngine.DocumentQuery{`0})~`0">
            <summary>
            Implicit operator for conversion from typed DocumentQuery class to typed InfoDataSet
            </summary>
            <param name="query">Query object</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentQuery">
            <summary>
            Predefined query returning given object type. Uses the .selectdocuments query internally.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuery.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuery.#ctor(CMS.DocumentEngine.TreeNode)">
            <summary>
            Constructor
            </summary>
            <param name="document">Document</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQuery.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="T:CMS.DocumentEngine.DocumentQueryProperties">
            <summary>
            Document specific properties for document queries
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="isMultiQuery">If true, the properties are created within the multi-query instance</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.Path(System.String[])">
            <summary>
            Filters the data to include only documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.Path(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to include only documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define selection scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ExcludePath(System.String[])">
            <summary>
            Filters the data to exclude documents on given path(s).
            </summary>
            <param name="paths">List of document paths</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ExcludePath(System.String,CMS.DocumentEngine.PathTypeEnum)">
            <summary>
            Filters the data to exclude documents on given path.
            </summary>
            <param name="path">Document path</param>
            <param name="type">Path type to define excluded scope</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetAllowedPathWhereCondition">
            <summary>
            Gets where condition based on allowed paths
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetExcludedPathWhereCondition">
            <summary>
            Gets where condition based on excluded paths
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.Culture(System.String[])">
            <summary>
            Filters the data to include only documents translated to given culture(s).
            </summary>
            <param name="cultures">List of document cultures</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetCultureWhereCondition">
            <summary>
            Gets where condition based on list of requested cultures
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.AddCulturePriorityColumn(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Adds culture priority column to data query settings to get the most relevant document culture version
            </summary>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.AddDuplicatesPriorityColumn(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Adds duplicates priority column to data query settings to get only original documents
            </summary>
            <param name="settings">Settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetCultureList">
            <summary>
            Gets list of used cultures in query
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.OnSite(System.Int32[])">
            <summary>
            Filters the data to include documents only on the given site(s).
            </summary>
            <param name="siteIds">Site ID(s)</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetNodeDataWhereCondition">
            <summary>
            Gets where condition for all restrictions based on tree node data
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetNestingLevelWhereCondition">
            <summary>
            Gets where condition to retrieve only documents in specified nesting level (The first specified path is taken as the referring one.)
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetPublishedWhereCondition">
            <summary>
            Gets where condition to retrieve only published documents based on settings
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetCategoryWhereCondition">
            <summary>
            Gets where condition to retrieve only documents assigned to specified category
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetFilterDuplicatesWhereCondition">
            <summary>
            Gets where condition to retrieve documents only once. 
            This means that linked documents are not retrieved if there is the original document in the results.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetRelationshipWhereCondition">
            <summary>
            Gets where condition to retrieve only documents in relationship defined by the properties.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetClassesWhereCondition(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets where condition based on multi-query settings and list of document types
            </summary>
            <param name="types">List of document types</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.All">
            <summary>
            Ensures that there is no restriction applied for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.Default">
            <summary>
            Ensures default state of settings for the result.
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ApplyToSettings(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Applies these properties to the given data query settings
            </summary>
            <param name="settings">Query settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.EnsureWhereCondition(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Ensures where condition based on query properties
            </summary>
            <param name="settings">Query settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetResults(CMS.DataEngine.IDataQuery,System.Boolean,System.Int32@)">
            <summary>
            Gets query modified results. Returns null if there is no modification needed.
            </summary>
            <param name="query">Query to execute</param>
            <param name="coupledData">Indicates if coupled data are included in the results</param>
            <param name="totalRecords">Returns the total records number</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.FilterResultsByPermissions(CMS.DataEngine.IDataQuery,System.Int32@)">
            <summary>
            Filters query results by permissions based on settings
            </summary>
            <param name="query">Query to execute</param>
            <returns>Returns DataSet with results</returns>
            <param name="totalRecords">Returns the total records number</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.CheckReturnsNoResults">
            <summary>
            Checks if query should return no results
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ApplyVersionData(System.Data.DataSet,System.Boolean)">
            <summary>
            Applies versioned data
            </summary>
            <param name="data">source data</param>
            <param name="coupledData">Indicates if coupled data are included in the results</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.CloneForPermissionFiltering(CMS.DataEngine.IDataQuery)">
            <summary>
            Gets clone of the original query for results
            </summary>
            <param name="query">Original query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.EnsureColumns(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Ensures required columns based on query properties
            </summary>
            <param name="settings">Data query settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.AddColumns(CMS.DataEngine.DataQuerySettings)">
            <summary>
            Gets list of required columns based on query properties separated by comma
            </summary>
            <param name="settings">Data query settings</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetSingleQuery(CMS.DataEngine.IDataQuery)">
            <summary>
            Gets modified single query to execute
            </summary>
            <param name="q">Original query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetMultiQuery(CMS.DataEngine.IDataQuery)">
            <summary>
            Gets modified multi query to execute
            </summary>
            <param name="q">Original query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetOuterSettings(CMS.DataEngine.IDataQuery)">
            <summary>
            Gets outer settings for data query based on properties
            </summary>
            <param name="q">Original query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.NewOuterSettings(CMS.DataEngine.IDataQuery)">
            <summary>
            Creates new outer settings for data query
            </summary>
            <param name="q">Original query</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.ApplyProperties(CMS.DocumentEngine.DocumentQueryProperties)">
            <summary>
            Applies properties to given instance.
            </summary>
            <param name="p">Properties to copy the settings to</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.Clone">
            <summary>
            Clones object
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetCategoryInternal(System.String)">
            <summary>
            Gets category based on settings
            </summary>
            <param name="name">Category name</param>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetCombineWithDefaultCultureInternal">
            <summary>
            Gets default value for combine with default culture
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetPreferredCultureInternal">
            <summary>
            Gets default value for preferred culture
            </summary>
        </member>
        <member name="M:CMS.DocumentEngine.DocumentQueryProperties.GetDefaultCultureCodeInternal">
            <summary>
            Gets default value for default culture
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.FilterDuplicates">
            <summary>
            Indicates if duplicate document are filtered from the result. This means that linked documents are not retrieved, if there is the original document already included in the results.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.RelationshipNodeGUID">
            <summary>
            Defines node GUID of the related document. Only document in relation with this document will be included in the results.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.CategoryName">
            <summary>
            Defines name of the category to filter the result. Documents assigned to any category within the category path are included in the results.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.CategoryIsGlobal">
            <summary>
            Indicates if only documents assigned to enabled categories (default is true) should be included in the results.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.CategoryOnlyEnabled">
            <summary>
            Indicates if only documents assigned to enabled categories (default is true) should be included in the results.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.RelationshipName">
            <summary>
            Defines name of the relationship. If not provided documents from all relationships will be retrieved.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.RelationshipSide">
            <summary>
            Defines side of the related document within the relation. Both sides are used by default.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.NestingLevel">
            <summary>
            Limits documents to a specified nesting level. (Applies only when one node alias path for multiple documents is provided.)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.SelectOnlyPublished">
            <summary>
            If true, only published documents are retrieved.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.EnsureExtraColumns">
            <summary>
            If true, automatic extra columns are ensured for the query (NodeXML for version data, security check required columns etc.).
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.IsLastVersion">
            <summary>
            If true, the last version of the documents is retrieved.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.CheckPermissions">
            <summary>
            Indicates if the documents should be filtered based on current user permissions.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.CombineWithDefaultCulture">
            <summary>
            Indicates if the documents should be combined with the default language version if the specific one doesn't exist.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.CombineWithAnyCulture">
            <summary>
            Indicates if the documents should be combined with any language version if the specific one doesn't exist.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.AllCultures">
            <summary>
            Indicates if all culture versions of the documents should be returned in the result.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.IsMultiQuery">
            <summary>
            Indicates if properties are used for a multi-query.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.Cultures">
            <summary>
            List of document cultures which should be included in the result.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.Paths">
            <summary>
            List of document paths which should be included in the result.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.SiteIDs">
            <summary>
            List of site IDs on which should be the documents searched.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.SiteName">
            <summary>
            Provides site name for the current query (If there is only single site specified.)
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.DefaultCultureCode">
            <summary>
            Provides default culture code for the current query
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.PreferredCultureCode">
            <summary>
            Preferred culture code to use when none set.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.ExcludedPaths">
            <summary>
            List of document paths which should be excluded from the result.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.TreeProvider">
            <summary>
            Instance of tree provider to use to parameterize documents retrieving.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.Category">
            <summary>
            Instance of category if specified.
            </summary>
        </member>
        <member name="P:CMS.DocumentEngine.DocumentQueryProperties.CultureList">
            <summary>
            List of cultures to use in query
            </summary>
        </member>
    </members>
</doc>
