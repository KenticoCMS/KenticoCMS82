<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.ApplicationDashboard</name>
    </assembly>
    <members>
        <member name="T:CMS.ApplicationDashboard.TileController">
            <summary>
            Handles obtaining of tile data from the server.
            </summary>
            <remarks>
            Only authorized users (editors) are allowed to obtain live tile data.
            Exceptions thrown on execution are automatically handled.
            </remarks>
            <exclude />
        </member>
        <member name="M:CMS.ApplicationDashboard.TileController.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.TileController.Get">
            <summary>
            Gets collection of applications specific for the user.
            </summary>
            <returns>User specified list of application</returns>
        </member>
        <member name="M:CMS.ApplicationDashboard.TileController.Get(System.Guid)">
            <summary>
            Gets the tile for given Guid.
            </summary>
            <param name="guid">Guid of the tile</param>
            <returns>Tile with the guid</returns>
        </member>
        <member name="M:CMS.ApplicationDashboard.TileController.Post(System.Collections.Generic.List{System.Guid})">
            <summary>
            Saves given application list for the current user.
            </summary>
            <remarks>
            Order of the application within the list determines order of the loaded tiles.
            </remarks>
            <param name="applicationGuids">List of applications</param>
        </member>
        <member name="M:CMS.ApplicationDashboard.TileController.CreateTileModel(CMS.Modules.UIElementInfo)">
            <summary>
            Creates new tile for the given UI element.
            </summary>
            <param name="uiElement">UI element the tile should be created for</param>
            <returns>Tile created for the given UI element</returns>
        </member>
        <member name="M:CMS.ApplicationDashboard.TileController.CreateTileIconModel(CMS.Modules.UIElementInfo)">
            <summary>
            Creates new icon model for tile from the given UI element.
            </summary>
            <param name="uiElement">UI element the tile icon is created for</param>
            <returns>Tile icon created for the given UI element</returns>
        </member>
        <member name="T:CMS.ApplicationDashboard.LiveTileController">
            <summary>
            Handles obtaining of live tile data from the server.
            </summary>
            <remarks>
            Only authorized users (editors) are allowed to obtain live tile data.
            Exceptions thrown on execution are automatically handled.
            </remarks>
            <exclude />
        </member>
        <member name="M:CMS.ApplicationDashboard.LiveTileController.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.LiveTileController.Get(System.Guid)">
            <summary>
            Gets live tile data for given Guid. Returns status code 204 No Content if live tile model for this application cannot be found.
            </summary>
            <param name="guid">Application Guid</param>
            <returns>HttpResponseMessage carrying application live tile model wrapper. It contains model itself in Data attribute. HasData attribute is set to true, if model is available.</returns>
        </member>
        <member name="T:CMS.ApplicationDashboard.WelcomeTileController">
            <summary>
            Handles obtaining of the welcome tile data from the server.
            </summary>
            <remarks>
            Only authorized users (editors) are allowed to obtain live tile data.
            Exceptions thrown on execution are automatically handled.
            </remarks>
            <exclude />
        </member>
        <member name="M:CMS.ApplicationDashboard.WelcomeTileController.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.WelcomeTileController.Get">
            <summary>
            Gets the welcome tile.
            </summary>
            <returns>Welcome tile</returns>
        </member>
        <member name="M:CMS.ApplicationDashboard.WelcomeTileController.Post(System.Boolean)">
            <summary>
            Saves whether the welcome tile should be visible for the current user or not.
            </summary>
            <param name="visible">Visibility of the welcome tile</param>
        </member>
        <member name="T:CMS.ApplicationDashboard.Filters.HandleExceptionsAttribute">
            <summary>
            Handles exceptions thrown when processing controller's actions.
            </summary>
            <remarks>
            All handled exceptions are logged to the Event log.
            </remarks>
        </member>
        <member name="T:CMS.ApplicationDashboard.Filters.AllowOnlyEditorAttribute">
            <summary>
            Restricts access to controller only for the editors.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Filters.AllowOnlyEditorAttribute.IsAuthorized">
            <summary>
            Checks whether the current user has editor privileges for current site.
            </summary>
            <returns>True, if user is authorized; otherwise, false</returns>
        </member>
        <member name="T:CMS.ApplicationDashboard.Logic.IDefaultApplicationsLoader">
            <summary>
            Loads default applications list for the user and the site.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.IDefaultApplicationsLoader.GetDefaultApplications(CMS.Membership.UserInfo,CMS.SiteProvider.SiteInfo)">
            <summary>
            Gets default application lists for the given user and site. 
            </summary>
        </member>
        <member name="T:CMS.ApplicationDashboard.Logic.UserRolesDefaultApplicationsLoader">
            <summary>
            Loads default applications list for the user and the site.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.UserRolesDefaultApplicationsLoader.#ctor(CMS.ApplicationDashboard.Logic.IApplicationProvider)">
            <summary>
            Constructor.
            </summary>
            <param name="applicationProvider">Instance of <see cref="T:CMS.ApplicationDashboard.Logic.IApplicationProvider"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="applicationProvider"/> is null</exception>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.UserRolesDefaultApplicationsLoader.GetDefaultApplications(CMS.Membership.UserInfo,CMS.SiteProvider.SiteInfo)">
            <summary>
            Gets default application lists for the given user and site. 
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="user"/> or <paramref name="site"/> is null</exception>
        </member>
        <member name="T:CMS.ApplicationDashboard.LiveTileContext">
            <summary>
            Context of the live tile passed to the live tile model providers.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.LiveTileContext.SiteInfo">
            <summary>
            Gets or sets the site for which the model is requested.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.LiveTileContext.UserInfo">
            <summary>
            Gets or sets the user for which the model is requested.
            </summary>
        </member>
        <member name="T:CMS.ApplicationDashboard.RegisterLiveTileModelProviderAttribute">
            <summary>
            Registers live model provider for given resource and element name.
            Live model provider is used when obtaining model for live tiles on the dashboard.
            </summary>
        </member>
        <member name="F:CMS.ApplicationDashboard.RegisterLiveTileModelProviderAttribute.mResourceName">
            <summary>
            Name of the resource the provider is registered to.
            </summary>
        </member>
        <member name="F:CMS.ApplicationDashboard.RegisterLiveTileModelProviderAttribute.mElementName">
            <summary>
            Name of the UI element the provider is registered to.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.RegisterLiveTileModelProviderAttribute.#ctor(System.String,System.String,System.Type)">
            <summary>
            Attribute constructor.
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="elementName">Name of the UI element</param>
            <param name="liveTileModelProvider">Type of live model provider. The type has to be implementing <see cref="T:CMS.ApplicationDashboard.ILiveTileModelProvider"/> interface</param>
            <exception cref="T:System.ArgumentException"><paramref name="resourceName"/> or <paramref name="elementName"/> or <paramref name="liveTileModelProvider"/> is null</exception>
            <exception cref="T:System.ArgumentNullException">Given type does not implement <see cref="T:CMS.ApplicationDashboard.ILiveTileModelProvider"/> interface</exception>
        </member>
        <member name="M:CMS.ApplicationDashboard.RegisterLiveTileModelProviderAttribute.PreInit">
            <summary>
            Registers the live model provider factory with the Live model provider container.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.RegisterLiveTileModelProviderAttribute.MarkedType">
            <summary>
            Gets the type of the live model provider.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.LiveModelProviderContainer.RegisterProviderFactory(System.String,System.String,System.Func{CMS.ApplicationDashboard.ILiveTileModelProvider})">
            <summary>
            Registers the live model provider factory for given resource and UI element names.
            </summary>
            <remarks>
            If provider is already registered for resource and element name, it is replaced with a new one.
            </remarks>
            <param name="resourceName">Name of the resource</param>
            <param name="elementName">Name of the UI element</param>
            <param name="liveTileModelProviderFactory">Factory for creating an implementation of <see cref="T:CMS.ApplicationDashboard.ILiveTileModelProvider"/> interface</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="resourceName"/> or <paramref name="elementName"/> or <paramref name="liveTileModelProviderFactory"/> is null</exception>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.LiveModelProviderContainer.GetProvider(CMS.Modules.UIElementInfo)">
            <summary>
            Gets live model provider for given UI element object.
            </summary>
            <remarks>
            Provider has to be registered in advance with <see cref="M:CMS.ApplicationDashboard.Logic.LiveModelProviderContainer.RegisterProviderFactory(System.String,System.String,System.Func{CMS.ApplicationDashboard.ILiveTileModelProvider})"/>.
            </remarks>
            <param name="uiElement">UI element object info</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="uiElement"/> is null</exception>
            <returns>Live model provider implementing the <see cref="T:CMS.ApplicationDashboard.ILiveTileModelProvider"/> interface</returns>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.LiveModelProviderContainer.GetProvider(System.String,System.String)">
            <summary>
            Gets live model provider for given resource ID and UI element name. If such provider does not exist, returns null.
            </summary>
            <remarks>
            Provider has to be registered in advance with <see cref="M:CMS.ApplicationDashboard.Logic.LiveModelProviderContainer.RegisterProviderFactory(System.String,System.String,System.Func{CMS.ApplicationDashboard.ILiveTileModelProvider})"/>.
            </remarks>
            <param name="resourceName">Name of the resource</param>
            <param name="elementName">Name of the UI element</param>
            <returns>Live model provider implementing the <see cref="T:CMS.ApplicationDashboard.ILiveTileModelProvider"/> interface, if exists; otherwise, null</returns>
        </member>
        <member name="T:CMS.ApplicationDashboard.Logic.ILiveTileModelLoader">
            <summary>
            Loads live tile model for given UI element.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.ILiveTileModelLoader.LoadLiveTileModel(System.Guid,CMS.SiteProvider.SiteInfo,CMS.Membership.UserInfo)">
            <summary>
            Gets <see cref="T:CMS.ApplicationDashboard.LiveTileModel"/> for an application (UI element) with given <paramref name="uiElementGuid"/>. Uses <see cref="T:CMS.ApplicationDashboard.ILiveTileModelProvider"/> that is set up in
            the UIElement.
            </summary>
            <param name="uiElementGuid">Guid of a UI element for which <see cref="T:CMS.ApplicationDashboard.LiveTileModel"/> will be returned.</param>
            <param name="user">User for which the model will be returned. Is used for security reasons.</param>
            <param name="site">Site for which to display <see cref="T:CMS.ApplicationDashboard.LiveTileModel"/> for.</param>
        </member>
        <member name="T:CMS.ApplicationDashboard.ILiveTileModelProvider">
            <summary>
            Interface that provides access to <see cref="T:CMS.ApplicationDashboard.LiveTileModel"/>.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.ILiveTileModelProvider.GetModel(CMS.ApplicationDashboard.LiveTileContext)">
            <summary>
            Loads model for the dashboard live tile. Null should be returned if live tile should stay dead.
            </summary>
            <param name="liveTileContext">Context of the live tile. Contains information about the user and the site the model is requested for</param>
            <returns>Live tile model or null if tile should stay in the dead state</returns>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.ILiveTileModelProviderFactory.GetLiveTileModelProvider(CMS.Modules.UIElementInfo)">
            <summary>
            Gets live model provider for given application.
            </summary>
            <param name="uiElementInfo">UI element representing the application</param>
            <returns>Instance of live model provider</returns>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.ILiveTileModelProviderFactory.CanLoadLiveTileModelProvider(CMS.Modules.UIElementInfo)">
            <summary>
            Gets whether there is available live model provider for given application or not.
            </summary>
            <param name="uiElementInfo">UI element representing the application</param>
            <returns>True if live model provider can be loaded, false otherwise</returns>
        </member>
        <member name="T:CMS.ApplicationDashboard.Logic.LiveTileModelLoader">
            <summary>
            Loads live tile model for given UI element.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.LiveTileModelLoader.LoadLiveTileModel(System.Guid,CMS.SiteProvider.SiteInfo,CMS.Membership.UserInfo)">
            <summary>
            Gets <see cref="T:CMS.ApplicationDashboard.LiveTileModel"/> for an application (UI element) with given <paramref name="uiElementGuid"/>. Uses <see cref="T:CMS.ApplicationDashboard.ILiveTileModelProvider"/> that is set up in
            the UIElement.
            </summary>
            <param name="uiElementGuid">Guid of a UI element for which <see cref="T:CMS.ApplicationDashboard.LiveTileModel"/> will be returned.</param>
            <param name="user">User for which the model will be returned. Is used for security reasons.</param>
            <param name="site">Site for which to display <see cref="T:CMS.ApplicationDashboard.LiveTileModel"/> for.</param>
            <exception cref="T:System.UnauthorizedAccessException">User does not have permissions for the UI element</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="site"/> or <paramref name="user"/> is null</exception>
        </member>
        <member name="T:CMS.ApplicationDashboard.Logic.LiveTileModelProviderFactory">
            <summary>
            Provides methods for obtaining live model providers for applications.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.LiveTileModelProviderFactory.GetLiveTileModelProvider(CMS.Modules.UIElementInfo)">
            <summary>
            Gets live model provider for given application.
            </summary>
            <param name="uiElementInfo">UI element representing the application</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="uiElementInfo"/> is null</exception>
            <returns>Instance of live model provider</returns>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.LiveTileModelProviderFactory.CanLoadLiveTileModelProvider(CMS.Modules.UIElementInfo)">
            <summary>
            Gets whether there is available live model provider for given application or not.
            </summary>
            <param name="uiElementInfo">UI element representing the application</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="uiElementInfo"/> is null</exception>
            <returns>True if live model provider can be loaded, false otherwise</returns>
        </member>
        <member name="T:CMS.ApplicationDashboard.Logic.IUserSpecificApplicationsLoader">
            <summary>
            Handles loading of applications from the user settings. 
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.IUserSpecificApplicationsLoader.GetUserSpecificApplications(CMS.Membership.UserInfo)">
            <summary>
            Gets list of application for current given user base on his or her preferences.
            </summary>
            <param name="user">User with preferences</param>
            <returns>List of UI elements representing the user applications</returns>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.IUserSpecificApplicationsLoader.SaveUserSpecificApplications(CMS.Membership.UserInfo,System.Collections.Generic.List{System.Guid})">
            <summary>
            Saves given list of application lists to the user settings.
            </summary>
            <param name="user">User the applications will be saved to</param>
            <param name="dashboardApplicationsGuids">List of applications</param>
        </member>
        <member name="T:CMS.ApplicationDashboard.Logic.UserSettingsJsonApplicationsLoader">
            <summary>
            Handles loading of applications from the user settings. 
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.UserSettingsJsonApplicationsLoader.GetUserSpecificApplications(CMS.Membership.UserInfo)">
            <summary>
            Gets list of application for current given user base on his or her preferences.
            </summary>
            <param name="user">User with preferences</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="user"/> is null</exception>
            <returns>List of UI elements representing the user applications</returns>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.UserSettingsJsonApplicationsLoader.SaveUserSpecificApplications(CMS.Membership.UserInfo,System.Collections.Generic.List{System.Guid})">
            <summary>
            Saves given list of application lists to the user settings.
            </summary>
            <param name="user">User the applications will be saved to</param>
            <param name="dashboardApplicationsGuids">List of applications</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="user"/> is null</exception>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.UserSettingsJsonApplicationsLoader.SortUIElementsAndRemoveDuplicities(System.Collections.Generic.IEnumerable{CMS.Modules.UIElementInfo},System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sorts applications according to the given list of application Guids and removes duplicities.
            </summary>
            <param name="applications">Collection of applications</param>
            <param name="guidsInOrder">Collection of application Guids</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="applications"/> or <paramref name="guidsInOrder"/> is null</exception>
            <returns>List of sorted applications without duplicities</returns>
        </member>
        <member name="T:CMS.ApplicationDashboard.LiveTileModel">
            <summary>
            Crate for data in LiveTiles, use concrete <see cref="T:CMS.ApplicationDashboard.ILiveTileModelProvider"/> to get an instance.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.LiveTileModel.Value">
            <summary>
            Number value that will be displayed on a live tile.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.LiveTileModel.Description">
            <summary>
            Text describing the meaning of the number on the live site.
            </summary>
        </member>
        <member name="T:CMS.ApplicationDashboard.TileIconModel">
            <summary>
            Data class containing information to display proper icon within the <see cref="T:TileModel"/>.
            </summary>
            <exclude />
        </member>
        <member name="P:CMS.ApplicationDashboard.TileIconModel.IconType">
            <summary>
            Type of the tile icon.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.TileIconModel.IconCssClass">
            <summary>
            CSS class containing the tile icon.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.TileIconModel.IconImagePath">
            <summary>
            Path to the icon image.
            </summary>
        </member>
        <member name="T:CMS.ApplicationDashboard.TileIconTypeEnum">
            <summary>
            Type of the icon displayed within the <see cref="T:TileIconModel"/>.
            </summary>
            <exclude />
        </member>
        <member name="F:CMS.ApplicationDashboard.TileIconTypeEnum.CssClass">
            <summary>
            Icon is defined in the CSS style sheet.
            </summary>
        </member>
        <member name="F:CMS.ApplicationDashboard.TileIconTypeEnum.Image">
            <summary>
            Icon is defined as image.
            </summary>
        </member>
        <member name="T:CMS.ApplicationDashboard.WelcomeTileModel">
            <summary>
            Data class containing information needed to display the welcome tile.
            </summary>
            <exclude />
        </member>
        <member name="P:CMS.ApplicationDashboard.WelcomeTileModel.Visible">
            <summary>
            Gets or sets whether the welcome tile is visible on the dashboard.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.WelcomeTileModel.Header">
            <summary>
            Header text of the tile.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.WelcomeTileModel.Description">
            <summary>
            Description of the tile.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.WelcomeTileModel.BrowseApplicationsText">
            <summary>
            Link leading to the application list text.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.WelcomeTileModel.OpenHelpText">
            <summary>
            Link leading to the context help text.
            </summary>
        </member>
        <member name="T:CMS.ApplicationDashboard.Logic.ApplicationProvider">
            <summary>
            Contains methods for obtaining filtered lists of applications.
            </summary>
        </member>
        <member name="T:CMS.ApplicationDashboard.Logic.IApplicationProvider">
            <summary>
            Contains methods for obtaining filtered lists of applications.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.IApplicationProvider.GetFilteredApplicationsForRoles(CMS.Membership.UserInfo,System.Collections.Generic.List{System.Int32})">
            <summary>
            Gets list of UI elements filtered for given user and roles.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.IApplicationProvider.GetFilteredApplicationsByGuids(CMS.Membership.UserInfo,System.Collections.Generic.List{System.Guid})">
            <summary>
            Gets list of UI elements filtered for given user and applications Guids.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.IApplicationProvider.GetFilteredApplicationByGuid(CMS.Membership.UserInfo,System.Guid)">
            <summary>
            Gets list of UI elements filtered for given user and application Guid.
            </summary>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.ApplicationProvider.GetFilteredApplicationsForRoles(CMS.Membership.UserInfo,System.Collections.Generic.List{System.Int32})">
            <summary>
            Gets list of UI elements filtered for given user and roles.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="user"/> or <paramref name="roleIDs"/> is null</exception>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.ApplicationProvider.GetFilteredApplicationsByGuids(CMS.Membership.UserInfo,System.Collections.Generic.List{System.Guid})">
            <summary>
            Gets list of UI elements filtered for given user and applications Guids.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="user"/> or <paramref name="uiElementGuids"/> is null</exception>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.ApplicationProvider.GetFilteredApplicationByGuid(CMS.Membership.UserInfo,System.Guid)">
            <summary>
            Gets list of UI elements filtered for given user and application Guid.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="user"/> is null</exception>
        </member>
        <member name="M:CMS.ApplicationDashboard.Logic.ApplicationProvider.LoadAndFilterApplications(CMS.Membership.UserInfo,CMS.DataEngine.WhereCondition)">
            <summary>
            Gets list of UI elements filtered for given user and where condition.
            </summary>
        </member>
        <member name="T:CMS.ApplicationDashboard.TileModel">
            <summary>
            Data class containing information needed to display one application tile on the application dashboard.
            </summary>
            <exclude />
        </member>
        <member name="P:CMS.ApplicationDashboard.TileModel.DisplayName">
            <summary>
            Name of the application which will be displayed as a title of a tile.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.TileModel.ListItemCssClass">
            <summary>
            CSS class of the tile anchor.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.TileModel.TileIcon">
            <summary>
            Model defining the way the tile icon should be displayed. Can be either the image, or CSS class defined in style sheets.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.TileModel.Path">
            <summary>
            Url address of an application. After clicking on a tile, user will be redirected to this address.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.TileModel.Guid">
            <summary>
            Unique identifier of the application.
            </summary>
        </member>
        <member name="P:CMS.ApplicationDashboard.TileModel.IsLiveTile">
            <summary>
            True if this tile is capable of displaying live data. If set to true, client will make another 
            request to <see cref="T:CMS.ApplicationDashboard.LiveTileController"/> to get live data of the application.
            </summary>
        </member>
    </members>
</doc>
